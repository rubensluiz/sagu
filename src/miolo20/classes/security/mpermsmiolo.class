<?php

class MPermsMiolo extends MPerms
{
    private $auth;
    public  $perms;

    public function __construct()
    {
        parent::__construct();

        $this->auth  = $this->manager->GetAuth();
        $this->perms = array( A_ACCESS  => "SELECT",
                              A_INSERT  => "INSERT",
                              A_DELETE  => "DELETE",
                              A_UPDATE  => "UPDATE",
                              A_EXECUTE => "EXECUTE",
                              A_ADMIN   => "SYSTEM" );
    }

    public function checkAccess($module, $action, $deny = false, $group = false)
    {
        if ( $this->auth->isLogged() )
        {
            $login   = $this->auth->getLogin();  // MLogin object
            $isAdmin = $login->isAdmin(); // Is administrator?
            $rights  = $login->rights[$module]; // user rights

            if( ! $rights )
            {
                $login->setRights( $this->getRights($login->id, $action) );
            }

            $ok = @in_array($action, $this->getRights($login->id, $action) );

            if( ! $ok && $group )
            {
                $groups = $this->getGroupsAllowed($module, $action);
                $ok     = sizeof( array_intersect($groups, $login->groups) ) > 0;
            }
        }

        if ( ! $ok && $deny )
        {
            $msg = _M('Access Denied') . "<br><br>\n" .
                      '<center><big><i><font color=red>' . _M('Transaction: ') . "$module ($action)</font></i></big></center><br><br>\n" .
                   _M('Please inform a valid login/password to access this content.') . "<br>";

            $users  = $this->getUsersAllowed($module, $action);
            $groups = $this->getGroupsAllowed($module, $action);

            if ($users)
            {
                $msg .= "<br/>\n" . _M('Users with access rights') . ":<ul><li>" . implode('<li>', $users) . '</ul>';
            }
            if ($groups)
            {
                $msg .= "<br/>\n" . _M('Groups with access rights') . ":<ul><li>" . implode('<li>', $groups) . '</ul>';
            }

            $go    = $this->manager->history->Back('action');
            $error = Prompt::Error($msg, $go, $caption, '');
            $error->addButton( _M('   Login   '), $this->manager->getActionURL($this->manager->getConf('login.module'),'login',null,array('return_to'=>urlencode($this->manager->history->Top()))), '');

            $this->manager->Prompt($error,$deny);
        }

        return $ok;
    }

    public function getTransactionRights($transaction, $login)
    {
        $user = $this->manager->getBusinessMAD('user');
        $user->getByLogin($login);

        return $user->getTransactionRights($transaction);
    }

    public function getRights($login)
    {
        $this->manager->loadMADConf();
        $db = $this->manager->getDatabase('admin');

        $sql = "select a.rights from miolo_user u, miolo_groupuser g, miolo_access a where u.iduser = g.iduser and g.idgroup = a.idgroup and u.login = '$login'";

        $result = $db->query($sql);

        $rights = array();

        if ( count($result) )
        {
            foreach($result as $r)
            {
                $rights[] = $r[0];
            }
        }

        return $rights;
    }

    public function getGroups($login)
    {
        $user = $this->manager->getBusinessMAD('user');
        $user->getByLogin($login);

        return $user->getArrayGroups();
    }

    public function getUsersAllowed($module, $action = A_ACCESS)
    {
        $this->manager->loadMADConf();

        $db  = $this->manager->getDatabase('admin');
        $sql = "select distinct u.login from miolo_user u, miolo_groupuser g, miolo_access a, miolo_transaction t where u.iduser = g.iduser and g.idgroup = a.idgroup and a.idtransaction = t.idtransaction and lower(t.m_transaction) = '" . strtolower($module) ."' and a.rights='$action'";

        $result = $db->query($sql);
        $users  = array();

        if ( $result )
        {
            foreach($result as $user)
            {
                $users[] = $user[0];
            }
        }

        return $users;
    }

    public function getGroupsAllowed($module, $action = A_ACCESS)
    {
        $this->manager->loadMADConf();

        $db  = $this->manager->getDatabase('admin');
        $sql = "select g.m_group from miolo_group g, miolo_access a, miolo_transaction t where g.idgroup = a.idgroup and a.idtransaction = t.idtransaction and lower(t.m_transaction) = '" . strtolower($module) ."' and a.rights='$action'";

        $result = $db->query($sql);
        $groups = array();

        if ( $result )
        {
            foreach($result as $group)
            {
                $groups[] = $group[0];
            }
        }

        return $groups;
    }
}
?>
