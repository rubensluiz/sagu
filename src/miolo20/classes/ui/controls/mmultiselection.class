<?
class MMultiSelectionField extends MListControl
{
    var $buttons;
    var $fields;
    var $showcode;
    var $shownav;
    var $layout;
    var $codevalue;
    var $info;
    var $colWidth;
    var $numRows;
    var $fieldWidth;

    function __construct($name = '', $value = null, $label = '', $fields = '', $width = 200, $buttons = false,
                         $info = '', $hint = '')
    {
        parent::__construct($name, $label, null, null, $hint);
        $this->page->AddScript('m_multitext2.js');
        $this->fields = $fields;
        $this->colWidth = $width;
        $this->buttons = $buttons;
        $this->info = $info;
        $this->layout = 'horizontal';
        $this->fieldWidth = $width - 20;
        $this->showcode = false;
        $this->shownav = false;
        $this->numRows = 5; 
        $this->formMode = 0;
    }

    function GetCodeValue()
    {
        $value = $this->value;

        if (is_array($value))
        {
            foreach ($value as $v)
            {
                $n = count($this->fields);

                for ($j = 0; $j < $n; $j++)
                {
                    $options = $this->fields[$j]->options;
                    $r = array_search($v, $options);

                    if ($r !== false)
                        $this->codevalue[] = $r;
                }
            }
        }

        return $this->codevalue;
    }

    function SetCodeValue($value)
    {
        $this->codevalue = $value;
        $r = array
            (
            );

        if (is_array($value))
        {
            for ($i = 0; $i < count($value); $i++)
            {
                $a = $value[$i];

                if (is_array($a)) // varios valores => varios fields
                {
                    for ($j = 0; $j < count($a); $j++)
                    {
                        $options = $this->fields[$j][3];

                        if ($options)
                        {
                            $r[$i] .= '[' . $options[$value[$i][$j]] . '] ';
                        }
                        else
                        {
                            $r[$i] .= '[' . $value[$i][$j] . '] ';
                        }
                    }
                }
                else // valor unico => apenas um field (na posicao 0)
                {
                    $options = $this->fields[0][3];

                    if ($options)
                    {
                        $r[$i] .= '[' . $options[$a] . '] ';
                    }
                    else
                    {
                        $r[$i] .= '[' . $a . '] ';
                    }
                }
            }
        }

        $this->value = $r;
    }

    function GenerateInner()
    {
        $numFields = count($this->fields);
        $this->page->OnSubmit("_MIOLO_MultiTextField2_onSubmit('{$this->form->name}','{$this->name}')");

        // select
        $labelS = $this->info . "&nbsp;";
        $content = array
            (
            );

        if (is_array($this->value))
        {
            foreach ($this->value as $v)
            {
                $multiValue = '';

                if (is_array($v))
                    foreach ($v as $v2)
                        $multiValue .= "[" . $v2 . "] ";
                else
                    $multiValue = $v;

                $content[] = new MOption('', $multiValue, $multiValue);
            }
        }

        $field = new MMultiSelection("{$this->name}[]", array(), $labelS, $content, '', '', $this->numRows);

        $field->_AddStyle('width', "{$this->colWidth}px");
        $field->AddAttribute('onKeyDown', "return MIOLO_MultiTextField2_onKeyDown(this,this.form,'{$this->name}',event,$numFields);");
        $field->AddAttribute('onChange', "_MIOLO_MultiTextField2_onSelect(this.form,'{$this->name}', $numFields)");
        $field->SetClass('select', false);
        $field->formMode = 2;
        $select = $field;

        // fields - cada field é um selection
        $fields = array();

        $n = 1;

        foreach ($this->fields as $f)
        {
            $f->SetName("{$this->name}_options{$n}");
            $f->SetClass('combo');
            $btnAdd[$n] = new MButton("{$this->name}_add{$n}", 'Adicionar',
                                 "_MIOLO_MultiSelectionField_add(this.form,'{$this->name}','$n')");
            $btnAdd[$n]->SetClass('button');
            $b = new MDiv('', array(new Div('', '&nbsp;', 'label'), $btnAdd[$n]));
            $f->_AddStyle('width', "{$this->fieldWidth}px");
            $f->formMode = 2;
            $fields[] = new MHContainer('',array($f,$b));
            $n++;
        }

        // buttons
        $b = $buttons[] = new MButton("{$this->name}_remove", 'Remover',
                                      "_MIOLO_MultiTextField2_remove(this.form,'{$this->name}',$numFields)");
        $b->SetClass('button');

        if ($this->shownav)
        {
            $b = $buttons[] = new MButton("{$this->name}_up", '/\\',
                                          "_MIOLO_MultiTextField2_moveUp(this.form,'{$this->name}',$numFields)");
            $b->SetClass('button');
            $b = $buttons[] = new MButton("{$this->name}_down", '\\/',
                                          "_MIOLO_MultiTextField2_moveDown(this.form,'{$this->name}',$numFields)");
            $b->SetClass('button');
        }
        $btnSel = new MDiv('',$buttons); 

        $commentIn = $this->painter->Comment('START OF Field MultiSelectionField');
        $commentOut = $this->painter->Comment('END OF Field MultiSelectionField');

        // layout

        $cFields = new MVContainer('', $fields);
        $cSelect = new MVContainer('', array($select, $btnSel)); 
        $t = array($cFields,$cSelect);

        $group = new MBaseGroup('', $this->label, $t, 'horizontal', 'css');

        $div = new MDiv('', $group, 'm-multitext-field');
        $this->inner = array
            (
            $commentIn,
            $div,
            $commentOut
            );

        return $this->inner;
    }
}
?>