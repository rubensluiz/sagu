<?php
class MActiveGrid extends MGrid
{
    var $agStyle;
    var $agScript;
    var $agHeight;
    var $agWidth;
    var $fullWidth;
    var $fullHeight;

    function __construct($data, $columns, $href, $pagelength = 15, $index = 0)
    {
        parent::__construct($data, $columns, $href, $pagelength, $index);
        $page = $this->page;
        $style = $this->manager->GetAbsoluteURL('scripts/activewidgets/runtime/styles/classic/grid.css');
        $page->SetCompliant(false);
        $page->AddStyleURL($style); 
        $page->AddScript('activewidgets/runtime/lib/grid.js');
        $this->pagelength = 0;
        $this->agHeight = 200; 
        $this->agWidth = 0; 
        $this->fullWidth = 0;
        $this->fullHeight = 0;
        $this->agScript = '';
        $this->agStyle = "\n";
        $this->name = "_grid_" . uniqid('ag');
        $this->pn = $this->pagelength ? new MGridNavigator($this->pagelength, $this->rowCount,
                                    $this->GetURL($this->filtered, $this->ordered), $this) : NULL;
    }

    function AddAgStyle($style)
    {
        $this->agStyle .= "$style\n";
    }

    function AddAgScript($script)
    {
        $this->agScript .= "$script\n";
    }

    function SetFullWidth($value)
    {
        $this->fullWidth = $value;
    }

    function SetFullHeight($value)
    {
        $this->fullHeight = $value;
    }

    function GenerateData()
    {
        if (!$this->data)
            return;

        if ($this->pagelength)
        {
            $this->pn->SetGridParameters($this->pagelength, $this->rowCount, $this->GetURL($filtered, $this->ordered), $this);
            $this->data = $this->GetPage();
        }
        else
            $this->pn = null;
    }

    function GenerateColumnsHeading($tbl=NULL)
    {
        $this->fullWidth -= 20; 
        $colsWidth = $this->fullWidth;// - (count($this->columns) * 4);
        $p = 0;
        $sc = "\nvar _{$this->name}_columns = [\n";
        if ($cntActions = count($this->actions))
        {
            $n = $cntActions * 20;
            $this->AddAgStyle(".active-column-{$p} {width: {$n}px;}");
            $sc .= "\"Action\"";
            $this->agWidth += $n;
            $colsWidth -= $n;
            $p++; 
        }


        if ($this->select != NULL)
        {
        }

        // generate column headings
        foreach ($this->columns as $k => $col)
        {
            if ((!$col->visible) || (!$col->title))
                continue;
            if (strpos($col->width,'%') !== false)
            {
                 $w = str_replace('%','',$col->width);
                 $col->width = (int)($w * $colsWidth / 100);
            }
            $this->AddAgStyle(".active-column-{$p} {width: {$col->width}px;}");
            $sc .= ($p ? ',' : '') . "\"{$col->title}\"";
            $p++; 
            $this->agWidth += $col->width;
        }
        $sc .= "\n];\n";
        $this->AddAgScript($sc);
    }

    function GenerateActions(&$ac)
    {
        $i = $this->currentRow + 1;
        if ($n = count($this->actions))
        {
            $ac .= "[\"";
            foreach ($this->actions as $k => $action)
            {
                $control = $action->Generate();
//                $control->AddStyle('float','left');
                $html = addSlashes($control->Generate());
                $ac .= "{$html}&nbsp;";
            }
            $ac .= "\"],\n";
        }

        if ($this->select != NULL)
        {
        }
    }

    function GenerateColumns($tbl=NULL)
    {
        $i = $this->currentRow + 1;
        $p = count($this->actions);

        if ($this->select != NULL)
            $p++;

        $sc = "["; $n = 0;
        foreach ($this->columns as $k => $col)
        {
            if ((!$col->title) || (!$col->visible))
                continue;

            $control = $col->control[$this->currentRow];
            $attr = "";

            if ($col->nowrap)
            {
                $attr .= " nowrap ";
            }

            if ($col->width)
            {
                $attr .= " width=\"$col->width\"";
            }

            if ($col->align)
            {
                $attr .= " align=\"$col->align\"";
            }
            $value = $control->GetValue();
            $sc .= ($n++ ? ',' : '') . "\"{$value}\"";
        }
        $sc .= "],";
        $this->AddAgScript($sc);
    }

    function GenerateBody()
    {
        $this->GenerateColumnsHeading();

        if ($this->data)
        {
            $ac = '';
            $this->AddAgScript("var _{$this->name}_data = [");
            $this->currentRow = 0;
            foreach ($this->data as $row)
            {
                $this->GenerateColumnsControls();
                $this->CallRowMethod();
                $this->GenerateActions($ac);
                $this->GenerateColumns($tblData);
                $this->currentRow++;
            } // foreach row
            $this->AddAgScript("];");
            if ($ac != '')
            {
                $this->AddAgScript("var _{$this->name}_actions = [");
                $this->AddAgScript($ac);
                $this->AddAgScript("];");
            } 
        }     // if
    }

    function GenerateCommands()
    {
        $name = $this->name;
        $nameData = "_{$this->name}_data";
        $nameColumns = "_{$this->name}_columns";
        $nameActions = "_{$this->name}_actions";
        $countColumn = count($this->columns) + (count($this->actions) ? 1 : 0);
//var_dump($this->agWidth);
        $this->agWidth = (($this->fullWidth > 0) ? $this->fullWidth : $this->agWidth) + ($countColumn * 4);
        $this->agHeight = (($this->fullHeight != 0) ? $this->fullHeight : $this->agHeight) - 15;
        $pageSize = $sz = count($this->data);
        $this->AddAgStyle(".active-controls-grid {height: {$this->agHeight}px; width: {$this->agWidth}px; font: menu; position:relative; overflow:hidden; background-color:white;}");
        $this->AddAgStyle(".active-controls-grid.gecko {left: 0px;}");
        $this->AddAgStyle(".active-grid-column {border-right: 1px solid threedshadow;}");
        $this->AddAgStyle(".active-grid-row {border-bottom: 1px solid threedlightshadow;}");
        $this->AddAgScript("var $name = new Active.Controls.Grid;");
        $this->AddAgScript("	$name.setRowProperty(\"count\", $pageSize);");
        $this->AddAgScript("	$name.setColumnProperty(\"count\", $countColumn);");
        if (count($this->actions))
        {
            $this->AddAgScript("	$name.setDataProperty(\"text\", function(i, j){return (j != 0) ? {$nameData}[i][j-1] : {$nameActions}[i]});");
        }
        else
        {
            $this->AddAgScript("	$name.setDataProperty(\"text\", function(i, j){return {$nameData}[i][j]});");
        }
        $this->AddAgScript("	$name.setColumnProperty(\"text\", function(i){ return {$nameColumns}[i]});");
        $this->AddAgScript("	$name.setRowHeaderWidth(\"0px\");");
        $this->AddAgScript("	$name.setColumnHeaderHeight(\"20px\");");
        $this->AddAgScript("	$name.setAction(\"click\", function(src){window.status = src.getItemProperty(\"text\")});");

        $this->AddAgScript("document.write($name);");
//        $this->AddAgScript("    $name.refresh();");
//        $this->page->OnLoad("    $name.refresh();");
    }

    function Generate()
    {
        $this->GenerateData();
        $this->GenerateBody();
        $this->GenerateCommands();
        $this->page->AddStyleCode($this->agStyle);
        $script = "<script type=\"text/javascript\">{$this->agScript}</script>\n";
        $f = new MDiv('', $script, '');
        return $f->Generate();
    }


}
?>