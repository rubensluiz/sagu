<?php
/**
 * Represents the step button used by MStepByStepForm
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 * @author Daniel Hartmann [daniel@solis.coop.br]
 *
 * @version $id$
 *
 * \b Maintainers: \n
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Daniel Hartmann [daniel@solis.coop.br]
 *
 * @since
 * Creation date 2010/09/23
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b CopyRight: \n
 * Copyright (c) 2010 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPLv2 (for further details read the COPYING file or http://www.gnu.org/licenses/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://www.miolo.org.br
 *
 */
/*
 * Class MStep
 *
 */
class MStep extends MDiv
{
    const TYPE_PREVIOUS = 'previous';
    const TYPE_CURRENT = 'current';
    const TYPE_NEXT = 'next';

    // CSS style classes
    const CURRENT_ICON_STYLE = 'm-step-icon m-step-icon-current';
    const NEXT_ICON_STYLE = 'm-step-icon m-step-icon-next';
    const PREVIOUS_ICON_STYLE = 'm-step-icon m-step-icon-previous';
    const LABEL_STYLE = 'm-step-label';
    const CURRENT_LABEL_STYLE = 'm-step-label m-step-label-atual';
    const CURRENT_STYLE = 'm-step-current';
    const ENABLED_STYLE = 'm-step m-step-enabled';
    const DISABLED_STYLE = 'm-step m-step-disabled';
    const STATUS_LABEL_STYLE = 'm-step-status-label';
    const BUTTON_STYLE = 'm-step-button';
    const NUMBER_STYLE = 'm-step-num';
    const HIDE_STYLE = 'm-step-hide';

    private $completedStep;
    private $stepType;
    private $stepNumber;
    
    public $goTo;
    
    public function __construct($stepNumber, $stepName, $stepType = self::TYPE_CURRENT)
    {        
        $MIOLO = MIOLO::getInstance();

        $_GET['step'] = $stepNumber;

        $this->completedStep = false;
        $this->stepType = $stepType;
        $this->stepNumber = $stepNumber;
        
        if ( $stepType == self::TYPE_CURRENT )
        {
            $stepLabel = new MDiv('stepLabel_' . $stepNumber, $stepName, self::CURRENT_LABEL_STYLE);
            $stepImage = new MDiv('stepImage_' . $stepNumber, '', self::CURRENT_ICON_STYLE);
            $stepDescription = new MDiv('stepDescription_' . $stepNumber, _M('Current step'), self::STATUS_LABEL_STYLE);
        }
        elseif ( $stepType == self::TYPE_NEXT )
        {
            $stepLabel = new MDiv('stepLabel_' . $stepNumber, $stepName, self::LABEL_STYLE);
            $stepImage = new MDiv('stepImage_' . $stepNumber, '', self::NEXT_ICON_STYLE);
            $stepDescription = new MDiv('stepDescription_' . $stepNumber, _M('Pending step'), self::STATUS_LABEL_STYLE);
        }
        elseif ( $stepType == self::TYPE_PREVIOUS )
        {
            $stepLabel = new MDiv('stepLabel_' . $stepNumber, $stepName, self::LABEL_STYLE);
            $stepImage = new MDiv('stepImage_' . $stepNumber, '', self::PREVIOUS_ICON_STYLE);
            $stepDescription = new MDiv('stepDescription_' . $stepNumber, _M('Finished step'), self::STATUS_LABEL_STYLE);
            $this->completedStep = true;
        }

        $divLeft = new MDiv('divLeft_' . $stepNumber, $stepImage, self::BUTTON_STYLE);
        $divRight = new MDiv('divRight_' . $stepNumber, $stepNumber, self::NUMBER_STYLE);
        $div = new MDiv('divStepInner_' . $stepNumber, array( $divRight, $divLeft, $stepDescription ));

        parent::__construct('divStep_' . $stepNumber, array( $div, $stepLabel ));
    }
    
    public function generate()
    {
        $MIOLO = MIOLO::getInstance();
        $disableds = (array) $MIOLO->getConf('temp.disable.steps');
        
        if ( $this->completedStep && !in_array($this->stepNumber, $disableds) )
        {
            $this->setBoxClass(self::ENABLED_STYLE);

            $args = $MIOLO->getContext()->getVars();
            unset($args['module']);
            unset($args['action']);
            $args['step'] = $this->stepNumber;

            if (!$this->goTo )
            {
                $onclick = "GotoURL('".$MIOLO->getActionURL(MIOLO::getCurrentModule(), MIOLO::getCurrentAction(), NULL, $args)."');";
            }
            else
            {
                $onclick = $this->goTo;
            }
            $this->setBoxAttributes(array( 'onclick' => $onclick ));
        }
        else
        {
            $this->setBoxClass(self::DISABLED_STYLE);
        }

        if ( $this->stepType == self::TYPE_CURRENT )
        {
            $this->setBoxClass(self::CURRENT_STYLE);
        }
        
        return parent::generate();
    }
}
?>
