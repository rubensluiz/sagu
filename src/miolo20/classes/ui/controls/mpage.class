<?php

define('PAGE_ISPOSTBACK', '__ISPOSTBACK');

class MPage extends MWindow
{
    public $compliant;
    public $styles;
    public $styleCode;
    public $scripts;
    public $conditionalScripts;
    public $metas;
    public $favicon;
    public $title;
    public $action;
    public $enctype;
    public $isPostBack = false;
    public $onload;
    public $onsubmit;
    public $hasReport;
    public $state;
    public $jscode;
    public $goto;
    public $generateMethod = 'GenerateDefault';
    public $theme;

    function __construct()
    {
        global $state;

        parent::__construct('frm' . uniqid());
        $this->compliant = true;
        $this->enctype = '';
        $this->onsubmit = new MStringList();
        $this->onload = new MStringList();
        $this->jscode = new MStringList();
        $this->styles = new MStringList(false);
        $this->styleCode = new MStringList();
        $this->scripts = new MStringList(false);
        $this->metas = new MStringList();
        $this->title = $this->manager->GetConf('theme.title');
        $state = new MState();
        $this->state = $state;
        $this->action = $this->manager->GetCurrentURL();

        $this->conditionalScripts = new MStringList(false);

        if ( MIOLO::_REQUEST('renderMethod') == 'ajax' )
        {
            $this->generateMethod = 'GenerateAJAX';
        }

        $back = $this->manager->history->Back('context');
        $top = $this->manager->history->Top('context');
        $this->isPostBack = ($back === $top) && (MIOLO::_REQUEST(PAGE_ISPOSTBACK) != '');
        $this->LoadViewState();
        $this->LoadPostData();
        $this->AddScript('m_common.js');
    }

    function AddStyle($url)
    {
        $url = $this->manager->GetThemeURL($url);
        $this->styles->add($url);
    }

    function AddStyleURL($url)
    {
        $this->styles->add($url);
    }

    function AddStyleCode($code)
    {
        $this->styleCode->add($code);
    }

    /**
     * Add script.
     *
     * @param string $url Relative URL for the script.
     * @param string $module Module where the script is (optional).
     */
    public function addScript($url, $module=NULL)
    {
        if ( $module )
        {
            $url = $this->manager->getActionURL($module, 'html:scripts:' . $url);
        }
        else
        {
            $url = $this->manager->getAbsoluteURL('scripts/' . $url);
        }

        $this->scripts->add($url);
    }

    /**
     * Add script to be used in IEs before IE9.
     *
     * @param string $url Relative URL for the script.
     * @param string $module Module where the script is (optional).
     */
    public function addScriptForOlderIEs($url, $module=NULL)
    {
        if ( $module )
        {
            $url = $this->manager->getActionURL($module, 'html:scripts:' . $url);
        }
        else
        {
            $url = $this->manager->getAbsoluteURL('scripts/' . $url);
        }

        $this->conditionalScripts->add("<!--[if lt IE 9]><script language=\"javascript\" type=\"text/javascript\" src=\"$url\"></script><![endif]-->");
    }

    function AddMeta($name, $content)
    {
        $this->metas->add("<meta name=\"$name\" content=\"$content\">");
    }

    function AddHttpEquiv($name, $content)
    {
        $this->metas->add("<meta http-equiv=\"$name\" content=\"$content\">");
    }

    function GetStyles()
    {
        return $this->styles;
    }

    function GetStyleCode()
    {
        return $this->styleCode;
    }

    function SetStyles($value)
    {
        $this->styles->items = is_array($value) ? $value : array( $this->manager->GetThemeURL($value) );
    }

    function GetScripts()
    {
        return $this->scripts;
    }

    public function getConditionalScripts()
    {
        return $this->conditionalScripts;
    }

    function GetMetas()
    {
        return $this->metas;
    }

    function GetOnLoad()
    {
        return $this->onload;
    }

    function GetOnSubmit()
    {
        return $this->onsubmit;
    }

    function GetJsCode()
    {
        return $this->jscode;
    }

    function GetTitle()
    {
        return $this->title;
    }

    function SetTitle($title)
    {
        $this->title = $title;
    }

    function OnSubmit($jscode)
    {
        $this->onsubmit->add($jscode);
    }

    function OnLoad($jscode)
    {
        $this->onload->add($jscode);
    }

    function AddJsCode($jscode)
    {
        $this->jscode->add($jscode);
    }

    function isPostBack()
    {
        return $this->isPostBack;
    }

    function SetPostBack($postback)
    {
        $this->isPostBack = $postback;
    }

    function SetAction($action)
    {
        $this->action = $action;
    }

    function SetEnctype($enctype)
    {
        $this->enctype = $enctype;
    }

    function SetCompliant($value = true)
    {
        $this->compliant = $value;
    }
    
    function GetFavicon()
    {
        $favicon = "";
        
        $path = "{$this->manager->getConf('home.html')}/themes/{$this->manager->getConf('theme.main')}/images/favicon.ico";
            
        if( file_exists($path) )
        {
            $url = $this->manager->GetThemeURL("images/favicon.ico");

            $favicon = "<link rel='icon' href='$url' />";

        }
        
        return $favicon;
        
    }

    function Request($vars, $component_name = '', $from = 'ALL')
    {
        $value = '';
        if ( ($vars != '' ) )
        {
            $value = MIOLO::_REQUEST($vars, $from);
            if ( !isset($value) )
            {
                if ( !$component_name )
                {
                    $value = $this->state->get($vars);
                }
                else
                {
                    $value = $this->state->get($vars, $component_name);
                }
            }
        }
        return $value;
    }

    function SetViewState($var, $value, $component_name = '')
    {
        if ( !$component_name )
        {
            $this->state->set($var, $value);
        }
        else
        {
            $this->state->set($var, $value, $component_name);
        }
    }

    function GetViewState($var, $component_name = '')
    {
        if ( !$component_name )
        {
            return $this->state->get($var);
        }
        else
        {
            return $this->state->get($var, $component_name);
        }
    }

    function LoadViewState()
    {
        $this->state->LoadViewState();
    }

    function SaveViewState()
    {
        $this->state->SaveViewState();
    }

    function LoadPostData()
    {
        
    }

    // Set a value for a client element, using DOM
    // This method use a javascript code that is execute on response
    public function setElementValue($element, $value, $ajax = true)
    {
        $jsCode = "document.getElementById('{$element}').value = \"{$value}\";";
        $this->addAJAXJsCode($jsCode);
    }

    public function addAJAXJsCode($jsCode)
    {
        echo "<script type=\"text/javascript\"> {$jsCode} </script>";
    }

    function Transfer($module, $action, $item = '')
    {
        global $MIOLO, $context;

        $this->isPostBack = false;
        $context->Create($module, $action, $item);
        $result = $MIOLO->InvokeHandler($module, $action, $item);
        return $result;
    }

    /**
     * @deprecated Use Redirect instead
     */
    function _GoTo($url)
    {
        $this->manager->GetSession()->freeze();
        $this->goto = str_replace('&amp;', '&', $url);
        $this->generateMethod = 'GenerateRedirect';
    }

    function Redirect($url)
    {
        $this->manager->GetSession()->freeze();
        $this->goto = str_replace('&amp;', '&', $url);
        $this->generateMethod = 'GenerateRedirect';
    }

    function Refresh()
    {
        $this->OnLoad('document.' . $this->name . '.submit();');
    }

    function Generate()
    {
        $this->theme = $this->manager->GetTheme();
        $this->SaveViewState();
        $this->{$this->generateMethod}();
    }

    function GenerateRedirect()
    {
        header('Location:' . $this->goto);
    }

    function GenerateHeader()
    {
        $this->manager->Trace('Page::Generate');
        $this->manager->ProfileEnter("Page::Generate");
        $this->AddHttpEquiv('Content-Type', 'text/html; charset=ISO-8859-1');
        $this->AddMeta('Generator', 'MIOLO Version ' . MIOLO_VERSION . '; http://www.miolo.org.br');
        
        echo $this->painter->GenerateHeader($this);
             
    }
    
    function GenerateDefault()
    {
        // Se não é informado para gerar o header anteriormente
        if( $_REQUEST["__GENERATEHEADERFIRST"] !== "yes" )
        {
            $this->GenerateHeader();
                        
        }
        
        $this->AddStyle('m_common.css');

        if ( $this->manager->getConf('options.performance.uri_images') == 'true' )
        {
            $themesDir = $this->manager->getConf('home.themes');
            $theme = $this->manager->theme->getId();
            $uriImagesCSS = 'm_uriimages.css';

            if ( file_exists("$themesDir/$theme/$uriImagesCSS") )
            {
                $this->addStyle($uriImagesCSS);
            }
        }
        $this->OnLoad("   MIOLO_SetTitle('" . $this->title . "');");
        $this->OnLoad("   MIOLO_SetBoxPositions( );");
        $this->theme->AppendContent(new MHiddenField('__VIEWSTATE', $this->state->GetViewState()));
        $this->theme->AppendContent(new MHiddenField('__ISPOSTBACK'));
        $this->theme->AppendContent(new MHiddenField('__EVENTTARGETVALUE'));
        $this->theme->AppendContent(new MHiddenField('__EVENTARGUMENT'));
        echo $this->painter->Page($this);
        $this->manager->ProfileExit("Page::Generate");
        $this->manager->ProfileDump();
    }

    function GenerateAJAX()
    {
        if ( $this->request('cpaint_returnxml') == "true" )
        {
            header("Content-Type:  text/xml");
            print($this->theme->getContent()->generate());
        }
        elseif ( $this->theme->getContent() != '' )
        {
            $this->theme->SetElementId('content', '');
            print($this->theme->GenerateElement('content'));
        }
    }
}

?>
