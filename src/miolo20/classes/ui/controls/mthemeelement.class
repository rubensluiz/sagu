<?php

class MThemeElement extends MControl
{
    function __construct($name = NULL, $content = '', $class = '')
    {
        parent::__construct($name);
        $this->SetInner($content);
        $this->SetClass($class);
    }

    function Clear($halted = false)
    {
        if (!$halted)
        {
            $this->ClearControls();
        }
    }

    function Get($key = 0)
    {
        return $this->GetElement($key);
    }

    function Set($element, $id = '', $key = NULL)
    {
        $this->SetElement($element, $key, 's');
        $this->SetId($id);
    }

    function Insert($element, $key = NULL, $halted = false)
    {
        if (!$halted)
        {
            $this->SetElement($element, $key, 'i');
        }
    }

    function Append($element, $key = NULL, $halted = false)
    {
        if (!$halted)
        {
            $this->SetElement($element, $key, 'a');
        }
    }

    function Count()
    {
        return $this->controlsCount;
    }

    function SetElement($element, $key = NULL, $op = 's')
    {
        if (is_array($element))
        {
            $this->Clear();

            foreach ($element as $e)
            {
                $this->SetElement($e, $key, 'a');
            }
        }
        else
        {
            switch ($op)
                {
                case 's':
                    $this->Clear();

                    $this->AddControl($element);
                    break;

                case 'a':
                    $this->AddControl($element);
                    break;

                case 'i':
                    $this->InsertControl($element);
                    break;
                }
        }
    }

    function GetElement($key)
    {
        return $this->GetControl($key);
    }

    function GetElementById($key)
    {
        return $this->GetControlById($key);
    }

    function Space($space = '20px')
    {
        $this->Append(new MSpacer($space));
    }

    function GenerateInner()
    {
        $this->SetBoxId($this->GetId());
        $this->SetBoxClass($this->GetClass());
        $controls = $this->GetControls();
        $this->inner = $this->painter->GenerateToString($controls);
        return $this->inner;
    }
}
?>