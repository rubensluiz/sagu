<?php

/**
 * Component to group fields in tabs
 *
 * @author Daniel Hartmann [daniel@solis.coop.br]
 *
 * @version $id$
 *
 * \b Maintainers: \n
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Daniel Hartmann [daniel@solis.coop.br]
 *
 * @since
 * Creation date 2010/07/20
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b CopyRight: \n
 * Copyright (c) 2010 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPLv2 (for further details read the COPYING file or http://www.gnu.org/licenses/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://www.miolo.org.br
 *
 */

$MIOLO = MIOLO::getInstance();
$MIOLO->page->addScript('m_tabbedbasegroup.js');

class MTabbedBaseGroup extends MBaseGroup
{
    private $tabs;

    /**
     * MTabbedBaseGroup constructor
     *
     * @param string $name Id and name of the component
     * @param array $tabs Array of MTab objects
     */
    public function __construct($name, $tabs = array())
    {
        $controls[] = new MDiv("{$name}DivResponse");
        parent::__construct($name);
        $this->tabs = $tabs;
        $this->setBoxClass('m-tabbed-base-group');
    }

    /**
     * Creates a tab and adds it to the container
     *
     * @param string $id Id of the tab
     * @param string $label Label of the tab
     * @param array $controls Fields of the tab
     * @param string $ajaxAction An ajax action to be called when the tab is selected
     * @param boolean $disabled Informs whether the tab is disabled or not
     */
    public function createTab($id, $label, $controls = array(), $disabled = false)
    {
        $tab = new MTab($id, $label, $controls, $disabled);
        $tab->addBoxStyle('width', '100%');
        $tab->addBoxStyle('display', 'none');
        $this->tabs[$id] = $tab;
    }

    /**
     * Statically creates a tab and adds it to the container
     * Usefull for ajax requests
     *
     * Note: Use it only if you really need it. If not in an ajax request,
     * you should use the createTab method instead.
     *
     * @param string $tabbedBaseGroupId Id of the MTabbedBaseGroup
     * @param string $id Id of the tab
     * @param string $label Label of the tab
     * @param array $controls Fields of the tab
     * @param string $ajaxAction An ajax action to be called when the tab is selected
     * @param boolean $disabled Informs whether the tab is disabled or not
     */
    public static function createStaticTab($tabbedBaseGroupId, $id, $label, $controls = array(), $disabled = false)
    {
        $tab = new MTab($id, $label, $controls, $disabled);
        $tab->addBoxStyle('width', '100%');
        $tab->addBoxStyle('display', 'none');

        list($button, $tabJs) = self::getTabButton($tab, $tabbedBaseGroupId);
        $bGenerate = $button->generate();
        $bGenerate = str_replace("\n", '\n', $bGenerate);
        $bGenerate = str_replace("'", "\'", $bGenerate);

        $dGenerate = $tab->generate();
        $dGenerate = str_replace("\n", '\n', $dGenerate);
        $dGenerate = str_replace("'", "\'", $dGenerate);

        $js = "MIOLO_GetElementById('buttons{$tabbedBaseGroupId}').innerHTML += '$bGenerate'; ";
        $js .= "MIOLO_GetElementById('{$tabbedBaseGroupId}').innerHTML += '$dGenerate';";
        $js .= "{$tabbedBaseGroupId}Tabs[{$tabbedBaseGroupId}Tabs.length] = '{$id}';";
        $js .= "mtabbedbasegroup.changeTab('{$id}','{$tabbedBaseGroupId}');";
        $js .= $tabJs;

        self::addJsCode($js);
        //$MIOLO->ajax->setResponse(NULL, "{$tabbedBaseGroupId}DivResponse");
    }

    /**
     * @return array Array of MTab objects
     */
    public function getTabs()
    {
        return $this->tabs;
    }

    /**
     * @param array Array of MTab objects
     */
    public function setTabs($tabs = array())
    {
        $this->tabs = $tabs;
    }

    /**
     * @param MTab Tab to be added on tabs array
     */
    public function addTab($tab)
    {
        $this->tabs[$tab->id] = $tab;
    }

    /**
     * @param string Id of the tab to be getted from tabs array
     */
    public function getTab($tabId)
    {
        return $this->tabs[$tabId];
    }

    /**
     * Generates the tab buttons
     *
     * @return array MHContainer and JavaScript code.
     */
    protected function getTabButton($tab, $tabbedBaseGroupId, $selected = false)
    {
        $MIOLO = MIOLO::getInstance();

        $tempDiv = new MDiv($tab->id . 'Button', $tab->label);

        if ( !$tab->disabled )
        {
            $tempDiv->setBoxClass(!$selected ? 'm-tab m-tab-idle' : 'm-tab m-tab-active');
            
            $changeTabJs = "mtabbedbasegroup.changeTab('{$tab->id}', '$tabbedBaseGroupId');";

            $tempDiv->getBox()->addAttribute('onclick', $changeTabJs);

            if ( $selected )
            {
                $tab->addBoxStyle('display', 'block');
                $jsCode = $changeTabJs;
            }
        }
        else
        {
            $tempDiv->setBoxClass('m-tab m-tab-disabled');
        }

        return array($tempDiv, $jsCode);
    }

    /**
     * Generates the tabs container
     *
     * @return object MHContainer
     */
    public function generate()
    {
        $MIOLO = MIOLO::getInstance();

        $jsCode = "{$this->name}Tabs = new Array(); \n";
        $index = 0;

        $tabButtons = array();

        foreach ( $this->tabs as $tab )
        {
            $this->addControl($tab);
            $jsCode .= "{$this->name}Tabs[{$index}] = '{$tab->id}';\n";

            list($tabButtons[$tab->id], $tabJs) = $this->getTabButton($tab, $this->name, $index == 0 ? true : false);
            
            $jsCode .= $tabJs;

            $index++;
        }

        $divButtons = new MDiv("buttons{$this->name}", $tabButtons);
        $divButtons->setBoxClass('m-tab-buttons');

        // Shows only the current tab
        self::addJsCode($jsCode);

        $buttonContainer = new MHContainer("tabButtonContainer{$this->name}", array($divButtons));

        return $buttonContainer->generate() . parent::generate();
    }

    /* Static methods to use on ajax requests */

    /**
     * Enables tab
     *
     * @param string $tabId
     * @param string $tabbedBaseGroupId
     */
    public static function enableTab($tabId, $tabbedBaseGroupId)
    {
        $jsCode = "mtabbedbasegroup.enableTab('{$tabId}', '{$tabbedBaseGroupId}');";

        self::addJsCode($jsCode);
    }

    /**
     * Disables tab
     *
     * @param string $tabId
     * @param string $tabbedBaseGroupId
     */
    public static function disableTab($tabId, $tabbedBaseGroupId)
    {
        $jsCode = "mtabbedbasegroup.disableTab('{$tabId}', '{$tabbedBaseGroupId}');";

        self::addJsCode($jsCode);
    }

    /**
     * Removes a tab from the tab list
     *
     * @param string $tabId
     * @param string $tabbedBaseGroupId
     */
    public static function removeTab($tabId, $tabbedBaseGroupId)
    {
        self::addJsCode("mtabbedbasegroup.removeTab('{$tabId}','{$tabbedBaseGroupId}');");
    }

    /**
     * Updates tab content through ajax
     *
     * @param string $tabId Id of the tab to put content
     * @param array $controls Fields to put in the tab
     */
    public static function updateTab($tabId, $controls)
    {
        $MIOLO = MIOLO::getInstance();
        $container = new MVContainer("ajaxFields$tabId", $controls, MFormControl::FORM_MODE_SHOW_SIDE);
    }

    /**
     * Check the request type and add the JavaScript code according to it.
     *
     * @param string $jsCode JavaScript code.
     */
    private static function addJsCode($jsCode)
    {
        $MIOLO = MIOLO::getInstance();

        if ( $MIOLO->page->request('cpaint_function') != '' )
        {
            $MIOLO->page->addAJAXJsCode($jsCode);
        }
        else
        {
            $MIOLO->page->onload($jsCode);
        }
    }
}

/**
 * Tab class used on MTabbedBaseGroup
 *
 * @author Daniel Hartmann [daniel@solis.coop.br]
 *
 * @version $id$
 *
 * \b Maintainers: \n
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Daniel Hartmann [daniel@solis.coop.br]
 *
 * @since
 * Creation date 2010/07/20
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b CopyRight: \n
 * Copyright (c) 2010 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPLv2 (for further details read the COPYING file or http://www.gnu.org/licenses/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://www.miolo.org.br
 *
 */
class MTab extends MFormContainer
{
    public $label;
    public $disabled;

    /**
     * MTab constructor
     *
     * @param string $id Id of the tab
     * @param string $label Label of the tab
     * @param array $controls Fields of the tab
     * @param string $ajaxAction An ajax action to be called when the tab is selected
     * @param boolean $disabled Informs whether the tab is disabled or not
     */
    public function __construct($id, $label, $controls, $disabled = false)
    {
        parent::__construct($id, $controls);
        $this->label = $label;
        $this->disabled = $disabled;
    }

    /**
     * @param boolean Sets disabled to false
     */
    public function setEnabled()
    {
        $this->disabled = false;
    }

    /**
     * @param boolean Sets disabled to true
     */
    public function setDisabled()
    {
        $this->disabled = true;
    }
}
?>
