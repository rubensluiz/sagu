<?
/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MValidator extends MFormControl
{

/**
 * Attribute Description.
 */
    var $field;

/**
 * Attribute Description.
 */
    var $min;

/**
 * Attribute Description.
 */
    var $max;

/**
 * Attribute Description.
 */
    var $type = 'required';  // ex. required | optional | ignore/ readonly

/**
 * Attribute Description.
 */
    var $chars;

/**
 * Attribute Description.
 */
    var $mask;

/**
 * Attribute Description.
 */
    var $checker;

/**
 * Attribute Description.
 */
    var $msgerr;

    
/**
 * Brief Description.
 * Complete Description.
 *
 * @returns (tipo) desc
 *
 */
    function __construct()
    {   
        parent::__construct(''); 
        $this->page->AddScript('m_validate.js');
    }

/**
 * Brief Description.
 * Complete Description.
 *
 * @returns (tipo) desc
 *
 */
    function Generate()
    {
        $name = $this->name;
        $name = str_replace('.', '_', $name);

        // Unique identifier. Remove [] to avoid javascript errors.
        $identifier = str_replace(']', '', str_replace('[', '_', $this->field));
        $identifier = str_replace('.', '_', $identifier);

        $html = 
<<< HERE

var $name = new MIOLO_Validator();
$name.id    = '{$this->id}';
$name.form  = '{$this->form}';
$name.field = '{$this->field}';
$name.label = '{$this->label}';
$name.min   = '{$this->min}';
$name.max   = '{$this->max}';
$name.type  = '{$this->type}';
$name.chars = '{$this->chars}';
$name.mask  = '{$this->mask}';
$name.msgerr= '{$this->msgerr}';

if ( !window.MIOLO_validators )
{
    window.MIOLO_validators = {};
}
window.MIOLO_validators.$identifier = $name;

HERE;
        if ( $this->checker )
        {
            $html .= "$name.checker = 'MIOLO_Validate_Check_{$this->checker}';";
        }
        return $html; 
    }    
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MRequiredValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $max=0 (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
	function __construct($field,$label='',$max=0, $msgerr='')
    {
        parent::__construct();
		$this->id  = 'required';
		$this->field  = $field;
		$this->label  = $label;
        $this->mask  = '';
        $this->type  = 'required';
        $this->min   = 0;
        $this->max   = $max;
        $this->chars = 'ALL';
        $this->msgerr = $msgerr;
    }
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MMASKValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $mask (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'ignore' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$mask,$type = 'ignore',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'mask';
		$this->field  = $field;
		$this->label  = $label;
        $this->mask  = $mask;
        $this->type  = $type;
        $this->min   = 0;
        $this->max   = strlen($mask);
        $this->msgerr = $msgerr;
        $this->chars = 'ALL';
    }
}

/**
 * Email validator.
  */
class MEmailValidator extends MValidator
{

    /**
     * MEmailValidator constructor.
     *
     * @param object $field MIOLO Component.
     * @param string $label Field label. Default is first field label attribute.
     * @param string $type Validator type: required or optional.
     * @param string $msger Error message.
     */
    public function __construct($field, $label='', $type='optional', $msgerr='')
    {
        parent::__construct();

        $this->id = 'email';
        $this->field = $field;
        $this->label = $label;
        $this->type = $type;
        $this->min = 0;
        $this->max = 99;
        $this->chars = 'ALL';
        $this->mask = '';
        $this->checker = 'EMAIL';
        $this->msgerr = $msgerr;
    }
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MPasswordValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'required' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$type = 'required',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'password';
		$this->field  = $field;
		$this->label  = $label;
        $this->type  = $type;
        $this->min   = 0;
        $this->max   = 99;
        $this->chars = 'ALL';
        $this->mask  = '';
        $this->checker = 'PASSWORD';
        $this->msgerr = $msgerr;
    }
}    

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MCEPValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id     = 'cep';
		$this->field  = $field;
		$this->label  = $label;
        $this->type   = $type;
        $this->min    = 9;
        $this->max    = 9;
        $this->chars  = '0123456789-';
        $this->mask   = '99999-999';
        $this->msgerr = $msgerr;
    }
}    
    
/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MPHONEValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'phone';
		$this->field  = $field;
		$this->label  = $label;
        $this->type  = $type;
        $this->chars = '() 01234-56789';
        $this->mask  = '(99) 9999-9999';
        $this->msgerr = $msgerr;
    }
}    
    
/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MTIMEValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'time';
		$this->field  = $field;
		$this->label  = $label;
        $this->type    = $type;
        $this->min     = 5;
        $this->max     = 5;
        $this->chars   = ':0123456789';
        $this->mask    = '99:99';
        $this->checker = 'TIME';
        $this->msgerr = $msgerr;
    }
}    
    
/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MCPFValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'cpf';
		$this->field  = $field;
		$this->label  = $label;
        $this->type    = $type;
        $this->min     = 14;
        $this->max     = 14;
        $this->chars   = '.-0123456789';
        $this->mask    = '999.999.999-99';
        $this->checker = 'CPF';
        $this->msgerr = $msgerr;
    }
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MCNPJValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'cnpj';
		$this->field  = $field;
		$this->label  = $label;
        $this->type    = $type;
        $this->min     = 18;
        $this->max     = 18;
        $this->chars   = '/.-0123456789';
        $this->mask    = '99.999.999/9999-99';
        $this->checker = 'CNPJ';
        $this->msgerr = $msgerr;
    }
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MDATEDMYValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'datedmy';
		$this->field  = $field;
		$this->label  = $label;
        $this->type  = $type;
        $this->min   = 10;
        $this->max   = 10;
        $this->chars = '/0123456789';
        $this->mask  = '99/99/9999';
        $this->checker = 'DATEDMY';
        $this->msgerr = $msgerr;
    }
}    
    
/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MDATEYMDValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'dateymd';
		$this->field  = $field;
		$this->label  = $label;
        $this->type  = $type;
        $this->min   = 10;
        $this->max   = 10;
        $this->chars = '/0123456789';
        $this->mask  = '9999/99/99';
        $this->checker = 'DATEYMD';
        $this->msgerr = $msgerr;
    }
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MCompareValidator extends MValidator
{
/**
 * Attribute Description.
 */
    var $operator;

/**
 * Attribute Description.
 */
    var $value;

/**
 * Attribute Description.
 */
    var $datatype;  // 'i' (integer) ou 's' (string)


/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $operator (tipo) desc
 * @param $value (tipo) desc
 * @param $datatype='s' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='', $operator, $value, $datatype='s',  $type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'compare';
		$this->field  = $field;
		$this->label  = $label;
        $this->type  = $type;
        $this->min   = 0;
        $this->max   = 255;
        $this->chars = 'ALL';
        $this->mask  = '';
        $this->checker = 'COMPARE';
        $this->operator = $operator;
        $this->value = $value;
        $this->datatype = strtolower($datatype);
        $this->msgerr = $msgerr;
    }

/**
 * Brief Description.
 * Complete Description.
 *
 * @returns (tipo) desc
 *
 */
    function Generate()
    {
        $name = $this->name;
        $html = parent::Generate();
        $html .= "$name.operator = '{$this->operator}';\n";
        $html .= "$name.value = '{$this->value}';\n";
        $html .= "$name.datatype = '{$this->datatype}';\n";
        return $html;
    }
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MRangeValidator extends MValidator
{
/**
 * Attribute Description.
 */
    var $minvalue;

/**
 * Attribute Description.
 */
    var $maxvalue;

/**
 * Attribute Description.
 */
    var $datatype;  // 'i' (integer) ou 's' (string) ou 'd' (date)


/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $min (tipo) desc
 * @param $max (tipo) desc
 * @param $datatype='s' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='', $min, $max, $datatype='s',  $type = 'optional',$msgerr='', $separator='.')
    {
        parent::__construct();
		$this->id  = 'range';
		$this->field  = $field;
		$this->label  = $label;
        $this->type  = $type;
        $this->min   = 0;
        $this->max   = 255;
        $this->mask  = '';
        $this->checker = 'RANGE';
        $this->minvalue = $min;
        $this->maxvalue = $max;
        $this->datatype = strtolower($datatype); // 'i' (integer) ou 's' (string)
        $this->chars = $this->datatype == 'i' || $this->datatype == 'f' ? '+-0123456789' : 'ALL';

        if ( $this->datatype == 'f' )
        {
            $this->chars .= $separator;
        }
        
        $this->msgerr = $msgerr;
    }

/**
 * Brief Description.
 * Complete Description.
 *
 * @returns (tipo) desc
 *
 */
    function Generate()
    {
        $name = $this->name;
        $html = parent::Generate();
        $html .= "$name.minvalue = '{$this->minvalue}';\n";
        $html .= "$name.maxvalue = '{$this->maxvalue}';\n";
        $html .= "$name.datatype = '{$this->datatype}';\n";
        return $html;
    }
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MRegExpValidator extends MValidator
{
/**
 * Attribute Description.
 */
    var $regexp;


/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $regexp='' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='', $regexp='',  $type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'regexp';
		$this->field  = $field;
		$this->label  = $label;
        $this->type  = $type;
        $this->min   = 0;
        $this->max   = 255;
        $this->chars = 'ALL';
        $this->mask  = '';
        $this->checker = 'REGEXP';
        $this->regexp = $regexp;
        $this->msgerr = $msgerr;
    }

/**
 * Brief Description.
 * Complete Description.
 *
 * @returns (tipo) desc
 *
 */
    function Generate()
    {
        $name = $this->name;
        $html = parent::Generate();
        $html .= "$name.regexp = '{$this->regexp}';\n";
        return $html;
    }
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MIntegerValidator extends MRegExpValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='', $type = 'optional',$msgerr='')
    {
        parent::__construct($field,$label, '^[+-]?[0-9][0-9]*$', $type,$msgerr);
    }
}

/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MFloatValidator extends MRegExpValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='', $separator='.', $precision=2, $type = 'optional',$msgerr='')
    {
        parent::__construct($field,$label, '^[+-]?[0-9]{1,}(\\'.$separator.'[0-9]{1,'.$precision.'})?$', $type,$msgerr);
        $this->chars = '0123456789+-'.$separator;
    }
}


/**
 * Brief Class Description.
 * Complete Class Description.
 */
class MDATETimeDMYValidator extends MValidator
{
/**
 * Brief Description.
 * Complete Description.
 *
 * @param $field (tipo) desc
 * @param $label' (tipo) desc
 * @param $type (tipo) desc
 * @param = (tipo) desc
 * @param 'optional' (tipo) desc
 * @param $msgerr='' (tipo) desc
 *
 * @returns (tipo) desc
 *
 */
    function __construct($field,$label='',$type = 'optional',$msgerr='')
    {
        parent::__construct();
		$this->id  = 'datetimedmy';
		$this->field  = $field;
		$this->label  = $label;
        $this->type  = $type;
        $this->min   = 10;
        $this->max   = 16;
        $this->chars = ':/0123456789 ';
        $this->mask  = '99/99/9999 99:99';
        $this->checker = 'DATETimeDMY';
        $this->msgerr = $msgerr;
    }

}    


?>
