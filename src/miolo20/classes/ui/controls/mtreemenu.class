<?
class MTreeMenu extends MControl
{
    static  $order = 0;
    private $nOrder;
    private $template;
    private $action;
    private $target;
    private $items;
    private $jsItems;
    private $arrayItems;

    function __construct($name = '', $template = 0, $action = '', $target = '_blank')
    {
        parent::__construct($name);
        $page = $this->page;
        $this->AddStyleFile('m_treemenu.css'); 
        $page->AddScript('tigra/tree.js');
        //        $page->AddScript('tigra/tree_items.js');
        $this->items = NULL;
        $this->template = $template;
        $page->AddScript("tigra/tree{$this->template}_tpl.js");
        $this->action = $action;
        $this->target = $target;
        $this->nOrder = MTreeMenu::$order++;
    }

    private function GetJsItems($items)
    {
        if ($items != NULL)
        {
            foreach ($items as $it)
            {
                $i .= "['{$it[1]}'";
                $i .= ($it[0] !== NULL ? ",'{$it[0]}'" : ',null');

                if ($this->action != '')
                {
                    $it[2] = str_replace('#', $it[0], $this->action);
                }

                $i .= ($it[2] != NULL ? ",'{$it[2]}'" : ',null') . ',';
                $i .= $this->GetJsItems($this->items[(int)$it[0]]);
                $i .= "],";
            }

            return $i;
        }
    }

    function SetItemsFromArray($array, $key = '3', $data = '0,1,2')
    {
        $this->arrayItems = array();
        foreach ($array as $a)
        {
            $this->arrayItems[$a[0]] = $a;
        }

        $o = new MTreeArray($array, $key, $data);
        $this->items = $o->tree;
        $this->jsItems = $this->GetJsItems($this->items['root']);
    }

    function SetItemsFromResult($result, $basename, $key = '3', $data = '0,1,2')
    {
        $o = new MTreeArray($result, $key, $data);
        $this->items['root'][] = array
            (
            0,
            $basename,
            ''
            );
        foreach ($o->tree as $key => $tree)
        {
            $this->items[0][] = array
                (
                $key,
                $key,
                ''
                );

            $this->items[$key] = $tree;
        }

        $this->jsItems = $this->GetJsItems($this->items['root']);
    }

    function getItems()
    {
        return $this->arrayItems;
    }

    function SetSelectEvent($jsCode)
    {
        $tree = $this->nOrder;
        $code = "trees[$tree].selectevent = function (n_id, item_id) { $jsCode };\n";
        $this->page->AddJsCode($code);
    }

    function SetEventHandler($eventHandler = '')
    {
        $tree = $this->nOrder;

        if ($eventHandler != '')
            $this->attachEventHandler('click', $eventHandler);

        $code = "trees[$tree].selectevent = function (n_id, item_id) { _doPostBack('{$this->name}:click', item_id); document.forms[0].submit(); };\n";
        $this->page->AddJsCode($code);
    }

    function GenerateInner()
    {
        $tree = $this->nOrder;
        $page = $this->page;
        $form = ($this->form == NULL) ? $page->name : $this->form->name;
        $html = "<script language=\"JavaScript\">\n";
        $html .= "<!--\n";
        $html .= "var TREE_ITEMS_{$tree} = [ " . $this->jsItems . "];\n";
        $html .= "tree{$this->template}_tpl['target'] = '{$this->target}';\n";
        $html .= "new tree (TREE_ITEMS_{$tree}, tree{$this->template}_tpl);\n";
        $html .= "//-->\n";
        $html .= "</script>\n";
        $this->inner = $html;
    }
}
?>