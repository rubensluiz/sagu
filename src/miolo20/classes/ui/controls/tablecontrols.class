<?php

#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Table
#    Class for html tables
#    - Rows, Cols and Content are 0-based
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

class MTable extends MControl
{
    var $table;
    var $rowAttr;
    var $cellAttr;

    function __construct($table, $tableAttr, $rowAttr, $cellAttr)
    {
        parent::__construct();
        $this->table = $table;
        $this->SetAttributes($tableAttr);
        $this->rowAttr = $rowAttr;
        $this->cellAttr = $cellAttr;
    }
}

class MSimpleTable extends MTable
{
   var $cell;
   var $attributes;

   function __construct($name='', $attrs='', $row=1, $cell=1)
   {
      mcontrol::__construct($name);

      if ($attrs == '')
      {
         $attrs = "cellspacing=0 cellpadding=0 border=0 width=100%";
      }
      else
      {
         $attrs = str_replace("\"", '', $attrs);
      }

      $this->setAttributes($attrs); 
      $this->setClass( $this->attrs->items['class'] );

      for($i=0; $i < $row; $i++)
      {
         $this->attributes['row'][$i] = '';

         for($j=0; $j < $cell; $j++)
         {
            $this->attributes['cell'][$i][$j] = '';
         }
      }
   }

   function setRowAttribute($i, $name, $attr)
   {
       $this->attributes['row'][$i] .= " $name=\"$attr\" ";
   }

   function setCellAttribute($i, $j, $name, $attr)
   {
       $this->attributes['cell'][$i][$j] .= " $name=\"$attr\" ";
   }

   function setRowClass($i,$class)
   {
       $this->attributes['row'][$i] .= " class=\"$class\" ";
   }

   function setCellClass($i,$j,$class)
   {
       $this->attributes['cell'][$i][$j] .= " class=\"$class\" ";
   }

   function setCell($i,$j,$content,$attrs='')
   {
       $this->cell[$i][$j] = $content;
       $this->attributes['cell'][$i][$j] .= $attrs;
   }

   function generate()
   {
      $n = count($this->cell);

      for($i=0; $i<$n; $i++)
      {
         $k = count($this->cell[$i]);

         for($j=0; $j<$k; $j++)
         {
            $table[$i][$j] = $this->painter->generateToString($this->cell[$i][$j]);
         }
      }
      //$t = new MTable($table, $this->Attributes(),$this->attributes['row'],$this->attributes['cell']);
        $this->table = $table;
        //$this->SetAttributes( $tableAttr );
        $this->rowAttr = $this->attributes['row']; //$rowAttr;
        $this->cellAttr = $this->attributes['cell']; //$cellAttr;

      return $this->getRender('table');
   }

}

class MTableRaw extends MSimpleTable
{
    var $title;
    var $array;
    var $colTitle;
    var $zebra = false;
    var $table;
    var $setBorder = false;

    function __construct($title='', $array, $colTitle=null)
    {
        parent::__construct('');
        $this->title = $title;
        $this->array = &$array;
        $this->colTitle = $colTitle;
    }

    function SetAlternate($zebra=false)
    {
        $this->zebra = $zebra;
    }

   function Generate()
   {
      $title = $this->title;
      $array = $this->array;
      $colTitle = $this->colTitle;
      $t = new SimpleTable('');
      $t->SetClass("m-tableraw");
      $t->SetAttributes('cellspacing=1 cellpadding=3'); 
      if ( $this->setBorder )
      {
         $t->SetAttributes('border=1'); 
      }
      $k = 0;
      if ($title)
      {
         $ncols = count($colTitle);
         $t->SetCell($k++,0,$title," class=\"m-tableraw-title\" colspan=$ncols ");
      }
      if (is_array($colTitle))
      {
         $n = count($colTitle);
         for($i=0;$i<$n;$i++)
            $t->SetCell($k,$i,$colTitle[$i]," class=\"m-tableraw-column-title\" ");
         $k++;
      }
      if (is_array($array))
      {
         $nrows = count($array);
         for($i=0; $i<$nrows; $i++)
         {
            $rowClass = "m-tableraw-row" . ($this->zebra ? '-'.($i%2) : '');
            $t->SetRowClass($k, $rowClass);
            if (is_array($array[$i]))
            {
               $ncols = count($array[$i]);
               for($j=0; $j<$ncols; $j++)
               { 
                   $attr = $this->attributes['cell'][$i][$j];
                   if ($attr == '') $attr = "width=0 align=\"left\" valign=\"top\"";
                   $t->SetCell($k,$j,$array[$i][$j],$attr);

               }
            }
            else 
            {
               $attr = $this->attributes['cell'][$i][0];
               if ($attr == '') $attr = "width=0 align=\"left\" valign=\"top\"";
               $t->SetCell($k,0,$array[$i], $attr);
            }
            $k++; 
         }
      } 
      return $t->Generate();
   }

}

class MTableXml extends MTableRaw
{
    function __construct($title='', $file, $colTitle=null)
    {
        $xmlTree = new XMLTree($file);
        $array = $xmlTree->getXMLTreeAsArray();
        parent::__construct($title, $array, $colTitle);
    }
}

class TableCell extends MControl
{
    var $content;
    var $attributes;
    var $separator;
    var $contentCount;

    function __construct()
    {
       parent::__construct();
       $this->attributes = array(); 
       $this->content = array(); 
       $this->contentCount = 0;  
       $this->cssclass = 'ThemeTableCell';
       $this->separator = '<br/>';
    }

    function SetAttributes($attr)
    {
       foreach($attr as $a=>$v) $this->attributes[$a] = $v;
    }

    function SetAttribute($attr,$value)
    {
       $this->attributes[$attr] = $value;
    }

    function SetContent($content)
    {
       $this->content = array($content);
       $this->contentCount = 1;
    }

    function GetContent($pos=0)
    {
       if ($pos < $this->contentCount) {
          return $this->content[$pos];
       }
       return null;
    }

    function ClearContent()
    {
       $this->content = array();
       $this->contentCount = 0;
    }

    function AddContent($content)
    {
       $this->content[] = $content;
       $this->contentCount++;
    }
}

class TableRow extends MControl
{
    var $cell;  // array of Cell object
    var $attributes;
    var $cellCount;

    function __construct()
    {
       parent::__construct();
       $this->cell = array();
       $this->attributes = array (
          'align'=>'',
          'valign'=>''
       );
       $this->cssclass = 'ThemeTableRow';
       $this->cellCount = 0;
    }
  
    function SetAttributes($attr)
    {
       foreach($attr as $a=>$v) $this->attributes[$a] = $v;
    }

    function SetAttribute($attr,$value)
    {
       $this->attributes[$attr] = $value;
    }

    function AddCell()
    {
       $this->cell[$c = $this->cellCount++] = new TableCell();
       return $c;
    }

    function RemoveCell($cell)
    {
       if (($this->cellCount > 0) && ($this->cellCount > $cell))
       {
          array_splice($this->cell,$cell, 1);
          $this->cellCount--;
       }
    }

    function GetCell($cell)
    {
       if ($this->ncells > $cell)
       {
          return $this->cell[$cell];
       }
       return null;
    }
}

?>
