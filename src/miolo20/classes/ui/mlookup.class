<?
class MLookup
{
    var $listingTitle;
    var $dbconf;
    var $sql;
    var $labels;
    var $formName;
    var $module;
    var $item;
    var $lheight;
    var $lwidth;
    var $event;
    var $filterValue = '';
    var $filterFields;
    var $form;
    var $pageLength = 20;
    var $keyColumn;
    var $title;
    var $grid;
    var $related;
    var $baseModule;
    var $gridClass = 'LookupGrid';
    var $lookupType = 'grid';
    protected $filterColumns = 0;

    function __construct($baseModule = 'admin')
    {
        global $MIOLO;

        $this->baseModule = $baseModule;
        $this->formName = $_GET['name'];
        $this->module = $_GET['lmodule'];
        $this->item = $_GET['item'];
        $this->event = $_GET['event'];
        $this->lheight = $_GET['lheight'];
        $this->lwidth = $_GET['lwidth'];
        $this->related = $_GET['related'];
        $this->filterValue = $_GET['filter'];
        $url = $MIOLO->GetActionURL($this->baseModule,
                                    'lookup', urlencode($this->item), array('name' => urlencode($this->formName), 'lmodule' => urlencode($this->module), 'event' => urlencode($this->event)), NULL, false);
        $this->href = $url;
        $this->listingTitle = _M('Search Result');
    }

    public function setListingTitle($title)
    {
        $this->listingTitle = $title;
    }

    function GetFilterValue($name = '')
    {
        global $page;

        $value = ($name != '') ? $page->Request($name) : $this->filterValue;
        $value = str_replace("'", '', $value);
        $value = str_replace("\"", '', $value);
        $value = str_replace("#", '', $value);
        return $value;
    }

    function setLookupType( $type='grid' )
    {
        $this->lookupType = $type;
    }

    function generate( )
    {
        if ( $this->lookupType == 'form' )
        {
            return $this->form;
        }
        return $this->grid;
    }

    function setLookupForm( $title )
    {
        $this->setLookupType( 'form' );
        $this->form = new mForm( $title, '', 'javascript:MIOLO_Close( )' );

        $idx     = MIOLO::_Request('idx');
        $related = explode(',', MIOLO::_Request('related'));
        if ( is_array($idx) )
        {
            $info = array( );
            foreach($related as $r)
            {
                if ( $idx[$r] )
                {
                    $info[]     = "document.forms[0]['$campoAqui'].value";
                }
                else
                {
                    $info[] = 'null';
                }
            }
            $info    = implode(',', $info);
            $related = implode(',', $related);
        }
        else
        {
            $info    = "''";
        }
        
        if ( $related )
        {
            $this->form->page->onLoad("eval('MIOLO_getWindow( true ).' + '$this->formName').related = '$related';");
        }
        $this->form->addButton( new FormButton( 'submit', _M('Send'), "MIOLO_Deliver( '$this->formName', 0, $info);"));
    }

    function addField( $field )
    {
        $this->form->addField( $field );
    }

    function setFields( $fields )
    {
        $this->form->setFields( $fields );
    }

    public function setFilterColumns($countColumns)
    {
        $this->filterColumns = $countColumns;
    }

    function GetHRef()
    {
        return $this->href;
    }

    function &GetQuery($dbconf, $sql)
    {
        global $MIOLO;
        $db = $MIOLO->GetDatabase($dbconf);
        return $db->GetQuery($sql);
    }

    function AddFilterField($field)
    {
        $this->filterFields[] = &$field;
    }

    function SetGridClass($class, $module, $classFile)
    {
        global $MIOLO;

        $MIOLO->Uses($classFile, $module);
        $this->gridClass = $class;
    }

    function getGrid($query, $columns, $href, $pageLength, $indexColumn)
    {
        return new $this->gridClass($query, $columns, $href, $pageLength, $indexColumn, $this->filterColumns);
    }

    function setLookupGrid($dbconf, $sql, $columns, $title = 'Search', $pageLength = 15, $indexColumn = 0)
    {
        // if $sql is an array, we create a MGrid and put the data
        if ( ! is_object($sql) )
        {
            $this->grid = new MGrid($sql, $columns, $this->href, $pageLength, $indexColumn);
        }
        else
        {
            try
            {
                $query = $this->getQuery($dbconf, $sql);
            }
            catch ( EDatabaseException $e )
            {
                $query = NULL;
            }

            $this->grid = $this->getGrid($query, $columns, $this->href, $pageLength, $indexColumn);
        }

        $this->grid->setFilter(true);
        $this->grid->setLinkType('hyperlink');
        $this->grid->setTitle($title);

        for ($i = 0; $i < count($this->filterFields); $i++)
        {
            $this->grid->addFilterControl($i, $this->filterFields[$i]);
        }

        if ( ! is_object($sql) )
        {
            for ($i = 0; $i < count($columns); $i++)
            {
                if ($i)
                {
                    $args .= ',';
                }

                $args .= "&quot;#$i#&quot;";
            }
        }
        else
        {
            for ($i = 0; $i < count($query->result[0]); $i++)
            {
                if ($i)
                {
                    $args .= ',';
                }
    
                $args .= "&quot;#$i#&quot;";
            }
        }

        $this->grid->addActionIcon('ID', 'select', "javascript:MIOLO_Deliver('$this->formName', {$indexColumn}, $args)");
    }

    function SetMActiveLookupGrid($dbconf, $sql, $columns, $title = 'Search', $pageLength = 15, $indexColumn = 0)
    {
        $query = $this->GetQuery($dbconf, $sql);
        $this->grid = $this->GetGrid($query, $columns, $this->href, $pageLength, $indexColumn);
        $this->grid->SetLinkType('hyperlink');
        $this->grid->SetFullWidth($this->lwidth);
        $this->grid->SetFullHeight($this->lheight);
        for ($i = 0; $i < count($query->result[0]); $i++)
        {
            if ($i)
            {
                $args .= ',';
            }

            $args .= "&quot;#$i#&quot;";
        }
        $this->grid->AddActionIcon('ID', 'select', "javascript:MIOLO_ActiveDeliver('$this->formName', {$indexColumn}, '{$this->event}','{$this->related}', $args)");
    }

    function SetGrid($dbconf, $sql, $columns, $title = 'Search', $pageLength = 15, $indexColumn = 0)
    {
        $method = "Set" . $this->gridClass;
        $this->$method($dbconf, $sql, $columns, $title, $pageLength, $indexColumn);
    }
}
?>
