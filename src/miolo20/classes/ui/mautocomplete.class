<?php

class MAutoComplete extends MBusiness
{
    public $module;
    public $item;
    public $value;
    public $config;
    public $sql;
    public $defaults;
    public $result;
    public $filters = NULL;
    
    public function __construct($module, $item, $value, $defaults=NULL)
    {
        $this->value = $value;
        $this->module = $module;
        $this->item = $item;
        $this->defaults = $defaults;
        parent::__construct($module);

        $MIOLO = MIOLO::getInstance();

        if ( ( file_exists($MIOLO->getModulePath($module, 'db/lookup.class'))
                && $MIOLO->uses('/db/lookup.class', $module) )
                || $MIOLO->uses('/classes/lookup.class', $module) )
        {
            try
            {
                eval("\$object = new Business{$module}Lookup();");
                eval("\$info = \$object->autoComplete{$item}(\$this,\$defaults);");
            }
            catch ( EDatabaseQueryException $e )
            {
                $this->result = NULL;
            }

            parent::__construct($this->module);

            if ( $info )
            {
                $this->result = $info;
            }
            else
            {
                $sql = new MSQL();
                $sql->createFrom($this->sql);

                if ( $this->usingMultipleFiltersOnAJAX() )
                {
                    $value = $this->filters;
                }
                
                $sql->prepare($value);

                // Modificacao para funcionar no SAGU
                if ( method_exists('SDatabase', 'getInstance') )
                {
                    $MIOLO->auth->CheckLogin();
                    $db = SDatabase::getInstance();
                }
                else
                {
                    $db = $MIOLO->getDatabase($this->module);
                }
                
                try
                {
                    $result = $db->query($value ? $sql->command : str_replace('?', 'NULL', $this->sql));
                    $this->result = $result[0];
                }
                catch ( EDatabaseQueryException $e )
                {
                    $this->result = NULL;
                }
            }
        }
    }

    public function getResult()
    {
        return $this->result;
    }

    public function setContext($config, $sql)
    {
        $this->config = $config;
        $this->module = $config;
        $this->sql = $sql;
    }

    /**
     * @return boolean Return if auto complete is using multiple filters.
     */
    public function usingMultipleFilters()
    {
        // Condition for first access to form
        $firstAccessTest = is_array($this->value) && $this->filters[0] == '';

        return $firstAccessTest || $this->usingMultipleFiltersOnAJAX();
    }

    /**
     * @return boolean Return if AJAX auto complete is using multiple filters.
     */
    public function usingMultipleFiltersOnAJAX()
    {
        return count($this->filters) > 1 && $this->filters[0] != '';
    }
}

?>
