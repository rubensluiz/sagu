<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for basEmployee table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 14/03/2006
 *
 **/

/**
 * Form to search the basEthnic Origin table
 */
class FrmWageDataSearch extends SSearchForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    public function __construct($data)
    {
        $this->module = 'basic';
        $module = $this->module;
        $this->home   = $data->home;

        parent::__construct( _M('Localizar',$module), new hrsEmployee(), array('employeeId', 'personId'), 'BusWageData' );
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $employeeIdLabelS = new MText('employeeIdLabelS', _M('Código do funcionário', $module) . ':');
        $employeeIdLabelS->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds[] = $employeeIdLabelS;
        
        $employeeIdS = new MTextField('employeeIdS', $this->getFormValue('employeeIdS',$data->employeeIdS), _M('Nome',$module), SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $flds[]      = $employeeIdS;
        $validators[] = new MIntegerValidator('employeeIdS', _M('Código do funcionário', $module));
                
        $hctEmployeeS = new MHContainer('hctEmployeeS', $flds);
        $hctEmployeeS->setShowLabel(false);
        $fields[]  = $hctEmployeeS;
        unset($flds);
        
        $personLabelS = new MText('personLabelS', _M('Pessoa', $module) . ':');
        $personLabelS->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds[] = $personLabelS;

        $personIdS = new MLookupTextField('personIdS', $this->getFormValue('personIdS',$data->personId), _M('Pessoa',$module), SAGU::getParameter('BASIC', 'FIELD_LOOKUPFIELD_SIZE'), null, null, 'personNameS', 'basic', 'PhysicalPersonEmployee', null, null, true);
        $personIdS->setJsHint(_M('Informe o código da pessoa',$module));
        $flds[]         = $personIdS;
        $validators[] = new MIntegerValidator('personIdS', _M('Pessoa', $module));
        
        $personNameS = new MTextField('personNameS', $this->getFormValue('personNameS',$data->personName), _M('Nome',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $flds[]         = $personNameS;

        $hctPersonS = new MHContainer('hctPersonS', $flds);
        $hctPersonS->setShowLabel(false);
        $fields[]  = $hctPersonS;
        unset($flds);
        $fields[] = new MSeparator(' ');        
        
        parent::defineFields( $fields, $module, 'GrdWageDataSearch', $validators );
        
        $this->toolbar->disableButton(MToolBar::BUTTON_NEW);
        $this->toolbar->disableButton(MToolBar::BUTTON_SAVE);
        $this->toolbar->disableButton(MToolBar::BUTTON_DELETE);
        $this->toolbar->disableButton(MToolBar::BUTTON_PRINT);
    }

}

?>
