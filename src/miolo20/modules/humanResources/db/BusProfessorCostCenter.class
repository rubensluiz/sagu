<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 04/04/2006
 *
 **/

/**
 * Class to manipulate the basEmployee table
 **/
class BusinessHumanResourcesBusProfessorCostCenter extends sBusiness
{
    /**
     * Get data about bank account
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getCostCenters($periodId)
    {
       $sql = 'SELECT L.externalId,
                      D.professorId,
                      F.curricularComponentId,
                      B.groupId,
                      H.costCenterId,
                      count(A.contractId),
                      I.academicCredits
                FROM acdEnroll A INNER JOIN acdGroup B
                     ON (A.groupId = B.groupId)
                INNER JOIN acdSchedule C
                     ON (A.groupId = C.groupId)
                INNER JOIN acdScheduleProfessor D
                     ON (C.scheduleId = D.scheduleId)
                INNER JOIN ONLY basPhysicalPersonProfessor E
                     ON (D.professorId = E.personId)
                INNER JOIN unit_acdcurriculum F 
                     ON (A.curriculumId = F.curriculumId)
                INNER JOIN acdContract G
                     ON (A.contractId = G.contractId)
                INNER JOIN accCourseAccount H
                     ON (G.courseId = H.courseId
                         AND G.courseVersion = H.courseVersion
                         AND G.unitId = H.unitId)
                INNER JOIN acdCurricularComponent I
                     ON (F.curricularComponentId = I.curricularComponentId
                         AND F.curricularComponentVersion = I.curricularComponentVersion)
                INNER JOIN acdLearningPeriod J
                     ON (B.learningPeriodId = J.learningPeriodId)
                LEFT JOIN basEmployee L
                     ON (E.personId = L.personId)
               WHERE J.periodId = ?
                AND A.dateCancellation is null
                AND (B.isCancellation = false
                     OR B.isCancellation is null)
               GROUP BY H.costCenterId,
                        D.professorId,
                        F.curricularComponentId,
                        B.groupId,
                        I.academicCredits,
                        L.externalId
               ORDER BY D.professorId,
                        B.groupId,
                        H.costCenterId,
                        F.curricularComponentId';

       $args[] = $periodId;

       $db     = $this->getDatabase();
       $result = $db->query(SAGU::prepare($sql, $args));

       return $result;
    }

}

?>
