<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for basEmployee table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 20/03/2006
 *
 **/

/**
 * Class to manipulate the basEmployee table
 **/
class BusinessHumanResourcesBusPayroll extends sBusiness
{
    /**
     * Do a search on the database table handled by the class
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getTotal($total)
    {
        foreach ( $total as $value )
        {
            if ( $value > 0 )
            {
                $sum .= ' + ' . $value;
            }
        }

        $where = substr($sum, 3);

        $sql = 'SELECT ';

        unset($result);
        if ( strlen($where) > 0 )
        {
            $sql   .= $where;
            $db     = $this->getDatabase();
            $result = $db->query(SAGU::prepare($sql, null));
            //$db->close();
        }

        return $result[0][0];
    }

    /**
     * Get the name of the default company
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getDefaultCompanyName()
    {
        $sql   = 'SELECT name
                  FROM basCompanyConf';
                
        $where = ' WHERE companyId = ' . SAGU::getParameter('BASIC', 'DEFAULT_COMPANY_CONF') ;
                
        $sql   .= $where;
        $db     = $this->getDatabase();
        $result = $db->query($sql, null);

        return $result[0][0];
    }
    
    /**
     * Get the description of CPF
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getCpfDescription()
    {
        $sql   = 'SELECT name
                  FROM basDocumentType ';
                
        $where = ' WHERE documentTypeId = ' . SAGU::getParameter('BASIC', 'DEFAULT_DOCUMENT_TYPE_ID_CPF') ;
                
        $sql   .= $where;
        $db     = $this->getDatabase();
        $result = $db->query($sql, null);

        return $result[0][0];
    }


}

?>
