<?php

/**
 * <--- Copyright 2005-2011 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * @author Felipe Ferreira [felipe_ferreira@solis.com.br]
 *
 * \b Maintainers \n
 * Equipe SAGU [sagu@solis.coop.br]
 *
 * @since
 * Class created on 27/02/2015
 *
 */
class FrmModulo extends SManagementForm
{
    public function __construct()
    {
        parent::__construct(new ResModulo(), array('moduloId'));
    }
    
     public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $action = MIOLO::getCurrentAction();
        $function = MIOLO::_REQUEST('function');

        //Campo descrição do tipo de carga horária complementar
        $fields[] = $nome = new MTextField('nome', $this->getFormValue('nome', $data->nome), _M('Nome', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $nome->addAttribute('maxlength', '255');
        $nome->setJsHint(_M('Informe o nome', $module));

        $tipos = ResModulo::listTiposModulo();
        $campoTipo = new MSelection('tipo', null, _M('Tipo', $module), $tipos);
        $campoTipo->setJsHint(_M('Informe o tipo', $module));
        $fields[] = $campoTipo;
        $validators[] = new MRequiredValidator('tipo', _M('Tipo', $module));
                
        //Validadores
        $validators[] = new MRequiredValidator('nome', 'required');

        parent::defineFields($fields, $validators, $data);
    }
    
}
