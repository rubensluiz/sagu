<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Registro de aluno
 *
 * @author Moises Heberle [moises@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.com.br]
 *
 * @since
 * Class created on 19/11/2013
 *
 **/
$MIOLO->uses('forms/FrmRegistroPreceptorRIS.class', 'basic');
class FrmRegistroPreceptor extends FrmRegistroPreceptorRIS
{
    public $identificador = __CLASS__;

    public function __construct()
    {
        $module = SAGU::getFileModule(__FILE__);
        parent::__construct();

        $this->toolbar->hideButton('tbBtnPrint');
        $this->toolbar->hideButton('tbBtnDelete');
        $this->toolbar->hideButton('tbBtnSave');
        $this->toolbar->hideButton('tbBtnSearch');
        $this->toolbar->hideButton('tbBtnClose');
        $this->toolbar->hideButton('tbBtnNew');
    }


    public function defineFields()
    {
        $module = SAGU::getFileModule(__FILE__);

        if (MIOLO::_REQUEST('__EVENTTARGETVALUE') == 'tbBtnContinuar:click') {
            parent::defineFields();
        } else {

            $MIOLO = MIOLO::getInstance();
            $fields[] = $logo = new MImage(null, _M('Escola de Saúde Pública do Ceará', $module), $MIOLO->getUI()->getImage('residency', 'logo_espce_gov.png'));
            $logo->addAttribute("width", 600);
            $logo->addAttribute("height", 90);
            $logo->_addStyle('margin-left', '360px');
            $logo->_addStyle('margin-bottom', '5px');

            $fields[] = MMessage::getStaticMessage('msgInfoRedirec', _M("Digite seu <b>CPF</b> e sua <b>DATA DE NASCIMENTO</b>, para que possamos verificar se você está cadastrado em nossa base de dados."), MMessage::TYPE_INFORMATION);

            $cpfLabel = new MText('cpfLabel', _M('CPF',$module) . ':');
            $cpfLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
            $cpfLabel->setClass('m-caption m-caption-required');
            $cpf = new MTextField('cpf', SAGU::NVL(null, MIOLO::_REQUEST('cpf')), NULL, SAGU::getParameter('BASIC', 'FIELD_MONETARY_SIZE'));
            $cpf->setJsHint(_M('Informe seu CPF',$module));
            $cpf->setAttribute('required', true);
            $validators[]  = new MCPFValidator('cpf', _M('CPF',$module), 'required');
            $hctCpf = new MHContainer('hctPerson', array($cpfLabel, $cpf));
            $hctCpf->setShowLabel(true);
            $bgrFields[] = $hctCpf;

            $dateBirthLabel = new MText('dateBirthLabel', _M('Data de nascimento', $module) . ':');
            $dateBirthLabel->setWidth( SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE') );
            $dateBirthLabel->setClass('m-caption m-caption-required');
            $dateBirth = new MCalendarField('data', null, null, SAGU::getParameter('BASIC', 'FIELD_DATE_SIZE'));
            $dateBirth->setAttribute('required', true);
            $dateBirth->setIsRequired(true);
            $dateBirth->setJsHint(_M('Informe a data de nascimento', $module));
            $validators[] = new MDateDMYValidator('data', _M('Data de nascimento', $module), 'required');
            $validators[] = new MRequiredValidator('data', _M('Data de nascimento', $module));
            $bgrFields[] = new MHContainer('dateBirthCnt', array($dateBirthLabel, $dateBirth));

            $fields[] = new MBaseGroup('bgrGeneralData', _M('Consulta de cadastro', $module), $bgrFields, 'vertical');

            $btnContinuar = new MButton('tbBtnContinuar', _M('Continuar >>'));

            $fields[] = new MDiv(null, array($btnContinuar), null, 'align="center"');

            $this->addFields($fields);
            $this->setValidators($validators);

            SForm::defineFields();
        }
    }
}
?>
