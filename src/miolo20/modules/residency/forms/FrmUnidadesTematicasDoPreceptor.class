<?php
/**
 * <--- Copyright 2005-2011 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Formulário que lista unidades tematicas da pessoa logada
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * \b Maintainers \n
 * Moises Heberle [moises@solis.coop.br]
 * Fabiano Tomasini [fabiano@solis.coop.br]
 *
 * @since
 * Class created on 21/07/2011
 */
class FrmUnidadesTematicasDoPreceptor extends SForm
{
    public function __construct($data)
    {
        $module = SAGU::getFileModule(__FILE__);
        parent::__construct(_M('Ofertas de atividade do módulo do preceptor', $module), null, null);

        // Desabilita a Toolbar
        $this->disableToolbar();
    }

    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);

        // Obtem pessoa
        $mioloUserName = trim($MIOLO->getLogin()->id);
        $busPerson = $MIOLO->getBusiness('basic', 'BusPerson');
        $personData = $busPerson->getPersonByMioloUserName($mioloUserName);

        $preceptor = ResPreceptoria::responsavelNucleoEnfaseReferencia($personData->personId);

        list( $preceptorId,
              $enfase,
              $nucleo,
              $referencia ) = $preceptor;

        //Preceptor das unidades temáticas listadas na grid abaixo.
        $fields[] = new MTextLabel('nomePessoa', $personData->name, _M('Ofertas de atividade do módulo do preceptor',$module));

        $fields[] = new SLookupContainer('unidadeTematicaId', $this->getFormValue('unidadeTematicaId'), array(
            'label' => _M('Atividade do módulo'),
            'module' => 'residency',
            'item' => 'UnidadeTematica'
        ));

        //Nucleos
        $nucleos = ResNucleoProfissional::listRecords();
        $fields[] = new MComboBox('nucleoProfissionalId', $this->GetFormValue('nucleoProfissionalId'), _M("Núcleo profissional", $module), $nucleos);

        $fields[] = new MButton('btnSearch', _M('Buscar'));

        $filters = new stdClass();
        if ( strlen($preceptorId) > 0 )
        {
            $filters->preceptorId = $preceptorId;
            $filters->enfase = $enfase;
            $filters->nucleo = $nucleo;
            $filters->referencia = $referencia;
        }
        else
        {
            $filters->personId = $personData->personId;
        }

        $filters->orderByInicioDescricao = true;
        $filters->unidadeTematicaId = $this->getRequestValue('unidadeTematicaId');
        $filters->nucleoProfissionalId = MIOLO::_REQUEST('nucleoProfissionalId');

        if ( SAGU::userIsFromServices() )
        {
            $filters->encerradas = DB_FALSE;
        }

        $searchData = ResOfertaDeUnidadeTematica::searchGridConsultaPreceptor($filters);
        $gridData = new stdClass();
        $gridData->isFromFrmUnidadesTematicasDoPreceptor = true;

        $fields[] = $grid = $MIOLO->getUI()->getGrid($module, 'GrdOfertaDeUnidadeTematicaPreceptor', $gridData);
        $grid->setData($searchData);

        // Desabilita paginação
        $grid->pageLength = 0;

        //Botão voltar
        $fields[] = new MButton('btnBack', _M('<< Voltar', $module), $MIOLO->getActionURL('services', 'main:'));

        parent::defineFields(array('fields' => $fields, 'validators' => $validators));
    }


    public function showInformation($args)
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);

        $filters = new stdClass();
        $filters->ofertaDeUnidadeTematicaId = $this->getRequestValue('ofertaDeUnidadeTematicaId');

        $ofertaUnidadeTematica = new ResOfertaDeUnidadeTematica($this->getRequestValue('ofertaDeUnidadeTematicaId'));

        $periodos = ResUnidadeTematica::listPeriodos();
        $modulos = ResModulo::listarModulos();
        $options = array(
            _M('Módulo', $module) => $modulos[$ofertaUnidadeTematica->unidadeTematica->moduloId],
            _M('Unidade temática', $module) => $ofertaUnidadeTematica->unidadeTematica->descricao,
            _M('Período', $module) => $periodos[$ofertaUnidadeTematica->unidadeTematica->periodo],
            _M('Carga horária', $module) => $ofertaUnidadeTematica->cargahoraria . 'h',
            _M('Início', $module) => $ofertaUnidadeTematica->inicio,
            _M('Fim', $module) => $ofertaUnidadeTematica->fim
        );
        $fields[] = new SInformationField(array(
            'value' => $options,
            'columns' => 1,
        ));

        // Get grid
        $fields[] = new MSeparator();

        $filters = new stdClass();
        $filters->ofertaDeUnidadeTematicaId = $this->getRequestValue('ofertaDeUnidadeTematicaId');

        $grdData = new stdClass();
        $grdData->readOnly = true;
        $grid = $MIOLO->getUI()->getGrid($module, 'GrdTemaSearch', $grdData);
        $grid->setData(ResTema::searchGrid($filters));
        $divGrid = new MDiv('divGridTemas', $grid);
        $divGrid->addBoxStyle('width', '100%');
        $fields[] = new MBaseGroup('baseGroupTemas', _M('Temas',$module), array($divGrid));


        $mioloUserName = trim($MIOLO->getLogin()->id);
        $busPerson = $MIOLO->getBusiness('basic', 'BusPerson');
        $personData = $busPerson->getPersonByMioloUserName($mioloUserName);
        $preceptor = ResPreceptoria::responsavelNucleoEnfaseReferencia($personData->personId);

        list($preceptorId) = $preceptor;


        $cargaHorariaDosTiposDaUnidade = $ofertaUnidadeTematica->retornaDetalhesDaCargaHorariaDaOfertaDaUnidade();
        $grdData = new stdClass();
        $grdData->readOnly = true;
        $grid = $MIOLO->getUI()->getGrid($module, 'GrdOfertaUnidadeTematicaTipos', $grdData);
        $grid->showExport  = false;
        $grid->actions = array();
        $grid->setData($cargaHorariaDosTiposDaUnidade);
        $divGrid = new MDiv('divGridModulos', $grid);
        $divGrid->addBoxStyle('width', '100%');
        $fields[] = new MBaseGroup('baseGroupModulos', _M('Detalhes da carga horária total da atividade (tipos)',$module), array($divGrid));

        $nucleos = ResUnidadeTematica::obterNucleosPorUnidade($ofertaUnidadeTematica->unidadeTematica->unidadeTematicaId);
        $grdData = new stdClass();
        $grdData->readOnly = true;
        $grid = $MIOLO->getUI()->getGrid($module, 'GrdNucleoProfissionalSearch', $grdData);
        $grid->showExport  = false;
        $grid->actions = array();
        $grid->pageLength = 0;
        $grid->setData($nucleos);
        $divGrid = new MDiv('divGridNucleos', $grid);
        $divGrid->addBoxStyle('width', '100%');
        $fields[] = new MBaseGroup('baseGroupNucleos', _M('Núcleos profissionais',$module), array($divGrid));

        $enfases = ResUnidadeTematica::obterEnfasesComComponentePorUnidade($ofertaUnidadeTematica->unidadeTematica->unidadeTematicaId);
        $grdData = new stdClass();
        $grdData->readOnly = true;
        $grid = $MIOLO->getUI()->getGrid($module, 'GrdEnfaseSearch', $grdData);
        $grid->showExport  = false;
        $grid->pageLength = 0;
        $grid->actions = array();
        $grid->setData($enfases);
        $divGrid = new MDiv('divGridEnfases', $grid);
        $divGrid->addBoxStyle('width', '100%');
        $fields[] = new MBaseGroup('baseGroupEnfases', _M('Ênfases',$module), array($divGrid));

        MPopup::show('divPopup', $fields, _M('Mais informações', $module));
    }
}
?>