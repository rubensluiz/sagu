<?php
/**
 * <--- Copyright 2005-2011 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * @author Moises Heberle [moises@solis.com.br]
 *
 * @since
 * Class created on 04/03/2015
 *
 */
class FrmSubStatus extends SManagementForm
{
    public function __construct()
    {
        $MIOLO = MIOLO::getInstance();   
        $MIOLO->uses('ui/controls/msubdetail.class');
        
        parent::__construct(new ResSubStatus(), array('substatusid'));
    }

    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $action = MIOLO::getCurrentAction();
        $function = MIOLO::_REQUEST('function');

        $fields[] = new MTextField('descricao', null, _M('Descrição'), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));

        $fields[] = new MSelection('status', null, _M('Status'), ResSubStatus::listarStatusParaCadastro());

        //
        // subdetail
        //
        $subFields = array();
        $subFields[] = new SHiddenField('substatusmotivoid');
        $subFields[] = new MTextField('descricaoSub', null, _M('Descrição'), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $subValidators[] = new MRequiredValidator('descricaoSub', _M('Descrição'));
        
        $cols[] = new MGridColumn(_M('ID'), 'left', true, '', false, 'substatusmotivoid');
        $cols[] = new MGridColumn(_M('Descrição'), 'left', true, '', true, 'descricaoSub');
        
        $sub = $fields[] = new MSubDetail('subMotivos', _M('Motivo'), $cols, $subFields);
        $sub->setValidators($subValidators);

        // popular subdetail
        $subStatusId = MIOLO::_REQUEST('substatusid');
        
        if ( $this->isSubDetailEditMode() && ( strlen($subStatusId) > 0 ) )
        {
            $dados = ResSubStatusMotivo::buscarPeloSubStatusId($subStatusId);
            
            foreach ( $dados as $key => $row )
            {
                $dados[$key]->descricaoSub = $row->descricao;
            }
            
            $lista = SAGU::convertSTypeToSubDetail($cols, $dados);
            $sub->setData( $lista );
        }
        else if ( $this->isInsertFunction() && !$this->estaEmUmEvento() )
        {
            $sub->clearData();
        }

        parent::defineFields($fields, $validators);
    }
    
    public function beforeSave(ResSubStatus $type)
    {
        $type->motivosSub = (array) MSubDetail::getData('subMotivos');
        
        return $type;
    }
}