<?php
/**
 * <--- Copyright 2005-2011 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Formulário de cadastro/edição/exclusão de unidade temática (Passo 1)
 *
 * @author Arthur Lehdermann [arthur@solis.coop.br]
 *
 * \b Maintainers \n
 * Arthur Lehdermann [arthur@solis.coop.br]
 *
 * @since
 * Class created on 16/07/2011
 */
class FrmUnidadeTematicaDadosGerais extends SStepByStepForm
{
    /**
     * Construtor
     *
     * @param type $steps
     */
    public function __construct($steps)
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);

        $unidadeTematicaId = MIOLO::_REQUEST('unidadeTematicaId');

        parent::__construct((strlen($unidadeTematicaId)>0 ? _M('Dados gerais',$module) : null ), $steps, __CLASS__);

        // Desabilita o botão salvar
        $this->toolbar->disableButton(MToolbar::BUTTON_SAVE);
    }

    /**
     * Monta o formulário
     */
    public function CreateFields()
    {
        $MIOLO = MIOLO::getInstance();

        // Obtém os dados
        $data = $this->getStepData();

        // Primeiro acesso (limpa os dados)
        if ( !$MIOLO->page->isPostBack() && ($this->isFirstAccess()) )
        {
            // Limpa os dados
            $data = null;

            // Limpa a MSubDetail
            MSubDetail::clearData('temas');

            // Limpa os dados das grids com coluna selecionável
            $MIOLO->session->set('nucleosProfissionais', null);
            $MIOLO->session->set('enfases', null);
        }

        // Cria os campos
        $formulario = FrmUnidadeTematica::CreateFieldsPasso1($data);
        $this->setFields($formulario->camposDoFormulario);
        $this->SetValidators($formulario->validadoresDoFormulario);
    }

    /**
     * Verifica se a frequência é => 0 e <= 100
     *
     * @param type $args
     */
    public function nextStepButton_click($args)
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);

        // Obtém a frequência mínima
        $frequenciaMinima = (float)MIOLO::_REQUEST('frequenciaMinima');
        // Verifica se está entre 0 e 100
        if ( ($frequenciaMinima >= 0) && ($frequenciaMinima <= 100) )
        {
            parent::nextStepButton_click($args);
        }
        else
        {
            $msg = _M('A frequência mínima deve ser entre 0 e 100.', $module);
            $this->addAlert($msg);
        }
    }
}
?>