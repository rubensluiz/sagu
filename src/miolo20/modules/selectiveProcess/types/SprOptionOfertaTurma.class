<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Class definition for database entities
 *
 * @author Luís Felipe Wermann [luis_felipe@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Luís Felipe Wermann [luis_felipe@solis.com.br]
 *
 * @since
 * Class created on 17/01/2011
 *
 * */
class SprOptionOfertaTurma extends SType {

//    protected $_tableName = 'spr.optionofertaturma';

    protected $_tableName = 'sproptionofertaturma';
    protected $_utilizaNovoPadrao = true;
    public $optionofertaturmaid;
    public $ofertaturmaid;
    public $unitid;
    public $centerid;
    public $optionid;
    public $codigo;

    /*
     * Funçao que obtem a optionOfertaTurmaId (unica) da opcao no processo seletivo.
     */

    public function obterOptionOfertaTurmaId($selectiveProcessId)
    {
        $sql = "SELECT optionid 
                  FROM sproptionofertaturma
                 WHERE optionid
                    IN (SELECT optionid
                          FROM spr.option
                         WHERE selectiveprocessid = ? )";

        $params[] = $selectiveProcessId;

        $optionOfertaTurmaId = SDatabase::query($sql, $params);

        return $optionOfertaTurmaId;
    }

    /*
     * Funcao que sobrescreve save original.
     * Neste caso n?o existe update, uma vez cadastrada a opcao de turma
     * nao se faz necessario cadastrar novamente.
     */

    public function save($optTurma)
    {
        if (strlen($optTurma->optionOfertaTurmaId) <= 0)
        {
            $sql = "INSERT INTO sproptionofertaturma
                                (optionId,
                                 unitId,
                                 centerId,
                                 ofertaTurmaId,
                                 codigo)
                         VALUES (? , ? , ? , ? , ?)";
            $params[] = $optTurma->optionId;
            $params[] = $optTurma->unitId;
            $params[] = $optTurma->centerId;
            $params[] = $optTurma->ofertaTurmaId;
            $params[] = $optTurma->codigo;

            SDatabase::execute($sql, $params);
        }
    }

    /*
     * Funcao que obtem a descricao da opçao de turma.
     */

    public function obterDescricaoOpcao($optionId)
    {
        $sql = "SELECT description
                FROM spr.option
                WHERE optionId = ? ";
        $params[] = $optionId;

        $return = SDatabase::query($sql, $params);

        return $return[0][0];
    }

    /*
     * Funçao que retorna o ofertaturmaid e o código da mesma.
     */

    public function obterCodigoIdOfertaTurma($optionId)
    {
        $sql = "SELECT ofertaTurmaId,
                       codigo 
                  FROM sproptionofertaturma
                 WHERE optionId = ? ";
        $params[] = $optionId;

        $return = SDatabase::query($sql, $params);

        return $return[0];
    }

    /*
     * Retorna ofertacursoid a partir da ofertadeturma
     */

    public function obterOfertaCursoId($ofertaTurmaId)
    {
        $sql = "SELECT A.ofertacursoid
                  FROM acpofertaturma A
            INNER JOIN sproptionofertaturma B
                       ON (A.ofertaturmaid = B.ofertaturmaid)
                 WHERE B.ofertaturmaid = ? ";
    
        $params[] = $ofertaTurmaId;
        
        $return = SDatabase::query($sql, $params);
        
        return $return[0][0];
    }

}

?>