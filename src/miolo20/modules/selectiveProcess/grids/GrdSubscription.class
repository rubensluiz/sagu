<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Moises Heberle [moises@solis.coop.br]
 * Luís Felipe Wermann [luis_felipe@solis.com.br]
 *
 * @since
 * Class created on 06/01/2011
 *
 * */
class GrdSubscription extends SGrid
{
    
    /**
     * Class constructor
     * */
    public function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $columns = array(
            new MGridColumn(_M('Inscrição', $module), 'right', true, null, true, null, true),
            new MGridColumn(_M('Ordem de inscrição', $module), 'right', true, null, true, null, true),
            new MGridColumn(_M('Código do processo seletivo', $module), 'right', true, null, true, null, true),
            new MGridColumn(_M('Processo seletivo', $module), 'left', true, null, true, null, true),
            new MGridColumn(_M('Código da pessoa', $module), 'right', true, null, true, null, true),
            new MGridColumn(_M('Pessoa', $module), 'left', true, null, true, null, true),
            new MGridColumn(_M('Opções', $module), 'left', true, null, true, null, true),            
            new MGridColumn(_M('Data de nascimento', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('Sexo', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('Nome', $module), 'right', true, null, false, null, true),
            new MGridColumn(_M('Logadouro', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('Bairro', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('E-mail', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('CPF', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('Telefone residencial', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('Telefone profissional', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('Celular', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('RG', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('Org?o RG', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('Empregador', $module), 'left', true, null, false, null, true),
            new MGridColumn(_M('Módulo de destino do processo seletivo', $module), 'left', true, null, true, SprSelectiveProcess::destinationModuleOptions(), true),
            new MGridColumn(_M('Documentos', $module), 'left', true, null, true, null, true),
        );

        $primaryKey = array( 'subscriptionId' => '%0%' );

        parent::__construct($filters, $columns, __CLASS__, $primaryKey);
        
        $this->setRowMethod('GrdSubscription', 'myRowMethod');
        
        // Item 3 - Ajuste de pontuação curricular
        $optsLoan = array( 'subscriptionId' => '%0%',
                           'return_to' => urlencode($MIOLO->getCurrentURL()),
                           'function' => SForm::FUNCTION_UPDATE );
        $hrefLoan = $MIOLO->getActionURL( $module, 'main:process:subscriptionEvaluationOptionAdjustment', null, $optsLoan );
        $this->addActionIcon( _M('Ajuste de pontuação curricular', $module ), 'evaluationDefinition-16x16-on.png', $hrefLoan );
    }
    
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        //Habilita ou desabilita 
        if ( $row[13] == SprSelectiveProcess::DEST_MODULE_RESIDENCY )
        {
            // Habilita ajuste de pontuação curricular
            $actions[2]->enabled = true;
            $actions[2]->value = 'evaluationDefinition-16x16-on.png';
            $actions[2]->alt = _M('Ajustar pontuação curricular', $module);
        }
        else
        {
            // Desabilita ajuste de pontuação curricular
            $actions[2]->enabled = false;
            $actions[2]->value = 'evaluationDefinition-16x16-off.png';
            $actions[2]->alt = _M('Ajustar pontuação curricular', $module);
        }
        
        //documentos
        $sprSubscriptionDocument = new SprSubscriptionDocument();
        $filters = new stdClass();
        $filters->subscriptionId = $row[0];
        $documents = $sprSubscriptionDocument->search($filters);
        $docs = array();
        
        foreach($documents as $document)
        {
            $busFile = new BusinessBasicBusFile();
            $docs[] = '<a href="'.$busFile->getUrl($document->file->fileId, array('permission'=>true)).'">'.$document->file->uploadFileName.'</a>';
        }

        $columns[21]->control[$i]->value = implode('&nbsp;&nbsp;',$docs);
        
    }
    
}

?>