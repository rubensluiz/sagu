<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Class definition for database entities
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * @since
 * Class created on 15/12/2010
 *
 **/

/**
 * Academic database classes
 */

$MIOLO->uses('types.class', 'basic');

class sprInscriptions extends BasLog
{
    public $inscriptionId;
    public $selectiveProcessId;
    public $personId;
    public $personName;
    public $email;
    public $rgNumber;
    public $organ;
    public $cpf;
    public $countryIdBirth;
    public $dateBirth;
    public $locationTypeId;
    public $location;
    public $number;
    public $complement;
    public $neighborhood;
    public $cityId;
    public $zipCode;
    public $residentialPhone;
    public $workPhone;
    public $cellPhone;
    public $maritalStatusId;
    public $sex;
    public $fatherId;
    public $motherId;
    public $specialNecessityId;
    public $specialNecessityDescription;
    public $ethnicOriginId;
    public $isHighSchool = DB_TRUE;
    public $institutionIdHs;
    public $cityIdHs;
    public $courseId;
    public $courseVersion;
    public $courseName;
    public $turnId;
    public $unitId;
    public $cityExam;
    public $languageId;
    public $isInternet = DB_FALSE;
    public $dateInscription;
    public $inscriptionStatusId;
    public $statusDescription;
    public $inscriptionInvoiceId;
    public $selectiveProcessTypeId;
    public $numberInscription;
    public $sentEmail;

    public function __construct()
    {
        $this->inscriptionStatusId = SAGU::getParameter('BASIC', 'INSCRIPTION_STATUS_INSCRIPTION');
    }
}

?>
