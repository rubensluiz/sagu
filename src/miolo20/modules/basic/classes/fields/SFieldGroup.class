<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Classe que representa um conjunto de campos, para serem
 *  exibidos em diversos lugares do sistema mais de uma vez, evitando
 *  o duplicamento de codigo.
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class created on 12/05/2011
 *
 **/

class SFieldGroup extends MHContainer
{
    protected $objects;
    protected $options = array();
    protected $fields;
    protected $baseGroupField;

    /**
     *
     * @param array $options Opcoes
     * <br><b>title</b> (string) Titulo que aparece no MBaseGroup
     * <br><b>baseGroup</b> (boolean) TRUE/FALSE para encobrir os campos em um MBaseGroup (padrao: TRUE)
     * <br><b>data</b> (stdClass) Valor dos campos (geralmente um get() ou populate() de business/type)
     */
    public function   __construct($options = array())
    {
        //Defaults
        $this->options = array_merge(array(
            'title' => null,
            'baseGroup' => true,
            'data' => new stdClass(),
        ), $options);

        parent::__construct('hct' . rand());

        $this->baseGroupField = new MBaseGroup('bgr' . rand(), $this->options['title']);
    }

    public function generate($fields = array())
    {
        if ( !$fields )
        {
            $fields = $this->fields;
        }

        if ( $this->options['baseGroup'] )
        {
            $this->baseGroupField->setControls($fields);
            $fields = array($this->baseGroupField);
        }

        $div = new MDiv('div' . rand(), $fields);
        return $div->generate();
    }


    /**
     * Obtem o objeto MControl do id passado.
     *
     * @param string $id
     * @return object MControl
     */
    public function getFieldById($id)
    {
        return $this->objects[$id];
    }

    /**
     * Obtem objeto MBaseGroup
     *
     * @return MBaseGroup
     */
    public function getBaseGroupField()
    {
        return $this->baseGroupField;
    }
}
?>
