<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Classe que renderiza uma foto em um form, a partir de um
 *   fileId passado como referencia.
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class created on 12/05/2011
 *
 **/

class SPersonPhotoDisplayField extends SFieldGroup
{
    /**
     * @param array $options Opcoes
     * <br><b>fileId</b> (int) Id do arquivo na basFile
     */
    public function  __construct($options = array())
    {
        $module = SAGU::getFileModule(__FILE__);

        //Defaults
        $options = array_merge(array(
            'title' => _M('Foto', $module),
            'fileId' => null,
        ), $options);

        parent::__construct($options);
    }


    public function  generate()
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);

        //Caso o fileId passado seja NULO (a pessoa pode nao ter foto), retorna vazio
        if ( !$this->options['fileId'] )
        {
            return '';
        }

        //Busca informacoes da foto
        $busFile = new BusinessBasicBusFile();
        $path = $busFile->getUrl($this->options['fileId'], array('permission' => true));

        $width = $this->options['width'] ? $this->options['width'] : SAGU::getParameter('BASIC', 'PHOTO_WIDTH');
        $height = $this->options['height'] ? $this->options['height'] : SAGU::getParameter('BASIC', 'PHOTO_HEIGHT');
        $photo = new MImage('personFile', NULL, $path, 'width="' . (int) $width . '" height="' . (int) $height . '"');

        $fields = array();
        if ( $this->options['baseGroup'] )
        {
            $fields[] = $bgr = new MBaseGroup('personFileBorder', _M('Foto', $module), array($photo), 'horizontal');
            $bgr->setWidth((int) $width);
            $bgr->height = (int) $height;

            $this->options['baseGroup'] = false; //Nao gera o baseGroup no SFieldGroup
        }
        else
        {
            $fields[] = $photo;
        }

        return parent::generate($fields);
    }
}
?>

