<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file generate fields to lookups
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 24/03/2006
 *
 **/

/**
 * Class to generate fields
 **/
class fields
{

    /**
     * Unit MComboField
     *
     * @param $value (string): Default value
     *
     * @return (object): MComboField
     *
     **/
    public /*static*/ function unit($value=NULL)
    {
        global $MIOLO;
        $module   = MIOLO::_request('lmodule');
        $business = new BusinessBasicBusUnit();
        return new MComboBox('unitId', $value, _M('Unidade', $module), $business->listUnit());
    }

    /**
     * Turn MComboField
     *
     * @param $value (string): Default value
     *
     * @return (object): MComboField
     *
     **/
    public /*static*/ function turn($value=NULL)
    {
        global $MIOLO;
        $module   = MIOLO::_request('lmodule');
        $business = new BusinessBasicBusTurn();
        return new MComboBox('turnId', $value, _M('Turno', $module), $business->listTurn());
    }


    /**
     * Country MComboField
     *
     * @param $value (string): Default value
     *
     * @return (object): MComboField
     *
     **/
    public /*static*/ function country($value=NULL)
    {
        global $MIOLO;
        $module   = MIOLO::_request('lmodule');
        $business = new BusinessBasicBusCountry();
        return new MComboBox('countryId', $value, _M('País', $module), $business->listCountry());
    }


    /**
     * Week day MComboField
     *
     * @param $value (string): Default value
     *
     * @return (object): MComboField
     *
     **/
    public /*static*/ function weekDay($value=NULL)
    {
        global $MIOLO;
        $module   = MIOLO::_request('lmodule');
        $business = new BusinessBasicBusWeekDay();
        return new MComboBox('weekDayId', $value, _M('Dia da semana', $module), $business->listWeekDay());
    }

    /**
     * Language MComboField
     *
     * @param $value (string): Default value
     *
     * @return (object): MComboField
     *
     **/
    public /*static*/ function legalLegalPersonType($value=NULL)
    {
        global $MIOLO;
        $module   = MIOLO::_request('lmodule');
        $business = new BusinessBasicBusLegalPersonType();
        return new MComboBox('legalPersonTypeId', $value, _M('Código do tipo de pessoa jurídica', $module), $business->listLegalPersonType());
    }
    
    
    /**
     * Language MComboField
     *
     * @param $value (string): Default value
     *
     * @return (object): MComboField
     *
     **/
    public static function formationLevel($value=NULL)
    {
        global $MIOLO;
        $module   = MIOLO::_request('lmodule');
        $business = new BusinessAcademicBusFormationLevel();
        return new MComboBox('formationLevelId', $value, _M('Nível de formação', $module), $business->listFormationLevel());
    }

}
