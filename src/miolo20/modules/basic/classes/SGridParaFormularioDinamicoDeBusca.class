<?php

/**
 * <--- Copyright 2005-2015 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Classe que adapta as funções básicas da SGrid para correto functionamento desta
 * nos formulários dinâmicos de busca
 *
 * @author Luís Augusto Weber Mercado [luis_augusto@solis.com.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Luís Augusto Weber Mercado [luis_augusto@solis.com.br]
 *
 * @since
 * Classe criada em 10/06/2015
 */
class SGridParaFormularioDinamicoDeBusca extends SGrid
{
    
    /**
     * OVERRIDE do método da classe pai
     * 
     * Cria as opções da opção deletar da grid.
     * 
     * @see SGrid::createOptsUpdate()
     */
    public function createOptsDelete($pkey = array())
    {
        $opcoesPai = parent::createOptsDelete($pkey);
        $opcoes = array();
        $opcoes["type"] = MIOLO::_REQUEST("type");
        
        return array_merge($opcoes, $opcoesPai);
    }
    
    /**
     * OVERRIDE do método da classe pai
     * 
     * Cria as opções da opção editar da grid, adapatado para os formulários dinâmicos
     * 
     * @see SGrid::createOptsUpdate()
     */
    public function createOptsUpdate($pkey = array())
    {
        $opcoesPai = parent::createOptsUpdate($pkey);
        $opcoes = array();
        $opcoes["type"] = MIOLO::_REQUEST("type");
        
        return array_merge($opcoes, $opcoesPai);
    }

}
