<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Gerencia importacao de pessoas para o SAGU
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class created on 11/06/2012
 *
 **/
class sCSVPessoaProfessor extends sCSVPessoa
{
    public $filterColumn = 'professor';
    
    public function getTitle()
    {
        return 'Pessoas - Professor';
    }
    
    public function __construct()
    {        
        // Sobrescreve validacoes para PROFESSOR
        $this->colDefs = array_merge($this->colDefs, array(
            'datainicialcontrato' => array( 'Data inicial contrato', true ),
            'datafinalcontrato' => array( 'Data final contrato', false ),
            'workload' => array( 'Carga horaria', true ),
            'teachworkload' => array( 'Carga horaria ensino', false ),
            'timesheet' => array( 'Cartao ponto professor', false ),
            'descricaounidade' => array( 'Descricao unidade', false ),
            'cepprofessor' => array( 'CEP professor', false ),
            'cidadeprofessor' => array( 'Cidade professor', false ),
            'ufprofessor' => array( 'UF professor', false ),
            'paisprofessor' => array( 'Pais professor', false ),
            'descricaosetorprofessor' => array( 'Setor do professor', false ),
            'emailsetorprofessor' => array( 'E-mail do setor', false ),
            'horarioprofessor' => array( 'Horario professor', false ),
            'tarefasprofessor' => array( 'Tarefas professor', false ),
        ));

        parent::__construct();
    }
    
    public function importLine2($data)
    {
        $data = parent::importLine2($data);

        if ( $data )
        {
            $data->beginDate = $data->datainicialcontrato;
            $data->endDate = $data->datafinalcontrato;
            $data->workLoad = $data->workload;
            $data->teachWorkLoad = $data->teachworkload;
            $data->timeSheet = $data->timesheet;
            $data->sectorId = $this->obterSetor($data->descricaosetorprofessor, $data->emailsetorprofessor);
            $data->cityId = $cityId = $this->obterCidade($data->cepprofessor, $data->cidadeprofessor, $data->ufprofessor, $data->paisprofessor);
//            $data->unitId = $this->obterUnidade($data->descricaounidade, $cityId);
            
            $ok = $this->busPhysicalPersonProfessor->insertOrUpdatePhysicalPersonProfessor($data);
        }
    }
}
?>
