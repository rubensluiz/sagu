<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *  
 * @author Luís Augusto Weber Mercado [luis_augusto@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Luís Augusto Weber Mercado [luis_augusto@solis.com.br]
 *
 * @since
 * Class created on 08/08/2014
 *
 **/

class SVisualCurriculum extends MDiv
{
    
    /**
     * Mostra a matriz curricular na tela com as informações recebidas.
     * 
     * @param String $name Nome a ser dado ao objeto que exibe a matriz.
     * @param String $disciplinTitle Nome da disciplina que será exibido no cabeçalho. Preferencialmente, string formatada em utf8.
     * @param Array $dados Dados contendo as informações a serem apresentadas na matriz.
     * @param Boolean $dividir Dividir ou não em linhas a visualização por grupos.
     */
    public static function show($name, $disciplinTitle, $dados, $dividir = false)
    {
        $MIOLO = MIOLO::getInstance();
        $mVersion = MIOLO::getVersion();
        $module = MIOLO::getCurrentModule();
        
        $data = json_encode($dados);
        $dividir = json_encode($dividir);
        
        $js = "
                var interval = setInterval(function()
                {
                    if(document.getElementById('divVisualizaMatrizParent') !== null)
                    {
                        clearInterval(interval);

                        VisualizacaoMatriz.montaEstrutura(eval({$data}), document.getElementById('divVisualizaMatrizParent'), document.getElementById('tableMatrizCurricular'), document.getElementById('relationCanvas'), {$dividir});
                    }

                }, 10);

            ";
        
        // Aqui há uma divisão de fluxo pois deve haver a adequação do comportamento deste com o fim de manter o funcionamento tanto no Miolo 20 quanto no 26
        if($mVersion == 2)
        {
            $MIOLO->page->addScript('visualizacaoMatriz.js', 'basic');
                        
            MPopup::show($name, self::getFields(), _M('Vizualização das disciplinas do curso: ', $module) . utf8_decode($disciplinTitle), true);
        
            $MIOLO->page->addAjaxJSCode($js);
            
        }
        else
        {
            $MIOLO->page->addScript('visualizacaoMatriz.js', 'portal');
            
            $dialog = new MDialog($name, _M('Vizualização das disciplinas do curso: ', $module) . utf8_decode($disciplinTitle), self::getFields());
            $dialog->show();
            
            $MIOLO->page->onload($js);
            
        }
                        
    }
    
    /**
     * Retorna os campos que formam a estrutura base da matriz curricular.
     * 
     * @return Array Fields a serem adicionados no recipiente
     */
    private static function getFields()
    {
        $divCanvas = '<canvas id="relationCanvas"></canvas>';
        $divMatriz = '<table id="tableMatrizCurricular"></table>';
        
        $divParent = new MDiv('divVisualizaMatrizParent', array($divCanvas, $divMatriz));
        
        return array($divParent);
        
    }
    
}
?>