<?php

/**
 * <--- Copyright 2005-2011 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Class definition for database entities
 *
 * @author Nataniel Ingor da Silva [nataniel@solis.coop.br]
 *
 * \b Maintainers: \n
 * Nataniel [augusto@solis.coop.br]
 *
 * @since
 * Class created on 12/11/2012
 *
 */
class BasHistoricoFerias extends SType
{
     protected $_associations = array(
        'funcionario' => array(
            'mode' => 'one',
            'typeClass' => 'BasEmployee',
            'joinColumn' => 'personId',
        )
    );
     
    /**
     * @AttributeType integer
     * 
     */
    protected $historicoFeriasId;
    /**
     * @AttributeType character varying
     * 
     */
    protected $personId;
    /**
     * @AttributeType date
     * 
     */
    protected $data;
    /**
     * @AttributeType date
     * 
     */
    protected $inicioAquisicao;
    /**
     * @AttributeType date
     * 
     */
    protected $fimAquisicao;
    /**
     * @AttributeType date
     * 
     */
    protected $inicioConcessao;
    /**
     * @AttributeType date
     * 
     */
    protected $fimConcessao;
    /**
     * @AttributeType text
     * 
     */
    protected $observacao;
    /**
     * @AttributeType character varying
     * 
     */
    protected $funcionario;
    
    /**
     * 
     * @param type $filters 
     */
    public function search($filters)
    {
        $msql = new MSQL();
        $msql->setColumns("historicoferiasid,
                           TO_CHAR(data, getParameter('BASIC', 'MASK_DATE')) AS data,
                           TO_CHAR(inicioaquisicao, getParameter('BASIC', 'MASK_DATE')) AS inicioaquisicao,
                           TO_CHAR(fimaquisicao, getParameter('BASIC', 'MASK_DATE')) AS fimaquisicao,
                           TO_CHAR(inicioconcessao, getParameter('BASIC', 'MASK_DATE')) AS inicioconcessao,
                           TO_CHAR(fimconcessao, getParameter('BASIC', 'MASK_DATE')) AS fimconcessao,
                           observacao");   
        $msql->setTables("bashistoricoferias");
                
        if ( strlen($filters->personId) > 0 )
        {
            $msql->setWhereAnd('personid = ?');
            $parameter[] = $filters->personId;
        }
        
        $msql->setOrderBy("data");
        $sql = $msql->select($parameter);
        
        $result = SDatabase::query($sql);
        $listFerias = array();
        
        foreach($result as $ferias)
        {
            $dataFerias = new stdClass();
            $dataFerias->historicoFeriasId = $ferias[0];
            $dataFerias->dataSub           = $ferias[1];
            $dataFerias->inicioAquisicao   = $ferias[2];
            $dataFerias->fimAquisicao      = $ferias[3];
            $dataFerias->inicioConcessao   = $ferias[4];
            $dataFerias->fimConcessao      = $ferias[5];
            $dataFerias->observacao        = $ferias[6];
            
            $listFerias[] = $dataFerias;
        }
        
        return $listFerias;
        
    }
    
    public function setData($data)
    {
        $this->personId = $data->personId;
        $this->data = $data->data;
        $this->inicioAquisicao = $data->inicioaquisicao;
        $this->fimAquisicao = $data->fimaquisicao;
        $this->inicioConcessao = $data->inicioconcessao;
        $this->fimConcessao = $data->fimconcessao;
        $this->observacao = $data->observacao;
    }
    
}

?> 
