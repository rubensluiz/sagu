<?php

/**
 * <--- Copyright 2005-2012 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Classe de auditoria.
 *
 * @author Nataniel I. da Silva [nataniel@solis.com.br]
 *
 * @since
 * Class created on 05/06/2015
 * 
 */

class BasHistoricoAtualizacao extends SType
{
    public $historicoAtualizacaoId;
    public $versaoSagu;
    public $versaoGnuteca;
    
    /**
     * Registra a versão atual do SAGU e GNUTECA
     * 
     */
    public static function registraVersoes()
    {
        $MIOLO = MIOLO::getInstance();
        
        $sagu = trim(file_get_contents($MIOLO->getModulePath('basic', 'VERSION')));
        $gnuteca = trim(file_get_contents($MIOLO->GetModulePath('/../../miolo25/modules/gnuteca3', 'VERSION')));
        
        $args = array($sagu, $gnuteca);
        if ( self::verificaVersoes($args) == DB_FALSE )
        {
            $basHistoricoAtualizacao = new BasHistoricoAtualizacao();
            $basHistoricoAtualizacao->versaoSagu = $sagu;
            $basHistoricoAtualizacao->versaoGnuteca = $gnuteca;
            $basHistoricoAtualizacao->save();
        }
    }
    
    /**
     * Verifica se já existe um registro para as versões do SAGU e GNUTECA
     * 
     * @param array $args
     * @return boolean 't' or 'f'
     */
    public static function verificaVersoes($args)
    {
        $sql = " SELECT COUNT(*) > 0
                   FROM basHistoricoAtualizacao 
                  WHERE versaoSagu like ? 
                    AND versaoGnuteca like ? ";
        
        $result = SDatabase::query($sql, $args);
        
        return $result[0][0] ? $result[0][0] : DB_FALSE;
    }
}
