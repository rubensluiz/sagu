<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * E-mail form
 *
 * @author Hélio Henrique Rodrigues Guimarães [helio@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 04/08/2006
 *
 **/

/**
 * Form to manipulate a curricular component
 **/
class FrmEmail extends SManagementForm
{
    /**
     * Class constructor
     **/
    public function __construct()
    {
        parent::__construct(new BasEmail(), array('emailId'), 'BusEmail');
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        if ( in_array($function, array(SForm::FUNCTION_UPDATE, SForm::FUNCTION_DELETE)) )
        {
            $emailId      = MIOLO::_request('emailId');

            $business = new BusinessBasicBusEmail();
            $data     = $business->getEmail($emailId);

            $data1->emailId = $emailId;

            $fields[] = new MHiddenField('emailId', $emailId);
            $fields[] = new MTextLabel('emailId', $emailId, _M('Código', $module));
        }

        $description = new MTextField('description', $this->getFormValue('description', $data->description), _M('Descrição',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $description->setJsHint(_M('Informe a descrição do e-mail',$module));
        $fields[] = $description;
        $validators[] = new MRequiredValidator('description');

        $from = new MTextField('from', $this->getFormValue('from', $data->from), _M('De',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $from->setJsHint(_M('Informe o e-mail de origem',$module));
        $fields[] = $from;
        $validators[] = new MRequiredValidator('from');

        $bcc = new MTextField('bcc', $this->getFormValue('bcc', $data->bcc), _M('Cco',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $bcc->setJsHint(_M('Informe o email oculto',$module));
        $fields[] = $bcc;

        $subject = new MTextField('subject', $this->getFormValue('subject', $data->subject), _M('Assunto',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $subject->setJsHint(_M('Informe o assunto',$module));
        $fields[] = $subject;
        $validators[] = new MRequiredValidator('subject');

        // Gerar link para os parâmetros na Wiki
        $linkCorpo = new MLink('lnkManuais', _M("AQUI", $module), 'http://manuais.solis.com.br/index.php/B%C3%A1sico::Configura%C3%A7%C3%A3o::E-mail', null, '_blank');
        
        $body = new MMultiLineField('body', $this->getFormValue('body', $data->body), _M('Corpo',$module), 40, 8, 60, _M("Clique " . $linkCorpo->generate() . " para verificar as variáveis disponíveis para uso."));
        $body->setJsHint(_M('Digite a mensagem',$module));
        $fields[] = $body;
        $validators[] = new MRequiredValidator('body');

        parent::defineFields($fields, $validators, $data);
    }
}
?>
