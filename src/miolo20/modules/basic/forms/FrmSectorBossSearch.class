<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 *
 * This file handles the connection and actions for basSectorBoss table
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 02/09/2005
 *
 **/

/**
 * Form to search the basSectorBoss table
 */
class FrmSectorBossSearch extends SSearchForm
{
    /**
     * Class constructor
     */
    public function __construct($data)
    {
        parent::__construct(_M('Localizar', 'basic'), new BasSectorBoss(), array('sectorid'), 'BusSectorBoss');
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        //Field sector
        $sectorLabel = new MText('sectorLabel', _M('Setor',$module).':');
        $sectorLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $sectorIdS = new MLookupTextField('sectorIdS', $this->sectorIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_LOOKUPFIELD_SIZE'), null, null, 'sectorDescriptionS', 'basic', 'Sector', null, null, true);
        $sectorIdS->setJsHint(_M('Informe o código do setor',$module));
        $validators[] = new MIntegerValidator('sectorIdS', _M('Setor',$module), 'optional');
        $sectorDescriptionS = new MTextField('sectorDescriptionS', $this->sectorDescriptionS->value, '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $sectorDescriptionS->setJsHint(_M('Descrição do setor',$module));
        $hctSetor = new MHContainer('hctSetor', array($sectorLabel, $sectorIdS, $sectorDescriptionS));
        $hctSetor->setShowLabel(true);
        $fields[]   = $hctSetor;

        //Field boss
        $bossLabel = new MText('bossLabel', _M('Responsável',$module) . ':');
        $bossLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $bossIdS   = new MLookupTextField('bossIdS', $this->bossIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_LOOKUPFIELD_SIZE'), null, null, 'bossNameS', 'basic', 'PhysicalPersonEmployeeAndProfessor', null, null, true);
        $bossIdS->setJsHint(_M('Informe o código do responsável pelo setor',$module));
        $validators[] = new MIntegerValidator('bossIdS', _M('Responsável',$module), 'optional');
        $bossNameS = new MTextField('bossNameS', $this->bossNameS->value, '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $bossNameS->setJsHint(_M('Nome do responsável',$module));
        $hctBoss = new MHContainer('hctBoss', array($bossLabel, $bossIdS, $bossNameS));
        $hctBoss->setShowLabel(true);
        $fields[]   = $hctBoss;

        parent::defineFields($fields, $module, 'GrdSectorBossSearch', $validators);
    }

    public function getTypesData()
    {
        $data = parent::getTypesData();
        $fieldBossName = 'bossName';
        $fieldSectorDescription = 'sectorDescription';

        if ( strlen(MIOLO::_REQUEST($fieldBossName)) == 0 )
        {
            $fieldBossName .= 'S';
        }
        if ( strlen(MIOLO::_REQUEST($fieldSectorDescription)) == 0 )
        {
            $fieldSectorDescription .= 'S';
        }

        $data->bossName = MIOLO::_REQUEST($fieldBossName);
        $data->sectorDescription = MIOLO::_REQUEST($fieldSectorDescription);

        return $data;
    }
}
?>
