<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Week day form
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 11/08/2005
 *
 **/

/**
 * Form to manipulate a weekDay
 **/
class FrmWeekDay extends SManagementForm
{
    /**
     * Class constructor
     **/
    public function __construct()
    {
        parent::__construct(new BasWeekDay(), array('weekDayId'), 'BusWeekDay');
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        if ( in_array($function,array(SForm::FUNCTION_UPDATE, SForm::FUNCTION_DELETE)) )
        {
            $pk = $this->getObjectPk();

            //Week day id field
            $fields[] = new MTextLabel('', $pk->weekDayId, _M('Dia da semana',$module));
            $fields[] = new MHiddenField('weekDayId', $pk->weekDayId);

            $data = $this->busObject->getWeekDay($pk->weekDayId);
        }
        else
        {
            // Week day id field
            $fields[] = $weekDayId = new MTextField('weekDayId', $this->getFormValue('weekDayId', $data->weekDayId), _M('Dia da semana',$module), SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
            $weekDayId->setJsHint(_M('Informe o código do dia da semana',$module));
            $validators[] = new MIntegerValidator('weekDayId', '', 'required');
        }

        // Description field
        $data->description = $this->getFormValue('description', $data->description);
        $fields[] = $description = new MTextField('description', $data->description, _M('Descrição',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $description->setJsHint(_M('Informe a descrição do dia da semana',$module));
        $validators[] = new MRequiredValidator('description');

        // Short description field
        $fields[] = $shortDescription = new MTextField('shortDescription', $this->getFormValue('shortDescription', $data->shortDescription), _M('Abreviatura',$module), 6, _M('@1 caracteres no máximo', $module, 3));
        $shortDescription->setJsHint(_M('Informe a abreviatura do dia da semana',$module));
        $validators[] = new MRegExpValidator('shortDescription', null, "^[A-Za-z0-9]{1,3}$", 'required');

        parent::defineFields($fields, $validators, $data);
    }
}
?>
