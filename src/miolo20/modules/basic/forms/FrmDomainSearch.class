 <?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * @author Jonas Guilherme Dahmer [jonas@solis.coop.br]
 *
 * \b Maintainers \n
 * Jonas Guilherme Dahmer [jonas@solis.coop.br]
 *
 * @since
 * Class created on 21/08/2012
 *
 */
class FrmDomainSearch extends SSearchForm
{
    public function __construct($data)
    {
        parent::__construct(null, new BasDomain(), array('domainIdS', 'sequenceS'));
    }

    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $action = MIOLO::getCurrentAction();
        $fields[] = $domainIdS = new MTextField('domainIdS', $this->getFormValue('domainIdS', $data->domainIdS), _M('Domínio', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $domainIdS->addAttribute('maxlength', '100');
        $domainIdS->setJsHint(_M('Informe o domainId', $module));
        $fields[] = $sequenceS = new MTextField('sequenceS', $this->getFormValue('sequenceS', $data->sequenceS), _M('Sequencia', $module), SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $sequenceS->setJsHint(_M('Informe o sequence', $module));
        $fields[] = $keyS = new MTextField('keyS', $this->getFormValue('keyS', $data->keyS), _M('Chave', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $keyS->addAttribute('maxlength', '100');
        $keyS->setJsHint(_M('Informe o key', $module));
        $fields[] = $abbreviatedS = new MTextField('abbreviatedS', $this->getFormValue('abbreviatedS', $data->abbreviatedS), _M('Abreviatura', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $abbreviatedS->addAttribute('maxlength', '100');
        $abbreviatedS->setJsHint(_M('Informe o abbreviated', $module));
        $fields[] = $labelS = new MTextField('labelS', $this->getFormValue('labelS', $data->labelS), _M('Etiqueta', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $labelS->addAttribute('maxlength', '255');
        $labelS->setJsHint(_M('Informe o label', $module));
        $validators[] = new MIntegerValidator('sequenceS', '', 'optional');
        parent::defineFields($fields, $module, 'GrdDomainSearch', $validators);
    }
}


?> 
