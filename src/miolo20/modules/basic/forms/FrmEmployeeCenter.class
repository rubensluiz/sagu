<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Employee form
 *
 * @author Moises Heberle [moises@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.com.br]
 *
 * @since
 * Class created on 08/07/2014
 *
 **/
class FrmEmployeeCenter extends SStepByStepForm
{
    public function __construct($steps)
    {
        parent::__construct(_M('Centros'), $steps, __CLASS__, null, array('employeeId'));
        
        $this->toolbar->disableButton(MToolBar::BUTTON_SAVE);
    }

    public function createFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $function = MIOLO::_REQUEST('function');
        $event = MIOLO::_REQUEST('event');
        
        $fields[] = MMessage::getStaticMessage('msgInfo', _M('Caso sejam selecionados centros para o funcionário, este terá acesso apenas aos registros destes centros.<br>
        Também é necessário que o funcionário refaça o login para que as alterações referentes aos centros sejam aplicadas.'), MMessage::TYPE_INFORMATION);

        if ( in_array($function, array(SForm::FUNCTION_UPDATE, SForm::FUNCTION_DELETE)) )
        {
            $busEmployee = new BusinessBasicBusEmployee();
            
            $data->employeeId = MIOLO::_REQUEST('employeeId');
            $fields[] = new MHiddenField('employeeId', $data->employeeId);

            $data = $busEmployee->getEmployee($data->employeeId);
        }
                
        $data = MIOLO::_REQUEST('step') ? $this->getStepData() : $data;

        $busCenter = new BusinessAcademicBusCenter();
        $centros = $busCenter->listCenterAssoc();
        
        $pec = new BasPersonEmployeeCenter();
        $centrosPessoa = $pec->buscarCentrosPessoa($data->personId);
        
        foreach ( $centros as $centerId => $desc )
        {
            $name = 'center_' . $centerId;
            
            if ( isset($data->$name) )
            {
                $checked = $data->$name == DB_TRUE;
            }
            else
            {
                $checked = in_array($centerId, array_keys($centrosPessoa));
            }
            
            $fields[] = $cb = new MCheckBox($name, DB_TRUE, $desc, $checked);
        }

        $this->setFields($fields);
        $this->SetValidators($validators);
    }
    
    public function getPkeyValue()
    {
        return MIOLO::_REQUEST('employeeId');
    }
}
?>