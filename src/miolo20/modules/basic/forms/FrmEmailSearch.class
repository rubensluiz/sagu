<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 *
 * This file handles the connection and actions for basCompany table
 *
 * @author Hélio Henrique Rodrigues Guimarães [helio@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 04/08/2006
 *
 **/

/**
 * Form to search the basCompany table
 */
class FrmEmailSearch extends SSearchForm
{
    /**
     * Class constructor
     */
    public function __construct($data)
    {
        parent::__construct(_M('Localizar', 'basic'), new BasEmail(), array('emailId'), 'BusEmail');
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        // Field e-mail
        $emailIdS = new MTextField('emailIdS', $this->getFormValue('emailIdS', $emailId), _M('Código',$module), SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $emailIdS->setJsHint(_M('Informe o código do e-mail', $module));
        $fields[] = $emailIdS;
        $validators[] = new MIntegerValidator('emailIdS');

        // Field description
        $descriptionS = new MTextField('descriptionS', $data->descriptionS, _M('Descrição',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $descriptionS->setJsHint(_M('Informe a descrição do e-mail',$module));
        $fields[] = $descriptionS;

        // Field subject
        $subjectS = new MTextField('subjectS', $data->subjectS, _M('Assunto',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $subjectS->setJsHint(_M('Informe o assunto do e-mail',$module));
        $fields[] = $subjectS;

        // get filters values
        $filters->emailId     = $this->emailIdS->value;
        $filters->description = $this->descriptionS->value;
        $filters->subject     = $this->subjectS->value;

        $business   = new BusinessBasicBusEmail();
        $data       = $business->searchEmail($filters);

        $this->setLabelWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $this->page->onLoad('document.' . $this->name . '.emailIdS.focus()');

        parent::defineFields($fields, $module, 'GrdEmailSearch', $validators);

    }
}
?>
