<?php

/**
 * <--- Copyright 2005-2012 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * @author Nataniel Ingor da Silva [nataniel@solis.coop.br]
 *
 * @since
 * Class created on 08/04/2014
 *
 */

class FrmConfiguracaoTrocaDeSenhaBusca extends SSearchForm
{
    
    public function __construct($data) 
    {
        parent::__construct(_M('Localizar', 'basic'), null, array('configuracaoTrocaDeSenhaId'), 'BusConfiguracaoTrocaDeSenha');
    }
    
    public function defineFields() 
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $function = MIOLO::_request('function');
        
        //Codigo
        $configuracaoTrocaDeSenhaLabel = new MText('descricaoLabel', _M('Código', $module).':');
        $configuracaoTrocaDeSenhaLabel->setClass('m-caption m-caption');
        $configuracaoTrocaDeSenhaLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $configuracaoTrocaDeSenha = new MIntegerField('configuracaoTrocaDeSenhaId', $this->getFormValue('configuracaoTrocaDeSenhaId', $data->configuracaoTrocaDeSenhaId), null, SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $configuracaoTrocaDeSenha->setJsHint(_M('Informe um código de solicitação de alteração de senha.'));
        $fields[] = new MContainer('hctConf', array($configuracaoTrocaDeSenhaLabel, $configuracaoTrocaDeSenha));
        
        //Descrição
        $descricaoLabel = new MText('descricaoLabel', _M('Descrição', $module).':');
        $descricaoLabel->setClass('m-caption m-caption');
        $descricaoLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $descricao = new MTextField('descricao', $this->getFormValue('descricao', $data->descricao), null, SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $descricao->setJsHint(_M('Informe uma descrição para a solicitação de alteração de senha.'));
        $fields[] = $hctDescricao = new MContainer('hctDescricao', array($descricaoLabel, $descricao));
        //$validators[] = new MRequiredValidator('descricao',  _M('Descrição', $module));
        
        //Data inicial
        $dataInicialLabel = new MText('dataInicialLabel', _M('Data de início', $module) . ':');
        $dataInicialLabel->setClass('m-caption m-caption');
        $dataInicialLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $dataInicial = new MCalendarField('dataInicial', $data->dataInicial, '', SAGU::getParameter('BASIC', 'FIELD_DATE_SIZE'));
        $dataInicial->setJsHint(_M('Informe a data inicial.', $module));
        $fields[] = new MHContainer('hctDataInicial', array( $dataInicialLabel, $dataInicial ));
        $validators[] = new MDateDMYValidator('dataInicial', _M('Data de início', $module));
        
        //Data final
        $dataFinalLabel = new MText('dataFinalLabel', _M('Data de fim', $module) . ':');
        $dataFinalLabel->setClass('m-caption m-caption');
        $dataFinalLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $dataFinal = new MCalendarField('dataFinal', $data->dataFinal, '', SAGU::getParameter('BASIC', 'FIELD_DATE_SIZE'));
        $dataFinal->setJsHint(_M('Informe a data final', $module));
        $fields[] = new MHContainer('hctEndDate', array( $dataFinalLabel, $dataFinal ));
        $validators[] = new MDateDMYValidator('dataFinal', _M('Data de fim', $module));
        
        
        
        parent::defineFields($fields, $module, 'GrdConfiguracaoTrocaDeSenha', $validators);
    }
    
    public function getTypesData()
    {
        $data->configuracaoTrocaDeSenhaId = MIOLO::_REQUEST('configuracaoTrocaDeSenhaId');
        $data->descricao = MIOLO::_REQUEST('descricao');
        $data->dataInicial = MIOLO::_REQUEST('dataInicial');
        $data->dataFinal = MIOLO::_REQUEST('dataFinal');
        
        return $data;
    }
       
}

