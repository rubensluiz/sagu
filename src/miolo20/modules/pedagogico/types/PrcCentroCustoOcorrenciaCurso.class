<?php
/**
 * <--- Copyright 2005-2013 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Type pedagogico
 *
 * @author Jonas Gualberto Diel [jonas_diel@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Jonas Gualberto Diel [jonas_diel@solis.com.br]
 *
 * @since
 * Class created on 29/08/2013
 */

class PrcCentroCustoOcorrenciaCurso extends SType
{   
    protected $_utilizaNovoPadrao = true;
    
    protected $_virtualColumns = array(
        '_ocorrenciacurso' => 'curso.nome || \' - \' || turn.description || \' - \' || unit.description',
        '_centrodecusto' => 'costcenter.costcenterid || \' - \' || costcenter.description'
    );
    
    protected $_associations = array(
        'ocorrenciacurso' => array(
            'mode' => 'one',
            'typeClass' => 'AcpOcorrenciaCurso',
            'joinColumnLeft' => 'ocorrenciacursoid',
            'joinColumnRight' => 'ocorrenciacursoid',
        ),
        'costcenter' => array(
            'mode' => 'one',
            'typeClass' => 'AccCostCenter',
            'joinColumnLeft' => 'costcenterid',
            'joinColumnRight' => 'costcenterid',
        ),
    );
    
    public $centrocustoocorrenciacursoid;
    
    public $ocorrenciacursoid;
    
    public $costcenterid;
    
    /**
     * Obtém o código do centro de custo de determinada ocorrência de curso
     * @param int $ocorrenciadecursoid - Código da ocorrência de curso
     * @return int - Código do centro de custo
     */
    public static function obterCentroDeCustoDaOcorrenciaDeCurso($ocorrenciadecursoid)
    {
        $type = new PrcCentroCustoOcorrenciaCurso();
        $sql = $type->msql();
        $sql->addEqualCondition('PrcCentroCustoOcorrenciaCurso.ocorrenciacursoid', $ocorrenciadecursoid);
        $result = $type->findOne($sql);
        
        return $result->costcenterid;
    }
}
?>
