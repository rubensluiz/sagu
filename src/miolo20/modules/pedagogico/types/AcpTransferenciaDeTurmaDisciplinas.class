<?php

/**
 * <--- Copyright 2005-2013 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Frequências e notas
 *
 * @author Nataniel I. da Silva [nataniel@solis.com.br]
 *
 * @version $Id$
 *
 * @since
 * Class created on 17/11/2014
 */

class AcpTransferenciaDeTurmaDisciplinas extends SType
{
    public $transferenciaDeTurmaDisciplinaId;
    public $transferenciaDeTurmaId; 
    public $nota;
    public $conceito;
    public $parecer;
    public $situacao;
    public $tipo;
    public $frequencia;
    public $matriculaId;
    
    protected $_utilizaNovoPadrao = true;
    
    const DISC_ORIGEM = 'O';
    const DISC_DESTINO = 'D';
    
    public static function obtemDisciplinasTransferidas($transferenciaDeTurmaId, $tipo)
    {
        $acpTransferenciaDeTurmaDisciplinas = new AcpTransferenciaDeTurmaDisciplinas();
     
        $msql = $acpTransferenciaDeTurmaDisciplinas->msql();
        $msql->setColumns('D.codigo as codigo, D.descricao as descricao, acptransferenciadeturmadisciplinas.situacao');
        $msql->setColumns('CASE WHEN COALESCE(acptransferenciadeturmadisciplinas.nota::text, \'0.00\')::text = \'0.00\' THEN \'-\' ELSE acptransferenciadeturmadisciplinas.nota::text END as nota ');
        $msql->setColumns('CASE WHEN COALESCE(acptransferenciadeturmadisciplinas.frequencia::text, \'0.00\')::text = \'0.00\' THEN \'-\' ELSE acptransferenciadeturmadisciplinas.frequencia::text END as frequencia');
        $msql->addInnerJoin('acpmatricula A', 'AcpTransferenciaDeTurmaDisciplinas.matriculaid = A.matriculaid');
        $msql->addInnerJoin('acpofertacomponentecurricular B', 'A.ofertacomponentecurricularid = B.ofertacomponentecurricularid');
        $msql->addInnerJoin('acpcomponentecurricularmatriz C', 'B.componentecurricularmatrizid = C.componentecurricularmatrizid');
        $msql->addInnerJoin('acpcomponentecurricular D', 'C.componentecurricularid = D.componentecurricularid');
        $msql->addEqualCondition('AcpTransferenciaDeTurmaDisciplinas.tipo', $tipo);
        $msql->addEqualCondition('AcpTransferenciaDeTurmaDisciplinas.transferenciaDeTurmaId', $transferenciaDeTurmaId);
        $msql->setOrderBy('D.descricao');
        
        return $acpTransferenciaDeTurmaDisciplinas->findManyAsArray($msql);
    }
}