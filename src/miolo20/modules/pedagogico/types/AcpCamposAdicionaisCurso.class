<?php
/**
 * <--- Copyright 2005-2013 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Type pedagogico
 *
 * @author Moises Heberle [moises@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.com.br]
 *
 * @since
 * Class created on 29/08/2013
 */

class AcpCamposAdicionaisCurso extends SType
{
    protected $_utilizaNovoPadrao = true;
    
    protected $_defaultOrder = 'campo.nomecampo';
    
    protected $_associations = array(
        'campo' => array(
            'mode' => 'one',
            'typeClass' => 'AcpPerfilCursoCamposAdicionais',
            'joinColumnLeft' => 'perfilcursocamposadicionaisid',
            'joinColumnRight' => 'perfilcursocamposadicionaisid',
        )
    );
    
    /**
     * @var AcpPerfilCursoCamposAdicionais
     */
    public $campo;
    
    public $camposadicionaiscursoid;
    public $perfilcursocamposadicionaisid;
    public $cursoid;
    public $dados;
    
    /**
     * @return array
     */
    public static function listarCamposAdicionaisDoCurso($cursoId)
    {
        $curso = new AcpCurso($cursoId);
        $perfil = new AcpPerfilCurso($curso->perfilcursoid);
        
        $todosCampos = camposAdicionais::listarCamposAdicionais();
        $lista = array();
        
        foreach ( $perfil->camposadicionais as $campo )
        {
            $campo instanceof AcpPerfilCursoCamposAdicionais;
            
            if ( $campo->habilitado == DB_TRUE )
            {
                $lista[$campo->perfilcursocamposadicionaisid] = $todosCampos[$campo->nomecampo];
            }
        }
        
        return $lista;
    }
    
    /**
     * @return AcpCamposAdicionaisCurso 
     */
    public static function obterInstanciaCampo($cursoId, $perfilCursoCamposAdicionaisId)
    {
        $campo = new AcpCamposAdicionaisCurso();

        $reg = $campo->findOne( $campo->msql()
            ->addEqualCondition('AcpCamposAdicionaisCurso.perfilcursocamposadicionaisid', $perfilCursoCamposAdicionaisId)
            ->addEqualCondition('AcpCamposAdicionaisCurso.cursoid', $cursoId)
        );
        
        if ( !( $reg instanceof AcpCamposAdicionaisCurso ))
        {
            $reg = new AcpCamposAdicionaisCurso();
            $reg->perfilcursocamposadicionaisid = $perfilCursoCamposAdicionaisId;
            $reg->cursoid = $cursoId;
        }
        
        return $reg;
    }
}
?>
