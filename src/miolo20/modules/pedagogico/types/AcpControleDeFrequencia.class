<?php
/**
 * <--- Copyright 2005-2013 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Type pedagogico
 *
 * @author Moises Heberle [moises@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.com.br]
 *
 * @since
 * Class created on 29/08/2013
 */

class AcpControleDeFrequencia extends SType
{
    /**
     * @var integer
     */
    public $controleDeFrequenciaId;
    
    /**
     * @var integer
     */
    public $modeloDeAvaliacaoId;
    
    /**
     * @var integer
     */
    public $estadoDeReprovacao;
    
    /**
     * @var string
     */
    public $permiteJustificativa;
    
    /**
     * @var string
     */
    public $permiteRecuperacao;
    
    /**
     * @var string
     */
    public $permiteMeiaPresenca;

    /**
     * @var string
     */
    public $tipoDeLimite;
    
    /**
     * @var integer
     */
    public $limiteDeFrequencia;
    
    
    public static function obterControleDeFrequenciaDoModelo($modeloDeAvaliacaoId)
    {
        $controleDeFrequencia = new AcpControleDeFrequencia();
        $msql = $controleDeFrequencia->msql();
        $msql->setColumns('controleDeFrequenciaId');
        $msql->addEqualCondition('modeloDeAvaliacaoId', $modeloDeAvaliacaoId);
        $searchControleDeFrequencia = $controleDeFrequencia->findList($msql);                

        if( count($searchControleDeFrequencia) > 0 )
        {
            foreach($searchControleDeFrequencia as $cod=>$linha)
            {
                $return = new AcpControleDeFrequencia($cod);
            }
        }
        
        return $return;
    }
    
    public function delete()
    {
        $ok &= SDatabase::execute(MSQL::deleteTable('AcpControleDeFrequencia', array('controleDeFrequenciaId'=>$this->controleDeFrequenciaId) ));
        return $ok;
    }
    
    /**
     * @return AcpControleDeFrequencia
     */
    public static function obterPeloModelo($modeloDeAvaliacaoId)
    {
        $cdf = new AcpControleDeFrequencia();
        
        return $cdf->findOne( $cdf->msql()->addEqualCondition('modelodeavaliacaoid', $modeloDeAvaliacaoId) );
    }
}
?>
