<?php
/**
 * <--- Copyright 2005-2013 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Type pedagogico
 *
 * @author Jonas Gualberto Diel [jonas_diel@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.com.br]
 *
 * @since
 * Class created on 29/08/2013
 */

class AcpComponenteCurricularDisciplina extends SType
{
    protected $_utilizaNovoPadrao = true;
    
    public function getTableAlias()
    {
        return 'componentedisciplina';
    }
    
    /**
     * Código do componente curricular disciplina
     * @var int
     */
    public $componentecurriculardisciplinaid;
    
    /**
     * Código do componente curricular
     * @var int
     */
    public $componentecurricularid;
    
    /**
     * Carga horária
     * @var int
     */
    public $cargahoraria;
    
    /**
     * Carga horária presencial
     * @var int
     */
    public $cargahorariapresencial;
    
    /**
     * Carga horária extra classe
     * @var int
     */
    public $cargahorariaextraclasse;
    
    /**
     * Carga horária EAD
     * @var int
     */
    public $cargahorariaead;
    
    /**
     * Créditos financeiros
     * @var int
     */
    public $creditosfinanceiros;
    
    /**
     * Créditos acadêmicos
     * @var int
     */
    public $creditosacademicos;
    
    /**
     * Créditos
     * @var int
     */
    public $creditos;
    
    
    public static function obterComponenteCurricularDisciplinaDoComponente($componenteCurricularId)
    {
        $componenteCurricularDisciplina = new AcpComponenteCurricularDisciplina();
        $msql = $componenteCurricularDisciplina->msql();
        $msql->setColumns('componentecurriculardisciplinaid');
        $msql->addEqualCondition('componentecurricularid', $componenteCurricularId);
        $searchComponentesCurricularesDisciplina = $componenteCurricularDisciplina->findList($msql);                

        if( count($searchComponentesCurricularesDisciplina) > 0 )
        {
            foreach($searchComponentesCurricularesDisciplina as $cod=>$linha)
            {
                $return[] = new AcpComponenteCurricularDisciplina($cod);
            }
        }

        return $return;
    }

}
?>
