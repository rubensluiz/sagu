<?php
/**
 * <--- Copyright 2005-2013 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Type pedagogico
 *
 * @author Moises Heberle [moises@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.com.br]
 *
 * @since
 * Class created on 29/08/2013
 */

class AcpOcorrenciaCursoLookup extends SType
{
    protected $_utilizaNovoPadrao = true;
    
    protected $_defaultOrder = 'curso.nome';
    
    protected $_descriptionColumn = 'curso.nome || \' - \' || turn.description || \' - \' || unit.description';
    
    protected $_tableName = 'acpocorrenciacurso';

    protected $_tableViewName = 'unit_acpocorrenciacurso';
    
    protected $_associations = array(
        'turn' => array(
            'mode' => 'one',
            'typeClass' => 'BasTurnFixed',
            'joinColumnLeft' => 'turnid',
            'joinColumnRight' => 'turnid',
        ),
        'unit' => array(
            'mode' => 'one',
            'typeClass' => 'BasUnitFixed',
            'joinColumnLeft' => 'unitid',
            'joinColumnRight' => 'unitid',
        ),
        'curso' => array(
            'mode' => 'one',
            'typeClass' => 'AcpCurso',
            'joinColumnLeft' => 'cursoid',
            'joinColumnRight' => 'cursoid',
        ),
    );
    
    public function getChoiceComponentSQL($argument = null, $id = null)
    {        
        $sql = parent::getChoiceComponentSQL($argument, $id);                
        $sql->addEqualCondition('AcpOcorrenciaCursoLookup.situacao', AcpOcorrenciaCurso::SITUACAO_ATIVO);
        return $sql;
    }
    
}
?>
