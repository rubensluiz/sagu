<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Unit form
 *
 * @author Augusto Alves da Silva [augusto@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Augusto Alves da Silva [augusto@solis.coop.br]
 *
 * @since
 * Class Created on 26/11/2014
 *
 **/
class FrmDivisaoDeHorariosDaGradeDeHorarios extends FrmDivisaoDeHorariosDaGradeDeHorariosPai
{
    /**
     * Class constructor
     **/
    public function __construct()
    {
        parent::__construct(new AcpHorario(), array('horarioid') );
    }

    /**
     * Default method to define fields
     **/
    public function defineFields($args = null)
    {
        $MIOLO = MIOLO::getInstance();
        $gradeHorarioId = $MIOLO->_REQUEST('gradehorarioid');
        $horarioId = $MIOLO->_REQUEST('horarioid');
        $function = $MIOLO->_REQUEST('function');
        
        if ( $function == 'insert' || is_null($function) )
        {
            $MIOLO->session->set(parent::VAR_DADOS_SESSAO, null);
        }
        
        $gradeHorario = new sEscolha('gradehorarioid', $gradeHorarioId, _M('Grade de horário'), new AcpGradeHorario());
        $gradeHorario->addAttribute('onChange', $this->getAjaxAction('gerarSelectionDeHorarios', 'divHorarios', false, $args, true, false, false));
        $fields[] = $gradeHorario;
        $validators[] = new MRequiredValidator('gradehorarioid', _M('Grade de horário'));        
        
        $label = _M('Horário a dividir');
        $fields[] = new sEscolha('horarioid', $horarioId, $label, new AcpHorario());
        $validators[] = new MRequiredValidator('horarioid', $label);
        
        parent::defineFields($fields, $validators);
    }
    
    public function obterLabelSalvarEContinuar()
    {
        return _M("Continuar");
    }
    
    public function btnSaveAndGo_click($sender = null) 
    {
        $MIOLO = MIOLO::getInstance();
        
        $gradeHorarioId = $this->GetFormValue('gradehorarioid');
        $horarioId = $this->GetFormValue('horarioid');
        
        $acpHorario = new AcpHorario($horarioId);
        
        if ( $acpHorario->gradehorarioid == $gradeHorarioId )
        {
            $this->vaiParaOProximoPasso();
        }
        else
        {
            $this->Error(_M('Ei! Este horário não pertence a grade de horários selecionada. Selecione o horário da grade corretamente.'));
        }
    }
}
?>
