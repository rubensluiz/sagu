<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Componente Curricular
 *
 * @author Jonas Gualberto Diel [jonas_diel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Jonas Gualberto Diel [jonas_diel@solis.coop.br]
 *
 * @since
 * Class Created on 14/10/2013
 *
 **/
class FrmComponenteCurricular extends FrmComponenteCurricularPai
{
    public function __construct()
    {
        $this->setLimparCamposVazios(true);
        
        parent::__construct(new AcpComponenteCurricular(), array('componentecurricularid'));
    }
    
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        $fields[] = new MTextField('codigo', $data->codigo, _M('Código', $module));
        $fields[] = new MTextField('nome', $data->nome, _M('Nome', $module));
        $fields[] = new MTextField('descricao', $data->descricao, _M('Descricao', $module));
        $fields[] = new MMultiLineField('conteudo', $data->conteudo, _M('Conteúdo', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'), 5, 40);
        $fields[] = new MMultiLineField('ementa', $data->ementa, _M('Ementa', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'), 5, 40);
        $fields[] = new MMultiLineField('objetivos', $data->objetivos, _M('Objetivos', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'), 5, 40);
        $fields[] = new sEscolha('professorresponsavelid', $data->professorresponsavelid, _M('Professor responsável'), new BasProfessor());
        
        //Tipos de componentes curriculares
        $fields[] = new MSelection('tipocomponentecurricularid', $data->tipo, _M('Tipo', $module), AcpTipoComponenteCurricular::listarTiposDeComponentesCurriculares());

        $validators[] = new MRequiredValidator('codigo', _M('Código', $module));
        $validators[] = new MRequiredValidator('nome', _M('Nome', $module));
        $validators[] = new MRequiredValidator('descricao', _M('Descrição', $module));
        $validators[] = new MRequiredValidator('conteudo', _M('Conteúdo', $module));
        $validators[] = new MRequiredValidator('tipocomponentecurricularid', _M('Tipo', $module));
        
        parent::defineFields($fields, $validators);
    }
}
?>
