<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Curso
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class Created on 25/09/2013
 *
 **/
class FrmOfertaDeCursoPai extends sLinkedForm
{
    public $ocorrenciadecursoid;
    
    public function getLinkedDefs()
    {
        if ( !$this->defs )
        {
            $ocorrenciacursoid = $this->getOcorrenciaIdSelecionado();
            $ofertacomponentecurricularid = MIOLO::_REQUEST('ofertacomponentecurricularid');
            
            $defs = $this->newDef()
                    ->setChave('ofertacursoid')
                    ->addForm( $this->newFormDef()->setLabel('Oferta de curso')->setModule('pedagogico')->setAction('main:process:ofertacurso')->setTipo(self::TIPO_UM_PARA_UM) );

            $defs->addForm( $this->newFormDef()->setLabel('Turmas abertas')->setModule('pedagogico')->setAction('main:process:ofertaturma')->setTipo(self::TIPO_UM_PARA_MUITOS)->setGridModule('pedagogico')->setGridName('GrdOfertaTurma'));
            
            $this->defs = $defs;
        }
        
        return $this->defs;
    }
    
    public function getOcorrenciaIdSelecionado()
    {
        if ( !$this->ocorrenciadecursoid )
        {
            $this->ocorrenciadecursoid = SAGU::NVL( MIOLO::_REQUEST('ocorrenciacursoidSelecionado'), MIOLO::_REQUEST('ocorrenciacursoid') );

            if ( !$this->ocorrenciadecursoid )
            {
                $ofertacursoid = MIOLO::_REQUEST('ofertacursoid');

                if ( strlen($ofertacursoid) > 0 )
                {
                    $ofertacurso = new AcpOfertaCurso($ofertacursoid);                    
                    $this->ocorrenciadecursoid = $ofertacurso->ocorrenciacursoid;
                }
            }
        }
        
        return $this->ocorrenciadecursoid;
    }
    
    /**
     *
     * @return AcpOcorrenciaCurso
     */
    public function obterOcorrencia()
    {      
        if ( strlen($this->getOcorrenciaIdSelecionado()) > 0 )
        {
            $ocorrencia = new AcpOcorrenciaCurso($this->getOcorrenciaIdSelecionado());
        }
        else
        {
            $ofertaCurso = $this->getTypeObjectPopulated();
            $ofertaCurso instanceof AcpOfertaCurso;
            
            $ocorrencia = $ofertaCurso->ocorrenciacurso;
        }
        
        return $ocorrencia;
    }
}
?>
