<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Unit form
 *
 * @author Augusto Alves da Silva [augusto@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Augusto Alves da Silva [augusto@solis.coop.br]
 *
 * @since
 * Class Created on 26/11/2014
 *
 **/
class FrmDivisaoDeHorariosDaGradeDeHorariosPai extends sLinkedForm
{    
    const VAR_DADOS_SESSAO = 'dadosDaDivisao';
    
    public function getLinkedDefs()
    {
        $this->toolbar->disableButton(MToolBar::BUTTON_NEW);
        $this->toolbar->disableButton(MToolBar::BUTTON_SEARCH);
        
        if ( !$this->defs )
        {
            $defs = $this->newDef();
            $defs->setChave('horarioid');
            $defs->addForm( $this->newFormDef()->setLabel('Horário a dividir')->setModule('pedagogico')->setAction('main:config:divisaodehorariosdagradedehorarios')->setTipo(self::TIPO_UM_PARA_UM) );
            $defs->addForm( $this->newFormDef()->setLabel('Configuração da divisão')->setModule('pedagogico')->setAction('main:config:divisaodehorariosconfiguracao')->setTipo(self::TIPO_UM_PARA_UM));
            $defs->addForm( $this->newFormDef()->setLabel('Resumo')->setModule('pedagogico')->setAction('main:config:divisaodehorariosresumo')->setTipo(self::TIPO_UM_PARA_UM));

            $this->defs = $defs;
        }
        
        return $this->defs;
    }
    
    /**
     * Verifica qual o próximo formulário do passo, e efetua o redirect,
     * juntando os argumentos necessários.
     */
    public function vaiParaOProximoPasso($dados = null)
    {
        $MIOLO = MIOLO::getInstance();
        
        if ( !is_null($dados) )
        {
            $MIOLO->session->setValue(self::VAR_DADOS_SESSAO, $dados);
        }
        
        $dadosSessao = $MIOLO->session->getValue(self::VAR_DADOS_SESSAO);
        
        // Cria url para proximo "passo"        
        $args = array(
            'gradehorarioid' => SAGU::NVL($this->GetFormValue('gradehorarioid'), $dadosSessao->gradehorarioid),
            'horarioid' => SAGU::NVL($this->GetFormValue('horarioid'), $dadosSessao->horarioid),
        );

        $form = $this->obterFormSeguinteDoAtual();
        $url = $this->obterURLForm($form, $args);
        $MIOLO->page->Redirect( $url );
    }
    
    public function obterURLForm(sLinkedFormDef $form = null, $paramArgs = array()) 
    {
        $paramArgs['__GENERATEHEADERFIRST'] = 'yes';
        
        return parent::obterURLForm($form, $paramArgs);
    }
}
?>
