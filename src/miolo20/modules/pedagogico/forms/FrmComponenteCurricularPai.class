<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Componente curricular
 *
 * @author Jonas Gualberto Diel [jonas_diel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Jonas Gualberto Diel [jonas_diel@solis.coop.br]
 *
 * @since
 * Class Created on 19/09/2013
 *
 **/
class FrmComponenteCurricularPai extends sLinkedForm
{
    public function __construct($object, $pkey, $business = null, $title = null, $linkedForm = null)
    {
        parent::__construct($object, $pkey, $business, $title, $linkedForm);
    }
    
    public function getLinkedDefs()
    {        
        $componentecurricularid = MIOLO::_REQUEST('componentecurricularid');
        if( strlen($componentecurricularid) > 0 && MIOLO::_REQUEST('event') != 'tbBtnDelete_confirm' && MIOLO::_REQUEST('function') != 'delete' )
        {
            try
            {
                $componenteCurricular = new AcpComponenteCurricular($componentecurricularid);
            }
            catch (Exception $e)
            {
                // erro inesperado ocorria de vez em quando, de registro inexistente
            }
        }
        
        $defs = $this->newDef()
                ->setChave('componentecurricularid')
                ->addForm( $this->newFormDef()->setLabel(_M('Componente curricular'))->setModule('pedagogico')->setAction('main:register:componentecurricular')->setTipo(self::TIPO_UM_PARA_UM) )                
                ->addForm( $this->newFormDef()->setLabel(_M('Bibliografia básica'))->setModule('pedagogico')->setAction('main:register:bibliografiabasica')->setTipo(self::TIPO_UM_PARA_MUITOS)->setGridModule('pedagogico')->setGridName('GrdBibliografia')->setArgs(array('tipoBibliografia'=>  AcpComponenteCurricularBibliografia::TIPO_BASICA)) ) ;

        /*
        if( $componenteCurricular->tipocomponentecurricular->tipo == AcpTipoComponenteCurricular::TIPO_TCC )
        {
            $defs->addForm( $this->newFormDef()->setLabel(_M('Dados do componente'))->setModule('pedagogico')->setAction('main:register:dadosdocomponentetcc')->setTipo(self::TIPO_UM_PARA_UM));   
        }
        else
        {*/
            $defs->addForm( $this->newFormDef()->setLabel(_M('Dados do componente'))->setModule('pedagogico')->setAction('main:register:dadosdocomponentedisciplina')->setTipo(self::TIPO_UM_PARA_UM));
        //}
                 
        return $defs;
    }
    
    public function obterURLForm(sLinkedFormDef $form = null, $paramArgs = array())
    {
        $matrizcurricularid = MIOLO::_REQUEST('ref_matrizcurricularid'); // valor vindo da tela de detalhamento matriz
        $matrizcurriculargrupoid = MIOLO::_REQUEST('ref_matrizcurriculargrupoid');
        
        if ( strlen($matrizcurricularid) > 0 && strlen($matrizcurriculargrupoid) > 0 )
        {
            $paramArgs['ref_matrizcurricularid'] = $matrizcurricularid;
            $paramArgs['ref_matrizcurriculargrupoid'] = $matrizcurriculargrupoid;
        }
        
        return parent::obterURLForm($form, $paramArgs);
    }
    
    public function afterSave()
    {
        $MIOLO = MIOLO::getInstance();
        
        $matrizcurricularid = MIOLO::_REQUEST('ref_matrizcurricularid'); // valor vindo da tela de detalhamento matriz
        $matrizcurriculargrupoid = MIOLO::_REQUEST('ref_matrizcurriculargrupoid');
        
        // redireciona para tela Matriz Curricular, ja abrindo automaticamente a popup com o registro novo selecionado
        if ( strlen($matrizcurricularid) > 0 && strlen($matrizcurriculargrupoid) > 0 )
        {
            $_SESSION['novo_componentecurricularid'] = MIOLO::_REQUEST('componentecurricularid');
            $_SESSION['novo_matrizcurriculargrupoid'] = $matrizcurriculargrupoid;
    
            $url = $MIOLO->GetActionURL('pedagogico', 'main:register:detalharmatriz', '', array(
                'matrizcurricularid' => $matrizcurricularid,
                'function' => 'update',
            ));
            
            $MIOLO->page->Redirect($url);
        }
        else
        {
            parent::afterSave();
        }
    }
}
?>
