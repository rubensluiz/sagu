<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Formulário do módulo pedagógico
 *
 * @author Jonas Gualberto Diel [jonas_diel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Jonas Gualberto Diel [jonas_diel@solis.coop.br]
 *
 * @since
 * Class Created on 12/12/2013
 *
 **/
class FrmCondicaoDePagamento extends SManagementForm
{
    /**
     * Class constructor
     **/
    public function __construct()
    {
        $this->setLimparCamposVazios(true);
        parent::__construct(new PrcCondicaoDePagamento(), array('condicaodepagamentoid') );
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        $fields[] = new MTextField('descricao', null, _M('Descrição'));
        $fields[] = $exigeEntrada = $this->genericFields()->radioButtonGroup('exigeentrada', DB_TRUE, _M('Primeira parcela a vista',$module), SAGU::listYesNo());
        $fields[] = new MIntegerField('numerodeparcelas', null, _M('Número de parcelas'));

        $exigeEntrada->addAttribute('onchange', SForm::getAjaxAction('setReadOnly', 'newDiv', false));
        
        $fields[] = new MDiv('newDiv', $this->setReadOnly($args));
        
        parent::defineFields($fields, $validators);
    }
    
    public function setReadOnly($args)
    {
        $MIOLO = MIOLO::getInstance();
        
        $jsCode = " var parcela = document.getElementById('numerodeparcelas');
                    if ( document.getElementById('exigeentrada_t').checked == true )
                    {
                        parcela.value = '1';
                        parcela.readOnly = true;
                    }
                    else
                    { 
                        parcela.readOnly = false;
                    }";

        $args->phpFunction == 'setReadOnly' ? $MIOLO->page->addAJAXJsCode($jsCode) : $MIOLO->page->onload($jsCode);
        
        return '';
    }
    
    /**
     * Event triggered when user chooses Save from the toolbar
     */
    public function tbBtnSave_click($sender = NULL)
    {   
        $numerodeparcelas = MIOLO::_REQUEST('numerodeparcelas');
        if( $numerodeparcelas < 1 )
        {
            $this->addError(_M('Número de parcelas inválido, informe um número maior que zero.'));
        }
        else
        {
            $ok = $this->saveTypeData($sender);
                
            $this->salvaCamposCustomizaveis($ok);
            $this->confirmInsertUpdate($ok);
        }
    }
}
?>
