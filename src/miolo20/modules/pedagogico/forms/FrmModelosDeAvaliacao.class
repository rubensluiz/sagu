<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Perfil de curso
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class Created on 25/09/2013
 *
 **/
class FrmModelosDeAvaliacao extends FrmPerfilDeCursoPai
{
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $pc = $this->getTypeObjectPopulated();
        $pc instanceof AcpPerfilCurso; 
        
        $fields[] = $this->criarLookup('modelodeavaliacaogeral', _M('Modelo de avaliação geral'), $pc->modelodeavaliacaogeral, true);
        $fields[] = $this->criarLookup('modelodeavaliacaomodulo', _M('Modelo de avaliação por módulo'), $pc->modelodeavaliacaomodulo, false);

        if ( $pc->organizacao == AcpPerfilCurso::ORGANIZACAO_SERIADO )
        {
            $fields[] = $this->criarLookup('modelodeavaliacaoseriado', _M('Modelo de avaliação seriado'), $pc->modelodeavaliacaoseriado, false);
        }
        
        foreach ( $pc->componentescurriculares as $pccc )
        {
            $pccc instanceof AcpPerfilCursoComponenteCurricular;
            
            $fieldName = 'lookup_' . $pccc->obterTipo()->tipocomponentecurricularid;
            $label = _M('Modelo de avaliação para @1', $module, $pccc->obterTipo()->descricao);
            
            //Cria o lookup somente se o tipodocomponente permite modelo de avaliação
            if( $pccc->obterTipo()->permitemodelodeavaliacao == DB_TRUE )
            {
                $fields[] = $this->criarLookup($fieldName, $label, $pccc->modelodeavaliacaoid, false);
            }
        }
        
        parent::defineFields($fields, $validators);
    }
    
    /**
     * @return SLookupContainer
     */
    public function criarLookup($fieldName, $label, $value = null, $required = true)
    {
        $lookup = new sEscolha($fieldName, $value, $label, new AcpModeloDeAvaliacao());
        
        if ( $required )
        {
            $validator = new MRequiredValidator($fieldName, $label);
            $this->AddValidator($validator);
        }
        
        return $lookup;
    }
    
    public function beforeSave(AcpPerfilCurso $pc)
    {
        // Percorre as lookups e define o valor para type AcpPerfilCursoComponenteCurricular
        foreach ( $pc->componentescurriculares as $pccc )
        {
            if( $pccc->obterTipo()->permitemodelodeavaliacao == DB_TRUE )
            {
                $pccc instanceof AcpPerfilCursoComponenteCurricular;

                $tipo = $pccc->obterTipo()->tipocomponentecurricularid;
                $fieldName = 'lookup_' . $tipo;

                $pccc->modelodeavaliacaoid = SAGU::NVL(MIOLO::_REQUEST($fieldName), SType::NULL_VALUE);
            }
        }

        return $pc;
    }
}
?>
