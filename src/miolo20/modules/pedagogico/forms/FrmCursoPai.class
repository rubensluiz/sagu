<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Curso
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class Created on 19/09/2013
 *
 **/
class FrmCursoPai extends sLinkedForm
{
    private $perfilId;
    
    public function getLinkedDefs()
    {
        if ( !$this->defs )
        {
            $cursoId = MIOLO::_REQUEST('cursoid');
            $perfil = $this->getPerfilSelecionado();

            if ( strlen($cursoId) )
            {
    //            $curso = $this->getTypeObjectPopulated();
    //            $curso instanceof AcpCurso;
    //
    //            $perfilCurso = new AcpPerfilCurso($curso->perfilcursoid);
    //            $campos = $perfilCurso->camposadicionais;

                $campos = AcpPerfilCursoCamposAdicionais::buscarPorCurso($cursoId);
            }
            else
            {
                $campos = array();
            }

            $defs = $this->newDef()
                    ->setChave('cursoid')
                    ->addForm( $this->newFormDef()->setLabel('Curso')->setModule('pedagogico')->setAction('main:register:curso')->setTipo(self::TIPO_UM_PARA_UM) )
                            ;

            if ( $perfil->cadastrocorpodocente == DB_TRUE )
            {
                $defs->addForm( $this->newFormDef()->setLabel('Docentes')->setModule('pedagogico')->setAction('main:register:docente')->setTipo(self::TIPO_UM_PARA_MUITOS)->setGridModule('pedagogico')->setGridName('GrdCursoDocente') );
            }
            
            $defs->addForm( $this->newFormDef()->setLabel('Ocorrências de curso')->setModule('pedagogico')->setAction('main:register:ocorrencias')->setTipo(self::TIPO_UM_PARA_MUITOS)->setGridModule('pedagogico')->setGridName('GrdOcorrenciaDeCurso') );
            
            if ( $perfil->cadastrocoordenadores == DB_TRUE )
            {
                $defs->addForm( $this->newFormDef()->setLabel('Coordenadores')->setModule('pedagogico')->setAction('main:register:coordenadores')->setTipo(self::TIPO_UM_PARA_MUITOS)->setGridModule('pedagogico')->setGridName('GrdCoordenadores') );
            }

            if ( count($campos) > 0 )
            {
                $defs->addForm( $this->newFormDef()->setLabel('Dados complementares')->setModule('pedagogico')->setAction('main:register:dadocomplementar')->setTipo(self::TIPO_UM_PARA_UM) );
            }

            if ( $perfil->cadastromatrizcurricular == DB_TRUE )
            {
                $defs->addForm( $this->newFormDef()->setLabel('Matriz curricular')->setModule('pedagogico')->setAction('main:register:matriz')->setTipo(self::TIPO_UM_PARA_MUITOS)->setGridModule('pedagogico')->setGridName('GrdMatrizCurricular') );
            }

            $this->defs = $defs;
        }
        
        return $this->defs;
    }
    
    /**
     * @return AcpPerfilCurso 
     */
    public function getPerfilSelecionado()
    {
        $perfilId = $this->getPerfilIdSelecionado();
        $perfil = null;
        
        if ( $perfilId )
        {
            $perfil = new AcpPerfilCurso($perfilId);
        }
        
        return $perfil;
    }
    
    public function getPerfilIdSelecionado()
    {
        if ( !$this->perfilId )
        {
            $this->perfilId = SAGU::NVL( MIOLO::_REQUEST('perfilSelecionado'), MIOLO::_REQUEST('perfilcursoid') );

            if ( !$this->perfilId )
            {
                $cursoId = MIOLO::_REQUEST('cursoid');

                if ( strlen($cursoId) > 0 )
                {
                    $this->perfilId = AcpCurso::obterPerfilIdDoCurso($cursoId);
                }
            }
        }
        
        return $this->perfilId;
    }
    
    public function getTransaction()
    {
        return get_class($this);
    }
}
?>
