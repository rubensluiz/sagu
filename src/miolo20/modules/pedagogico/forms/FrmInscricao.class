<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Curso
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class Created on 13/11/2013
 *
 **/
class FrmInscricao extends FrmInscricaoPai
{
    public function __construct()
    {
        parent::__construct(new AcpInscricao(), array('inscricaoid'), null, _M('Inscrição'));
    }
    
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        if( MIOLO::_REQUEST('function') == SForm::FUNCTION_UPDATE )
        {
            $inscricaoid = MIOLO::_REQUEST('inscricaoid');
            $inscricao = new AcpInscricao($inscricaoid);
            $ofertacursoid = $inscricao->ofertacursoid;
        }
        
        $fields[] = $this->obterCampoPessoa();
        $fields[] = $this->obterCampoOfertaDeCurso($ofertacursoid);
        
        $validators[] = new MRequiredValidator('ofertacursoid', _M('Oferta de curso', $module));
        
        parent::defineFields($fields, $validators);
    }
    
    public function btnSaveAndGo_click() 
    {
        $MIOLO = MIOLO::getInstance();
        
        if ( $this->isInsertFunction() )
        {
            $_REQUEST[ $this->obterChave() ] = $this->getTypeObjectPopulated()->getPkeyValue();            
        }
        
        // Cria url para proximo "passo"
        $form = $this->obterFormSeguinteDoAtual();
        $url = $this->obterURLForm($form, array('ofertacursoid' => MIOLO::_REQUEST('ofertacursoid'), 'personid' => MIOLO::_REQUEST('personid'), 'function' => MIOLO::_REQUEST('function')));
        
        $MIOLO->page->Redirect( $url );
    }
    
    /**
     * Obtém o campo para seleção da pessoa, pode ser reescrito para obter pessoa logada no portal
     * @return \sEscolha
     */
    public function obterCampoPessoa()
    {
        $this->addValidator(new MRequiredValidator('personid', _M('Aluno')));
        $pessoa = new sEscolha('personid', null, _M('Aluno', $module), new BasPessoaFisica());                
        if( MIOLO::_REQUEST('function') == 'update' )
        {
            $pessoa->setReadOnly(true);
        }
        return $pessoa;
    }
    
    /**
     * Obtém o campo para seleção da oferta de curso, pode ser reescrito para mudar o tipo do campo
     * @param type $ofertacursoid - Valor do campo
     * @return \sEscolha
     */
    public function obterCampoOfertaDeCurso($ofertacursoid)
    {
        return new sEscolha('ofertacursoid', $ofertacursoid, _M('Oferta de curso'), new AcpOfertaCurso());
    }
}
?>
