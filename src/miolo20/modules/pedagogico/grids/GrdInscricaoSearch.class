<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Inscricoes
 *
 * @author Jonas Gualberto Diel [jonas_diel@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Jonas Gualberto Diel [jonas_diel@solis.com.br]
 * Moises Heberle [moises@solis.com.br]
 *
 * @since
 * Class Created on 30/08/2013
 *
 **/
class GrdInscricaoSearch extends SGrid
{
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        $columns = array(
            new MGridColumn( _M('Código', $module), 'right'),
            new MGridColumn( _M('Turma', $module)),
            new MGridColumn( _M('Oferta de Curso (Curso)', $module)),
            new MGridColumn( _M('Pessoa', $module)),
            new MGridColumn( _M('Situação', $module), 'left', false, 0, true, AcpInscricao::listarSituacao()),
            new MGridColumn( _M('Data situação', $module), 'center'),
            new MGridColumn( _M('Origem', $module), 'left', false, 0, true, AcpInscricao::listarOrigem()),
            new MGridColumn( _M('Nome da pessoa', $module), 'left', false, 0, false)
        );

        parent::__construct($filters, $columns, __CLASS__, array('inscricaoid' => '%0%'));

        
        $columns['ofertaturmadesc']->order = true;
        
        $this->setPageLength(200);
        $this->clearActions();
        
        $this->displayActionUpdate(array('function' => SForm::FUNCTION_UPDATE, 'inscricaoid' => '%0%'));

        $acaoExcluir = $MIOLO->GetActionURL($module, 'main:process:inscricao', '', array('inscricaoid' => '%0%', 'event' => 'excluirMatricula'));
        $this->addActionIcon(_M('Excluir', $module), 'toolbar-delete.png', $acaoExcluir);
        
        $acaoHistorico = SForm::getAjaxAction('historicoInscricao', 'divLimbo', false, array('inscricaoid' => '%0%'), false, false);
        $this->addActionIcon(_M('Ver histórico', $module), 'button_nobrowse.png', $acaoHistorico);
        
        $this->adicionarAcaoEmMassa( $this->acaoEmMassa()->setLabel('Confirmar')->setMetodo('confirmaInscritos') );
        $this->adicionarAcaoEmMassa( $this->acaoEmMassa()->setLabel('Cancelar')->setMetodo('cancelaInscritos')->setPedirConfirmacao(true) );
        
        $this->setRowMethod('GrdInscricaoSearch', 'grdInscricaoSearchRowMethod');
    }
    
    public function grdInscricaoSearchRowMethod($i, $row, $actions, $columns)
    {
        $situacao = $row['acpinscricao.situacao'];

        if ( in_array($situacao, array(AcpInscricao::SITUACAO_CANCELADO, AcpInscricao::SITUACAO_INSCRITO)) )
        {
            $actions[0]->enabled = FALSE;
            $actions[0]->alt = _M('Não é possível editar uma inscrição cancelada ou confirmada.');
        }
        else
        {
            $actions[0]->enabled = TRUE;
        }
    }
}
?>
