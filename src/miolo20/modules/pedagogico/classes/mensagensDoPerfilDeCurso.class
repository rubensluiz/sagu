<?php
/**
 * <--- Copyright 2005-2013 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Tratamento das mensagens da inscrição
 *
 * @author Jonas Gualberto Diel [jonas_diel@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Jonas Gualberto Diel [jonas_diel@solis.com.br]
 *
 * @since
 * Class created on 29/08/2013
 */

class mensagensDoPerfilDeCurso
{
    /**
     * Obtém o termo de inscrição
     * @param int $ofertaDeCursoId - Código da oferta de curso
     * @param int $personId - Código da pessoa
     * @return String - Mensagem do Termo de inscrição
     */
    public function obterTermoDeInscricao($ofertaDeCursoId, $personId)
    {
        $ofertaDeCurso = new AcpOfertaCurso($ofertaDeCursoId);
        $ocorrenciaDeCurso = new AcpOcorrenciaCurso($ofertaDeCurso->ocorrenciacursoid);
        $curso = new AcpCurso($ocorrenciaDeCurso->cursoid);
        $regras = AcpRegrasMatriculaPerfilCurso::obterRegrasDoPerfilDeCurso($curso->perfilcursoid);
        
        //Substitui as variáveis do curso
        $mensagem = $this->substituirVariaveisDoCurso($regras->termoinscricao, $curso);
        $mensagem = $this->substituirVariaveisDaPessoa($mensagem, $personId);
        
        return $mensagem;
    }
    
    public function obterMensagemInicial($ofertaDeCursoId, $personId)
    {
        $ofertaDeCurso = new AcpOfertaCurso($ofertaDeCursoId);
        $ocorrenciaDeCurso = new AcpOcorrenciaCurso($ofertaDeCurso->ocorrenciacursoid);
        $curso = new AcpCurso($ocorrenciaDeCurso->cursoid);
        $regras = AcpRegrasMatriculaPerfilCurso::obterRegrasDoPerfilDeCurso($curso->perfilcursoid);        
        
        //Substitui as variáveis do curso
        $mensagem = $this->substituirVariaveisDoCurso($regras->mensageminicial, $curso);
        $mensagem = $this->substituirVariaveisDaPessoa($mensagem, $personId);
        
        return $mensagem;
        
    }
    
    public function obterMensagemFinal($ofertaDeCursoId, $personid)
    {
        $ofertaDeCurso = new AcpOfertaCurso($ofertaDeCursoId);
        $ocorrenciaDeCurso = new AcpOcorrenciaCurso($ofertaDeCurso->ocorrenciacursoid);
        $curso = new AcpCurso($ocorrenciaDeCurso->cursoid);
        $regras = AcpRegrasMatriculaPerfilCurso::obterRegrasDoPerfilDeCurso($curso->perfilcursoid);        

        //Substitui as variáveis do curso
        $mensagem = $this->substituirVariaveisDoCurso($regras->mensagemfinal, $curso);
        $mensagem = $this->substituirVariaveisDaPessoa($mensagem, $personid);
        
        return $mensagem;
    }
    
    
    /**
     * Traduz as variáveis referentes ao curso de uma mensagem
     * @param String $mensagem - Mensagem com as variáveis
     * @param AcpCurso $curso o Type do curso
     * @return String - Mensagem traduzida
     */
    public function substituirVariaveisDoCurso($mensagem, AcpCurso $curso)
    {
        // Variáveis para substituição
            $tags = array(
                '$CURSO_CODIGO' => $curso->codigo,
                '$CURSO_NOME' => $curso->nome,
                '$CURSO_DESCRICAO' => $curso->descricao,
                '$CURSO_DATA_INICIAL' => $curso->datainicio,
                '$CURSO_DATA_FINAL' => $curso->datafim
            );
            
            //Aplica a substituição das variáveis
            $mensagem = (strlen($mensagem) > 0) ? strtr($mensagem, $tags) : "";
            
        return $mensagem;
    }
    
    /**
     * Traduz as variáveis referentes aos dados da pessoa de uma mensagem
     * @param String $mensagem - Mensagem com as variáveis
     * @param int $personId - Código da pessoa
     * @return String - Mensagem traduzida
     */
    public function substituirVariaveisDaPessoa($mensagem, $personId)
    {
        $busPhysicalPerson = new BusinessBasicBusPhysicalPerson();
        $person = $busPhysicalPerson->getPhysicalPerson($personId);
        
        // Variáveis para substituição
        $tags = array(
            '$PESSOA_CODIGO' => $person->personId,
            '$PESSOA_NOME' => $person->name,            
            '$PESSOA_NASCIMENTO' => $person->dateBirth);

        //Aplica a substituição das variáveis
        $mensagem = (strlen($mensagem) > 0) ? strtr($mensagem, $tags) : "";

        return $mensagem;
    }
    
    /**
     * Retorna a determinada legenda do campo de mensagem
     * @param type $campo - nome do campo de mensagem
     * @return string - Legenda do campo
     */
    public static function obterLegendaDosCampos($campo)
    {
        if( $campo == 'regras.termoinscricao' || $campo == 'regras.mensageminicial')
        {
            $msg = _M('Variáveis para formatação do texto', $module) . '<br />' .'<br />' .
                  '$CURSO_CODIGO: ' . _M('Código do curso do candidato.', $module) . '<br />' .
                  '$CURSO_NOME: ' . _M('Nome do curso do candidato.', $module) . '<br />' .
                  '$CURSO_DESCRICAO: ' . _M('Descrição do curso do candidato.', $module) . '<br />' .
                  '$CURSO_DATA_INICIAL: ' . _M('Data inicial do curso do candidato.', $module) . '<br />' .
                  '$CURSO_DATA_FINAL: ' . _M('Data final do curso do candidato.', $module) . '<br />' .'<br />' . 
                  '$PESSOA_CODIGO: ' . _M('Código da pessoa associada à inscrição.', $module) . '<br />' .
                  '$PESSOA_NOME: ' . _M('Nome da pessoa associada à inscrição.', $module) . '<br />' .
                  '$PESSOA_NASCIMENTO: ' . _M('Data de nascimento da pessoa associada à inscrição.', $module).'<br />'.'<br />';
        }        
        elseif( $campo == 'regras.mensagemfinal' )
        {
            $msg = _M('Variáveis para formatação do texto', $module) . '<br />' .'<br />' .
                  '$CURSO_CODIGO: ' . _M('Código do curso do candidato.', $module) . '<br />' .
                  '$CURSO_NOME: ' . _M('Nome do curso do candidato.', $module) . '<br />' .
                  '$CURSO_DESCRICAO: ' . _M('Descrição do curso do candidato.', $module) . '<br />' .
                  '$CURSO_DATA_INICIAL: ' . _M('Data inicial do curso do candidato.', $module) . '<br />' .
                  '$CURSO_DATA_FINAL: ' . _M('Data final do curso do candidato.', $module) . '<br />' . '<br />' .
                  '$PESSOA_CODIGO: ' . _M('Código da pessoa associada à inscrição.', $module) . '<br />' .
                  '$PESSOA_NOME: ' . _M('Nome da pessoa associada à inscrição.', $module) . '<br />' .
                  '$PESSOA_NASCIMENTO: ' . _M('Data de nascimento da pessoa associada à inscrição.', $module). '<br />' .'<br />' . 
                  '$TITULOS_NUMERO_PARCELAS: ' . _M('Número de parcelas referentes a taxa de inscrição geradas ao candidato.', $module). '<br />' .
                  '$TITULOS_VALOR: ' . _M('Valor das parcelas referentes a taxa de inscrição geradas ao candidato.', $module). '<br />' .'<br />' . 
                  '$TURMA_CODIGO: ' . _M('Código da turma em que o candidato foi inscrito.', $module). '<br />' .
                  '$TURMA_DESCRICAO: ' . _M('Descrição da turma em que o candidato foi inscrito.', $module). '<br />' .
                  '$TURMA_MINIMO_ALUNOS: ' . _M('Número mínimo de alunos da turma em que o candidato foi inscrito.', $module). '<br />' .
                  '$TURMA_MAXIMO_ALUNOS: ' . _M('Número máximo de alunos da turma em que o candidato foi inscrito.', $module).'<br />'.'<br />';
        }
        
        return $msg;
    }
}
?>
