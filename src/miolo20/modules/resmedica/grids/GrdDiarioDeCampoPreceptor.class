<?php

/**
 * <--- Copyright 2005-2011 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * @author Nataniel I. da Silva [nataniel@solis.com.br]
 *
 * @since
 * Class created on 03/11/2014
 *
 **/


class GrdDiarioDeCampoPreceptor extends SGrid
{
    /**
     * @var type boolean
     */
    private $habilitaAcoes;
    
    public function __construct($filters)
    {
        $module = MIOLO::getCurrentModule();
        
        $columns = array(
            'meddiariodecampopreceptor.inicio' => new MGridColumn(_M('Início', $module), 'center', true, NULL, true, NULL, false),
            'meddiariodecampopreceptor.fim' => new MGridColumn(_M('Fim', $module), 'center', true, NULL, true, NULL, false),
            'meddiariodecampopreceptor.conteudoabordado' => new MGridColumn(_M('Conteúdo abordado', $module), 'center', true, NULL, true, NULL, false),
            'meddiariodecampopreceptor._cargahoraria' => new MGridColumn(_M('Carga horária', $module), 'right', true, NULL, true, NULL, false),
        );
        
        $primaryKeys = array('diariodecampopreceptorid'=>'%meddiariodecampopreceptor.diariodecampopreceptorid%', 'ofertadeunidadetematicaid'=>'%meddiariodecampopreceptor.ofertadeunidadetematicaid%');
        
        //
        $oferta = new MedOfertaDeUnidadeTematica( MIOLO::_REQUEST('ofertadeunidadetematicaid') );
        $this->habilitaAcoes = strlen($oferta->encerramento) == 0;
        
        parent::__construct($filters, $columns, __CLASS__, $primaryKeys);
        
        $this->disableExports();
        $this->disablePagination();
    }
    
    public function createOptsUpdate($pkey = array())
    {
        $opts = parent::createOptsUpdate($pkey);
        $opts['event'] = 'btnManage';
        
        return $opts;
    }
    
    public function displayActionUpdate($opts = null, $action = null)
    {
        if ( $this->habilitaAcoes )
        {
            parent::displayActionUpdate($opts, $action);
        }
    }
    
    public function displayActionDelete($opts = null, $action = null)
    {
        if ( $this->habilitaAcoes )
        {
            parent::displayActionDelete($opts, $action);
        }
    }
}