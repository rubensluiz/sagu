<?php

class FrmIndicador extends SManagementForm
{
    public function __construct()
    {
        parent::__construct(new MedIndicador(), array('indicadorId'));
    }

    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $action = MIOLO::getCurrentAction();
        $function = MIOLO::_REQUEST('function');

        if ( in_array($function,  array(SForm::FUNCTION_UPDATE,  SForm::FUNCTION_DELETE)) )
        {
            $indicadorId = MIOLO::_REQUEST('indicadorId');
            $data = new $this->object($indicadorId);
            $fields[] = new MTextLabel('indicadorId', $indicadorId, _M('Cуdigo', $module));
            $fields[] = new MHiddenField('indicadorId', $indicadorId);
        }

        $especialidades = MedEnfase::listRecords();
        $enfaseid = new MSelection('enfaseid', $this->getFormValue('enfaseid', $data->enfaseid), _M('Especialidade', $module), $especialidades);
        $enfaseid->setJsHint(_M('Especialidade', $module));

        $quantidadePeriodo = new MSelection('periodoid', $this->GetFormValue('periodoid', $data->periodoid), _M('Perнodo (ANO)', $module), MedPeriodo::listaPeriodos());

        $descricao = new MMultilineField('descricao', $data->descricao, _M('Descriзгo', $module), SAGU::getParameter('basic', 'FIELD_DESCRIPTION_SIZE'), SAGU::getParameter('basic', 'FIELD_MULTILINE_NUM_ROWS'), SAGU::getParameter('basic', 'FIELD_MULTILINE_NUM_COLS'));
        $descricao->setIsRequired(true);
        $descricao->setJsHint(_M('Descriзгo', $module));

        $perioodicidade = new MSelection('periodicidade', $this->GetFormValue('periodicidade', $data->periodicidade), _M('Periodicidade de avaliaзгo', $module), MedIndicador::listarPeriodicidades());

        $meta = new MTextField('meta', $this->getFormValue('meta', $data->meta), _M('Meta', $module), SAGU::getParameter('BASIC','FIELD_DESCRIPTION_SIZE'));

        $situacao = new MSelection('situacao', $this->GetFormValue('situacao', $data->situacao), _M('Situaзгo', $module), MedIndicador::listarSituacoes());

        $fields[] = $enfaseid;
        $fields[] = $quantidadePeriodo;
        $fields[] = $descricao;
        $fields[] = $perioodicidade;
        $fields[] = $meta;
        $fields[] = $situacao;

        $validators[] = new MRequiredValidator('enfaseid', _M('Especialidade', $module));
        $validators[] = new MRequiredValidator('periodoid', _M('Perнodo (ANO)', $module));
        $validators[] = new MRequiredValidator('situacao', _M('Situaзгo', $module));

        parent::defineFields($fields, $validators, $data);
    }
}
?>