<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This class Default defines To report identification
 *
 * @author Leovan Tavares da Silva [leovan] [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/06/2006
 *
 **/
 
/**
 * Default defines 
 * To report identification
 */
define('REPORT_ID', 'AC003'); 
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

$MIOLO = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();
$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
        
    public function examinationLabelTop($reportData)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        $busCompany  = new BusinessBasicBusCompany();
        $busFile     = new BusinessBasicBusFile();

        $this->setLineWidth(0.3);
        $this->cell(190, 112, '', 'LRBT', 0);
         
        $this->cell(70, 12, '', '', 1);        
        $this->cell(70, 12, '', '', 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 22);
        $this->cell(110, 12, strtoupper(_M('Exame final', $module)), 0, 1);
        $this->cell(65, 5, '', 0, 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 22);
        $this->cell(175, 5, 'PROEN/' . $reportData->fakeName, 0, 0);
        $this->ln();
         
        $this->cell(190,7, '', '', 0);
        $this->ln();
        $this->cell(10, 7, '', 0, 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
        $this->cell(30, 7, strtoupper(_M('Professor', $module)) . ' (a): ' . $reportData->professorId . ' - ' . $reportData->professor, 0, 0);
        $this->ln();
        $this->cell(10, 7, '', 0, 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
        $this->cell(30, 7, strtoupper(_M('Curso', $module)) . ': ' . $reportData->courseId . ' - ' . strtoupper($reportData->courseName), 0, 0);
        $this->ln();    
        $this->cell(10, 7, '', 0, 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
        $this->cell(30, 7, strtoupper(_M('Disciplina', $module)) . ': ' . $reportData->curricularComponentId . ' - ' . strtoupper($reportData->curricularComponentName), 0, 0);
        $this->ln();
        $this->cell(10, 7, '', 0, 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
        $this->cell(50, 7, strtoupper(_M('Dia', $module)) . ': ' . $reportData->weekDay, 0, 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
        $this->cell(40, 7, strtoupper(_M('Sala', $module)) . ': ' . $reportData->room, 0, 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
        $this->cell(50, 7, strtoupper(_M('Período', $module)) . ': ' . $reportData->periodId, 0, 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
        $this->cell(30, 7, strtoupper(_M('Oferecida', $module)) . ': ' . $reportData->offer, 0, 0);
        $this->ln();
        $this->cell(10, 7, '', 0, 0);
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
        $this->cell(30, 7, strtoupper(_M('Data de exame', $module)) . ': ' . $reportData->examinationDate, 0, 0);
        $this->ln(12);

        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 10);
        $this->cell(100, 7, '', '', 0);
        $this->cell(150 ,7, _M('Secretaria de ensino', $module) . ', ' . $reportData->month . ' ' . _M('de', $module) . ' ' . $reportData->year, '', 0);

           $this->ln();    
        $this->ln();
        $this->ln();
        $this->ln();
        $this->ln();
        $this->ln();
        $this->ln();
        }     
}


/**
 * PDF extension to generate report
 */
class RptExaminationLabel
{
    var $listSpace;    
    
    public function RptExaminationLabel($data = null)
    {
        $MIOLO       = MIOLO::getInstance();
        $module      = MIOLO::getCurrentModule();
            
                       
        // Generating PDF file
        $pdf = new PDF();
        $pdf->aliasNbPages();
        //$pdf->personName = $rdata->name;
        // First page
        $pdf->setTopMargin(1);
        
        $pdf->addPage('P', 'mm', 'A4'); 

        $reportData->finalExamination = $data->finalExamination;

        for ( $x = 0; $x < count($reportData->finalExamination); $x++ ) 
        {
            $reportData->fakeName                = $data->fakeName;
            $reportData->periodId                = $data->periodId;
            $reportData->courseName              = $reportData->finalExamination[$x][3];
            $reportData->courseId                = $reportData->finalExamination[$x][2];
            $reportData->professorId             = $reportData->finalExamination[$x][0];
            $reportData->professor               = $reportData->finalExamination[$x][1];
            $reportData->curricularComponentName = $reportData->finalExamination[$x][5];
            $reportData->curricularComponentId   = $reportData->finalExamination[$x][4];
            $reportData->weekDay                 = $reportData->finalExamination[$x][6];
            $reportData->room                    = $reportData->finalExamination[$x][7];
            $reportData->offer                   = $reportData->finalExamination[$x][9];
            $reportData->examinationDate         = $reportData->finalExamination[$x][10];
            $reportData->month                   = $data->extensionMonth;
            $reportData->year                    = $data->year;
            $pdf->examinationLabelTop($reportData);
        }

        $pdf->close();
        $pdf->output();
    }
}

?>
