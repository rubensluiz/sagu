<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This class Default defines To report identification
 *
 * @author Leovan Tavares da Silva [leovan] [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/06/2006
 *
 **/
 
/**
 * Default defines 
 * To report identification
 */
define('REPORT_ID', 'AC004'); 
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

$MIOLO = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();
$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    /**
     * Defines the footer for this report
     */
    public function Footer()
    {
        $module = MIOLO::getCurrentModule();
        $this->setY(-15);
        $pn = $this->PageNo().'/{nb}';
        $this->cell(190, 1, '', 'B', 1);
        $this->ln();
        
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 8);
               
        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'I', 8);
        $this->cell(50, 4, $text, 0, 0);
        $this->cell(140, 4, _M('RELATÓRIO @1', $module, REPORT_ID).' '._M('Página @1', $module, $pn), 0, 0, 'R');
        $this->ln();
    }

    /**
     * Defines the header for this report
     */
    public function Header()
    {
        $module = MIOLO::getCurrentModule();
        $MIOLO  = MIOLO::getInstance();
        
        $busCompany  = new BusinessBasicBusCompany();
        $company     = $busCompany->getCompany(SAGU::getParameter('BASIC', 'DEFAULT_COMPANY_CONF'));     //get company data

        if ( strlen(SAGUFile::getPhotoPath($company->personId)) > 0 )
        {
            $this->Image(SAGUFile::getPhotoPath($company->personId),10, 10, 25, SAGU::getParameter('BASIC', 'PHOTO_FORMAT'));
        }

        $this->setY(35);
        
    }
}


/**
 * PDF extension to generate report
 */
class RptLearningPeriodSchedule
{
    /**
     * Method to generate the report
     */
    public function RptLearningPeriodSchedule($data = null)
    {
        $MIOLO       = MIOLO::getInstance();
        $module      = MIOLO::getCurrentModule();
        
        //get the business classes wich will be used to generate the PDF file
        $business    = new BusinessAcademicBusLearningPeriodSchedule();
        
        $reportData  = $business->getSchedules($data->periodId);
        
        // Generating PDF file
        $pdf = new PDF();
        $pdf->aliasNbPages();
        // First page
        $pdf->addPage('P', 'mm', 'A4');
        $pdf->ln();
        
        unset($ant);
        $x = false;
        
        if ( count($reportData) > 0 )
        {
            foreach ($reportData as $row)
            {
                if ( count($ant) > 0 )
                {
                    if ( $ant[0] != $row[0] )
                    {
                        $y = $pdf->getY();
                        $pdf->addPage('P', 'mm', 'A4');
                        $x = true;
                        $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 14);
                        $pdf->setY(10);
                        $pdf->cell(190,10, _M('PERÍODO LETIVO', $module) . ' ' . $data->periodId . ' ' . _M('HORÁRIO - TURNO', $module) . ' ' . $row[1], 0, 0, 'C');
                        //$pdf->setY($y);
                    }
                    
                    if ( $ant[2] != $row[2] )
                    {
                        $x == false ? $pdf->addPage('P', 'mm', 'A4') : $x = false;
                        $y = $pdf->getY();
                        $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
                        $pdf->setY(20);
                        $pdf->cell(190,5, $row[3], 0, 0, 'C');
                        //$pdf->setY($y);
                        $pdf->ln(10);
                    }
                    
                    if ( $ant[4] != $row[4] || $ant[5] != $row[5] )
                    {
                        $pdf->ln();
                        $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 12);
                        $pdf->cell(190,5, $row[4] . ' - ' . $row[6], 0, 0, 'L');
                        $pdf->ln();
                        $pdf->setFillColor(230);
                        $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 10);

                        if ( MIOLO::_request('printSchedule') == DB_FALSE )
                        {
                            $pdf->cell(70,5, _M('Disciplina', $module), 1, 0, 'C', 1);
                            $pdf->cell(28,5, _M('Sala-Prédio', $module), 1, 0, 'C', 1);
                            $pdf->cell(70,5, _M('Professor', $module), 1, 0, 'C', 1);
                            $pdf->cell(22,5, _M('Data inicial', $module), 1, 0, 'C', 1);
                        }
                        else
                        {
                            $pdf->cell(68,5, _M('Disciplina', $module), 1, 0, 'C', 1);
                            $pdf->cell(20,5, _M('Sala-Prédio', $module), 1, 0, 'C', 1);
                            $pdf->cell(62,5, _M('Professor', $module), 1, 0, 'C', 1);
                            $pdf->cell(20,5, _M('Data inicial', $module), 1, 0, 'C', 1);
                            $pdf->cell(20,5, _M('Horário', $module), 1, 0, 'C', 1);
                        }

                        $pdf->setFillColor(255);
                        $pdf->ln();
                    }
                    
                    $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 8);

                    if ( MIOLO::_request('printSchedule') == DB_FALSE )
                    {
                        $pdf->cell(70,5, $row[8], 1, 0, 'L');
                        $pdf->cell(28,5, $row[9], 1, 0, 'C');
                        $pdf->cell(70,5, $row[10], 1, 0, 'L');
                        $pdf->cell(22,5, $row[11], 1, 0, 'C');
                    }
                    else
                    {
                        $pdf->cell(68,5, $row[8], 1, 0, 'L');
                        $pdf->cell(20,5, $row[9], 1, 0, 'C');
                        $pdf->cell(62,5, $row[10], 1, 0, 'L');
                        $pdf->cell(20,5, $row[11], 1, 0, 'C');
                        $pdf->cell(20,5, $row[13] . ' - ' . $row[14] , 1, 0, 'C');
                    }

                    $pdf->ln();
                    
                    $ant = $row;
                }
                else
                {
                    $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 14);
                    $pdf->setY(10);
                    $pdf->cell(190,10, _M('PERÍODO LETIVO', $module) . ' ' . $data->periodId . ' ' . _M('HORÁRIO - TURNO', $module) . ' ' . $row[1], 0, 0, 'C');
                    $pdf->ln();
                    
                    $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);
                    $pdf->setY(20);
                    $pdf->cell(190,5, $row[3], 0, 0, 'C');
                    $pdf->ln(10);
                    
                    $pdf->setY(35);
                    $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 12);
                    $pdf->cell(190,5, $row[4] . ' - ' . $row[6], 0, 0, 'L');
                    $pdf->ln();
                    $pdf->setFillColor(230);
                    $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 10);

                    if ( MIOLO::_request('printSchedule') == DB_FALSE )
                    {
                        $pdf->cell(70,5, _M('Disciplina', $module), 1, 0, 'C', 1);
                        $pdf->cell(28,5, _M('Sala-Prédio', $module), 1, 0, 'C', 1);
                        $pdf->cell(70,5, _M('Professor', $module), 1, 0, 'C', 1);
                        $pdf->cell(22,5, _M('Data inicial', $module), 1, 0, 'C', 1);

                        $pdf->setFillColor(255);
                        $pdf->ln();
                    
                        $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 8);
                        $pdf->cell(70,5, $row[8], 1, 0, 'L');
                        $pdf->cell(28,5, $row[9], 1, 0, 'C');
                        $pdf->cell(70,5, $row[10], 1, 0, 'L');
                        $pdf->cell(22,5, $row[11], 1, 0, 'C');
                        $pdf->ln();
                    }
                    else
                    {
                        $pdf->cell(68,5, _M('Disciplina', $module), 1, 0, 'C', 1);
                        $pdf->cell(20,5, _M('Sala-Prédio', $module), 1, 0, 'C', 1);
                        $pdf->cell(62,5, _M('Professor', $module), 1, 0, 'C', 1);
                        $pdf->cell(20,5, _M('Data inicial', $module), 1, 0, 'C', 1);
                        $pdf->cell(20,5, _M('Horário', $module), 1, 0, 'C', 1);

                        $pdf->setFillColor(255);
                        $pdf->ln();
                    
                        $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 8);
                        $pdf->cell(68,5, $row[8], 1, 0, 'L');
                        $pdf->cell(20,5, $row[9], 1, 0, 'C');
                        $pdf->cell(62,5, $row[10], 1, 0, 'L');
                        $pdf->cell(20,5, $row[11], 1, 0, 'C');
                        $pdf->cell(20,5, $row[13] . ' - ' . $row[14] , 1, 0, 'C');
                        $pdf->ln();
                    }
                    $ant = $row;
                } 
            }
        }
        //Close and generate the document        
        $pdf->close();
        $pdf->output();
    }
}

?>
