<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This class Default defines To report identification
 *
 * @author Leovan Tavares da Silva [leovan] [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/06/2006
 *
 **/
 
$MIOLO  = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();
$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

define('REPORT_ID', 'SP001');
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    var $col  = 0;

    /**
     * Defines the footer for this report
     */
    public function Footer()
    {
        $this->setY(15);
        $module = MIOLO::getCurrentModule();
        $pn     = $this->PageNo().'/{nb}';
    }

    /**
     * Defines the header for this report
     */
    public function Header()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $this->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 12);
        $this->ln(4);

        $busCompany = new BusinessBasicBusCompany();
        $company    = $busCompany->getCompany(SAGU::getParameter('BASIC', 'DEFAULT_COMPANY_CONF'));

        $this->cell(200, 8, $company->personName . ' - ' . $company->companyTypeDescription, '', 0, 'C');
        $this->ln(6);
        $this->cell(200, 8, 'PÓS-GRADUAÇÃO DE PESQUISA, EXTENSÃO E PÓS-GRADUAÇÃO - PROPEX', '', 'C','C');
        $this->ln(6);
    }
}

/**
 * PDF extension to generate report
 */
class RptEnrollMaterialAfterGraduation
{
    /**
     * Method to generate the report
     */
    public function RptEnrollMaterialAfterGraduation($data = null)
    {

        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $busCompany = new BusinessBasicBusCompany();
        $company    = $busCompany->getCompany(SAGU::getParameter('BASIC', 'DEFAULT_COMPANY_CONF'));
        $busFile    = new BusinessBasicBusFile();

        // Generating PDF file
        $this->generateContent($data);
    }

    function generateContent($rdata)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $busContract       = new BusinessAcademicBusContract();
        $busPhysicalPeron  = new BusinessBasicBusPhysicalPerson();
        $busLearningPeriod = new BusinessAcademicBusLearningPeriod();

        $busPossibiliesAndMaterial  = new BusinessAcademicBusPossibilitiesAndMaterialOfEnrollAfterGraduation();

        $this->pdf = new PDF();
        $this->pdf->aliasNbPages();

        $getLearningPeriod = $busLearningPeriod->getLearningPeriod($rdata['learningPeriod']);

        $filters2->courseId      = $getLearningPeriod->courseId;
        $filters2->courseVersion = $getLearningPeriod->courseVersion;

        $this->pdf->setFillColor(242);

        if ( strlen($rdata['contractId']) > 0 )
        {
            $this->pdf->addPage('P', 'mm', 'A4');
            $this->pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);

            //Relatório individual
            $getContract = $busContract->getContract($rdata['contractId']);

            $this->pdf->cell(200, 8, $getContract->courseName, '', 0, 'C');
            $this->pdf->ln(6);
            $this->pdf->cell(200, 8, $rdata['periodId'] . ' ' . _M('CURSO', $module) . ' ' . $rdata['contractCourseId'], '', 0, 'C');
            $this->pdf->ln(6);
            $this->pdf->cell(200, 8, _M('REQUERIMENTO DE MATRÍCULA', $module), '', 0, 'C');

            $getPhysicalPerson = $busPhysicalPeron->getPhysicalPerson($rdata['contractPersonId']);

            $this->pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 10);
            $this->pdf->ln(6);
            $this->pdf->cell(120, 8, _M('ALUNO', $module) . ': ' . $getContract->personName, '', 0, 'L');
            $this->pdf->cell(80, 8,  _M('CÓDIGO', $module) . ': ' . $getContract->personId, '', 0, 'L');
            $this->pdf->ln(6);
            $this->pdf->cell(120, 8, $getPhysicalPerson->location . ' ' . $getPhysicalPerson->number . ', ' . $getPhysicalPerson->complement, '', 0, 'L');
            $this->pdf->cell(80, 8,  _M('BAIRRO', $module) . ': ' . $getPhysicalPerson->neighborhood, '', 0, 'L');
            $this->pdf->ln(6);
            $this->pdf->cell(80, 8, _M('CIDADE', $module) . ': ' . $getPhysicalPerson->cityName, '', 0, 'L');
            $this->pdf->cell(40, 8,  _M('CEP', $module) . ': ' . $getPhysicalPerson->zipCode, '', 0, 'L');
            $this->pdf->cell(80, 8,  _M('TELEFONE', $module) . ': ' . $getPhysicalPerson->residentialPhone, '', 0, 'L');
            $this->pdf->ln(10);

            $this->pdf->cell(30, 8,  _M('CÓD', $module),                  'TBL', 0, 'L', 1);
            $this->pdf->cell(120, 8, _M('DISCIPLINA', $module), 'TB',  0, 'L', 1);
            $this->pdf->cell(30, 8,  _M('HORÁRIO', $module),             'TBR', 0, 'L', 1);
            $this->pdf->ln(10);

            $filters->courseId      = $rdata['contractCourseId'] ;
            $filters->courseVersion = $rdata['contractCourseVersion'] ;

            $afterGraduationCurricularComponents = $busPossibiliesAndMaterial->possibilitiesOfEnroll($filters);

            $auxCargaHoraria = 0;
            foreach ( $afterGraduationCurricularComponents as $key => $value )
            {
                $auxCargaHoraria += $value[2];
                $this->pdf->cell(30, 8,  $value[0], '', 0, 'L');
                $this->pdf->cell(120, 8, substr($value[1], 0, 40), '',  0, 'L');
                $this->pdf->cell(30, 8,  $value[2] . ' h.a.', '', 0, 'L');
                $this->pdf->ln(6);
            }
                $this->pdf->cell(30, 8,  '', 'TBL', 0, 'L', 1);
                $this->pdf->cell(120, 8, 'TOTAL', 'TB',  0, 'L', 1);
                $this->pdf->cell(30, 8,  $auxCargaHoraria . ' h.a.', 'TBR', 0, 'L', 1);
                $this->pdf->ln(15);
                $this->pdf->cell(200, 8, 'Lajeado,_____ de _________________ de 2006', '', 0, 'L');
                $this->pdf->ln(15);
                $this->pdf->cell(120, 8, '', '', 0, 'L');
                $this->pdf->cell(60, 8, '__________________________', '', 0, 'C');
                $this->pdf->ln(5);
                $this->pdf->cell(120, 8, '', '', 0, 'L');
                $this->pdf->cell(60, 8, 'Aluno', '', 0, 'C');

                $this->pdf->ln(5);
                $this->pdf->cell(50, 8, $rdata['employeeName'], '', 0, 'L');
                $this->pdf->ln(5);
                $this->pdf->cell(50, 8, $rdata['functionDescription'], '', 0, 'L');
                $this->pdf->ln(5);
                $this->pdf->cell(50, 8, $rdata['sector'], '', 0, 'L');

                $this->pdf->close();
                $this->pdf->output();
        }
        else
        {
            //Relatório p/ todos os cursos
            $personsContract = $busPossibiliesAndMaterial->contractPersonsCourse($filters2);

            foreach ( $personsContract as $key1 => $value1 )
            {
                $this->pdf->addPage('P', 'mm', 'A4');
                $this->pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 10);

                //Relatório individual
                $this->pdf->cell(200, 8, $getLearningPeriod->courseName, '', 0, 'C');
                $this->pdf->ln(6);
                $this->pdf->cell(200, 8, $rdata['periodId'] . ' ' . _M('CURSO', $module) . ' ' . $getLearningPeriod->courseId, '', 0, 'C');
                $this->pdf->ln(6);
                $this->pdf->cell(200, 8, _M('REQUERIMENTO DE MATRÍCULA', $module), '', 0, 'C');

                $getPhysicalPerson = $busPhysicalPeron->getPhysicalPerson($value1[0]);

                $this->pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 10);
                $this->pdf->ln(6);
                $this->pdf->cell(120, 8, _M('ALUNO', $module) . ': ' . $getPhysicalPerson->name, '', 0, 'L');
                $this->pdf->cell(80, 8,  _M('CÓDIGO', $module) . ': ' . $getPhysicalPerson->personId, '', 0, 'L');
                $this->pdf->ln(6);
                $this->pdf->cell(120, 8, $getPhysicalPerson->location . ' ' . $getPhysicalPerson->number . ', ' . $getPhysicalPerson->complement, '', 0, 'L');
                $this->pdf->cell(80, 8,  _M('BAIRRO', $module) . ': ' . $getPhysicalPerson->neighborhood, '', 0, 'L');
                $this->pdf->ln(6);
                $this->pdf->cell(80, 8, _M('CIDADE', $module) . ': ' . $getPhysicalPerson->cityName, '', 0, 'L');
                $this->pdf->cell(40, 8,  _M('CEP', $module) . ': ' . $getPhysicalPerson->zipCode, '', 0, 'L');
                $this->pdf->cell(80, 8,  _M('TELEFONE', $module) . ': ' . $getPhysicalPerson->residentialPhone, '', 0, 'L');
                $this->pdf->ln(10);
                $this->pdf->cell(30, 8,  _M('CÓD', $module),                  'TBL', 0, 'L', 1);
                $this->pdf->cell(120, 8, _M('DISCIPLINA', $module), 'TB',  0, 'L', 1);
                $this->pdf->cell(30, 8,  _M('HORÁRIO', $module),             'TBR', 0, 'L', 1);
                $this->pdf->ln(10);

                $filters->courseId      = $getLearningPeriod->courseId;
                $filters->courseVersion = $getLearningPeriod->courseVersion;

                $afterGraduationCurricularComponents = $busPossibiliesAndMaterial->possibilitiesOfEnroll($filters);

                $auxCargaHoraria = 0;
                foreach ( $afterGraduationCurricularComponents as $key => $value )
                {
                    $auxCargaHoraria += $value[2];
                    $this->pdf->cell(30, 8,  $value[0], '', 0, 'L');
                    $this->pdf->cell(120, 8, substr($value[1], 0, 40), '',  0, 'L');
                    $this->pdf->cell(30, 8,  $value[2] . ' h.a.', '', 0, 'L');
                    $this->pdf->ln(6);
                }
                    $this->pdf->cell(30, 8,  '', 'TBL', 0, 'L', 1);
                    $this->pdf->cell(120, 8, 'TOTAL', 'TB',  0, 'L', 1);
                    $this->pdf->cell(30, 8,  $auxCargaHoraria . ' h.a.', 'TBR', 0, 'L', 1);
                    $this->pdf->ln(15);
                    $this->pdf->cell(200, 8, 'Lajeado,_____ de _________________ de 2006', '', 0, 'L');
                    $this->pdf->ln(15);
                    $this->pdf->cell(120, 8, '', '', 0, 'L');
                    $this->pdf->cell(60, 8, '__________________________', '', 0, 'C');
                    $this->pdf->ln(5);
                    $this->pdf->cell(120, 8, '', '', 0, 'L');
                    $this->pdf->cell(60, 8, 'Aluno', '', 0, 'C');

                    $this->pdf->ln(5);
                    $this->pdf->cell(50, 8, $rdata['employeeName'], '', 0, 'L');
                    $this->pdf->ln(5);
                    $this->pdf->cell(50, 8, $rdata['functionDescription'], '', 0, 'L');
                    $this->pdf->ln(5);
                    $this->pdf->cell(50, 8, $rdata['sector'], '', 0, 'L');
            }

            $this->pdf->close();
            $this->pdf->output();
        }

    }
}

?>
