<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for acdEnroll table
 *
 * @author Guilherme Gregory [guilherme@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 07/06/2006
 *
 **/


/**
 * Class to manipulate the acdEnroll table
 **/
class BusinessAcademicBusProfessorCertified extends sBusiness
{
    //FIXME: Add comment
    /**
     * Enter description here...
     *
     * @param unknown_type $periodId
     * @param unknown_type $professorId
     * @return unknown
     */
    function getProfessorCertified($periodId, $professorId)
    {
        $sql = '    SELECT G.shortName, 
                           G.academicnumberhours,
                           H.periodid, 
                           M.curricularComponentId,
                           D.totalEnrolled,
                           L.name 
                       FROM acdscheduleprofessor A 
                INNER JOIN basphysicalpersonprofessor B 
                        ON (A.professorid = B.personid) 
                INNER JOIN acdschedule C 
                        ON (A.scheduleid = C.scheduleid) 
                INNER JOIN unit_acdGroup D 
                        ON (C.groupid = D.groupid)
                INNER JOIN unit_acdcurriculum F 
                        ON (D.curriculumid = F.curriculumid) 
                INNER JOIN acdCurricularComponent G 
                        ON (F.curricularcomponentid = G.curricularcomponentid AND 
                            F.curricularcomponentversion = G.curricularcomponentversion) 
                INNER JOIN unit_acdlearningperiod H 
                        ON (D.learningperiodid = H.learningperiodid)
                INNER JOIN basturn I 
                        ON (I.turnid = H.turnId)
                INNER JOIN unit_acdcurriculum M
                        ON (M.curriculumId = D.curriculumId)
                INNER JOIN acdcourse L
                        ON (L.courseId = M.courseId) 
                     WHERE A.professorid = ?
                       AND H.periodid = ?
                  ORDER BY H.periodId';

        $args = array(
                $professorId, 
                $periodId
        );

        $db   = $this->getDatabase();
        $result = $db->query(SAGU::prepare($sql, $args));

        return $result;
    }

}

?>
