<?php 
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for acdEnrollConfig table
 *
 * @author Jonas Guilherme Dahmer [jonas@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Jonas Guilherme Dahmer [jonas@solis.coop.br]
 * 
 * @since
 * Class created on 20/01/2012
 *
 **/

/**
 * Class to manipulate the acdEnrollConfig table
 **/
class BusinessAcademicBusEnrollConfig extends sBusiness
{
    public $type, $MIOLO;
    
    /**
     * Class constructor
     */
    public function __construct()
    {
        $this->MIOLO = MIOLO::getInstance();
        $this->MIOLO->uses('types/AcdEnrollConfig.class','academic');
        $this->type = new AcdEnrollConfig();

        parent::__construct();
    }

    
    /**
     * Pega a configuracao
     *
     * @param Integer $enrollConfigId
     * @return Object
     */
    public function getEnrollConfig($enrollConfigId)
    {
        $this->type->enrollConfigId = $enrollConfigId;
        $this->type->populate();
        return $this->type;
    }
    
    
    public function searchEnrollConfig($data)
    {
        return $this->type->search($data);
    }
    
    
    /**
     * Funcao que retorna o curso. Deprecated
     *
     * @param String $courseId
     * @param Integer $courseVersion
     * @param Integer $turnId
     * @param Interger $unitId
     * @return Array
     */
    public function getCourseEnrollConfig($courseId, $courseVersion, $turnId, $unitId)
    {
        $r = $this->type->search(array('courseId'=>$courseId, 'courseVersion'=>$courseVersion, 'turnId'=>$turnId, 'unitId'=>$unitId));
        return $r[0];
    }
    
    /**
     * Atualiza uma configuracao de matricula
     *
     * @param Array $data
     * @return boolean
     */
    public function updateEnrollConfig($data)
    {
        $this->type->enrollConfigId = $data->enrollConfigId;
        $this->type->populate();

        $this->type->courseId = $data->courseId;
        $this->type->courseVersion = $data->courseVersion;
        $this->type->turnId = $data->turnId;
        $this->type->unitId = $data->unitId;
        $this->type->freeInCourseConditions = $data->freeInCourseConditions; 
        $this->type->timeToCourseDisapproved = $data->timeToCourseDisapproved;
        $this->type->showElectives = $data->showElectives;
        $this->type->showOptionals = $data->showOptionals;
        $this->type->blockDebt = $data->blockDebt;
        $this->type->sendConfirmationEmail = $data->sendConfirmationEmail;
        $this->type->confirmationEmailId = $data->confirmationEmailId; 
        $this->type->showOtherCoursesGroups = $data->showOtherCoursesGroups;
        $this->type->showOtherUnitsGroups = $data->showOtherUnitsGroups;
        $this->type->showOtherTurnsGroups = $data->showOtherTurnsGroups; 
        $this->type->showSpecialRegimenGroups = $data->showSpecialRegimenGroups;
        $this->type->showOtherClassesGroups = $data->showOtherClassesGroups;
        $this->type->freeOtherPeriodGroups = $data->freeOtherPeriodGroups;
        $this->type->disapprovementsToBlock = $data->disapprovementsToBlock;
        $this->type->mayChooseGroups = $data->mayChooseGroups;
        $this->type->checkScheduleShock = $data->checkScheduleShock;
        $this->type->blockDocsMissing = $data->blockDocsMissing;
        $this->type->blockRequirementMissing = $data->blockRequirementMissing;
        $this->type->showOtherGroupsField = $data->showOtherGroupsField;
        $this->type->scheduleDisplayMode = $data->scheduleDisplayMode;
        $this->type->disapprovementsToBlockTimeToCourseDisapproved = $data->disapprovementsToBlockTimeToCourseDisapproved;
        $this->type->showElectivesExternal = $data->showElectivesExternal;
        $this->type->showOptionalsExternal = $data->showOptionalsExternal;
        $this->type->showoOtherCoursesGroupsExternal = $data->showoOtherCoursesGroupsExternal;
        $this->type->showoOtherUnitsGroupsExternal = $data->showoOtherUnitsGroupsExternal;
        $this->type->showOtherTurnsGroupsExternal = $data->showOtherTurnsGroupsExternal;
        $this->type->showOtherClassesGroupsExternal = $data->showOtherClassesGroupsExternal;
        $this->type->freeOtherPeriodGroupsExternal = $data->freeOtherPeriodGroupsExternal;
        $this->type->checkScheduleShockExternal = $data->checkScheduleShockExternal;
        $this->type->blockDocsMissingExternal = $data->blockDocsMissingExternal;
        $this->type->blockDebtExternal = $data->blockDebtExternal;
        $this->type->checkDebitsExternal = $data->checkDebitsExternal;
        $this->type->scheduleDisplayModeExternal =  $data->scheduleDisplayModeExternal;
        $this->type->sendConfirmationEmailExternal = $data->sendConfirmationEmailExternal;
        $this->type->minimumAndMaxLimitCreditsBlockEnroll = $data->minimumAndMaxLimitCreditsBlockEnroll;
        $this->type->minimumCreditsTurnCourse = $data->minimumCreditsTurnCourse;
        $this->type->maxCreditsTurnCourse = $data->maxCreditsTurnCourse;
        $this->type->minimumCreditsOtherTurn = $data->minimumCreditsOtherTurn;
        $this->type->maxCreditsOtherTurn = $data->maxCreditsOtherTurn;
        $this->type->enableSelectCurricularComponentPending = $data->enableSelectCurricularComponentPending;
        $this->type->enableSelectCurricularComponentOfFuturePeriods = $data->enableSelectCurricularComponentOfFuturePeriods;
        $this->type->enableEnrollWeb = $data->enableEnrollWeb;
        $this->type->minimumAndMaxLimitCreditsBlockEnrollExternal = $data->minimumAndMaxLimitCreditsBlockEnrollExternal;
        $this->type->minimumCreditsTurnCourseExternal = $data->minimumCreditsTurnCourseExternal;
        $this->type->maxCreditsTurnCourseExternal = $data->maxCreditsTurnCourseExternal;
        $this->type->minimumCreditsOtherTurnCourseExternal = $data->minimumCreditsOtherTurnCourseExternal;
        $this->type->maxCreditsOtherTurnCourseExternal = $data->maxCreditsOtherTurnCourseExternal;
        $this->type->enableSelectCurricularComponentOfFuturePeriodsExternal = $data->enableSelectCurricularComponentOfFuturePeriodsExternal;
        $this->type->enableSelectCurricularComponentPendingExternal = $data->enableSelectCurricularComponentPendingExternal;
        $this->type->configurableMessageStep1 = $data->configurableMessageStep1;
        $this->type->configurableMessageStep2 = $data->configurableMessageStep2;
        $this->type->configurableMessageStep3 = $data->configurableMessageStep3;
        $this->type->avaliableContract = $data->avaliableContract;
        $this->type->avaliableAddendum =  $data->avaliableAddendum;
        $this->type->avaliableEnrollConfirmation = $data->avaliableEnrollConfirmation;
        $this->type->checkDebits = $data->checkDebits;
        $this->type->beginDate = $data->beginDate;
        $this->type->endDate = $data->endDate;
        $this->type->enablePreEnroll = $data->enablePreEnroll;
        $this->type->preEnrollConsumeVacant = $data->preEnrollConsumeVacant;
        $this->type->preEnrollCheckSignature = $data->preEnrollCheckSignature;
        $this->type->preEnrollCheckFirstPayment = $data->preEnrollCheckFirstPayment;
        $this->type->preEnrollWebConfirmation = $data->preEnrollWebConfirmation;
        $this->type->ativaPreMatriculaPara = $data->ativaPreMatriculaPara;
        $this->type->pendenciasGnuteca = $data->pendenciasGnuteca;
        $this->type->bloqueioEmprestimos = $data->bloqueioEmprestimos;
        $this->type->bloqueioMultas = $data->bloqueioMultas;
        $this->type->bloqueioPenalidades = $data->bloqueioPenalidades;
        $this->type->bloqueioMensagem = $data->bloqueioMensagem;
        $this->type->diasPrazoConfirmacao = $data->diasPrazoConfirmacao;
        $this->type->cancelamentoStateContractId = $data->cancelamentoStateContractId;
        $this->type->cancelamentoReasonId = $data->cancelamentoReasonId;
        
        $this->type->preMatriculaChecaClassificacao = $data->preMatriculaChecaClassificacao;
        $this->type->preMatriculaCancelamentoDeInadimplentesNaClassificacao = $data->preMatriculaCancelamentoDeInadimplentesNaClassificacao;
        $this->type->preMatriculaTipoDeCalculoDoCoeficiente = $data->preMatriculaTipoDeCalculoDoCoeficiente;
        
        $this->type->habilitaEmailDeConfirmacao = $data->habilitaEmailDeConfirmacao;
        $this->type->emailDeConfirmacaoId = $data->emailDeConfirmacaoId;
        
        $this->type->bloqueiaMatriculaWebSemestreCheio = $data->bloqueiaMatriculaWebSemestreCheio;
        
        //Máscaras
        $this->type->mascDisciplina = strtoupper($data->mascdisciplina);
        $this->type->mascOferta = strtoupper($data->mascoferta);
        $this->type->mascOutrasOfertas = strtoupper($data->mascoutrasofertas);
        
        return $this->type->update();
    }
    
    /**
     * Insere uma configuracao de matricula
     *
     * @param Array $data
     * @return boolean
     */
    public function insertEnrollConfig($data)
    {
        $this->type->courseId = $data->courseId;
        $this->type->courseVersion = $data->courseVersion;
        $this->type->turnId = $data->turnId;
        $this->type->unitId = $data->unitId;
        $this->type->freeInCourseConditions = $data->freeInCourseConditions?$data->freeInCourseConditions:DB_TRUE; 
        $this->type->timeToCourseDisapproved = $data->timeToCourseDisapproved?$data->timeToCourseDisapproved:'0';
        $this->type->showElectives = $data->showElectives?$data->showElectives:DB_TRUE;
        $this->type->showOptionals = $data->showOptionals?$data->showOptionals:DB_TRUE;
        $this->type->blockDebt = $data->blockDebt?$data->blockDebt:DB_TRUE;
        $this->type->sendConfirmationEmail = $data->sendConfirmationEmail?$data->sendConfirmationEmail:DB_FALSE;
        $this->type->confirmationEmailId = $data->confirmationEmailId; 
        $this->type->showOtherCoursesGroups = $data->showOtherCoursesGroups?$data->showOtherCoursesGroups:DB_TRUE;
        $this->type->showOtherUnitsGroups = $data->showOtherUnitsGroups?$data->showOtherUnitsGroups:DB_TRUE;
        $this->type->showOtherTurnsGroups = $data->showOtherTurnsGroups?$data->showOtherTurnsGroups:DB_TRUE; 
        $this->type->showSpecialRegimenGroups = $data->showSpecialRegimenGroups?$data->showSpecialRegimenGroups:DB_TRUE;
        $this->type->showOtherClassesGroups = $data->showOtherClassesGroups?$data->showOtherClassesGroups:DB_FALSE;
        $this->type->freeOtherPeriodGroups = $data->freeOtherPeriodGroups?$data->freeOtherPeriodGroups:DB_TRUE;
        $this->type->disapprovementsToBlock = $data->disapprovementsToBlock?$data->disapprovementsToBlock:'0';
        $this->type->mayChooseGroups = $data->mayChooseGroups?$data->mayChooseGroups:DB_FALSE;
        $this->type->checkScheduleShock = $data->checkScheduleShock?$data->checkScheduleShock:DB_TRUE;
        $this->type->blockDocsMissing = $data->blockDocsMissing?$data->blockDocsMissing:DB_FALSE;
        $this->type->blockRequirementMissing = $data->blockRequirementMissing?$data->blockRequirementMissing:DB_TRUE;
        $this->type->showOtherGroupsField = $data->showOtherGroupsField?$data->showOtherGroupsField:DB_TRUE;
        $this->type->scheduleDisplayMode = $data->scheduleDisplayMode?$data->scheduleDisplayMode:'B';
        $this->type->disapprovementsToBlockTimeToCourseDisapproved = $data->disapprovementsToBlockTimeToCourseDisapproved;
        $this->type->showElectivesExternal = $data->showElectivesExternal?$data->showElectivesExternal:DB_FALSE;
        $this->type->showOptionalsExternal = $data->showOptionalsExternal?$data->showOptionalsExternal:DB_FALSE;
        $this->type->showoOtherCoursesGroupsExternal = $data->showoOtherCoursesGroupsExternal?$data->showoOtherCoursesGroupsExternal:DB_TRUE;
        $this->type->showoOtherUnitsGroupsExternal = $data->showoOtherUnitsGroupsExternal?$data->showoOtherUnitsGroupsExternal:DB_FALSE;
        $this->type->showOtherTurnsGroupsExternal = $data->showOtherTurnsGroupsExternal?$data->showOtherTurnsGroupsExternal:DB_FALSE;
        $this->type->showOtherClassesGroupsExternal = $data->showOtherClassesGroupsExternal?$data->showOtherClassesGroupsExternal:DB_TRUE;
        $this->type->freeOtherPeriodGroupsExternal = $data->freeOtherPeriodGroupsExternal?$data->freeOtherPeriodGroupsExternal:DB_FALSE;
        $this->type->checkScheduleShockExternal = $data->checkScheduleShockExternal?$data->checkScheduleShockExternal:DB_TRUE;
        $this->type->blockDocsMissingExternal = $data->blockDocsMissingExternal?$data->blockDocsMissingExternal:DB_TRUE;
        $this->type->blockDebtExternal = $data->blockDebtExternal?$data->blockDebtExternal:DB_FALSE;
        $this->type->checkDebitsExternal = $data->checkDebitsExternal?$data->checkDebitsExternal:DB_TRUE;
        $this->type->scheduleDisplayModeExternal =  $data->scheduleDisplayMode?DB_TRUE:DB_FALSE;
        $this->type->sendConfirmationEmailExternal = $data->sendConfirmationEmailExternal?$data->sendConfirmationEmailExternal:DB_FALSE;
        $this->type->minimumAndMaxLimitCreditsBlockEnroll = $data->minimumAndMaxLimitCreditsBlockEnroll?$data->minimumAndMaxLimitCreditsBlockEnroll:DB_TRUE;
        $this->type->minimumCreditsTurnCourse = $data->minimumCreditsTurnCourse;
        $this->type->maxCreditsTurnCourse = $data->maxCreditsTurnCourse;
        $this->type->minimumCreditsOtherTurn = $data->minimumCreditsOtherTurn;
        $this->type->maxCreditsOtherTurn = $data->maxCreditsOtherTurn;
        $this->type->enableSelectCurricularComponentPending = $data->enableSelectCurricularComponentPending?$data->enableSelectCurricularComponentPending:DB_TRUE;
        $this->type->enableSelectCurricularComponentOfFuturePeriods = $data->enableSelectCurricularComponentOfFuturePeriods?$data->enableSelectCurricularComponentOfFuturePeriods:DB_TRUE;
        $this->type->enableEnrollWeb = $data->enableEnrollWeb?$data->enableEnrollWeb:DB_FALSE;
        $this->type->minimumAndMaxLimitCreditsBlockEnrollExternal = $data->minimumAndMaxLimitCreditsBlockEnrollExternal?$data->minimumAndMaxLimitCreditsBlockEnrollExternal:DB_TRUE;
        $this->type->minimumCreditsTurnCourseExternal = $data->minimumCreditsTurnCourseExternal;
        $this->type->maxCreditsTurnCourseExternal = $data->maxCreditsTurnCourseExternal;
        $this->type->minimumCreditsOtherTurnCourseExternal = $data->minimumCreditsOtherTurnCourseExternal;
        $this->type->maxCreditsOtherTurnCourseExternal = $data->maxCreditsOtherTurnCourseExternal;
        $this->type->enableSelectCurricularComponentOfFuturePeriodsExternal = $data->enableSelectCurricularComponentOfFuturePeriodsExternal?$data->enableSelectCurricularComponentOfFuturePeriodsExternal:DB_FALSE;
        $this->type->enableSelectCurricularComponentPendingExternal = $data->enableSelectCurricularComponentPendingExternal?$data->enableSelectCurricularComponentPendingExternal:DB_TRUE;
        $this->type->configurableMessageStep1 = $data->configurableMessageStep1;
        $this->type->configurableMessageStep2 = $data->configurableMessageStep2;
        $this->type->configurableMessageStep3 = $data->configurableMessageStep3;
        $this->type->avaliableContract = $data->avaliableContract?$data->avaliableContract:DB_TRUE;
        $this->type->avaliableAddendum = $data->avaliableAddendum?$data->avaliableAddendum:DB_TRUE;
        $this->type->avaliableEnrollConfirmation = $data->avaliableEnrollConfirmation?$data->avaliableEnrollConfirmation:DB_TRUE;
        $this->type->checkDebits = $data->checkDebits?$data->checkDebits:DB_FALSE;
        $this->type->beginDate = $data->beginDate;
        $this->type->endDate = $data->endDate;
        $this->type->enablePreEnroll = $data->enablePreEnroll;
        $this->type->preEnrollConsumeVacant = $data->preEnrollConsumeVacant;
        $this->type->preEnrollCheckSignature = $data->preEnrollCheckSignature;
        $this->type->preEnrollCheckFirstPayment = $data->preEnrollCheckFirstPayment;
        $this->type->preEnrollWebConfirmation = $data->preEnrollWebConfirmation;
        $this->type->ativaPreMatriculaPara = $data->ativaPreMatriculaPara;
        $this->type->pendenciasGnuteca = $data->pendenciasGnuteca;
        $this->type->bloqueioEmprestimos = $data->bloqueioEmprestimos;
        $this->type->bloqueioMultas = $data->bloqueioMultas;
        $this->type->bloqueioPenalidades = $data->bloqueioPenalidades;
        $this->type->bloqueioMensagem = $data->bloqueioMensagem;
        $this->type->diasPrazoConfirmacao = $data->diasPrazoConfirmacao;
        $this->type->cancelamentoStateContractId = $data->cancelamentoStateContractId;
        $this->type->cancelamentoReasonId = $data->cancelamentoReasonId;
        
        $this->type->preMatriculaChecaClassificacao = $data->preMatriculaChecaClassificacao;
        $this->type->preMatriculaCancelamentoDeInadimplentesNaClassificacao = $data->preMatriculaCancelamentoDeInadimplentesNaClassificacao;
        $this->type->preMatriculaTipoDeCalculoDoCoeficiente = $data->preMatriculaTipoDeCalculoDoCoeficiente;
        
        $this->type->habilitaEmailDeConfirmacao = $data->habilitaEmailDeConfirmacao;
        $this->type->emailDeConfirmacaoId = $data->emailDeConfirmacaoId;

        $this->type->bloqueiaMatriculaWebSemestreCheio = $data->bloqueiaMatriculaWebSemestreCheio;
        
        //Máscaras
        $this->type->mascDisciplina = strtoupper($data->mascdisciplina);
        $this->type->mascOferta = strtoupper($data->mascoferta);
        $this->type->mascOutrasOfertas = strtoupper($data->mascoutrasofertas);
        
        return $this->type->insert();
    }
    
    /**
     * Delete the specified enroll config.
     *
     * @param $courseId (int): Identifier of the course to be retrieved.
     * @param $courseVersion (int): Identifier of the course to be retrieved.
     * @param $turnId (int): Identifier of the course to be retrieved.
     * @param $unitId (int): Identifier of the course to be retrieved.
     *
     * @return On succeed, returns true. Otherwise, false.
     *
     */
    public function deleteEnrollConfig($data)
    {    
        $sql = 'DELETE FROM acdenrollconfig WHERE courseId=? and courseVersion=? and turnId=? and unitId=?';
        $params = array($data->courseId, $data->courseVersion, $data->turnId, $data->unitId);
        $result = SDatabase::execute($sql, $params);
        return $result;
    }
    

    /**
     * Função que verifica se já existe uma configuração de matrícula.
     *
     * @param varchar $courseId
     * @param varchar $courseVersion
     * @param integer $turnId
     * @param integer $unitId
     * @return boolean
     */
    public function checkExistCourseEnrollConfig($courseId, $courseVersion, $turnId, $unitId)
    {
        if ( $this->getCourseEnrollConfig($courseId, $courseVersion, $turnId, $unitId) )
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}

?>
