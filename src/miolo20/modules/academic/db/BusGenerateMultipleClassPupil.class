<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * @author Helio Henrique Rodrigues Guimaraes [helio@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Andre Chagas Dias [andre@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 12/03/2007
 *
 **/

/**
 * Class to manipulate the acdgenerateMultipleLearningPeriod table
 **/
class BusinessAcademicBusGenerateMultipleClassPupil extends sBusiness
{
    /**
     * Do a search on the database table handled by the class
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getPupils($filters)
    {        
        
        $args = array( $filters->courseId,
                       $filters->courseVersion,
                       $filters->turnId,
                       $filters->unitId );
        
        $sql = 'SELECT DISTINCT B.contractId,             
                                B.personId,
                                C.name as personName,
                                G.classid,
                                G.begindate
                           FROM unit_acdContract B
                INNER JOIN ONLY basPhysicalPerson C
                             ON (C.personId = B.personId)
                      LEFT JOIN unit_acdclasspupil G
                             ON (B.contractid = G.contractid)
                           LEFT JOIN unit_acdEnroll D
                             ON (B.contractid = D.contractid)
                      LEFT JOIN unit_acdcurriculum E
                             ON (E.curriculumid = D.curriculumid)
                      LEFT JOIN acdCurricularComponent F
                             ON (E.curricularcomponentid = F.curricularcomponentid 
                                AND E.curricularcomponentversion=F.curricularcomponentversion)
                          WHERE B.courseId       = ?
                            AND B.courseVersion  = ?
                            AND B.turnId         = ?
                            AND B.unitId         = ?
                            AND B.conclusionDate IS NULL ';
        
        if($filters->classId)
        {
            $sql .= ' AND G.classid = ? ';
            $args[] = $filters->classId;
        }
        
        $sql .=' ORDER BY 2';
        
        $db = $this->getDatabase();
        
        $result = $db->query(SAGU::prepare($sql, $args));

        return $result;
    }
}
?>
