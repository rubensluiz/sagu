<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * This class contains methods to get, search, list, insert,
 * update and delete register into acdRegimen table.
 *
 * @author Jamiel Spezia [jamiel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Fabiano Tomasini [fabiano@solis.coop.br]
 *
 * @since
 * This class was created 2005/09/06
 *
 * */
class BusinessAcademicBusRegimen extends sBusiness
{
    /**
     * List all records from the table handled by the class
     *
     * @param: None
     *
     * @returns (array): Return an array with the entire table
     *
     * */
    public function listRegimen()
    {
        $sql = 'SELECT regimenId,
                       description
                  FROM acdRegimen
              ORDER BY description ';
        
        $ret = $this->getDatabase()->query($sql);

        return $ret;
    }

    /**
     * Obtain the specified regimen id data.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $regimenId (int): Identifier of the regimen to be retrieved.
     *
     * @return If the specified courseId exists, returns an object (regimen) containing its data. 
     * Otherwise, returns null.
     *
     */
    function getRegimen($regimenId)
    {
        $select = 'SELECT A.regimenId,
                          A.description,
                          A.userName,
                          TO_CHAR(A.dateTime,\'' . SAGU::getParameter('BASIC', 'MASK_DATE') . '\'),
                          A.ipAddress
                     FROM acdRegimen A
                    WHERE A.regimenId = ? ';

        $db = $this->getDatabase();
        $result = $this->getDatabase()->query(SAGU::prepare($select, $regimenId));

        $curricular = new acdRegimen();

        list ( $curricular->regimenId,
               $curricular->regimenDescription,
               $curricular->userName,
               $curricular->dateTime,
               $curricular->ipAddress ) = $result[0];

        return $curricular;
    }

    /**
     * Search for regimen.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $data Object containing data to filter the listing.
     *
     * @return An array containing the search results.
     *
     */
    function searchRegimen($data=null)
    {

        $select = 'SELECT A.regimenId,
                          A.description
                     FROM acdRegimen A ';

        $where = '';
        unset($args);
        if ( strlen($data->regimenId) > 0 )
        {
            $where .= '    AND   A.regimenId = ?';
            $args[] = $data->regimenId;
        }
        if ( strlen($data->description) > 0 )
        {
            $where .= '    AND   UNACCENT(A.description) ILIKE UNACCENT(?)';
            $args[] = '%' . $data->description . '%';
        }

        if ( $where != '' )
        {
            $select .= '    WHERE ' . substr($where, 8) .
                    ' ORDER BY A.description';

            $result = $this->getDatabase()->query(SAGU::prepare($select, $args));
        }

        return $result;
    }

    /**
     * Insert a new acdRegimen.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $data (object): Object (regimen) containing the data to be inserted.
     *
     * @return On success, the course id of the inserted record. Otherwise, returns null.
     *
     */
    function insertRegimen($data)
    {
        $insert = 'INSERT INTO acdRegimen
                               ( description )
                        VALUES (?)';

        $args[] = $data->description;
        $result = $this->getDatabase()->execute(SAGU::prepare($insert, $args));

        return $result;
    }

    /**
     * Update the specified regimen data.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $data (object): Data identifying the course and its new data.
     *
     * @return On succeed, returns true. Otherwise, false.
     *
     */
    function updateRegimen($data)
    {
        $update = 'UPDATE acdRegimen
                      SET description = ?
                    WHERE regimenId   = ?';

        $args = array( $data->description,
                       $data->regimenId);

        $sqls = SAGU::prepare($update, $args);

        for ( $i = 0; $i < count($sqls); $i++ )
        {
            $result = $this->getDatabase()->execute($sqls[$i]);
        }

        return $result;
    }

    /**
     * Delete the specified regimen.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $regimenId (int): Identifier of the regimenId to be retrieved.
     *
     * @return On succeed, returns true. Otherwise, false.
     *
     */
    function deleteRegimen($regimenId)
    {
        $delete = 'DELETE FROM acdRegimen
                    WHERE regimenId = ? ';

        $result = $this->getDatabase()->execute(SAGU::prepare($delete, $regimenId));

        return $result;
    }
    
    /**
     * Obtem o registro do regime normal.
     * 
     * @author Bruno E. Fuhr [bruno@solis.com.br]
     * 
     * @return Array - Código e descrição do regime normal.
     */
    public function obterRegimeNormal()
    {
        $sql = " SELECT regimenid, description 
                   FROM acdregimen 
                  WHERE regimenid <> getparameter('ACADEMIC', 'REGIME_DE_FERIAS')::int 
                    AND regimenid <> getparameter('BASIC', 'SPECIAL_REGIMEN')::int 
               ORDER BY 1 ASC LIMIT 1";
        
        $result = $this->getDatabase()->query($sql);
        
        return $result[0];
    }
}
?>
