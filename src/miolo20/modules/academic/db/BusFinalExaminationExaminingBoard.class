<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * This file handles the connection and actions for acdEvaluationType table
 *
 * @author Moises Heberle [moiseh@gmail.com]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Moises Heberle [moiseh@gmail.com]
 *
 * @since
 * Class created on 08/02/2011
 *
 **/

class BusinessAcademicBusFinalExaminationExaminingBoard extends sBusiness
{
    public function searchFinalExaminationExaminingBoard($filters, $toObject = false)
    {
        $cols = array(
            'enrollId',
            'personId',
            'personName',
            'note'
        );

        $sql = 'SELECT FEEB.enrollId,
                   FEEB.personId,
                   PP.name AS personName,
                   FEEB.note
              FROM acdFinalExaminationExaminingBoard FEEB
   INNER JOIN ONLY basPhysicalPerson PP
                ON (PP.personId = FEEB.personId)';

        $where = array();
        if ( strlen($filters->enrollId) > 0 )
        {
            $where[] = 'FEEB.enrollId = ?';
            $args[] = $filters->enrollId;
        }

        if ( strlen($filters->personId) > 0 )
        {
            $where[] = 'FEEB.personId = ?';
            $args[] = $filters->personId;
        }

        $result = null;
        if ( count($where) > 0 )
        {
            $sql .= ' WHERE ' . implode(' AND ', $where) . ' ORDER BY FEEB.personId';

            $result = $this->getDatabase()->query(SAGU::prepare($sql, $args));
        }

        return (array) $toObject ? SAGU::resultToObject($result, $cols) : $result;
    }


    public function insertFinalExaminationExaminingBoard($data)
    {
        $sql = 'INSERT INTO acdFinalExaminationExaminingBoard
                            (enrollId, personId, note)
                     VALUES (?, ?, ?)';

        $args = array(
            $data->enrollId,
            $data->personId,
            $data->note
        );

        return $this->getDatabase()->execute(SAGU::prepare($sql, $args));
    }


    public function deleteFinalExaminationExaminingBoard($enrollId, $personId)
    {
        $sql = 'DELETE FROM acdFinalExaminationExaminingBoard
                      WHERE enrollId = ? AND personId = ?';

        $pk = array($enrollId, $personId);

        return $this->getDatabase()->execute(SAGU::prepare($sql, $pk));
    }
    
    public function teste()
    {
        return true;
    }

    /**
     * Consulta da última nota final cadastrada do TCC.
     * 
     * @param int $enrollId
     * @return array
     */
    public function getValorNotaFinal( $enrollId, $learningPeriodId)
    {
        $sql = "    SELECT J.degreeid,
                           E.note,
                           E.concept
                      FROM acdDegree J
                 LEFT JOIN acdDegreeEnroll E 
                        ON (E.degreeid = J.degreeid)
		       AND E.enrollId = ?
                     WHERE J.learningPeriodid = ?
                       AND J.parentdegreeid IS NULL
                  ORDER BY recorddate DESC
                     LIMIT 1";
        $query = SDatabase::query($sql, array($enrollId, $learningPeriodId));
        
        return $query[0];
    }
    
    /**
     * Insercao de nota final do TCC.
     * 
     * @param type array
     * @return array
     */
    public function insertValorNotaFinal ($note, $enrollId, $degreeId, $usaConceito = false)
    {
        $sql = 'INSERT INTO acdDegreeEnroll
                            (note, concept, enrollid, degreeid)
                     VALUES (?, ?, ?, ?)';
        
        $args[] = $usaConceito ? null : $note;
        $args[] = $usaConceito ? $note : null;
        $args[] = $enrollId;
        $args[] = $degreeId;
        
        SDatabase::execute($sql, $args);
        
        
    }
}
?>
