<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * This class contains methods to get, search, list, insert,
 * update and delete register into acdCurricularComponent table.
 *
 * @author Hélio H. R. Guimarães [helio@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * This class was created 06/10/2006
 *
 **/

class BusinessAcademicBusDiplomaDocument extends sBusiness
{
    /**
     * Obtain the curricular components from one course
     *
     * @author Hélio H. R. Guimarães [helio@solis.coop.br]
     *
     * @param $curricularComponentId (int): Identifier of the curriculum component to be retrieved.
     * @param $curricularComponentVersion (int): Identifier of the curriculum component to be retrieved.
     *
     * @return If the specified courseId exists, returns an object (curricularComponent) containing its data. 
     * Otherwise, returns null.
     *
     */
    function getCurricularComponentLessonsHours($filters)
    {
        $select = ' SELECT B.name as curricularComponentName,
                           B.academicnumberhours
                      FROM unit_acdcurriculum A
                INNER JOIN acdCurricularComponent B
                        ON (B.curricularComponentId = A.curricularComponentId)
                     WHERE A.courseId      = ? AND
                           A.courseVersion = ? AND
                           A.unitId        = ? AND
                           A.turnId        = ?';

        $db     = $this->getDatabase();
        $args = array(
                        $filters->courseId,
                        $filters->courseVersion,
                        $filters->unitId,
                        $filters->turnId
                     );

        $result = $db->query(SAGU::prepare($select, $args));

        return $result; 
    }
}
?>
