<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Descrição curta.
 * Descrição completa do objetivo da classe.
 * 
 * @author Samuel Koch [samuel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Samuel Koch [samuel@solis.coop.br]
 *
 *  @since
 *  Class created on 30/10/2008
 *
 **/

/**
 * Classe business
 */
class BusinessAcademicBusGenerateMultipleDataInLot extends sBusiness
{

    // Atributos da classe
    public $MIOLO, $sql;

    /**
     * Do a search on the database table handled by the class
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function alreadyExistsLearningPeriod($courseId, $courseVersion, $turnId, $unitId, $periodId)
    {
        $db = $this->getDatabase();
        $sql = 'SELECT A.learningPeriodId
                  FROM unit_acdlearningperiod A
                 WHERE A.courseId      = ?
                   AND A.courseVersion = ?
                   AND A.turnId        = ?
                   AND A.unitId        = ?
                   AND A.periodId      = ? ';
        
        $args = array(
                $courseId,
                $courseVersion,
                $turnId,
                $unitId,
                $periodId
        );
        
        $result = $db->query( SAGU::prepare( $sql, $args ) );
        
        if ( is_array( $result ) && (sizeof( $result ) > 0) )
        {
            return true;
        }
        
        return false;
    }

    /**
     * Do a search on the database table handled by the class
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function alreadyExistsDegree($learningPeriodId)
    {
        $db = $this->getDatabase();
        $sql = 'SELECT A.degreeId
                  FROM acdDegree A
                 WHERE A.learningPeriodId = ?';
        
        $args = array( 
                $learningPeriodId 
        );
        
        $result = $db->query( SAGU::prepare( $sql, $args ) );
        
        if ( is_array( $result ) && (sizeof( $result ) > 0) )
        {
            return true;
        }
        
        return false;
    }

    //FIXME: Add comment
    /**
     * Enter description here...
     *
     * @param unknown_type $learningPeriodId
     * @param unknown_type $weekDayId
     * @return unknown
     */
    public function alreadyExistsExamDate($learningPeriodId, $weekDayId = null)
    {
        $db = $this->getDatabase();
        
        $sql = 'SELECT learningPeriodId
                  FROM acdExamDate
                 WHERE learningPeriodId = ? ';
        
        $args[] = $learningPeriodId;
        
        if ( strlen( $weekDayId ) > 0 )
        {
            $sql .= ' AND weekDayId = ?';
            $args[] = $weekDayId;
        }
        
        $result = $db->query( SAGU::prepare( $sql, $args ) );
        
        if ( is_array( $result ) && sizeof( $result ) > 0 )
        {
            return true;
        }
        return false;
    }

    /**
     * Do a search on the database table handled by the class
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function alreadyExistsMessageContract($learningPeriodId)
    {
        $db = $this->getDatabase();
        $sql = 'SELECT A.learningPeriodId
                  FROM unit_acdMessageContractRenewal A
                 WHERE A.learningPeriodId = ?';
        
        $args = array( 
                $learningPeriodId 
        );
        $result = $db->query( SAGU::prepare( $sql, $args ) );
        
        if ( is_array( $result ) && (sizeof( $result ) > 0) )
        {
            return true;
        }
        
        return false;
    }

    /**
     * Do a search on the database table handled by the class
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function alreadyExistsPeriodEnrollDate($learningPeriodId)
    {
        $db = $this->getDatabase();
        $sql = 'SELECT A.learningPeriodId
                    FROM unit_acdPeriodEnrollDate A
                    WHERE A.learningPeriodId = ?';

        $args = array(
                $learningPeriodId
        );
        $result = $db->query(SAGU::prepare($sql, $args));

        if ( is_array($result) && (sizeof($result) > 0) )
        {
            return true;
        }
        return false;
    }
}

?>
