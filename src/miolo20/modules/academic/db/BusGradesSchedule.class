<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Descrição curta.
 * Descrição completa do objetivo da classe.
 * 
 * @author samuel [samuel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 *    samuel [samuel@solis.coop.br]
 *
 *  @since
 *  Class created on 12/12/2008
 *
 **/

/**
 * Classe business
 */
class BusinessAcademicBusGradesSchedule extends sBusiness
{
    // Atributos da classe
    protected $MIOLO, $sql;     

    /**
     * Enter description here...
     *
     * @param unknown_type $filters
     */
    public function searchGroups($filters)
    {
        $sql = ' SELECT A.groupId,
                        E.periodId,
                        F.courseId,
                        F.name,
                        C.curricularComponentId,
                        C.curricularComponentVersion,
                        C.name,
                        A.classId
                   FROM unit_acdGroup A
             INNER JOIN unit_acdcurriculum B 
                     ON (B.curriculumId = A.curriculumId)
             INNER JOIN acdCurricularComponent C 
                     ON (C.curricularComponentId      = B.curricularComponentId AND
                         C.curricularComponentVersion = B.curricularComponentVersion)
             INNER JOIN unit_acdlearningperiod E
                     ON (E.learningPeriodId = A.learningPeriodId)
             INNER JOIN acdCourse F
                     ON (F.courseId = E.courseId)
              LEFT JOIN unit_acdclass I
                     ON (I.classId = A.classId) ';

        if ( strlen($filters->periodId) > 0 )
        {
            $where .= ' AND E.periodId = ? ';
            $args[] = $filters->periodId;
        }
        
        if ( strlen($filters->classId) > 0 )
        {
            $where .= ' AND A.classId = ? ';
            $args[] = $filters->classId;
        }
        
        if ( strlen($filters->className) > 0 )
        {
            $where .= ' AND UNACCENT(I.name) ILIKE UNACCENT(?) ';
            $args[] = $filters->className;
        }

        if ( strlen($filters->courseId) > 0 )
        {
            $where .= ' AND E.courseId = ?';
            $args[] = $filters->courseId;
        }
        
        if ( strlen($filters->courseVersion) > 0 )
        {
            $where .= ' AND E.courseVersion = ?';
            $args[] = $filters->courseVersion;
        }
        
        if ( strlen($filters->groupIds) > 0 )
        {
            $where .= " AND A.groupId IN ({$filters->groupIds})";
        }
        
        if ( strlen($filters->courseName) > 0 )
        {
            $where .= ' AND UNACCENT(F.name) ILIKE UNACCENT(?)';
            $args[] = $filters->courseName;
        }
        
        $where .= ' AND A.isClosed = \'' . DB_FALSE . '\'
                    AND A.isCancellation = \'' . DB_FALSE . '\' ';
        
        unset($result);
        if ( strlen($where) > 0 )
        {
            $sql .= ' WHERE ' . substr($where, 4) . '
                   ORDER BY F.courseId,
                            F.name,
                            C.name ';

            $db = $this->GetDatabase();
            $result = $db->query(SAGU::prepare($sql, $args));
        }

        return $result;
    }

}

?>
