<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * This file handles the connection and actions for acdStateContract table
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 24/08/2006
 *
 **/

/**
 * Class to manipulate the acdMovementContract table
 **/
class BusinessAcademicBusStateContract extends sBusiness
{
    /**
     * List all records from the table handled by the class
     *
     * @param: None
     *
     * @returns (array): Return an array with the entire table
     *
     **/
    public function listStateContract()
    {
        $sql = 'SELECT stateContractId,
                       description
                  FROM acdStateContract
              ORDER BY 1';

        $result = $this->getDatabase()->query($sql);
        return $result;
    }

    public function searchStateContract($filters)
    {
        $sql = 'SELECT stateContractId,
                       description
                  FROM acdStateContract ';

        if ( strlen($filters->stateContractId) > 0 )
        {
            $where .= ' AND stateContractId = ? ';
            $args[] = $filters->stateContractId;
        }
        if ( strlen($filters->description) > 0 )
        {
            $where .= ' AND UNACCENT(description) ILIKE UNACCENT(?) ';
            $args[] = $filters->description . '%';
        }
        
        if ( strlen($where) > 0 )
        {
            $sql .= ' WHERE ' . substr($where, 4) . ' ORDER BY description';
            $db = $this->getDatabase();
            $result = $db->query(SAGU::prepare($sql, $args));
        }
        
        return $result;
    }
    
    /**
     * Retorna estado contratual atual do contrato.
     * 
     * @param int $contractId
     * @return int
     */
    public function getCurrentStateContractId($contractId, $learningPeriodId = null)
    {
        $sql = "SELECT statecontractid 
                  FROM acdmovementcontract 
                 WHERE contractid = ?";
                 
        $params[] = $contractId;
        if($learningPeriodId)
        {
           $sql.= " AND learningperiodid = ?";
           $params[] = $learningPeriodId;
        }
            
        $sql.= "ORDER BY statetime 
                    DESC LIMIT 1";
        
        $db = $this->getDatabase();
        
        $result = $db->query(SAGU::prepare($sql, $params));
        
        return $result[0][0];
    }
}

?>
