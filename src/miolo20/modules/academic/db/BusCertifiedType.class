<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * This class contains methods to get, search, list, insert,
 * update and delete register into acdCertifiedType table.
 *
 * @author Jamiel Spezia [jamiel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * This class was created 2005/09/06
 *
 **/

class BusinessAcademicBusCertifiedType extends sBusiness
{
    /**
     * Obtain the specified certifiedType id data.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $certifiedTypeId (int): Identifier of the certified type to be retrieved.
     *
     * @return If the specified courseId exists, returns an object (certifiedType) containing its data. 
     * Otherwise, returns null.
     *
     */
    function getCertifiedType($certifiedTypeId)
    {

        $select = 'SELECT A.description,
                          A.userName,
                          TO_CHAR(A.dateTime,\'' . SAGU::getParameter('BASIC', 'MASK_TIMESTAMP') . '\'),
                          A.ipAddress
                     FROM acdCertifiedType A
                    WHERE A.certifiedTypeId = ? ';

        $db     = $this->getDatabase();

        $result = $db->query(SAGU::prepare($select, $certifiedTypeId));

        $certified = new acdCertifiedType();

        list ( $certified->certifiedTypeDescription,
               $certified->userName,
               $certified->dateTime,
               $certified->ipAddress ) = $result[0];

        return $certified; 
    }

    /**
     * Search for certifiedType.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $data Object containing data to filter the listing.
     *
     * @return An array containing the search results.
     *
     */
    function searchCertifiedType($data=null)
    {

        $select = 'SELECT A.certifiedTypeId,
                          A.description
                     FROM acdCertifiedType A ';

        $where  = '';
        unset($args);
        if ( strlen($data->certifiedTypeId) > 0 )
        {
            $where .= '    AND   A.certifiedTypeId = ?';
            $args[] = $data->certifiedTypeId;
        }
        if ( strlen($data->description) > 0 )
        {
            $where .= '    AND   UNACCENT(A.description) ILIKE UNACCENT(?)';
            $args[] = $data->description . '%';
        }

        if ( $where != '' )
        {
            $select .= '    WHERE ' . substr($where,8) .
                       ' ORDER BY A.description';

            $db      = $this->getDatabase();
            $result  = $db->query(SAGU::prepare($select,$args));
        }

        return $result;
    }

    /**
     * Insert a new acdCertifiedType.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $data (object): Object (certified) containing the data to be inserted.
     *
     * @return On success, the course id of the inserted record. Otherwise, returns null.
     *
     */
    function insertCertifiedType($data)
    {
        $db = $this->getDatabase();

        $insert = 'INSERT INTO acdCertifiedType
                               ( description )
                        VALUES (?)';

        $args = array(  $data->description );

        $result = $db->execute(SAGU::prepare($insert, $args));
        
        return $result;
    }

    /**
     * Update the specified certifiedType data.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $data (object): Data identifying the course and its new data.
     *
     * @return On succeed, returns true. Otherwise, false.
     *
     */
    function updateCertifiedType($data)
    {
        $update = 'UPDATE acdCertifiedType
                      SET description       = ?
                    WHERE certifiedTypeId   = ?';

        $db     = $this->getDatabase();

        $args   = array($data->description,
                        $data->certifiedTypeId
                       );

        $sqls = SAGU::prepare($update, $args);

        for ( $i=0; $i<count($sqls); $i++ )
        {
            $result = $db->execute($sqls[$i]);
        }

        return $result;
    }

    /**
     * Delete the specified certifiedType.
     *
     * @author Jamiel Spezia [jamiel@solis.coop.br]
     *
     * @param $certifiedTypeId (int): Identifier of the certifiedTypeId to be retrieved.
     *
     * @return On succeed, returns true. Otherwise, false.
     *
     */
    function deleteCertifiedType($certifiedTypeId)
    {
        $delete = 'DELETE FROM acdCertifiedType
                    WHERE certifiedTypeId = ? ';


        $db     = $this->getDatabase();

        $result = $db->Execute(SAGU::prepare($delete,$certifiedTypeId));

        return $result;
    }

}

?>
