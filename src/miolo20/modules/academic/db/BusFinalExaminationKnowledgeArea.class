<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * This file handles the connection and actions for acdEvaluationType table
 *
 * @author Moises Heberle [moiseh@gmail.com]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Moises Heberle [moiseh@gmail.com]
 *
 * @since
 * Class created on 08/02/2011
 *
 **/

class BusinessAcademicBusFinalExaminationKnowledgeArea extends sBusiness
{
    public function searchFinalExaminationKnowledgeArea($filters, $toObject = false)
    {
        $cols = array(
            'enrollId',
            'knowledgeAreaId',
            'knowledgeAreaName'
        );

        $sql = 'SELECT FEKA.enrollId,
                   FEKA.knowledgeAreaId,
                   KA.name AS knowledgeAreaName
              FROM acdFinalExaminationKnowledgeArea FEKA
         LEFT JOIN acdKnowledgeArea KA
                ON (FEKA.knowledgeAreaId = KA.knowledgeAreaId)';

        $where = array();
        if ( strlen($filters->enrollId) > 0 )
        {
            $where[] = 'FEKA.enrollId = ?';
            $args[] = $filters->enrollId;
        }

        if ( strlen($filters->knowledgeAreaId) > 0 )
        {
            $where[] = 'KA.knowledgeAreaId = ?';
            $args[] = $filters->knowledgeAreaId;
        }

        $result = null;
        if ( count($where) > 0 )
        {
            $sql .= ' WHERE ' . implode(' AND ', $where) . ' ORDER BY KA.knowledgeAreaId';

            $result = $this->getDatabase()->query(SAGU::prepare($sql, $args));
        }

        return (array) $toObject ? SAGU::resultToObject($result, $cols) : $result;
    }


    public function insertFinalExaminationKnowledgeArea($data)
    {
        $sql = 'INSERT INTO acdFinalExaminationKnowledgeArea
                            (enrollId, knowledgeAreaId)
                     VALUES (?, ?)';

        $args = array(
            $data->enrollId,
            $data->knowledgeAreaId
        );

        return $this->getDatabase()->execute(SAGU::prepare($sql, $args));
    }


    public function deleteFinalExaminationKnowledgeArea($enrollId, $knowledgeAreaId)
    {
        $sql = 'DELETE FROM acdFinalExaminationKnowledgeArea
                      WHERE enrollId = ? AND knowledgeAreaId = ?';

        $pk = array($enrollId, $knowledgeAreaId);

        return $this->getDatabase()->execute(SAGU::prepare($sql, $pk));
    }
}
?>
