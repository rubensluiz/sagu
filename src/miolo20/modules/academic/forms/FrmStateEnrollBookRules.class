<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * State enroll book rules form
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * SAmuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class created on 06/07/2006
 *
 **/

class FrmStateEnrollBookRules extends SManagementForm
{
    public function __construct()
    {
        parent::__construct(new AcdStateEnrollBookRules(), array('stateEnrollBookRulesId'), 'BusStateEnrollBookRules');
    }


    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        $function = MIOLO::_REQUEST('function');

        if ( in_array($function, array(SForm::FUNCTION_UPDATE, SForm::FUNCTION_DELETE)) )
        {
            $stateEnrollBookRulesId = MIOLO::_REQUEST('stateEnrollBookRulesId');
            
            $fields[]  = new MTextLabel('stateEnrollBookRulesId', $stateEnrollBookRulesId, _M('Código', $module));
            $fields[]  = new MHiddenField('stateEnrollBookRulesId', $stateEnrollBookRulesId);
            
            $data = $this->busObject->getStateEnrollBookRules($stateEnrollBookRulesId);
            if ( count($data->stateIdRules) > 0 )
            {
                for ($x=0; $x<count($data->stateIdRules); $x++)
                {
                    $data->stateIdRules[$x] = '[' . $data->stateIdRules[$x] . ']';
                }
            }
        }

        $business = new BusinessAcademicBusStateEnrollBook();
        $stateEnrollBookId = new MComboBox('stateEnrollBookId', $this->getFormValue('stateEnrollBookId', $data->stateEnrollBookId), _M('Estado do livro matrícula', $module), $business->listStateEnrollBook());
        $stateEnrollBookId->setJsHint(_M('Informe o código do estado do livro matrícula',$module));
        $validators[] = new MRequiredValidator('stateEnrollBookId');
        $fields[] = $stateEnrollBookId;

        $business = new BusinessAcademicBusStatesContract();
        $fields[] = new MMultiTextField2('stateIdRules', $this->getFormValue('stateIdRules', $data->stateIdRules), _M('Regras', $module), array( new MSelection('stateContractId', NULL, _M('Estado contratual', $module), $business->listStatesContract()) ), 200, true, 'horizontal' );

        parent::defineFields($fields, $validators, $data);
    }


    public function  getTypesData()
    {
        $data = parent::getTypesData();
        
        unset($data->stateIdRules);
        if ( count($this->stateIdRules->value) > 0 )
        {
            foreach ( $this->stateIdRules->value as $row )
            {
                $data->stateIdRules[] = str_replace(']', '', str_replace('[', '', $row));
            }
        }
        else
        {
            $data->stateIdRules[] = NULL;
        }

        return $data;
    }
}
?>