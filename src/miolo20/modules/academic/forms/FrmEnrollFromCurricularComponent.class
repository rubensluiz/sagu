<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * PupilListing form
 *
 * @author Hélio H. R. Guimarães [william@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 01/12/2006
 *
 **/

/**
 * Form to manipulate a pupilListing
 **/
class FrmEnrollFromCurricularComponent extends SForm
{
    private $home;

    /**
     * Class constructor
     **/
    public function __construct($data)
    {
        $module = MIOLO::getCurrentModule();
        $this->home   = $data->home;

        parent::__construct( _M('Listar alunos matriculados por disciplina', $module), NULL, NULL );
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        $filtersSchedule->periodId      = MIOLO::_request('periodId');
        $filtersSchedule->courseId      = MIOLO::_request('courseId');
        $filtersSchedule->courseUnitId  = MIOLO::_request('unitId');
        $filtersSchedule->courseVersion = MIOLO::_request('courseVersion');
        $filtersSchedule->courseTurnId  = MIOLO::_request('turnId');

        $businessGroup = new BusinessAcademicBusGroup();
        $searchGroup   = $businessGroup->searchGroup($filtersSchedule);

        $gridGroup = $MIOLO->getUI()->getGrid($module, 'GrdGroupSearch', null);
        $gridGroup->setData($searchGroup);

        unset($gridGroup->actions); //Retira botão de update e delete

        parent::defineFields( array( 'fields' => $gridGroup, 'validators' => $validators, 'toolbar' => FALSE ) );
    }
}

?>
