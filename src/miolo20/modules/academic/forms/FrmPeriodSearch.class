<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * This file handles the connection and actions for basPeriod table
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br] 
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 25/08/2005
 */

/**
 * Form to search the basPeriod table
 */
class FrmPeriodSearch extends SSearchForm
{
    /**
     * Class constructor
     */
    public function __construct($data)
    {
        parent::__construct(_M('Localizar', 'basic'), new AcdPeriod(), array('periodId'), 'BusPeriod');
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);

        $data = $this->getTypesData();

        $periodIdS = new MTextField('periodIdS', $data->periodId, _M('Código',$module), SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $periodIdS->setJsHint(_M('Informe o código do período',$module));
        $fields[] = $periodIdS;

        $periodDescriptionS = new MTextField('descriptionS', $data->description, _M('Descrição',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $periodDescriptionS->setJsHint(_M('Informe a descrição do período',$module));
        $fields[] = $periodDescriptionS;

        parent::defineFields($fields, $module, 'GrdPeriodSearch');
    }

    public function getTypesData()
    {
        $data = parent::getTypesData();

        $data->periodId = MIOLO::_REQUEST('periodIdS');
        $data->description = MIOLO::_REQUEST('descriptionS');

        return $data;
    }
    
    public function setCurrentPeriod($args)
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $action = MIOLO::getCurrentAction();
        
        $goto = $MIOLO->GetActionURL($module, $action, null, array('function' => 'search'));
        $periodId = MIOLO::_REQUEST('periodId');
        
        $busConfig = new BusinessBasicBusConfig();
        $ok = $busConfig->setParameterValue('BASIC', 'CURRENT_PERIOD_ID', $periodId);
        
        if ( $ok )
        {
            $this->messageInfo(_M('O parâmetro <b>CURRENT_PERIOD_ID</b> foi alterado com sucesso para <b>@1</b>', null, $periodId), $goto);
        }
        else
        {
            $this->messageError(_M('Ops! Erro ao atualizar parâmetro...'), $goto);
        }
    }
}
?>