<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Academic document badge.
 * Contains the form to print badges
 *
 * @author Moises Heberle [sagu@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [sagu@solis.coop.br]
 *
 * @since
 * Class created on 20/03/2012
 */
class FrmContractGeneration extends SForm
{
    public function __construct($data)
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);

        parent::__construct(_M('Geracão de contrato', $module), null, null);

        // Desabilita alguns botões da toolbar
        $this->toolbar->disableButton(MToolBar::BUTTON_NEW);
        $this->toolbar->disableButton(MToolBar::BUTTON_SAVE);
        $this->toolbar->disableButton(MToolBar::BUTTON_SEARCH);
        $this->toolbar->disableButton(MToolBar::BUTTON_DELETE);
        $this->toolbar->disableButton(MToolBar::BUTTON_PRINT);
    }


    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $action = MIOLO::getCurrentAction();
        $function = MIOLO::_REQUEST('function');

        // Contrato
        $fields[] = $contractId = new SLookupContainer('contractId', $this->getRequestValue('contractId'), array(
            'module' => 'academic',
            'item' => 'ContractSimple',
            'label' => _M('Contrato', $module),
            'required' => true,
        ));
        $validators[] = new MRequiredValidator('contractId', _M('Contrato', $module));

        // Gerar
        $fields[] = $btn = new MButton('btnGenerate', _M('Gerar', $module));
        
        //Separator
        $fields[] = new MSeparator('');

        $this->SetFields($fields);
        $this->SetValidators($validators);

        parent::defineFields();
    }
    
    /**
     * Submete para formulario de geracao de contrato
     *
     * @param stdClass $args 
     */
    public function btnGenerate_click($args)
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $contractId = $this->getRequestValue('contractId');
        
        //
        $busContract = new BusinessAcademicBusContract();
        $busCourse = new BusinessAcademicBusCourse();
        $busFormationLevel = new BusinessAcademicBusFormationLevel();
        
        try
        {
            $contract = $busContract->getContract($contractId);
            $course = $busCourse->getCourse($contract->courseId);
            
            $formationLevelId = $course->formationLevelId;
            $formationLevel = $busFormationLevel->getFormationLevel($formationLevelId);
            $reportName = $formationLevel->reportName;
            
            if ( strlen($reportName) <= 0 )
            {
                throw new Exception( _M('Não existe um relatório configurado para o grau de formação do tipo @1. Contate o administrador.', $module, $formationLevel->description) );
            }
            
            $link = $MIOLO->getActionURL($module, 'main:document:generateReport', null, array(
                'report' => $reportName,
                'event' => 'btnGenerate_click',
                'str_contractid' => $contractId));
            
            $MIOLO->page->redirect($link);
        }
        catch (Exception $e)
        {
            $this->addError( $e->getMessage() );
        }
    }
}
?>