<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Login form
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 07/10/2005
 *
 **/

/**
 * Form to manipulate an enroll
 **/
class FrmLogin extends SForm
{

    private $postAction;

    /**
     * Class constructor
     **/
    public function __construct($postAction)
    {

        $module = MIOLO::getCurrentModule();

        parent::__construct( _M('Usuário', $module), NULL, NULL );
        $this->postAction = $postAction;
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $session = $MIOLO->session;
        $session->SetValue('loginUid',null);
        $session->SetValue('loginPasswd',null);

        if ( isset($MIOLO->getLogin()->id) )
        {
            $msg = _M('Você não tem permissão para matricular outros alunos. Se desejar proceder com sua própria matrícula, informe seu código de aluno e senha e clique no botão Login.', 'academic');
            $this->addError($msg);
        }
        $loginUid     = new MTextField('loginUid', $this->getFormValue('loginUid'), _M('Código',$module), 15);
        $loginUid->setJsHint(_M('Informe o usuário', $module));
        $validators[] = new MRequiredValidator('loginUid');
        $fields[]     = $loginUid;

        $loginPasswd  = new MPasswordField('loginPasswd', $this->getFormValue('loginPasswd'), _M('Senha',$module), 15);
        $loginPasswd->setJsHint(_M('Informe a senha da pessoa', $module));
        $validators[] = new MRequiredValidator('loginPasswd');
        $fields[]     = $loginPasswd;

        $fields[]     = new Separator('');

        //Error container
        $divError     = new MDiv('divError', $lblMsg, null, 'align=center');
        //$divError->addStyle('text-align', 'center');
        $fields[]     = $divError;

        unset($flds);
        $flds[]       = new MButton('btnOk', _M('Usuário', $module), null);
        $flds[]       = new Separator('');

        $divButtons   = new MDiv('divButtons', $flds, null, 'align=center');
        //$divButtons->addStyle('text-align', 'center');
        $fields[]     = $divButtons;

        $this->page->onLoad('document.' . $this->name . '.loginUid.focus()');

        parent::defineFields( array( 'fields' => $fields, 'validators' => $validators ) );
    }

    /**
     * Event triggered when user click ok
     **/
    public function btnOk_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $loginUid    = $this->loginUid->value;
        $loginPasswd = $this->loginPasswd->value;

        $MIOLO->uses('classes/sagu.class','basic');

        if ( SAGU::authenticate($loginUid, $loginPasswd) )
        {
            $session = $MIOLO->session;
            $session->setValue('loginUid',$loginUid);
            $session->setValue('loginPasswd',$loginPasswd);

            $this->page->redirect($MIOLO->getActionURL($module, $this->postAction));
        }
        else
        {
            $msg     = _M('Usuário ou senha inválida.', $module);

            $lblMsg        = new MText('lblMsg',$msg);
            $lblMsg->color = 'red';

            $flds[] = $lblMsg;
            $flds[] = new Separator('');
            $this->loginPasswd->value = '';

            $this->divError->addControl($flds);
        }
    }

}

?>
