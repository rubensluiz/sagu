<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * FrmCoursePupils
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 16/01/2006
 *
 **/
class FrmCoursePupils extends SForm
{
    /**
     * Class constructor
     */
    public function __construct()
    {
        $module = MIOLO::getCurrentModule();

        parent::__construct( _M('Listar alunos por curso',$module), NULL, NULL );
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $periodId      = MIOLO::_request('periodId');
        $unitId        = MIOLO::_request('unitId');
        $courseId      = MIOLO::_request('courseId');
        $courseVersion = MIOLO::_request('courseVersion');
        $turnId        = MIOLO::_request('turnId');
        $returnPath    = urldecode(stripslashes(MIOLO::_request('returnPath')));
        $returnData    = unserialize(urldecode(stripslashes(MIOLO::_request('returnData'))));
        
        $business = new BusinessAcademicBusPupilListing();
        $data     = $business->getCoursePupils($courseId, $courseVersion, $turnId, $unitId);
        
        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdListCoursePupils', null);
        $grdResults->setData($data);

        $fields[] = $grdResults;

        if ( strlen($returnPath) > 0 )
        {
            $fields[] = new Separator();
            $btn1     = new MButton('btnBack', _M('Voltar', $module), $MIOLO->getActionURL($module, $returnPath, null, array('filter' => urlencode(serialize($returnData['filter'])), 'reportOption' => $returnData['reportOption'])));
            $div1     = new MDiv('div1', $btn1, null, 'align=center');
            $fields[] = $div1;
            $fields[] = new Separator();
        }

        parent::defineFields( array( 'fields' => $fields, 'validators' => $validators, 'toolbar' => FALSE ) );
    }

}

?>
