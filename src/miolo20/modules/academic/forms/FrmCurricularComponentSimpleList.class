<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Diverse consultation form
 *
 * @author Jamiel Spezia [jamiel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 22/08/2005
 *
 **/

/**
 * Form to manipulate a classification
 **/
class FrmCurricularComponentSimpleList extends SForm
{

    /**
     * Class constructor
     **/
    public function __construct()
    {

        $module = MIOLO::getCurrentModule();

        parent::__construct( _M('Lista de matriculas', $module), NULL, NULL );
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');
        
        $data->contractId = strlen(MIOLO::_request('contractId'))>0 ? MIOLO::_request('contractId') : MIOLO::_request('contractId', 'GET');
        $data->periodId = strlen(MIOLO::_request('periodId'))>0 ? MIOLO::_request('periodId') : MIOLO::_request('periodId', 'GET');

        if ( (strlen($data->contractId)>0) && (strlen($data->periodId)>0) )
        {
            $grdCurricularComponent = $MIOLO->getUI()->getGrid('academic', 'GrdCurricularComponentSimpleList');

            $busDiverseConsultation  = new BusinessAcademicBusDiverseConsultation();
            $filters->contractId     = $data->contractId;
            $filters->periodId       = $data->periodId;
            $dataCurricularComponent = $busDiverseConsultation->getCurricularComponentCoursed($filters); 
            
            $grdCurricularComponent->setData($dataCurricularComponent);            
            $fields[] = $grdCurricularComponent;
            $fields[] = new MSeparator('');
            $div = new MDiv('divClose', new MLink('closeWindow', _M('Fechar janela', $module), 'javascript:window.close()'), null, 'align="center"');
            $div->width='100%';
            $fields[] = $div;
            $fields[] = new MSeparator('');
            
            parent::defineFields( array( 'fields' => $fields, 'validators' => $validators, 'toolbar' => FALSE ) );
        }
        else
        {
            $MIOLO->Information(_M('Sem informações suficientes para obter a disciplina', $module), 'javascript:self.close()');
        }
    }
}

?>
