<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Form to choice the enroll book document
 *
 * @author Samuel Koch [samuel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Samuel Koch [samuel@solis.coop.br]
 *
 * @since
 * Class created on 29/04/2009
 *
 **/

/**
 * Form to generate Multiple Learning Period
 **/
class FrmEnrollBookDataDocument extends SForm
{
    private $home;
    public $filters;
    /**
     * Class constructor
     **/
    public function __construct($data)
    {

        $module = MIOLO::getCurrentModule();

        $this->home   = $data->home;

        parent::__construct(_M('Documento dados do livro de matrícula', $module), NULL, NULL);
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        
        $businessPeriod = new BusinessAcademicBusPeriod();
        $periodId       = new MComboBox('periodId', $this->getFormValue('periodId', SAGU::getParameter('BASIC', 'CURRENT_PERIOD_ID')), _M('Período',$module), $businessPeriod->listPeriod() );
        $periodId->setJsHint(_M('Selecione um período', $module));
        $validators[]   = new MRequiredValidator('periodId');
        $fields[]         = $periodId;
        
        $fields[] = new MSeparator('');
        
        parent::defineFields( array( 'fields' => $fields, 'validators' => $validators ) );
        
        $this->toolbar->disableButton(MToolBar::BUTTON_NEW);
        $this->toolbar->disableButton(MToolBar::BUTTON_DELETE);
        $this->toolbar->disableButton(MToolBar::BUTTON_SAVE);
        $this->toolbar->disableButton(MToolBar::BUTTON_SEARCH);
        $this->toolbar->setButtonURL(MToolBar::BUTTON_PRINT, $MIOLO->getActionURL($module, $action, null, array('function' => 'print', 'event' => 'tbBtnPrint_click')));
        $this->toolbar->setIsPost(MToolBar::BUTTON_PRINT, true);
    }

    /**
     * Event triggered when user click print
     **/
    public function tbBtnPrint_click($sender = null)
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();

        $filters = $this->getTypesData();
        
        $MIOLO->uses('classes/RptEnrollBookData.class', $module);

        $report = new RptEnrollBookData($filters);
    }
    
    /**
     * Method to gather all information from the form fields
     * and put them on a database compatible object
     **/
    public function getTypesData()
    {
        // get filters values
        $data->periodId = $this->getFormValue('periodId');

        return $data;
    }
}

?>
