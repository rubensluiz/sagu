<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Passo responsavel pelo detalhamento
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class created on 21/02/2011
 *
 **/

class FrmStageDetailsStudentSelect extends FrmStageDetails
{
    private $grid;


    public function __construct($steps = null)
    {
        parent::__construct(null, $steps, __CLASS__);
    }

    
    public function createFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $action = MIOLO::getCurrentAction();
        $function = MIOLO::_REQUEST('function');

        //Load data
        $allData = $this->getStepData();
        $stepData = $this->getStepDataByForm(__CLASS__);

        $busEnroll = new BusinessAcademicBusEnroll();

        $selecteds = array();
        if ( $this->isFirstAccess() )
        {
        }

        $grid = $this->grid = $MIOLO->getUI()->getGrid($module,'GrdStageDetailsStudentSelect', $filters);
        $fields[] = $grid;

        //Trazer corretamente preenchido o que já foi selecionado anteriormente
        if ( (strlen(MIOLO::_REQUEST('selectedStudent')) > 0) && ( strlen(SAGU::getEventName()) <= 0 ) )
        {
            $grid->selecteds = unserialize(MIOLO::_REQUEST('selectedStudent'));
        }

        $gridData = array();
        $rows = $busEnroll->listGroupEnrolledPeople( $allData->groupId, true );
        foreach ( (array) $rows as $row )
        {
            $gridData[] = array($row->personId, $row->personName);
        }
        $grid->setData($gridData);

        $this->setFields($fields);
        $this->setValidators($validators);
    }


    public function  nextStepButton_click($args = null)
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $action = MIOLO::getCurrentAction();
        $data = $this->getData();

        try
        {
            if ( count($this->grid->selecteds) <= 0 )
            {
                throw new Exception( _M('Ao menos um aluno deve ser selecionado.', $module) );
            }
        }
        catch (Exception $e)
        {
            $this->AddError($e->getMessage());
            return;
        }

        $_args['selectedStudent'] = serialize($this->grid->selecteds);
        parent::nextStepButton_click($_args);
    }
}
?>