<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Reason form
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class created on 08/09/2005
 *
 **/

/**
 * Form to manipulate a reason
 **/
class FrmReason extends SManagementForm
{

    /**
     * Class constructor
     **/
    public function __construct()
    {
        parent::__construct(new AcdReason(), array('reasonId'), 'BusReason');
    }

    
    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        if ( in_array($function,array(SForm::FUNCTION_UPDATE, SForm::FUNCTION_DELETE)) )
        {
            $pk = $this->getObjectPk();
            $fields[] = new MTextLabel('', $pk->reasonId, _M('Código',$module));
            $fields[] = new MHiddenField('reasonId', $pk->reasonId);

            $data = $this->busObject->getReason($pk->reasonId);
        }

        //Field reason description
        $description = new MTextField('description', $this->getFormValue('description', $data->description), _M('Descrição',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $description->setJsHint(_M('Informe a descrição do motivo',$module));
        $fields[] = $description;
        $validators[] = new MRequiredValidator('description');

        //Field state contract
        $stateContractLabel = new MText('stateContractLabel', _M('Estado contratual', $module) . ':');
        $stateContractLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $stateContractLabel->setClass('m-caption m-caption-required');
        $stateContractId = new MLookupTextField('stateContractId', $this->getFormValue('stateContractId', $data->stateContractId), _M('Código do estado contratual',$module), SAGU::getParameter('BASIC', 'FIELD_LOOKUPFIELD_SIZE'), null, null, 'stateContractDescription', $module, 'StateContract', null, null, true);
        $stateContractId->setJsHint(_M('Informe o código do estado do contrato',$module));
        $validators[] = new MIntegerValidator('stateContractId', _M('Estado contratual', $module), 'required');
        $stateContractDescription = new MTextField('stateContractDescription', $this->getFormValue('stateContractDescription', $data->stateContractDescription), _M('Descrição do estado contratual',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $stateContractDescription->setJsHint(_M('Descrição do estado contratual',$module));
        $stateContractDescription->setReadOnly(true);
        $hctStateContract = new MHContainer('hctStateContract', array($stateContractLabel, $stateContractId, $stateContractDescription));
        $hctStateContract->setShowLabel(false);
        $fields[]         = $hctStateContract;

        parent::defineFields($fields, $validators, $data);
    }
}

?>
