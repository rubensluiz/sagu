<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for training pupil situation
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 09/11/2006
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdPupilSituationTraining extends MGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();

        $home   = 'main:pupilSituation';
        $module = MIOLO::_request('module');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array( 
                          new MGridColumn( _M('Código do estágio', $module), 'center', true, null, true, null, true ),
                          new MGridColumn( _M('Data inicial', $module),  'center', true, null, true, null, true ),
                          new MGridColumn( _M('Data final', $module),    'center', true, null, true, null, true ),
                          new MGridColumn( _M('Empresa', $module),     'left',   true, null, true, null, true ),
                          new MGridColumn( _M('Agente', $module),       'left',   true, null, true, null, true )
                        );

        $opts = array('personId'=>MIOLO::_request('personId'));

        if (count($filters) > 0)
        {
            foreach ( $filters as $k => $v )
            {
                $opts[$k] = $v;
            }
        }

        $url = $MIOLO->getActionURL($module, $home, null, $opts);

        parent::__construct( null, $columns, $url, 0, 0, 'gridPupilSituationTraining' );

        $this->setIsScrollable();

        $this->eventHandler();

    }

}
?>
