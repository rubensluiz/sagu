<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 *
 * @author Helio Henrique Rodrigues Guimaraes [helio@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 12/03/2007
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdGroupEmailPupils extends SGrid
{
    public $enrollStatusCancelled;
    public $enrollStatusDesisting;

    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $home   = 'main:process:groupEmail';

        //Dont put this whithin myRowMethod method.
        $this->enrollStatusCancelled = SAGU::getParameter('ACADEMIC', 'ENROLL_STATUS_CANCELLED');
        $this->enrollStatusDesisting = SAGU::getParameter('ACADEMIC', 'ENROLL_STATUS_DESISTING');
        
        $columns = array(
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn( _M('Código do curso',      $module), 'right',  true, null, true, null, true ),
                          new MGridColumn( _M('Código da pessoa',      $module), 'right',  true, null, true, null, true ),
                          new MGridColumn( _M('Nome',           $module), 'left',   true, null, true, null, true )       
                        );
        
        parent::__construct($filters, $columns, 'gridGroupEmailPupils');
        
        $this->clearActions();

        $this->setRowMethod($this, 'myRowMethod');
        $this->addActionSelect();
        $this->selecteds = array();

        $this->setIsScrollable(true);
    }
    
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $busEnroll = new BusinessAcademicBusEnroll();

        $enrollData = $busEnroll->getEnroll($row[0]);

        if ( ($enrollData->statusId != $this->enrollStatusCancelled) &&
             ($enrollData->statusId != $this->enrollStatusDesisting) )
        {
            $this->selecteds[] = $i;
        }
    }
}
?>
