<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * GrdListEnrolledByAge
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 10/01/2006
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdListEnrolledByAge extends SGrid
{
    var $totalFooter;
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();

        $home   = 'main:report:listenrolledbyage';
        $module = MIOLO::_request('module');
        
        $columns = array(
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn( _M('Sexo', $module), 'left', true, null, true, array('M'=> _M('Masculino', $module), 'F' => _M('Feminino', $module)), false ),
                          new MGridColumn( _M('Idade', $module), 'center', true, null, true, null, false ),
                          new MGridColumn( _M('Quantidade', $module), 'center', true, null, true, null, false ),
                        );
        parent::__construct( $filters, $columns, 'gridListInscription' );
        
        $this->setRowMethod($this, 'myRowMethod');
        $this->setFooter('<b>' . _M('Total', $module) . ':</b>&nbsp;');
        $this->eventHandler();
    }

    public function myRowMethod($i, $row, $actions, $columns )
    {
        $this->totalFooter += $row[9];
    }

    public function generateFooter( )
    {
        $MIOLO  = MIOLO::getInstance( );
        $module = $MIOLO->getCurrentModule( );

        $controls = array( new mText( '', $this->totalFooter));
        $controls = array_merge( parent::generateFooter(), $controls);
        return $controls;
    }

}

?>
