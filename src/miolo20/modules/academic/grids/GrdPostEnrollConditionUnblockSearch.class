<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for acdPostEnrollConditionUnblock table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 19/12/2005
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdPostEnrollConditionUnblockSearch extends SGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        $home   = 'main:process:curricularComponentUnblock:postEnrollConditionUnblock';

        $columns = array( 
                          new MGridColumn( _M('Tem quebra de requisito', $module), 'left', true, null, true, array( DB_TRUE => _M('Sim',$module), DB_FALSE => _M('Não',$module) ), true ),
                          new MGridColumn( _M('Código da pessoa', $module), 'right', true, null, true, null, true ),
                          new MGridColumn( _M('Nome da pessoa', $module), 'left', true, null, true, null, true ),
                          new MGridColumn( _M('Código do currículo', $module), 'left', true, null, true, null, true ),
                          new MGridColumn( _M('Código da disciplina', $module) . ' / ' . _M('versão', $module), 'left', true, null, true, null, true ),
                          new MGridColumn( _M('Nome da disciplina', $module), 'left', true, null, true, null, true )
                         );
        
        $primaryKey = array( 'contractId' => MIOLO::_request('contractIdS'),
                             'learningPeriodId' => MIOLO::_request('learningPeriodIdS'),
                             'curriculumId'=>'%3%',
                             'actionIsUnblock' => '%0%' );  
                
        parent::__construct( $filters, $columns, __CLASS__, $primaryKey);
        
        $this->clearActions();
        
        $opts = array(
             'contractId' => MIOLO::_request('contractIdS'),
             'learningPeriodId' => MIOLO::_request('learningPeriodIdS'),
             'curriculumId' => '%3%',
             'actionIsUnblock' => '%0%',
             'event' => 'btnUnblock_click'
        );
        
        $urlUnblock = $MIOLO->getActionURL($module, $action, null, $opts);
        $this->addActionIcon(_M('Desbloquear', $module), 'unlock.png', $urlUnblock);
        
        $this->setRowMethod($this,'doWithEachRow');
        $this->setIsScrollable();
        $this->eventHandler();
    }

    public function doWithEachRow($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        if ($row[0] == DB_FALSE)
        {
            $actions[0]->alt = _M('Desbloquear', $module);
            $actions[0]->value = 'unlock.png';
        }
        else
        {
            $actions[0]->alt = _M('Remover desbloqueio', $module);
            $actions[0]->value = 'lock.png';
        }
    }
}

?>
