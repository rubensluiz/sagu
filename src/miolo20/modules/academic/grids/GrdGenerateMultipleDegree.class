<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 27/01/2006
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdGenerateMultipleDegree extends SGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $home   = 'main:process:generationInLot:generateMultipleDegree';
        $module = MIOLO::_request('module');
        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $check = new MCheckBox('gridGenerateMultipleDegreeSelect[%1%]');

        $columns = array( new MDataGridControl( $check,  $check->setValue('%1%,%6%'), _M('Ações',$module), 'center', 'false', '5%' ) ,
                          new MGridColumn( _M('Código do grau acadêmico',      $module), 'right',  false, '10%', true, null, true ),
                          new MGridColumn( _M('Descrição', $module), 'left',  false, '40%', true, null, true ),
                          new MGridColumn( _M('Número da nota do grau acadêmico',           $module), 'left',   false, '20%', true, null, true ),
                          new MGridColumn( _M('Peso',           $module), 'left',   false, '5%', true, null, true ),
                          new MGridColumn( _M('Grau pai',           $module), 'left',   false, '20%', true, null, true )
                        );


        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        
        parent::__construct($filters, $columns, __CLASS__, 'degreeId', $url);
        
        $this->setRowMethod("GrdGenerateMultipleDegree", "myRowMethod");
        $this->clearActions();
    }

    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        if( count($row) < 5 ) //For lines that can be selected
        {
            $columns[0]->control[$i]->setVisibility(false);
            $columns[1]->control[$i]->setBold(true);
            $columns[2]->control[$i]->setBold(true);
            $columns[3]->control[$i]->setBold(true);
       }

     }

}

?>
