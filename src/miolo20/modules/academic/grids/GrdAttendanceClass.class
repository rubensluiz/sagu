<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * Groups list for the grades typing process
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Cristian Edson Göhl [cristian@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 29/08/2007
 *
 **/

class myMGridActionIcon extends MGridActionIcon
{

    var $onclick;

    public function generate()
    {
        $control = parent::generate();
        
        if ( $this->enabled )
        {
            $control->addAttribute( 'onclick', $this->onclick );
            if ( ! $this->href )
            {
                $control->location = '';
            }
        }
        return $control;
    }
}

/**
 * Grid used by form to display search results
 **/
class GrdAttendanceClass extends MGrid
{

    var $url_group;

    var $url_group2;

    var $url_group3;

    var $url_group4;

    var $formData;

    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        $home = 'main:document:examinationAct';
        $this->formData = $filters;
        
        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */

        $url_group0 = $MIOLO->getActionURL( $module, $home, null, array(
                'groupId' => '#0#',
                'professorId' => '#5#',
                'emissionDate' => $this->formData->emissionDate,
                'printMode' => $this->formData->printMode,
                'reportModel' => 'attendanceReportWithPhoto',
                'event' => 'attendanceReport'
        ) );
        $url_group1 = $MIOLO->getActionURL( $module, $home, null, array(
                'groupId' => '#0#',
                'professorId' => '#5#',
                'emissionDate' => $this->formData->emissionDate,
                'printMode' => $this->formData->printMode,
                'reportModel' => 'attendanceReport',
                'event' => 'attendanceReport'
        ) );
        $url_group2 = $MIOLO->getActionURL( $module, $home, null, array(
                'groupId' => '#0#',
                'professorId' => '#5#',
                'emissionDate' => $this->formData->emissionDate,
                'printMode' => $this->formData->printMode,
                'event' => 'examinationAct'
        ) );
        $url_group3 = $MIOLO->getActionURL( $module, $home, null, array(
                'groupId' => '#0#',
                'professorId' => '#5#',
                'emissionDate' => $this->formData->emissionDate,
                'printMode' => $this->formData->printMode,
                'event' => 'attachedLeaf'
        ) );
        $url_group4 = $MIOLO->getActionURL( $module, $home, null, array(
                'groupId' => '#0#',
                'printMode' => $this->formData->printMode,
                'event' => 'finalResultAct'
        ) );
        
        $columns = array( 
                new MGridColumn( _M('Código da disciplina oferecida', $module ), 'right', true, null, true, null, true ), 
                new MGridColumn( _M('Código da disciplina', $module ), 'right', true, null, true, null, true ), 
                new MGridColumn( _M('Disciplina', $module ), 'left', true, null, true, null, true ) 
        );
        
        $url = $MIOLO->getActionURL( $module, $home );
        
        parent::__construct( null, $columns, $url, 0, 0, 'gridAttendanceClass' );
        
        $this->addActionIcon( _M('Lista de chamada com foto', $module ), 'attendanceList.png', 'javascript:doIt(\'' . urldecode( $url_group0 ) . '\')' );
        $this->addActionIcon( _M('Lista de chamada', $module ), 'attendanceList.png', 'javascript:doIt(\'' . urldecode( $url_group1 ) . '\')' );
        $this->addActionIcon( _M('Ata de exame', $module ), 'examinationAct.png', 'javascript:doIt(\'' . urldecode( $url_group2 ) . '\')' );
        $this->addActionIcon( _M('Diário de classe', $module ), 'attachedLeaf.png', 'javascript:doIt(\'' . urldecode( $url_group3 ) . '\')' );
        
        $this->actions[] = new myMGridActionIcon( $this, 'finalResultAct.png', $url_group4, _M('Ata do resultado final', $module ) );
        
        $this->setRowMethod( $this, 'myRowMethod' );
        $this->linktype = 'hyperlink';
        
        $this->eventHandler();
    }

    public function myRowMethod($i, $row, $actions, $columns)
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $opts['emissionDate'] = $this->formData->emissionDate;
        $opts['printMode'] = $this->formData->printMode;
        $opts['groupId'] = $columns[0]->control[$i]->value;
        $opts['event'] = 'finalResultAct';
        $fAction = $MIOLO->getActionURL( $module, $action, null, $opts );
        
        $actions[3]->onclick = 'finalResultActForm( event , \'' . $fAction . '\')';
        $actions[3]->href = 'javascript:void(0)';
    }
}

?>
