<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for acdCondition table
 *
 * @author Jonas Gualberto Diel [jonas_diel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 19/09/2005
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdCourseTransferFinalExploitations extends MGrid
{
    /**
     * Class constructor
     **/
    public function __construct($data)
    {
        $MIOLO = MIOLO::getInstance();
        
        $module = MIOLO::_request('module');       
        
        if( $data->noteReadOnly ) //Verifica se o campo pode ou nao ter seu valor alterado
        {
            $grdTextField = new MText('note', _M('Nota', $module));
        }
        else
        {
            $grdTextField = new MTextField('note');
        }
        $grdCurricularField = new MTextField('curricularComponent');
        
        $columns = array( 
                          new MGridColumn(_M('Código', $module), 'left', false, 0, false),
                          $curricular = new MGridControl($grdCurricularField, _M('curricularComponent'), 'center', true, 0, true),
                          new MGridColumn(_M('Enroll', $module), 'left', false, 0, false),
                          new MGridColumn(_M('Disciplina', $module), 'left', false, 0, true),
                          new MGridColumn(_M('C.H. disciplina', $module), 'right', false, 0, true),
                          new MGridColumn(_M('C.H. aproveitada', $module), 'right', false, 0, true),
                          new MGridColumn(_M('C.H.', $module), 'right', false, 0, false),
                          new MGridColumn(_M('C.H. faltante', $module), 'right', false, 0, true),
                          new MGridControl($grdTextField, _M('Nota'), 'center', true, 0, true)
                        );                
        $curricular->setHidden(true);
        parent::__construct($data, $columns, __CLASS__);
        $this->setRowMethod($this, 'myRowMethod');

        $this->setIsScrollable();
        $this->eventHandler();
    }
    
    public function myRowMethod($i, $row, $actions, $columns)
    {
        $columns[1]->control[$i]->setValue($row[1]);
        $columns[8]->control[$i]->setValue($row[8]);
    }
}

?>
