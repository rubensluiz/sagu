<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 *
 * This file handles the connection and actions for acdComplementaryActivities table
 *
 * @author Eduardo Beal Miuglioransa [eduardo@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miuglioransa [eduardo@solis.coop.br]
 * Moises Heberle [moises@solis.coop.br]
 *
 *
 * @since
 * Class created on 05/12/2005
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdComplementaryActivitiesSearch extends SGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);

        $columns = array(
            new MGridColumn('', 'left', false, 0, false),
            new MGridColumn( _M('Matrícula', $module),      'right', true, null, true, null, true ),
            new MGridColumn( _M('Descrição', $module),    'left', false, null, true, null, true ),
            new MGridColumn( _M('Total de horas', $module),    'right', true, null, true, null, true ),
            new MGridColumn( _M('Total de créditos', $module),  'right', true, null, true, null, true ),
            new MGridColumn( _M('Grau acadêmico por período letivo', $module), 'left', true, null, true, null, true ),
            new MGridColumn( _M('Conceito', $module),        'right', true, null, true, null, true ),
            new MGridColumn( _M('Código do período', $module),      'right', true, null, true, null, true ),
            new MGridColumn( _M('Código da categoria da atividade complementar', $module), 'right', true, null, false, null, true),
            new MGridColumn( _M('Categoria da atividade', $module), 'left', false, null, true, null, true )
        );

        $primaryKey = array('complementaryActivitiesId' => '%0%');
        parent::__construct($filters, $columns, $gridName, $primaryKey);

        $this->setRowMethod($this, 'myRowMethod');
        $this->setIsScrollable();
        $this->setLinkType('hyperlink');
        
        // FrmDiverseConsultation
        if( $filters->changeAction )
        {
            $this->action = 'main:register:complementaryActivities:complementaryActivities';
            $this->clearActions();
            $this->setDefaultGridActions($primaryKey);
            unset($this->actions[1]);
        }   
    }

    
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        if ( $row[0] == '' )
        {
            $actions[0]->enabled = false;
            $actions[1]->enabled = false;
        }
        else
        {
            $actions[0]->enabled = true;
            $actions[1]->enabled = true;
        }
    }
}

?>
