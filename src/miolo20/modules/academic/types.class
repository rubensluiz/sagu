<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Class definition for database entities
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Moises Heberle [moises@solis.coop.br]
 * Fabiano Tomasini [fabiano@solis.coop.br]
 *
 * @since
 * Class created on 19/08/2005
 *
 **/

/**
 * Academic database classes
 */

$MIOLO->uses('types.class', 'basic');

class AcdExternalCourse extends BasLog
{
    public $externalCourseId;
    public $name;
    public $shortName;
    public $obs;
    public $knowledgeAreaId;
}

class AcdCurricularComponentGroup extends BasLog
{
    public $curricularComponentGroupId;
    public $name;
    public $shortName;
}

class AcdSchedule extends BasLog
{
    public $scheduleId;
    public $groupId;
    public $unitId;
    public $physicalResourceId;
    public $physicalResourceVersion;
    public $occurrenceDates;
    public $timeIds;
}

class AcdScheduleProfessor extends BasLog
{
    public $scheduleId;
    public $professorId;
    public $professorName; /* from basPhysicalPersonProfessor */
    public $isInstitutionalEvaluation = DB_TRUE;
    public $weight = 1;
    public $scheduleProfessorId;
}

class AcdReason extends BasLog
{
    public $reasonId;
    public $description;
    public $stateContractId;
}

class AcdCourseVersion extends BasLog
{
    public $courseId;
    public $courseVersion;
    public $beginDate;
    public $endDate;
    public $periodTotal;
    public $periodDescription;
    public $courseVersionTypeId;
    public $credits;
    public $hourTotal;
    public $hourRequired;
}

class AcdCourseVersionType extends BasLog
{
    public $courseVersionTypeId;
    public $description;
    public $regimen;
}

class AcdMessageContractRenewal extends BasLog
{
    public $messageContractRenewalId;
    public $learningPeriodId;
    public $description;
    public $message;
    public $font;
    public $sequence;
    public $length;
    public $isListener = DB_FALSE;
    public $status;
}

class AcdCourseOccurrence extends BasLog
{
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $unitId;
    public $authorizationDate;
    public $authorizationDocument;
    public $status;
    public $minimumConclusionCourse;
    public $maximumConclusionCourse;
    public $costCenterId;
    public $daysToFrequenceNotification;
    public $turn;
    public $unit;
    public $idCursoInep;
    public $vagasInep;
    public $cursoBloqueado;
}

class AcdDocuments extends BasLog
{
    public $pessoaId;
    public $mainDocument;
    public $cpf;
    public $hsDocument;
    public $hsDriginalDocument;
    public $numberDocumentVoter;
    public $ticketVoting;
    public $militaryDocument;
    public $picture;
    public $certifiedDoctor;
    public $documentEndCursoNotarized;
    public $independentBachelor;
    public $obs;
}

class AcdContractOccurrence extends BasLog
{
    public $contractId;
    public $ocurrenceId;
    public $dateOccurrence;
    public $sequence;
    public $reasonId;
    public $institutionFrom;
    public $courseFrom;
    public $institutionTo;
    public $courseTo;
}

class AcdEvaluation extends BasLog
{
    public $evaluationId;
    public $degreeId;
    public $description;
    public $dateForecast;
    public $weight = 1;
    public $professorId;
    public $groupId;
    public $moodleEvaluationId;
    public $maxPoints = 0;
    public $podeDigitar;
    
}

class AcdOccurrence extends BasLog
{
    public $ocurrenceId;
    public $description;
    public $inOut;
}

class AcdFormationLevel extends BasLog
{
    public $formationLevelId;
    public $description;
    public $shortDescription;
    public $reportName;
}

class AcdSpecialNecessity extends BasLog
{
    public $specialNecessityId;
    public $description;
    public $easyAccess;
    public $accompanimentNeeds;
    public $isPermanent;
    public $howMuchWeeks;
    public $beginDate;
}

class acdLearningPeriod extends BasLog
{
    public $learningPeriodId;
    public $periodId;
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $parcelsNumber;
    public $unitId;
    public $description;
    public $formationLevelId;
    public $previousLearningPeriodId;
    public $beginDate;
    public $endDate;
    public $beginDateLessons;
    public $weekEndExamsBegin;
    public $finalAverage;
    public $minimumFrequency;
    public $minimumCredits;
    public $minimumCreditsFreshman;
    public $minimumCreditsTurn;
    public $maximumCredits;
    public $maximumCreditsFreshman;
    public $isFinanceGenerate = DB_FALSE;
    public $disapprovementsToDisapprovePeriod;
    public $isClosed = DB_FALSE;
    public $isNumberHours = DB_FALSE;
    public $turnDescription;
    public $unitDescription;
    public $gradesByConcept = DB_FALSE;
    public $evaluationControlMethodId;
    public $justifyDisapprovals;
    public $enrollAcceptedTerm;
    public $learningDays;
    public $limitRegisterDate;
    public $blockFinalExaminationGradesTyping = DB_TRUE;
}

class AcdCurriculum extends BasLog
{
    public $curriculumId;
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $unitId;
    public $courseName;
    public $curricularComponentId;
    public $curricularComponentVersion;
    public $curricularComponentName;
    public $semester;
    public $showInScholarshipDescription = DB_TRUE;
    public $showInBulletin = DB_TRUE;
    public $curricularComponentGroupDocumentEndCourseId;
    public $curricularComponentGroupDocumentEndCourseName;
    public $curricularComponentGroupElectiveCourseId;
    public $curricularComponentGroupElectiveCourseName;
    public $curriculumTypeId;
    public $curriculumTypeDescription;
    public $endDate;
    public $useClassPeriod;
}

class AcdKnowledgeArea extends BasLog
{
    public $knowledgeAreaId;
    public $name;
}

class AcdCategory extends BasLog
{
    public $categoryId;
    public $description;
}

class AcdContentProgrammarian extends BasLog
{
    public $groupId;
    public $objectives;
    public $content;
    public $methodoBasLogy;
    public $evaluation;
    public $basicBibliography;
    public $complementary;
    public $observation;
    public $fileLink;
}

class AcdReasonType extends BasLog
{
    public $reasonTypeId;
    public $description;
}

class AcdInterchange extends BasLog
{
    public $interchangeId;
    public $personId;
    public $contractId;
    public $interchangeTypeId;
    public $interchangeTypeComplement;
    public $activity;
    public $beginDate;
    public $endDate;
    public $originCountryId;
//     public $originCountryName;
    public $originInstitutionId;
//     public $originInstitutionName;
    public $destinationCountryId;
//     public $destinationCountryName;
    public $destinationInstitutionId;
//     public $destinationInstitutionName;
    public $isRemunerated = DB_FALSE;
}

class AcdInterchangeType extends BasLog
{
    public $interchangeTypeId;
    public $description;
}

class AcdEnrollStatus extends BasLog
{
    public $statusId;
    public $description;
}

class AcdCurricularComponentType extends BasLog
{
    public $curricularComponentTypeId;
    public $description;
}

class AcdElection extends BasLog
{
    public $electionDate;
    public $description;
}

class AcdEvaluationEnroll extends BasLog
{
    public $evaluationEnrollId;
    public $evaluationId;
    public $enrollId;
    public $note;
    public $concept;
    public $description;
    public $isNotAppear = DB_FALSE;
    public $recordDate;

}

class AcdCertifiedType extends BasLog
{
    public $certifiedTypeId;
    public $description;
}

class AcdCondition extends BasLog
{
    public $conditionId;
    public $curriculumId;
    public $curriculumCourseId;
    public $curriculumCourseVersion;
    public $curriculumCourseName;
    public $curriculumCurricularComponentId;
    public $curriculumCurricularComponentVersion;
    public $curriculumCurricularComponentName;
    public $conditionCurriculumId;
    public $conditionalCurriculumCourseId;
    public $conditionalCurriculumCourseVersion;
    public $conditionalCurriculumCourseName;
    public $conditionalCurriculumCurricularComponentId;
    public $conditionalCurriculumCurricularComponentVersion;
    public $conditionalCurriculumCurricularComponentName;
    public $form;
    public $type;
    public $credits;
    public $numberHour;
    public $educationAreaId;
    public $educationAreaDescription;
    public $consideraDiscMatriculadas;
}

class AcdArea extends BasLog
{
    public $areaId;
    public $description;
}

class AcdCourseAbilities extends BasLog
{
    public $courseAbilitiesId;
    public $courseId;
    public $description;
    public $type;
}

class AcdCurricularComponent extends BasLog
{
    public $curricularComponentId;
    public $curricularComponentVersion;
    public $centerId;
    public $name;
    public $shortName;
    public $summary;
    public $academicCredits;
    public $lessonCredits;
    public $academicNumberHours;
    public $lessonNumberHours;
    public $beginDate;
    public $endDate;
    public $educationAreaId;
    public $curricularComponentCategoryCreditList;
}

class AcdDegree extends BasLog
{
    public $degreeId;
    public $learningPeriodId;
    public $description;
    public $limitDate;
    public $degreeNumber;
    public $weight = 1;
    public $parentDegreeId;
    public $mayBeNull = DB_FALSE;
    public $isExam;
    public $examCalcMethod;
    public $examMinimumNote;
    
    public $degreeIdSub;
    public $descriptionSub;
    public $limitDateSub;
    public $parentDegreeIdSub;
}

class AcdFrequenceEnroll extends BasLog
{
    public $enrollId;
    public $frequencyDate;
    public $turnId;
    public $frequency;
    public $isCancellation = DB_FALSE;
    public $reasonCancellation;
    public $justifiedAbsence = DB_FALSE;
    public $cancelledAbsence = DB_FALSE;
}

class AcdDepartment extends BasLog
{
    public $departmentId;
    public $name;
    public $shortName;
}

class AcdCourseAbility extends BasLog
{
    public $courseAbilityId;
    public $courseId;
    public $courseVersion;
    public $courseName;
    public $description;
    public $type;
}

class AcdCourse extends BasLog
{
    public $courseId;
    public $formationLevelId;
    public $name;
    public $shortName;
    public $departmentId;
    public $centerId;
    public $beginDate;
    public $authorizationDocumentNumber;
    public $recognitionDate;
    public $recognitionDocumentNumber;
    public $moreInfo;
    public $endDate;
    public $credits;
    public $hourTotal;
    public $hourRequired;
    public $knowledgeAreaId;
    public $requirements;
    public $obs;
    public $acronym;
    public $incomeSourceId;
    public $reportOrder;
    public $educationAreaId;
    public $degree;
    public $enrollbooksequence;
    public $centerIdOld;
}

class AcdCertified extends BasLog
{
    public $certifiedId;
    public $certifiedTypeId;
    public $dateIssue;
    public $personId;
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $unitId;
}

class AcdCurriculumType extends BasLog
{
    public $curriculumTypeId;
    public $description;
    public $shortDescription;
}

class AcdGroup extends BasLog
{
    public $groupId;
    public $learningPeriodId;
    public $learningPeriodDescription; /* from unit_acdlearningperiod */
    public $curriculumId;
    public $curriculumCourseId; /* from unit_acdcurriculum */
    public $curriculumCourseVersion; /* from unit_acdcurriculum */
    public $curriculumCourseName; /* from acdCourse */
    public $curriculumCurricularComponentId; /* from acdCurricularComponent */
    public $curriculumCurricularComponentVersion; /* from acdCurricularComponent */
    public $curriculumCurricularComponentName; /* from acdCurricularComponent */
    public $curriculumCurricularComponentShortName;
    public $complement;
    public $vacant;
    public $leaderId;
    public $leaderName; /* from basPhysicalPersonStudent */
    public $subLeaderId;
    public $subLeaderName; /* from basPhysicalPersonStudent */
    public $isCancellation = DB_FALSE;
    public $objectives;
    public $content;
    public $methodology;
    public $evaluation;
    public $basicBibliography; /* array of books from GNUTeca */
    public $complementaryBibliography; /* array of books from GNUTeca */
    public $observation;
    public $regimenId;
    public $regimenDescription; /* from acdRegimen */
    public $isUseWebDaily = DB_TRUE;
    public $isClosed = DB_FALSE;
    public $isContentProgrammarian = DB_FALSE;
    public $classId;
    public $useConcept;
    public $evaluationTypeId;
    public $financeCredits;
    public $frequenceRegisterNotification = DB_FALSE;
    public $conceptGroupId;
    public $basicbibliographydescription;
    public $complementarybibliographydescription;
    public $unitId;
    public $academicNumberHours;
}

class AcdCourseCoordinator extends BasLog
{
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $unitId;
    public $coordinatorId;
    public $beginDate;
    public $endDate;
    public $level;
    public $isSendEmail = DB_FALSE;
    public $email;
    public $expirationLevel;
}

class AcdPeriod extends SType
{
    public $periodId;
    public $description;
    public $enrollBookDate;
    public $prevPeriodId;
}

class AcdCenter extends SType
{
    public $centerId;
    public $name;
    public $shortName;
    public $directorId;
}

class AcdEducationArea extends BasLog
{
    public $educationAreaId;
    public $description;
}

class AcdStatesContract extends BasLog
{
    public $stateContractId;
    public $description;
    public $inOutTransition;
    public $needsReason = DB_FALSE;
    public $isCloseContract = DB_FALSE;
    public $stateContractIsActive = DB_TRUE;
}

class acdRegimen extends BasLog
{
    public $regimenId;
    public $description;
}

class acdTestEndCourseType extends BasLog
{
    public $testEndCourseTypeId;
    public $description;
    public $beginDate;
    public $endDate;
}

class acdTestEndCourseContract extends BasLog
{
    public $testEndCourseTypeId;
    public $contractId;
    public $testEndCourseDate;
    public $excused = DB_FALSE;
    public $isPresent = DB_TRUE;
    public $mensagemDeAvaliacaoDosAlunosId;
    public $notaDoAluno;
}

class acdMovementContract extends SType
{
    protected $_associations = array(
        'statecontract' => array(
            'mode' => 'one',
            'typeClass' => 'AcdStateContract',
            'joinColumn' => 'statecontractid',
        ),
    );
    
    /**
     *
     * @var AcdMovementContract
     */
    public $statecontract;
    public $contractId;
    public $stateContractId;
    public $reasonId;
    public $stateTime;
    public $learningPeriodId;
    public $disciplinas;
    
    public function search($args)
    {
        $busMovementContract = new BusinessAcademicBusMovementContract();
        return $busMovementContract->searchMovementContract($args);
    }
    
    public function save($args = null)
    {
        $busMovementContract = new BusinessAcademicBusMovementContract();
        return $busMovementContract->insertOrUpdateMovementContract($this);
    }
    
    public function delete($args = null)
    {
        $busMovementContract = new BusinessAcademicBusMovementContract();       
        return $busMovementContract->deleteMovementContract($this->contractId, $this->stateContractId, $this->stateTime);
    }
}

class AcdStateContract extends SType
{
    public $stateContractId;
    public $description;
    public $inOutTransition;
    public $needsReason;
    public $isCloseContract;
}

class acdStateTransistion extends BasLog
{
    public $beginStateId;
    public $endStateId;
}

class acdCurriculumConcurrence extends BasLog
{
    public $curriculumOutId;
    public $curriculumInId;
}

class AcdStateContractField extends BasLog
{
    public $stateContractFieldId;
    public $stateContractId;
    public $description;
    public $rows;
    public $columns;
    public $isLookup = DB_FALSE;
    public $lookupName;
    public $lookupModule;
    public $fieldValidator;
    public $isRequired = DB_FALSE;
}

class AcdDiploma extends BasLog
{
    public $registerNumber;
    public $contractId;
    public $sheet;
    public $book;
    public $protocolId;
    public $emissionDate;
}

class AcdMovementContractComplement extends BasLog
{
    public $contractId;
    public $stateContractId;
    public $stateTime;
    public $stateContractFieldId;
    public $value;
}

class acdPeriodEnrollDate extends BasLog
{
    public $periodEnrollDateId;
    public $learningPeriodId;
    public $description;
    public $beginDate;
    public $endDate;
    public $isInternet = DB_FALSE;
    public $isAdjustment = DB_FALSE;
    public $isSelectiveProc = DB_FALSE;
}
class acdComplementaryActivitiesCategory extends BasLog
{
    public $complementaryActivitiesCategoryId;
    public $description;
}


class acdComplementaryActivities extends BasLog
{
    public $enrollId;
    public $description;
    public $totalHours;
    public $totalCredits;
    public $degree;
    public $periodId;
    public $complementaryActivitiesCategoryId;
    public $complementaryActivitiesId;
    public $concept;
    public $curriculumIdOld;
}

class acdCurricularComponentUnblock extends BasLog
{
   public $curricularComponentUnblockId;
   public $learningPeriodId;
   public $contractId;
   public $curriculumId;
   public $curricularComponentId;
   public $curricularComponentVersion;
   public $isConditionBreak = DB_FALSE;
   public $isSubstituted = DB_FALSE;
   public $isScheduleShock = DB_FALSE;
   public $flMinimumCredits = DB_FALSE;
   public $flMinimumTurn = DB_FALSE;
}

// ACDRazaoCancelamento
class AcdReasonCancellation extends BasLog
{

    public $reasonCancellationId;
    public $description;

}

class AcdCurriculumLink extends BasLog
{
    public $curriculumId;
    public $curriculumLinkId;
    public $utilizaVinculoParaMatricula;
}

class AcdEvent extends BasLog
{
    public $eventId;
    public $description;
    public $beginDate;
    public $endDate;
    public $accountSchemeId;
    public $costCenterId;
    public $policyId;
    public $incomeSourceId;
    public $inscriptionFee;
}

class AcdEventParticipation extends BasLog
{
    public $eventId;
    public $personId;
}

class AcdStateEnrollBook extends BasLog
{
    public $stateEnrollBookId;
    public $description;
    public $isSumToTotal;
}

class AcdStateEnrollBookRules extends BasLog
{
    public $stateEnrollBookRulesId;
    public $stateEnrollBookId;
    public $stateIdRules;
}

class AcdProject extends BasLog
{
    public $projectId;
    public $description;
}

class AcdDegreeEnroll extends BasLog
{
    public $degreeId;
    public $enrollId;
    public $note;
    public $concept;
    public $description;
    public $recordDate;
}

class AcdProfessorCurricularComponent extends BasLog
{
    public $professorCurricularComponentId;
    public $professorId;
    public $curricularComponentId;
    public $curricularComponentVersion;
}

class AcdClass extends BasLog
{
    public $classId;
    public $className_;
    public $vacant;
    public $initialLearningPeriodId;
    
    // Utilizado para filtros na tela de busca
    public $periodId;
    public $courseId;
    public $courseVersion;
}

class AcdClassPupil extends BasLog
{
    public $classId;
    public $contractId;
    public $beginDate;
    public $endDate;
    public $reasonId;
}

class AcdComplementaryActivitiesCategoryRules extends BasLog
{
    public $complementaryActivitiesCategoryRulesId;
    public $curriculumId;
    public $complementaryActivitiesCategoryId;
    public $minimumHours;
    public $maximumHours;
}

class AcdProfessorFormation extends BasLog
{
    public $professorId;
    public $formationLevelId;
    public $externalCourseId;
    public $beginDate;
    public $dateConclusion;
    public $institutionId;
}

class AcdProfessorCenter extends BasLog
{
    public $professorId;
    public $centerId;
    public $beginDate;
    public $endDate;
}

class AcdRestrictedDocuments extends BasLog
{
    public $restrictedDocumentId;
    public $documentTypeId;
    public $documentTypeName;
    public $formationLevelId;
    public $formationLevelDescription;
    public $courseId;
    public $courseVersion;
    public $courseName;
    public $turnId;
    public $turnDescription;
    public $unitId;
    public $unitDescription;
    public $isIn = DB_FALSE;
    public $enrollAcceptedTerm;
}

class AcdSubclass extends BasLog
{
    public $subclassId;
    public $classId;
    public $subclassDescription_;
    public $personId;
    public $groupId;
}

class AcdCourseParent extends BasLog
{
    public $courseParentId;
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $unitId;
    public $parentCourseId;
    public $parentCourseVersion;
    public $parentTurnId;
    public $parentUnitId;
    public $parentCurricularComponentsPeriod;
}

class AcdTimeSheet extends BasLog
{
    public $timeSheetId;
    public $description;
    public $beginDate;
    public $endDate;
}

class AcdTime extends BasLog
{
    public $timeId;
    public $timeSheetId;
    public $turnId;
    public $beginHour;
    public $endHour;
    public $numberMinutes;
}

class AcdContractExaminingBoard extends BasLog
{
    public $contractExaminingBoardId;
    public $contractId;
    public $examiningBoardDate;
    public $title;
    public $professorIds;
}

class lookupContract extends BasLog
{
    public $contractPersonId;
    public $contractPersonName;
    public $contractId;
    public $contractCourseId;
    public $contractCourseVersion;
    public $contractCourseName;
    public $contractTurnId;
    public $contractTurnDescription;
    public $contractUnitId;
    public $contractUnitDescription;
}

class AcdAcademicCalendar extends BasLog
{
    public $calendarYear;
    public $description;
}

class AcdAcademicCalendarEvent extends BasLog
{
    public $eventDate;
    public $calendarYear;
    public $description;
    public $haveClass;
    public $academicCalendarEventId;
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $unitId;
    public $ocorrenciacursoid;
}

class AcdEvaluationType extends BasLog
{
    const BY_NOTE = 1;
    const BY_FREQUENCY = 2;
    const BY_NOTE_AND_FREQUENCY = 3;
    const NO_EVALUATION = 4;

    public $evaluationTypeId;
    public $description;
}

class AcdEvaluationControlMethod extends BasLog
{
    const BY_DISCIPLINE = 1;
    const BY_GROUP_DISCIPLINE = 2;

    public $evaluationControlMethodId;
    public $description;
}

class AcdDegreeCurricularComponentGroup extends BasLog
{
    public $degreeCurricularComponentGroupId;
    public $learningPeriodId;
    public $contractId;
    public $curricularComponentGroupId;
    public $note;
    public $concept;
    public $description;
    public $enrollStatusId;
}

class AcdTrainingEmphasis extends BasLog
{
    public $trainingEmphasisId;
    public $groupId;
    public $description;
    public $responsibleId;
    public $summary;
    public $place;
}

class AcdTrainingDetail extends BasLog
{
    public $trainingDetailId;
    public $trainingEmphasisId;
    public $enrollId;
    public $responsibleId;
    public $realizedActivities;
    public $place;
    public $startDate;
    public $endDate;
    public $duration;
}

class AcdConceptGroup extends BasLog
{
    public $conceptGroupId;
    public $description;
}

class AcdConcept extends BasLog
{
    public $conceptId;
    public $conceptGroupId;
    public $description;
    public $conceptOrder;
    public $enrollStatusId;
    public $subtitle;
}
?>