<?php

class sisproLayout extends accLayoutDoArquivoDeExportacao
{
    
    const TIPO_ALFA = 'alfa';
    const TIPO_NUM = 'num';
    
    private $sequencia = 1;
    
    public function __construct($data, $delimitador = ' ')
    {
        parent::__construct($data, $delimitador);
    }
    
    public function popularCampos()
    {
        // Processar os dados
        $data = $this->getData();

        //Lógica mudada, para cada data de entrada (as datas dos lancamentos) gerar um lote
        foreach ( $data as $key => $entry )
        {
            $lotes[$entry['data_entrada']][$key] = $entry;
        }
        
        foreach ( $lotes as $dataEntrada => $lote )
        {
            $codLote = '10' . SAGU::formatDate($dataEntrada, 'YYYYmmdd');

            $this->lotes[$codLote]['cod'] = $codLote;
            
            $sequenciaHeader = $this->getSequencia();
            
            $total = 0;
            $linha = 0;

            // Corpo
            foreach ( $lote as $entry )
            {
                $sequenciaLinha = $this->getSequencia();

                $total += $entry['valor'];

                //A conta são os cinco primeiros níveis, a subconta os que vierem depois
                $niveisDebito = explode('.', $entry['conta_debito']);
                $niveisCredito = explode('.', $entry['conta_credito']);
                
                $contaDebito = implode('.', array($niveisDebito[0], $niveisDebito[1], $niveisDebito[2], $niveisDebito[3], $niveisDebito[4]));
                $contaDebito = rtrim($contaDebito, '.');
                $contaCredito = implode('.', array($niveisCredito[0], $niveisCredito[1], $niveisCredito[2], $niveisCredito[3], $niveisCredito[4]));;
                $contaCredito = rtrim($contaCredito, '.');

                foreach ( $niveisDebito as $number => $nivel )
                {
                    if ( $number == 5 )
                    {
                        $subcontaDebito = $nivel;
                    }
                    elseif ( $number > 5 )
                    {
                        $subcontaDebito = $subcontaDebito . '.' . $nivel;
                    }
                }

                foreach ( $niveisCredito as $number => $nivel )
                {
                    if ( $number == 5 )
                    {
                        $subcontaCredito = $nivel;
                    }
                    elseif ( $number > 5 )
                    {
                        $subcontaCredito = $subcontaCredito . '.' . $nivel;
                    }
                }
                
                $valor = number_format($entry['valor'], 2, '.', '');
                $data = trim(str_replace('/', '', $entry['data_entrada']));
                
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(0, 001, 15, 'FISCAL'));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(1, 016, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(2, 017, 20, SAGU::getParameter('ACCOUNTANCY', 'COD_ESTABELECIMENTO_CONTABIL')));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(3, 037, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(4, 038, 30, 'exportacaoSagu_' . date('Ymd') . '.txt'));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(5, 068, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(6, 069, 15, 'INTERFACE'));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(7, 084, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(8, 085, 10, $codLote));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(9, 095, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(10, 096, 10, 'LANCTO'));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(11, 106, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(12, 107, 08, $data));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(13, 115, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(14, 116, 30, $contaDebito));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(15, 146, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(16, 147, 22, $subcontaDebito));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(17, 169, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(18, 170, 30, $contaCredito));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(19, 200, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(20, 201, 22, $subcontaCredito));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(21, 223, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(22, 224, 20, substr($entry['centro_custo'], 0, 3)));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(23, 244, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(24, 245, 20, substr($entry['centro_custo'], 0, 3)));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(25, 265, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(26, 266, 06, 'CCUSTO'));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(27, 272, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(28, 273, 15, substr($entry['centro_custo'], 0, 15)));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(29, 288, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(30, 289, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(31, 295, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(32, 296, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(33, 311, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(34, 312, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(35, 318, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(36, 319, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(37, 334, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(38, 335, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(39, 341, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(40, 342, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(41, 357, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(42, 358, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(43, 364, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(44, 365, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(45, 380, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(46, 381, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(47, 387, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(48, 388, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(49, 403, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(50, 404, 06, 'CCUSTO'));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(51, 410, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(52, 411, 15, substr($entry['centro_custo'], 0, 15)));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(53, 426, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(54, 427, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(55, 433, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(56, 434, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(57, 449, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(58, 450, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(59, 456, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(60, 457, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(61, 472, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(62, 473, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(63, 479, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(64, 480, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(65, 495, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(66, 496, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(67, 502, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(68, 503, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(69, 518, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(70, 519, 06, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(71, 525, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(72, 526, 15, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(73, 541, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(74, 542, 18, str_pad($valor, 18, '0', STR_PAD_LEFT)));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(75, 560, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(76, 561, 05, $entry['observacao_operacao']));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(77, 566, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(78, 567, 119, '*LIVRE@' . $entry['descricao_operacao']));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(79, 686, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(80, 687, 15,  ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(81, 702, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(82, 703, 120, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(83, 823, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(84, 824, 05, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(85, 829, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(86, 830, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(87, 831, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(88, 832, 03, 'EXC'));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(89, 835, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(90, 836, 10, '000002'));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(91, 846, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(92, 847, 10, '000003'));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(93, 857, 34, ''));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(94, 891, 01, $this->getDelimitador()));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(95, 892, 06, $sequenciaLinha));
                $this->addCampoCorpo($codLote, $linha, new campoDoArquivo(96, 898, 01, $this->getDelimitador()));
                
                $linha++;
            }
            
            $total = number_format($total, 2, '.', '');
                        
            // Cabeçalho
            $this->addCampoCabecalho($codLote, new campoDoArquivo(0, 001, 15, 'FISCAL'));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(1, 016, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(2, 017, 20, SAGU::getParameter('ACCOUNTANCY', 'COD_ESTABELECIMENTO_CONTABIL')));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(3, 037, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(4, 038, 30, 'exportacaoSagu_' . date('Ymd') . '.txt'));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(5, 068, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(6, 069, 15, 'INTERFACE'));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(7, 084, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(8, 085, 10, $codLote));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(9, 095, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(10, 096, 10, 'HEADER'));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(11, 106, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(12, 107, 06, str_pad(count($lote), 06, '0', STR_PAD_LEFT)));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(13, 113, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(14, 114, 08, $data));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(15, 122, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(16, 123, 18, str_pad($total, 18, '0', STR_PAD_LEFT)));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(17, 141, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(18, 142, 18, str_pad($total, 18, '0', STR_PAD_LEFT)));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(19, 160, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(20, 161, 08, $data));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(21, 169, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(22, 170, 721, ''));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(23, 891, 01, $this->getDelimitador()));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(24, 892, 06, $sequenciaHeader));
            $this->addCampoCabecalho($codLote, new campoDoArquivo(25, 898, 01, $this->getDelimitador()));

            // Rodapé
            $sequenciaRodape = $this->getSequencia();
            
            $this->addCampoRodape($codLote, new campoDoArquivo(0, 001, 15, 'FISCAL'));
            $this->addCampoRodape($codLote, new campoDoArquivo(1, 016, 01, $this->getDelimitador()));
            $this->addCampoRodape($codLote, new campoDoArquivo(2, 017, 20, SAGU::getParameter('ACCOUNTANCY', 'COD_ESTABELECIMENTO_CONTABIL')));
            $this->addCampoRodape($codLote, new campoDoArquivo(3, 037, 01, $this->getDelimitador()));
            $this->addCampoRodape($codLote, new campoDoArquivo(4, 038, 30, 'exportacaoSagu_' . date('Ymd') . '.txt'));
            $this->addCampoRodape($codLote, new campoDoArquivo(5, 068, 01, $this->getDelimitador()));
            $this->addCampoRodape($codLote, new campoDoArquivo(6, 069, 15, 'INTERFACE'));
            $this->addCampoRodape($codLote, new campoDoArquivo(7, 084, 01, $this->getDelimitador()));
            $this->addCampoRodape($codLote, new campoDoArquivo(8, 085, 10, $codLote));
            $this->addCampoRodape($codLote, new campoDoArquivo(9, 095, 01, $this->getDelimitador()));
            $this->addCampoRodape($codLote, new campoDoArquivo(10, 096, 10, 'TRAILLER'));
            $this->addCampoRodape($codLote, new campoDoArquivo(11, 106, 01, $this->getDelimitador()));
            $this->addCampoRodape($codLote, new campoDoArquivo(12, 107, 785, ''));
            $this->addCampoRodape($codLote, new campoDoArquivo(13, 892, 06, $sequenciaRodape));
            $this->addCampoRodape($codLote, new campoDoArquivo(14, 898, 01, $this->getDelimitador()));
        }
        
    }
    
    private function getSequencia()
    {
        $sequencia = str_pad($this->sequencia, 06, '0', STR_PAD_LEFT);
        $this->sequencia++;
        
        return $sequencia;
    }
}

?>
