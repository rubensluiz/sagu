<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for accEntryIntegration table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 29/09/2006
 *
 **/

/**
 * Form to search the accEntryIntegration table
 */
class FrmEntryIntegration extends SForm
{
    /**
     * Class constructor
     */
    public function __construct()
    {
        $module = MIOLO::getCurrentModule();
        $operationId = MIOLO::_request('operationId');
        
        parent::__construct( _M('Definir contabilização de lançamento para a operação @1', $module, $operationId), new accEntryIntegration(), NULL );
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');        

        $fields[] = new MHiddenField('operationId', $this->getFormValue('operationId', MIOLO::_request('operationId')));
        
        $business = new BusinessAccountancyBusEntryIntegration();
        $data = $business->getEntryIntegration(MIOLO::_request('operationId'));
        $data1 = $data->data1;
        $data2 = $data->data2;
        $data3 = $data->data3;
        $data4 = $data->data4;

        
        //external entry id 1
        $externalEntryIdLabel1 = new MText('externalEntryIdLabel1', _M('Código do lançamento', $module).':');
        $externalEntryIdLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $externalEntryIdLabel1;

        $externalEntryId1 = new MTextField('externalEntryId1', $this->getFormValue('externalEntryId1', $data1->externalEntryId), '', 5);
        $validators[]  = new MIntegerValidator('externalEntryId1');
        $flds1[]      = $externalEntryId1;

        $fields1[]  = new MHContainer('hctExternalEntryId1', $flds1);
        unset($flds1);

        //operation type id 1
        $business = new BusinessFinanceBusOperation();
        $messagesType = $business->listOperationTypeId(1);

        $operationTypeIdLabel1 = new MText('operationTypeIdLabel1', _M('Tipo de lançamento',$module).':');
        $operationTypeIdLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $operationTypeIdLabel1;

        $operationTypeId1 = new MRadioButtonGroup('operationTypeId1', '', $messagesType, $this->getFormValue('operationTypeId1', $data1->operationTypeId) ? $this->getFormValue('operationTypeId1', $data1->operationTypeId) : 'D' , null, 'horizontal');
        $operationTypeId1->SetShowLabel(false);
        $flds1[]      = $operationTypeId1;

        $fields1[]  = new MHContainer('hctOperationTypeId1', $flds1);
        unset($flds1);

        //debit account 1
        $debitAccountLabel1 = new MText('debitAccountLabel1', _M('Conta débito', $module).':');
        $debitAccountLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $debitAccountLabel1;

        $debitAccount1 = new MTextField('debitAccount1', $this->getFormValue('debitAccount1', $data1->debitAccount), '', 20);
        $flds1[]      = $debitAccount1;

        $fields1[]  = new MHContainer('hctDebitAccount1', $flds1);
        unset($flds1);

        //credit account 1
        $creditAccountLabel1 = new MText('creditAccountLabel1', _M('Conta crédito', $module).':');
        $creditAccountLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $creditAccountLabel1;

        $creditAccount1 = new MTextField('creditAccount1', $this->getFormValue('creditAccount1', $data1->creditAccount), '', 20);
        $flds1[]      = $creditAccount1;

        $fields1[]  = new MHContainer('hctCreditAccount1', $flds1);
        unset($flds1);
        
        //operation description 1
        $operationDescriptionLabel1 = new MText('operationDescriptionLabel1', _M('Descrição da operação', $module).':');
        $operationDescriptionLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $operationDescriptionLabel1;

        $operationDescription1 = new MTextField('operationDescription1', $this->getFormValue('operationDescription1', $data1->operationDescription), '', 30);
        $flds1[]      = $operationDescription1;

        $fields1[]  = new MHContainer('hctOperationDescription1', $flds1);
        unset($flds1);
        
        //debit cost center 1
        $debitCostCenterLabel1 = new MText('debitCostCenterLabel1', _M('Centro de custo débito', $module).':');
        $debitCostCenterLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $debitCostCenterLabel1;

        $debitCostCenter1 = new MTextField('debitCostCenter1', $this->getFormValue('debitCostCenter1', $data1->debitCostCenter), '', 15);
        $flds1[]      = $debitCostCenter1;

        $fields1[]  = new MHContainer('hctDebitCostCenter1', $flds1);
        unset($flds1);
        
        //credit cost center 1
        $creditCostCenterLabel1 = new MText('creditCostCenterLabel1', _M('Centro de custo crédito', $module).':');
        $creditCostCenterLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $creditCostCenterLabel1;

        $creditCostCenter1 = new MTextField('creditCostCenter1', $this->getFormValue('creditCostCenter1', $data1->creditCostCenter), '', 15);
        $flds1[]      = $creditCostCenter1;

        $fields1[]  = new MHContainer('hctCreditCostCenter1', $flds1);
        unset($flds1);
        
        //value 1
        $valueLabel1 = new MText('valueLabel1', _M('Valor', $module).':');
        $valueLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $valueLabel1;

        $value1 = new MTextField('value1', $this->getFormValue('value1', $data1->value), '', 15);
        $flds1[]      = $value1;

        $fields1[]  = new MHContainer('hctValue1', $flds1);
        unset($flds1);
        
        //user code 1
        $userCodeLabel1 = new MText('userCodeLabel1', _M('Código do usuário', $module).':');
        $userCodeLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $userCodeLabel1;

        $userCode1 = new MMultiLineField('userCode1', $this->getFormValue('userCode1', $data1->userCode), '', 40, 4, 30);
        $flds1[]      = $userCode1;

        $fields1[]  = new MHContainer('hctUserCode1', $flds1);
        unset($flds1);

        //debit item 1
        $debitItemLabel1 = new MText('debitItemLabel1', _M('Item débito', $module).':');
        $debitItemLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $debitItemLabel1;

        $debitItem1 = new MTextField('debitItem1', $this->getFormValue('debitItem1', $data1->debitItem), '', 20);
        $flds1[]      = $debitItem1;

        $fields1[]  = new MHContainer('hctDebitItem1', $flds1);
        unset($flds1);
        
        //credit item 1
        $creditItemLabel1 = new MText('creditItemLabel1', _M('Item crédito', $module).':');
        $creditItemLabel1->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds1[]      = $creditItemLabel1;

        $creditItem1 = new MTextField('creditItem1', $this->getFormValue('creditItem1', $data1->creditItem), '', 20);
        $flds1[]      = $creditItem1;

        $fields1[]  = new MHContainer('hctCreditItem1', $flds1);
        unset($flds1);

        //grupo 1
        $bsg1 = new BaseGroup('bsg1', '', $fields1, 'vertical');
        $bsg1->showLabel = false;
        $bsg1->width     = '49%';


        //external entry id 2
        $externalEntryIdLabel2 = new MText('externalEntryIdLabel2', _M('Código do lançamento', $module).':');
        $externalEntryIdLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $externalEntryIdLabel2;

        $externalEntryId2 = new MTextField('externalEntryId2', $this->getFormValue('externalEntryId2', $data2->externalEntryId), '', 5);
        $validators[]  = new MIntegerValidator('externalEntryId2');
        $flds2[]      = $externalEntryId2;

        $fields2[]  = new MHContainer('hctExternalEntryId2', $flds2);
        unset($flds2);

        //operation type id 2
        $business = new BusinessFinanceBusOperation();
        $messagesType = $business->listOperationTypeId(1);

        $operationTypeIdLabel2 = new MText('operationTypeIdLabel2', _M('Tipo de lançamento',$module).':');
        $operationTypeIdLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $operationTypeIdLabel2;

        $operationTypeId2 = new MRadioButtonGroup('operationTypeId2', '', $messagesType, $this->getFormValue('operationTypeId2', $data2->operationTypeId) ? $this->getFormValue('operationTypeId2', $data2->operationTypeId) : 'C' , null, 'horizontal');
        $operationTypeId2->SetShowLabel(false);
        $flds2[]      = $operationTypeId2;

        $fields2[]  = new MHContainer('hctOperationTypeId2', $flds2);
        unset($flds2);

        //debit account 2
        $debitAccountLabel2 = new MText('debitAccountLabel2', _M('Conta débito', $module).':');
        $debitAccountLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $debitAccountLabel2;

        $debitAccount2 = new MTextField('debitAccount2', $this->getFormValue('debitAccount2', $data2->debitAccount), '', 20);
        $flds2[]      = $debitAccount2;

        $fields2[]  = new MHContainer('hctDebitAccount2', $flds2);
        unset($flds2);
        
        //credit account 2
        $creditAccountLabel2 = new MText('creditAccountLabel2', _M('Conta crédito', $module).':');
        $creditAccountLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $creditAccountLabel2;

        $creditAccount2 = new MTextField('creditAccount2', $this->getFormValue('creditAccount2', $data2->creditAccount), '', 20);
        $flds2[]      = $creditAccount2;

        $fields2[]  = new MHContainer('hctCreditAccount2', $flds2);
        unset($flds2);
        
        //operation description 2
        $operationDescriptionLabel2 = new MText('operationDescriptionLabel2', _M('Descrição da operação', $module).':');
        $operationDescriptionLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $operationDescriptionLabel2;

        $operationDescription2 = new MTextField('operationDescription2', $this->getFormValue('operationDescription2', $data2->operationDescription), '', 30);
        $flds2[]      = $operationDescription2;

        $fields2[]  = new MHContainer('hctOperationDescription2', $flds2);
        unset($flds2);
        
        //debit cost center 2
        $debitCostCenterLabel2 = new MText('debitCostCenterLabel2', _M('Centro de custo débito', $module).':');
        $debitCostCenterLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $debitCostCenterLabel2;

        $debitCostCenter2 = new MTextField('debitCostCenter2', $this->getFormValue('debitCostCenter2', $data2->debitCostCenter), '', 15);
        $flds2[]      = $debitCostCenter2;

        $fields2[]  = new MHContainer('hctDebitCostCenter2', $flds2);
        unset($flds2);
        
        //credit cost center 2
        $creditCostCenterLabel2 = new MText('creditCostCenterLabel2', _M('Centro de custo crédito', $module).':');
        $creditCostCenterLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $creditCostCenterLabel2;

        $creditCostCenter2 = new MTextField('creditCostCenter2', $this->getFormValue('creditCostCenter2', $data2->creditCostCenter), '', 15);
        $flds2[]      = $creditCostCenter2;

        $fields2[]  = new MHContainer('hctCreditCostCenter2', $flds2);
        unset($flds2);
        
        //value 2
        $valueLabel2 = new MText('valueLabel2', _M('Valor', $module).':');
        $valueLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $valueLabel2;

        $value2 = new MTextField('value2', $this->getFormValue('value2', $data2->value), '', 15);
        $flds2[]      = $value2;

        $fields2[]  = new MHContainer('hctValue2', $flds2);
        unset($flds2);
        
        //user code 2
        $userCodeLabel2 = new MText('userCodeLabel2', _M('Código do usuário', $module).':');
        $userCodeLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $userCodeLabel2;

        $userCode2 = new MMultiLineField('userCode2', $this->getFormValue('userCode2', $data2->userCode), '', 40, 4, 30);
        $flds2[]      = $userCode2;

        $fields2[]  = new MHContainer('hctUserCode2', $flds2);
        unset($flds2);

        //debit item 2
        $debitItemLabel2 = new MText('debitItemLabel2', _M('Item débito', $module).':');
        $debitItemLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $debitItemLabel2;

        $debitItem2 = new MTextField('debitItem2', $this->getFormValue('debitItem2', $data2->debitItem), '', 20);
        $flds2[]      = $debitItem2;

        $fields2[]  = new MHContainer('hctDebitItem2', $flds2);
        unset($flds2);
        
        //credit item 2
        $creditItemLabel2 = new MText('creditItemLabel2', _M('Item crédito', $module).':');
        $creditItemLabel2->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds2[]      = $creditItemLabel2;

        $creditItem2 = new MTextField('creditItem2', $this->getFormValue('creditItem2', $data2->creditItem), '', 20);
        $flds2[]      = $creditItem2;

        $fields2[]  = new MHContainer('hctCreditItem2', $flds2);
        unset($flds2);

        //grupo 2
        $bsg2 = new BaseGroup('bsg2', '', $fields2, 'vertical');
        $bsg2->showLabel = false;
        $bsg2->width     = '48%';



        //external entry id 3
        $externalEntryIdLabel3 = new MText('externalEntryIdLabel3', _M('Código do lançamento', $module).':');
        $externalEntryIdLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $externalEntryIdLabel3;

        $externalEntryId3 = new MTextField('externalEntryId3', $this->getFormValue('externalEntryId3', $data3->externalEntryId), '', 5);
        $validators[]  = new MIntegerValidator('externalEntryId3');
        $flds3[]      = $externalEntryId3;

        $fields3[]  = new MHContainer('hctExternalEntryId3', $flds3);
        unset($flds3);

        //operation type id 3
        $business = new BusinessFinanceBusOperation();
        $messagesType = $business->listOperationTypeId(1);

        $operationTypeIdLabel3 = new MText('operationTypeIdLabel3', _M('Tipo de lançamento',$module).':');
        $operationTypeIdLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $operationTypeIdLabel3;

        $operationTypeId3 = new MRadioButtonGroup('operationTypeId3', '', $messagesType, $this->getFormValue('operationTypeId3', $data3->operationTypeId) ? $this->getFormValue('operationTypeId3', $data3->operationTypeId) : 'C' , null, 'horizontal');
        $operationTypeId3->SetShowLabel(false);
        $flds3[]      = $operationTypeId3;

        $fields3[]  = new MHContainer('hctOperationTypeId3', $flds3);
        unset($flds3);

        //debit account 3
        $debitAccountLabel3 = new MText('debitAccountLabel3', _M('Conta débito', $module).':');
        $debitAccountLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $debitAccountLabel3;

        $debitAccount3 = new MTextField('debitAccount3', $this->getFormValue('debitAccount3', $data3->debitAccount), '', 20);
        $flds3[]      = $debitAccount3;

        $fields3[]  = new MHContainer('hctDebitAccount3', $flds3);
        unset($flds3);
        
        //credit account 3
        $creditAccountLabel3 = new MText('creditAccountLabel3', _M('Conta crédito', $module).':');
        $creditAccountLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $creditAccountLabel3;

        $creditAccount3 = new MTextField('creditAccount3', $this->getFormValue('creditAccount3', $data3->creditAccount), '', 20);
        $flds3[]      = $creditAccount3;

        $fields3[]  = new MHContainer('hctCreditAccount3', $flds3);
        unset($flds3);
        
        //operation description 3
        $operationDescriptionLabel3 = new MText('operationDescriptionLabel3', _M('Descrição da operação', $module).':');
        $operationDescriptionLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $operationDescriptionLabel3;

        $operationDescription3 = new MTextField('operationDescription3', $this->getFormValue('operationDescription3', $data3->operationDescription), '', 30);
        $flds3[]      = $operationDescription3;

        $fields3[]  = new MHContainer('hctOperationDescription3', $flds3);
        unset($flds3);
        
        //debit cost center 3
        $debitCostCenterLabel3 = new MText('debitCostCenterLabel3', _M('Centro de custo débito', $module).':');
        $debitCostCenterLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $debitCostCenterLabel3;

        $debitCostCenter3 = new MTextField('debitCostCenter3', $this->getFormValue('debitCostCenter3', $data3->debitCostCenter), '', 15);
        $flds3[]      = $debitCostCenter3;

        $fields3[]  = new MHContainer('hctDebitCostCenter3', $flds3);
        unset($flds3);
        
        //credit cost center 3
        $creditCostCenterLabel3 = new MText('creditCostCenterLabel3', _M('Centro de custo crédito', $module).':');
        $creditCostCenterLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $creditCostCenterLabel3;

        $creditCostCenter3 = new MTextField('creditCostCenter3', $this->getFormValue('creditCostCenter3', $data3->creditCostCenter), '', 15);
        $flds3[]      = $creditCostCenter3;

        $fields3[]  = new MHContainer('hctCreditCostCenter3', $flds3);
        unset($flds3);
        
        //value 3
        $valueLabel3 = new MText('valueLabel3', _M('Valor', $module).':');
        $valueLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $valueLabel3;

        $value3 = new MTextField('value3', $this->getFormValue('value3', $data3->value), '', 15);
        $flds3[]      = $value3;

        $fields3[]  = new MHContainer('hctValue3', $flds3);
        unset($flds3);
        
        //user code 1
        $userCodeLabel3 = new MText('userCodeLabel3', _M('Código do usuário', $module).':');
        $userCodeLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $userCodeLabel3;

        $userCode3 = new MMultiLineField('userCode3', $this->getFormValue('userCode3', $data3->userCode), '', 40, 4, 30);
        $flds3[]      = $userCode3;

        $fields3[]  = new MHContainer('hctUserCode3', $flds3);
        unset($flds3);

        //debit item 3
        $debitItemLabel3 = new MText('debitItemLabel3', _M('Item débito', $module).':');
        $debitItemLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $debitItemLabel3;

        $debitItem3 = new MTextField('debitItem3', $this->getFormValue('debitItem3', $data3->debitItem), '', 20);
        $flds3[]      = $debitItem3;

        $fields3[]  = new MHContainer('hctDebitItem3', $flds3);
        unset($flds3);
        
        //credit item 1
        $creditItemLabel3 = new MText('creditItemLabel3', _M('Item crédito', $module).':');
        $creditItemLabel3->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds3[]      = $creditItemLabel3;

        $creditItem3 = new MTextField('creditItem3', $this->getFormValue('creditItem3', $data3->creditItem), '', 20);
        $flds3[]      = $creditItem3;

        $fields3[]  = new MHContainer('hctCreditItem3', $flds3);
        unset($flds3);

        //grupo 3
        $bsg3 = new BaseGroup('bsg3', '', $fields3, 'vertical');
        $bsg3->showLabel = false;
        $bsg3->width     = '49%';



        //external entry id 4
        $externalEntryIdLabel4 = new MText('externalEntryIdLabel4', _M('Código do lançamento', $module).':');
        $externalEntryIdLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $externalEntryIdLabel4;

        $externalEntryId4 = new MTextField('externalEntryId4', $this->getFormValue('externalEntryId4', $data4->externalEntryId), '', 5);
        $validators[]  = new MIntegerValidator('externalEntryId4');
        $flds4[]      = $externalEntryId4;

        $fields4[]  = new MHContainer('hctExternalEntryId4', $flds4);
        unset($flds4);

        //operation type id 4
        $business = new BusinessFinanceBusOperation();
        $messagesType = $business->listOperationTypeId(1);

        $operationTypeIdLabel4 = new MText('operationTypeIdLabel4', _M('Tipo de lançamento',$module).':');
        $operationTypeIdLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $operationTypeIdLabel4;

        $operationTypeId4 = new MRadioButtonGroup('operationTypeId4', '', $messagesType, $this->getFormValue('operationTypeId4', $data4->operationTypeId) ? $this->getFormValue('operationTypeId4', $data4->operationTypeId) : 'C' , null, 'horizontal');
        $operationTypeId4->SetShowLabel(false);
        $flds4[]      = $operationTypeId4;

        $fields4[]  = new MHContainer('hctOperationTypeId4', $flds4);
        unset($flds4);

        //debit account 4
        $debitAccountLabel4 = new MText('debitAccountLabel4', _M('Conta débito', $module).':');
        $debitAccountLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $debitAccountLabel4;

        $debitAccount4 = new MTextField('debitAccount4', $this->getFormValue('debitAccount4', $data4->debitAccount), '', 20);
        $flds4[]      = $debitAccount4;

        $fields4[]  = new MHContainer('hctDebitAccount4', $flds4);
        unset($flds4);
        
        //credit account 4
        $creditAccountLabel4 = new MText('creditAccountLabel4', _M('Conta crédito', $module).':');
        $creditAccountLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $creditAccountLabel4;

        $creditAccount4 = new MTextField('creditAccount4', $this->getFormValue('creditAccount4', $data4->creditAccount), '', 20);
        $flds4[]      = $creditAccount4;

        $fields4[]  = new MHContainer('hctCreditAccount4', $flds4);
        unset($flds4);
        
        //operation description 4
        $operationDescriptionLabel4 = new MText('operationDescriptionLabel4', _M('Descrição da operação', $module).':');
        $operationDescriptionLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $operationDescriptionLabel4;

        $operationDescription4 = new MTextField('operationDescription4', $this->getFormValue('operationDescription4', $data4->operationDescription), '', 30);
        $flds4[]      = $operationDescription4;

        $fields4[]  = new MHContainer('hctOperationDescription4', $flds4);
        unset($flds4);
        
        //debit cost center 4
        $debitCostCenterLabel4 = new MText('debitCostCenterLabel4', _M('Centro de custo débito', $module).':');
        $debitCostCenterLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $debitCostCenterLabel4;

        $debitCostCenter4 = new MTextField('debitCostCenter4', $this->getFormValue('debitCostCenter4', $data4->debitCostCenter), '', 15);
        $flds4[]      = $debitCostCenter4;

        $fields4[]  = new MHContainer('hctDebitCostCenter4', $flds4);
        unset($flds4);
        
        //credit cost center 4
        $creditCostCenterLabel4 = new MText('creditCostCenterLabel4', _M('Centro de custo crédito', $module).':');
        $creditCostCenterLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $creditCostCenterLabel4;

        $creditCostCenter4 = new MTextField('creditCostCenter4', $this->getFormValue('creditCostCenter4', $data4->creditCostCenter), '', 15);
        $flds4[]      = $creditCostCenter4;

        $fields4[]  = new MHContainer('hctCreditCostCenter4', $flds4);
        unset($flds4);
        
        //value 4
        $valueLabel4 = new MText('valueLabel4', _M('Valor', $module).':');
        $valueLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $valueLabel4;

        $value4 = new MTextField('value4', $this->getFormValue('value4', $data4->value), '', 15);
        $flds4[]      = $value4;

        $fields4[]  = new MHContainer('hctValue4', $flds4);
        unset($flds4);
        
        //user code 1
        $userCodeLabel4 = new MText('userCodeLabel4', _M('Código do usuário', $module).':');
        $userCodeLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $userCodeLabel4;

        $userCode4 = new MMultiLineField('userCode4', $this->getFormValue('userCode4', $data4->userCode), '', 40, 4, 30);
        $flds4[]      = $userCode4;

        $fields4[]  = new MHContainer('hctUserCode4', $flds4);
        unset($flds4);

        //debit item 4
        $debitItemLabel4 = new MText('debitItemLabel4', _M('Item débito', $module).':');
        $debitItemLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $debitItemLabel4;

        $debitItem4 = new MTextField('debitItem4', $this->getFormValue('debitItem4', $data4->debitItem), '', 20);
        $flds4[]      = $debitItem4;

        $fields4[]  = new MHContainer('hctDebitItem4', $flds4);
        unset($flds4);
        
        //credit item 1
        $creditItemLabel4 = new MText('creditItemLabel4', _M('Item crédito', $module).':');
        $creditItemLabel4->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $flds4[]      = $creditItemLabel4;

        $creditItem4 = new MTextField('creditItem4', $this->getFormValue('creditItem4', $data4->creditItem), '', 20);
        $flds4[]      = $creditItem4;

        $fields4[]  = new MHContainer('hctCreditItem4', $flds4);
        unset($flds4);


        //grupo 4
        $bsg4 = new BaseGroup('bsg4', '', $fields4, 'vertical');
        $bsg4->showLabel = false;
        $bsg4->width     = '48%';


        $fields[] = new MHContainer('hctResult1', array($bsg1, $bsg2));
        $fields[] = new MHContainer('hctResult2', array($bsg3, $bsg4));
        
        $fields[] = new MTextLabel('lastModification', '['.$data1->userName.' - '.$data1->dateTime.']', _M('Última modificação', $module));
        
        $fields[] = new Separator('');
        
        parent::defineFields( array( 'fields' => $fields, 'validators' => $validators ) );

        $this->toolbar->disableButton(MToolBar::BUTTON_NEW);
        $this->toolbar->disableButton(MToolBar::BUTTON_DELETE);
        $this->toolbar->disableButton(MToolBar::BUTTON_PRINT);
        $this->toolbar->disableButton(MToolBar::BUTTON_SEARCH);
    }
    
    /**
     * Event triggered when user chooses Save from the toolbar
     **/
    public function tbBtnSave_click($sender = null)
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        $operationId = $this->getFormValue('operationId');

        $data1     = $this->getTypesData1();
        $data2     = $this->getTypesData2();
        $data3     = $this->getTypesData3();
        $data4     = $this->getTypesData4();

        $business = new BusinessAccountancyBusEntryIntegration();
        
        $business->beginTransaction();
        $business->deleteEntryIntegration($operationId);

        $data1->externalEntryId ? $ok1  = $business->insertEntryIntegration($data1): $ok1 = true;
        $data2->externalEntryId ? $ok2  = $business->insertEntryIntegration($data2): $ok2 = true;
        $data3->externalEntryId ? $ok3  = $business->insertEntryIntegration($data3): $ok3 = true;
        $data4->externalEntryId ? $ok4  = $business->insertEntryIntegration($data4): $ok4 = true;
        $msg = _M('Registros para a operação @1 inseridos com sucesso', $module, $data1->operationId);

        if ( $ok1 && $ok2 && $ok3 && $ok4 )
        {
            $business->commit();
    
            $goto = $MIOLO->getActionURL( $module, 'main:process:accounting:defineAccountingProjects', null, null);
            $caption = _M('Questão',$module);
            $MIOLO->information($msg, $goto);
        }
        else
        {
            $msg  = _M('Erro executando a operação requerida', $module);
            $goto = SAGU::getStackBackUrl();
            $goto = strlen($goto)>0 ? $goto : $MIOLO->getActionURL($module, $action);
            $caption = _M('Erro', $module);
            $MIOLO->error( $msg, $goto, $caption );
        }
    }
    
    
    public function getTypesData1()
    {
        $data1 = parent::getTypesData();
        $vars  = get_object_vars($data1);
        foreach ( $vars as $var => $value )
        {
            eval('$data1->' . $var . ' = $this->' . $var . '1->value;');
        }
        $data1->operationId = MIOLO::_request('operationId');

        return $data1;
    }
    
    public function getTypesData2()
    {
        $data2 = parent::getTypesData();
        $vars  = get_object_vars($data2);
        foreach ( $vars as $var => $value )
        {
            eval('$data2->' . $var . ' = $this->' . $var . '2->value;');
        }
        
        $data2->operationId = MIOLO::_request('operationId');

        return $data2;
    }

    public function getTypesData3()
    {
        $data3 = parent::getTypesData();
        $vars  = get_object_vars($data3);
        foreach ( $vars as $var => $value )
        {
            eval('$data3->' . $var . ' = $this->' . $var . '3->value;');
        }
        
        $data3->operationId = MIOLO::_request('operationId');

        return $data3;
    }

    public function getTypesData4()
    {
        $data4 = parent::getTypesData();
        $vars  = get_object_vars($data4);
        foreach ( $vars as $var => $value )
        {
            eval('$data4->' . $var . ' = $this->' . $var . '4->value;');
        }
        
        $data4->operationId = MIOLO::_request('operationId');

        return $data4;
    }


}

?>
