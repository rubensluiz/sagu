<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Generate accountancy balance
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 02/10/2006
 *
 **/

/**
 * Form to import cost center
 **/
class FrmGenerateAccountancyBalance extends SForm
{
    private $home;

    /**
     * Class constructor
     **/
    public function __construct($data)
    {
        $module     = MIOLO::getCurrentModule();
        $this->home = $data->home;
        parent::__construct( _M('Gerar saldos de contas contábeis', $module), null, null );
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO       = MIOLO::getInstance();
        $module      = MIOLO::getCurrentModule();
        $action      = MIOLO::getCurrentAction();
        $initialDate = MIOLO::_request('initialDate');
        $limitDate   = MIOLO::_request('limitDate');

        $business = new BusinessAccountancyBusAccountBalance();

        $ok = $business->generateAccountancyBalance($initialDate, $limitDate);

        if ( $ok )
        {
            $msg = _M('Balaços contábeis gerados com sucesso!', $module) . ' ' . _M('Você deseja visualizá-los?', $module);
            $opts = array('initialDate1' => MIOLO::_request('initialDate'),
                          'limitDate1'   => MIOLO::_request('limitDate'));
            $gotoNo  = $MIOLO->getActionURL($module, 'main:process:accountancyBalance', null, $opts);
            $opts['balanceDate']   = $limitDate;
            $opts['personBalance'] = true;
            $gotoYes = $MIOLO->getActionURL($module, 'main:report:storedBalances', null, $opts);
            $caption = _M('Questão',$module);
            $MIOLO->question($msg, $gotoYes, $gotoNo);
        }
        else
        {
            $msg  = _M('Erro executando a operação requerida', $module);
            $goto = SAGU::getStackBackUrl();
            $goto = strlen($goto)>0 ? $goto : $MIOLO->getActionURL($module, $action);
            $caption = _M('Erro', $module);
            $MIOLO->error( $msg, $goto, $caption );
        }
        
        parent::defineFields( array( 'toolbar' => false ) );
    }

}

?>
