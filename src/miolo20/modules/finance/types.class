<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Class definition for database entities
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * @revision: William Prigol Lopes [william@solis.coop.br]
 * @changes: Add new fields
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 17/08/2005
 *
 **/

/**
 * Finance database classes
 */

$MIOLO = MIOLO::getInstance();
$MIOLO->uses( 'types.class', 'basic' );

// Recriada a classe BasFile para ser utilizada pelos novos types.
class BasFile extends SType
{
    public $fileId;
    public $uploadFileName;
    public $contentType;
    public $filePath;
    public $absolutePath;
}

class FinFile extends BasFile
{    
    public $fileId;
    public $bankAccountId;
    public $fileType;
    public $inputOrOutput;
    public $isProcessed;
    public $bankReturnId;
    public $referenceDate;
}

class FinAgreementComments extends BasLog
{
    public $agreementCommentsId;
    public $personId;
    public $agreementTitle;
    public $comments;
}

class FinPersonInformation extends BasPerson
{
    public $personId;
    public $information;
}

class FinReasonCancellationFinance extends BasLog
{
    public $reasonCancellationId;
    public $description;

}

class FinDefaultOperations extends BasLog
{

    public $addCurricularComponentOperation;

    public $cancelCurricularComponentOperation;

    public $protocolOperation;

    public $interestOperation;

    public $discountOperation;

    public $libraryFineOperation;

    public $closeIncomeForecastOperation;

    public $enrollOperation;

    public $paymentOperation;

    public $agreementOperation;

    public $bankTaxOperation;

    public $bankClosingTaxOperation;

    public $selectiveProcessTaxOperation;

    public $renewalOperation;
    
    public $monthlyFeeOperation;
    
    public $otherAdditionsOperation;
    
    public $otherDiscountsOperation;
    
    public $repaymentCurricularComponentOperation;
    
    public $withdrawOperation;
    
    public $courseTransferOperation;
    
    public $transferOperation;
    
    public $reentryOperation;
    
    public $payrollDiscountOperation;
    
    public $transferenciaDeSaldoOperation;
    
    public $reemissaoDeTituloOperation;
    
    public $recebimentoDeValorDeCaixa;
    
    public $transferenciaDeValorDeCaixa;
    
    public $operacaoDevolucao;
    
    public $capoperacaopagamentoid;
    
    public $capoperacaocobrancaid;
        
    public $capoperacaodescontoid;
    
    public $capoperacaojurosid;
    
    /**
     * Dado um nome da operação padrão, traz a operação registrada a essa
     * 
     * @param String $nomeDaOperacaoPadrao Nome da operação padrão
     * 
     * @return stdClass Objeto com as seguintes propriedades <br>
     * - operationid = Identificador da operação<br>
     * - operationtypeid = Tipo da operação ((C)rédito ou (D)ébito)
     */
    public static function getInformacaoOperacaoPorOperacaoPadrao($nomeDaOperacaoPadrao)
    {
        $sql = 
            "
                SELECT fd.{$nomeDaOperacaoPadrao},
                       fo.operationtypeid
                  FROM findefaultoperations fd
            INNER JOIN finoperation fo
                    ON fd.{$nomeDaOperacaoPadrao} = fo.operationid
            ";
        
        $row = SDatabase::query($sql);
                
        $retorno = new stdClass();
        $retorno->operationid = $row[0][0];
        $retorno->operationtypeid = $row[0][1];
        
        return $retorno;
    }
    
}

class FinOccurrenceOperation extends BasLog
{

    public $occurrenceId;

    public $bankAccountId;

    public $operationId;
}

class FinOperation extends SType
{

    public $operationId;

    public $description;

    public $operationTypeId;

    public $isExtinct = DB_FALSE;

    public $isCounterMovement = DB_FALSE;

    public $operationGroupId;
    
    public $receivableOrPayable;
    
    public $accountSchemeId;
    
    public $useInDiscounts = DB_TRUE;
    
    public $useInInterests = DB_TRUE;
    
    public $useInFines = DB_TRUE;
    
    public $accountSchemeId_opposite;
    
    public $observacao;
}

class FinEnrollFee extends BasLog
{

    public $learningPeriodId;
    public $operationId;
    public $isFreshMan;
    public $valueIsPercent;
    public $value;
    public $parcelsNumber;
    public $operacaoCancelamento;

}

class FinBankAccount extends SType
{
    protected $_descriptionColumn = 'FinBankAccount.description';
    
    public $bankId;
    public $bankAccountId;
    public $description;
    public $accountNumber;
    public $accountNumberDigit;
    public $shop;
    public $url;
    public $signature;
    public $cip;
    public $isOnline;
    public $branchNumber;
    public $branchNumberDigit;
    public $transferorCode;
    public $transferorCodeDv;
    public $bankRemittanceSequence;
    public $wallet;
    public $walletModel;
    public $agreement;
    public $accepted;
    public $ourNumber;
    public $invoiceGeneration;
    public $invoiceSpecie;
    public $invoiceTypeId;
    public $gatheringCode;
    public $referenceNumber;
    public $ugManagementCode;
    public $invoiceMessage1;
    public $invoiceMessage2;
    public $taxbankvalue;
    public $taxbankcreditoperation;
    public $taxbankdebtoperation;
    public $responsibletaxbank;
    public $accountSchemeId;
    public $geracaoDoNossoNumeroPeloBanco;
    
    public static function search($filters)
    {
        $bus = new BusinessFinanceBusBankAccount();
        return $bus->searchBankAccount($filters);
    }
    
    public function delete()
    {
        $busBankAccount = new BusinessFinanceBusBankAccount();
        return $busBankAccount->deleteBankAccount($this->bankAccountId);
    }
}

class FinBankInvoiceInfo extends BasLog
{
    public $bankAccountId;
    public $invoiceId;
    public $ourNumber;
    public $barCodeNumber;
    public $digitableNumber;
}

class FinCollectionType extends BasLog
{
    public $collectionTypeId;
    public $description;
}

class FinConvenant extends BasLog
{
    public $convenantId;
    public $description;
    public $value;
    public $isPercent;
    public $daysToDiscount;
    public $beforeAfter;
    public $convenantOperation;
    public $percentRenovacao;
    public $aditarIncentivo;
    public $acumulativo;
    public $condicional;
    public $todasDisciplinas;
    public $aplicaVeteranos;
    public $aplicaCalouros;
    public $concederPeriodo;
    public $crMinimo;
    public $crMaximo;
}

class FinConvenantPerson extends BasLog
{
    public $convenantPersonId;
    public $convenantId;
    public $personId;
    public $beginDate;
    public $endDate;
    public $contractId;
    public $inscricaoId;
}

class FinRelease extends BasLog
{
    public $releaseId;
    public $invoiceId;
    public $releaseInterest;
    public $applyConvenant;
    public $discountValue;
    public $isPercent;
    public $operationId;
    public $beginDate;
    public $endDate;
    public $personId;
    public $personName;
}

class FinMessage extends BasLog
{

    public $bankId;

    public $collectionTypeId;

    public $messageOrder;

    public $bankMessageCode;

    public $messageText;

}

class FinInvoiceLog extends BasLog
{

    public $month;

    public $year;

    public $generationDate;

    public $generationType;

}

class FinIncomeForecast extends BasLog
{
    public $incomeForecastId;
    public $contractId;
    public $operationId;
    public $accountSchemeId;
    public $costCenterId;
    public $value;
    public $comments;
    public $recordDate;
    public $maturityDate;
    public $isAccounted = DB_FALSE;
    public $isProcessed = DB_FALSE;
    public $isGenerated = DB_FALSE;
    public $incentiveId;
    public $isSupressed = DB_FALSE;
    public $learningPeriodId;
    public $invoiceId;
}

class FinPolicy extends SType
{
    public $policyId;
    public $description;
    public $operationId;
    public $collectionTypeId;
    public $daysToProtest;
    public $bankTaxValue;
    public $applyInterest = DB_FALSE;
    public $monthlyInterestPercent;
    public $daysToInterest;
    public $interestType;
    public $applyFine = DB_FALSE;
    public $finePercent;
    public $daysToFine;
    public $isExtinct = DB_FALSE;
    public $emissionTypeId;
    public $emissionTypeDescription;

}

class FinInvoice extends SType
{
    public $invoiceId;
    public $personId;
    public $accountSchemeId;
    public $costCenterId;
    public $parcelNumber;
    public $emissionDate;
    public $maturityDate;
    public $value;
    public $policyId;
    public $bankInvoiceId;
    public $automaticDebit = DB_FALSE;
    public $comments;
    public $incomeSourceId;
    public $isCanceled = DB_FALSE;
    public $isImported = DB_FALSE;
    public $reasonCancellationId;
    public $bankAccountId;
    public $sagu1InvoiceId;
    public $sectorId = NULL;
    public $emissionTypeId; 
    public $referenceMaturityDate;
    public $invoiceIdDependence;
    public $balance;
    public $competencyDate;
    public $nominalValue;
    
    public function __construct($id = null)
    {
        parent::__construct($id);
        
        //Seta valor padrão do tipo de emissão
        $this->emissionTypeId = $this->setEmissionTypeId(SAGU::getParameter('BASIC', 'DEFAULT_EMISSION_TYPE_ID'));
    }
    
    /**
     * Seta valor do tipo de emissão 
     * @param type $emissionTypeId
     */
    private function setEmissionTypeId($emissionTypeId)
    {
        $this->emissionTypeId = $emissionTypeId;
    }
}

class FinInvoiceMessage
{
    public $invoiceMessageId;
    public $invoiceMessageTypeId;
    public $bankId;
    public $description;
    public $messageOrder;
    public $invoiceMessageBankValue;    
    public $operationId;
}

class FinReceivableInvoice extends FinInvoice
{
    public $sendDate;
    public $returnDate;
    public $returnFileId;
}

class FinPayableInvoice extends FinInvoice
{
    const STATUS_PAYED = 'P';
    const STATUS_WAITING = 'B';
    const STATUS_FREE = 'L';

    public $receiveDate;
    public $description;
    public $documentNumber;
    public $statusId;
}

class FinEntry extends BasLog
{

    public $entryId;
    public $invoiceId;
    public $operationId;
    public $entryDate;
    public $value;
    public $costCenterId;
    public $comments;
    public $bankReturnCode;
    public $isAccounted = DB_FALSE;
    public $creationType;
    public $contractId;
    public $learningPeriodId;
    public $bankMovementId;
    public $counterMovementId;
    public $lancamentoEstornado = DB_FALSE;
}

class FinPrice extends BasLog
{
    public $startDate;
    public $endDate;
    public $value;
    public $bankAccountId;
    public $valueIsFixed;
    public $referenceNumberHours;
    public $firstParcelAtSight;
    public $firstParcelAtSightFreshman;
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $unitId;    
    public $fixedValue;
    public $applyChangesOnFirstParcel;
    public $parcelsNumber;
    public $maturityDay;
    public $valorcreditoferias;
    public $parceltype;
}

class FinSpecies extends SType
{
    public $speciesId;
    public $description;
    public $isEnabled = DB_TRUE;
    public $speciesTypeId;
    public $bandeira;
    public $modalidade;
    public $numParcelas;
}

class FinSpeciesType extends BasLog
{
    public $speciesTypeId;
    public $description;
}

class FinIncomeSource extends SType
{
    public $incomeSourceId;
    public $description;
    public $isExtinct = DB_FALSE;
    public $isAgreement = DB_FALSE;
}

class FinBank extends SType
{
    public $bankId;
    public $description;
    public $bankIdVd;
    public $accordCode;
    public $tamanhoCampoAgencia;
    public $tamanhoDvAgencia;
    public $mascaraAgencia;
    public $tamanhoCampoConta;
    public $tamanhoDvConta;
    public $mascaraConta;
        
}

class FinCloseCounter extends Baslog
{
    public $closeCounterId;
    public $openCounterId;
    public $value;
    public $registerDate;
    public $operation;
    public $observation;
    public $determinedValue;
    public $isConfirmed;
    public $counterId;
    public $operatorId;
    public $operatorName;
    public $responsibleUserName;
    public $saldoFechamento;
}

class FinCounter extends SType
{
    public $counterId;
    public $description;
    public $unitId;
    public $unitDescription;
    public $isActive;
    public $isCounterTreasury;
    public $accountSchemeId;
}

class FinInvoiceTarget extends FinInvoice
{

    public $contractId;

    public $isActive = DB_TRUE;

}

class FinInvoiceType extends Baslog
{
    const TYPE_BILLET = 1; //boleto
    const TYPE_BILLET_ONLINE = 2; //boleto online
    const TYPE_GRU = 3; //Guia de recolhimento da uniao

    public $invoiceTypeId;
    public $description;
}

class FinBankTarget extends FinInvoiceTarget
{

    public $contractId;

    public $bankId;

    public $bankName;

    public $branchNumber;

    public $branchNumberDigit;

    public $accountNumber;

    public $accountNumberDigit;
}

class FinPhysicalTarget extends FinInvoiceTarget
{

    public $contractId;

    public $cityId;

    public $cityName;

    public $zipCode;

    public $location;

    public $number;

    public $complement;

    public $neighborhood;

    public $name;

    public $documentNumber;

    public $stateId;
}

class FinPayrollDiscountTarget extends FinInvoiceTarget
{

    public $isPayrollDiscount = DB_TRUE;

    public $employeeId;

    public $contractId;
}

class FinIncentiveType extends BasLog
{

    public $incentiveTypeId;

    public $description;

    public $operationId;
    
    public $paymentOperation;
    
    public $rePaymentOperation;

    public $needAdjustAuthorization = DB_FALSE;

    public $sendInvoices = DB_TRUE;

    public $generateCredits;

    public $isExtinct = DB_FALSE;
    
    public $applyDiscounts = DB_TRUE;
    
    public $percentRenovacao;
    
    public $aditarIncentivo;
}

class FinSupport extends FinIncentiveType
{

    public $accountSchemeId;

    public $collectionOperationId;
    
    public $geraTituloDeCobranca = DB_FALSE;
}

class FinFinancialAid extends FinIncentiveType
{

    public $requireCostCenter = DB_FALSE;
}

class FinLoan extends FinIncentiveType
{

    public $accountSchemeId;

    public $loanerId;

    public $rotative = DB_FALSE;

    public $groupInvoicesValues = DB_FALSE;

    public $collectionOperationId;
    
    public $geraTituloDeCobranca = DB_FALSE;
}

class FinIncentive extends BasLog
{
    const VALOR_NOMINAL = 'N';
    const SALDO_EM_ABERTO = 'S';
    
    
    public $incentiveId;

    public $contractId;

    public $startDate;

    public $endDate;

    public $incentiveTypeId;

    public $valueIsPercent = DB_FALSE;

    public $value;

    public $supporterId;

    public $agglutinate = DB_FALSE;

    public $costCenterId;

    public $cancelDate = NULL;

    public $cancellationDate = NULL;
    
    public $incentivoAditado = DB_FALSE;
    
    public $pagamentoValorFinanciado;
    
    public $concederSobre;
    
    public $prioridade;
    
    public $opcaoDeAjuste;
    
    public static function tipoDeDesconto()
    {
        return array(FinIncentive::VALOR_NOMINAL => _M('Valor nominal'), 
                     FinIncentive::SALDO_EM_ABERTO => _M('Saldo em aberto')
                    );
    }
}

class FinOperationGroup extends BasLog
{

    public $operationGroupId;

    public $description;
}

class FinStudentFinancing extends BasLog
{
    public $studentFinancingId;
    public $contractId;
    public $initialValue;
    public $currentValue;
    public $comments;
}

class FinSpcReason extends BasLog
{
    public $reasonId;
    public $description;
}

class FinSpc extends BasLog
{
    public $personId;
    public $entryDate;
    public $removalDate;
    public $personName;
}

class FinSpcMovement extends BasLog
{
    public $movementId;
    public $date;
    public $reasonId;
    public $personId;
    public $entryDate;
    public $observation;
    public $invoiceId;
}

class FinEmissionType extends BasLog
{
    public $emissionTypeId;
    public $description;
}

class FinPolicyDiscount extends BasLog
{
    public $discountId;
    public $policyId;
    public $daysToDiscount;
    public $beforeAfter;
    public $discountValue;
    public $isPercent;
    public $beginClassPeriod;
    public $endClassPeriod;
    public $parcelNumber;
}

class FinPricePolicy extends BasLog
{
    public $pricePolicyId;
    public $startDate;
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $unitId;
    public $policyId;
    public $parcelNumber;
    public $semester;
}

?>