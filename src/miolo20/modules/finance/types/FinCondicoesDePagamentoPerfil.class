<?php

class FinCondicoesDePagamentoPerfil extends SType
{
    
    protected $_tableName = 'fincondicoesdepagamentoperfil';
    
    public $condicoesdepagamentoperfilid;
    public $perfilnegociacaoid;
    public $operationid;
    public $bankaccountid;
    public $costcenterid;
    public $policyid;
    public $tipo;
    public $taxanegociacao;
    public $percentualentrada;
    public $numeroparcelas;
    public $juros;
    public $ordemcondicao;
    public $diavencimento;
    public $liberarjuros;
    public $liberarmulta;
    public $percentualdedesconto;
    public $descricao;
    
    const TIPO_NEGOCIACAO = 'N';
    const TIPO_ANTECIPACAO = 'A';
    
    public function removerCondicoesDoPerfil($perfilnegociacaoid)
    {
        $sql = " DELETE FROM fincondicoesdepagamentoperfil WHERE perfilnegociacaoid = ? ";

        return SDatabase::execute($sql, array($perfilnegociacaoid));
    }
    
    /**
     * Obtem todas as condicoes de pagamento dos perfis do usuario logado.
     * 
     * @param type $perfis
     */
    public static function obterCondicoesPerfis($perfis)
    {
        /** 
         * Caso alguma condicao do usuario possua permissao para renegociacao,
         * as condicoes de outros perfis sao desconsideradas, ou seja,
         * caso existem perfis com permissao de renegociacao cadastrados, somente
         * eles serao considerados.
         */
        $checked = self::obterPerfisRenegociacao($perfis);
        $perfisChecked = $checked[1];
        
        //Obtem condicoes para cada perfil
        $condicoes = array();
        foreach ($perfisChecked as $perfil)
        {
            $totalCondicoes =  self::obterCondicoesIdAPartirPerfilId($perfil->perfilnegociacaoid);
            foreach ($totalCondicoes as $c)
            {
                $condicoes[] = new FinCondicoesDePagamentoPerfil($c[0]);
            }
        }
        
        //Elimina condicoes com ID igual
        $condicoesFinais = array();
        foreach ($condicoes as $condicao)
        {
            if ( !array_key_exists($condicao->condicoesdepagamentoperfilid, $condicoesFinais) )
            {
                $condicoesFinais[$condicao->condicoesdepagamentoperfilid] = $condicao;
            }
        }
        
        $result[0] = $checked[0];
        $result[1] = $condicoesFinais;
        
        return $result;
    }

    /**
     * Retorna o ID das condicoes de pagamento a patir do ID do perfil de negociacao.
     * 
     * @param int $perfilnegociacaoid
     * @return int
     */
    public static function obterCondicoesIdAPartirPerfilId($perfilnegociacaoid)
    {
        $sql = ' SELECT condicoesDePagamentoPerfilId
                   FROM finCondicoesDePagamentoPerfil    
                  WHERE perfilNegociacaoId = ?';
        $args[] = $perfilnegociacaoid;
        
        $result = SDatabase::query($sql, $args);
        
        return $result;
    }        
    
    /**
     * Mantem somente perfis que possuem permissao para renegociacao.
     * 
     * @param array $perfis
     * @return array[0] - Se possui permissao para renegociacao
     * @return array[1] - Perfis do usuario
     */
    public static function obterPerfisRenegociacao($perfis)
    {
        $checkedTrue = array();
        $checkedFalse = array();
        foreach ($perfis as $n => $perfil)
        {
            if ( $perfil->permiterenegociacao == DB_TRUE )
            {
                $checkedTrue[] = $perfis[$n];
            }
            else
            {
                $checkedFalse[] = $perfis[$n];
            }
        }
        
        if ( count($checkedTrue) > 0 )
        {
            $result[0] = true;
            $result[1] = $checkedTrue;
            
        }
        else
        {
            $result[0] = false;
            $result[1] = $checkedFalse;
        }
        
        return $result;
    }
    
}
?>