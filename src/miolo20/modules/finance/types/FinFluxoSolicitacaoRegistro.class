<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of FinFluxoSolicitacaoRegistro
 *
 * @author augusto
 */
class FinFluxoSolicitacaoRegistro extends SType
{
    protected $gravarMaiusculo = false;
    
    /**
     *
     * @var int 
     */
    public $fluxosolicitacaoregistroid;
    
    /**
     *
     * @var int 
     */
    public $fluxosolicitacaoid;
    
    /**
     *
     * @var String 
     */
    public $registrodados;
    
    /**
     *
     * @var String
     */
    public $registromodule;
    
    /**
     *
     * @var String
     */
    public $registroaction;
    
    /**
     *
     * @var String
     */
    public $registroevent;
    
    /**
     *
     * @var String
     */
    public $registrofunction;
    
    /**
     *
     * @var DB_BOOLEAN
     */
    public $registroprocessado;
    
    /**
     *
     * @var FinFluxoSolicitacao
     */
    public $fluxosolicitacao;
    
    /**
     * Associações
     * 
     * @var array
     */
    protected $_associations = array(
        'fluxosolicitacao' => array(
            'mode' => 'one',
            'typeClass' => 'FinFluxoSolicitacao',
            'joinColumn' => 'fluxosolicitacaoid',
        ),
    );
    
    /**
     * Popula este objeto 'FinFluxoSolicitacaoRegistro' pelo código da solicitação 'fluxosolicitacaoid'.
     * 
     * @return boolean
     */
    public function popularPeloCodigoDaSolicitacao()
    {
        $msql = new MSQL();
        $msql->setColumns('fluxosolicitacaoregistroid, fluxosolicitacaoid, registrodados, registromodule, registroaction, registroevent, registrofunction, registroprocessado')
             ->setTables('finfluxosolicitacaoregistro')
             ->setWhere('fluxosolicitacaoid = ?');
        
        $result = SDatabase::query($msql->select(), array($this->fluxosolicitacaoid));
        
        list ( $this->fluxosolicitacaoregistroid,
               $this->fluxosolicitacaoid,
               $this->registrodados,
               $this->registromodule,
               $this->registroaction,
               $this->registroevent,
               $this->registrofunction,
               $this->registroprocessado ) = $result[0];
        
        return ( count($result) > 0 );
    }
    
    /**
     * Exectua o registro da solicitação.
     * 
     * @return boolean
     */
    public function executaRegistroDaSolicitacao()
    {
        $MIOLO = MIOLO::getInstance();
        
        $args = array(
            'fluxosolicitacaoid' => $this->fluxosolicitacaoid,
            'event' => $this->registroevent,
            'function' => $this->registrofunction,
        );

        $MIOLO->page->redirect($MIOLO->getActionURL($this->registromodule, $this->registroaction, null, $args));
    }
    
    /**
     * Retorna os dados informados para o registro.
     * 
     * @return stdClass
     */
    public static function obterDadosDoRegistro($data)
    {
        $finFluxoSolicitacaoRegistro = new FinFluxoSolicitacaoRegistro();
        $finFluxoSolicitacaoRegistro->fluxosolicitacaoid = MIOLO::_REQUEST('fluxosolicitacaoid');
        
        if ( $finFluxoSolicitacaoRegistro->popularPeloCodigoDaSolicitacao() )
        {
            $data = json_decode($finFluxoSolicitacaoRegistro->registrodados);
        }
        
        return $data;
    }
}
