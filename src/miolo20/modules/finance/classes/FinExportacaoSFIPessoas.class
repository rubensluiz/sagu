<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Types cobranca bancaria
 *
 * @author Nataniel Ingor da Silva [nataniel@solis.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Nataniel Ingor da Silva [nataniel@solis.com.br]
 *
 * @since
 * Class created on 14/08/2013
 */
$MIOLO->uses( 'classes/FinExportacao.class', 'finance' );

class FinExportacaoSFIPessoas extends FinExportacao
{
    const CAMPO_NOME = 'nome';
    const CAMPO_CPF = 'cpf';
    const CAMPO_ID = 'id';
    
    public function obterAtributos()
    {
      $this->atributos = array();  
      $this->atributos[0] = new FinExportacaoAtributos(self::CAMPO_ID, '5', 'E', null, '0' );
      $this->atributos[1] = new FinExportacaoAtributos(null, '2', null, '07');
      $this->atributos[2] = new FinExportacaoAtributos(self::CAMPO_CPF, '11');
      $this->atributos[3] = new FinExportacaoAtributos(self::CAMPO_NOME, '48');     
      
    }
     
    
    public function obterDados($filtros)
    {
        $sql = 'SELECT DISTINCT A.personId as id,
	               upper(unaccent(A.name)) as nome,
	               regexp_replace(C.content,  \'([0-9]{3})([.])([0-9]{3})([.])([0-9]{3})([-])([0-9]{2})\', \'\\\\1\\\\3\\\\5\\\\7\') as cpf
	     FROM ONLY basPhysicalPerson A
	    INNER JOIN finreceivableInvoice B ON A.personId = B.personid
	     LEFT JOIN basdocument C ON C.personId = A.personId AND C.documentTypeId = getParameter(\'BASIC\', \'DEFAULT_DOCUMENT_TYPE_ID_CPF\')::INT
                 WHERE B.iscanceled IS FALSE';

        $msql = new MSQL();
        $msql->setDb( SDatabase::getInstance() );
        $msql->createFrom($sql);
        
        $return = SDatabase::queryAssociative($msql);
        return $return;
    }
    
    public function retornaNomeArquivo($filtros)
    {
        $this->nomeArquivo = 'ALUNOS.TXT';
    }
}



?>
