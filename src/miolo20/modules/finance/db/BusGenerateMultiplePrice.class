<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 16/05/2006
 */

/**
 * Class to manipulate the acdgenerateMultipleEnrollFee table
 */
class BusinessFinanceBusGenerateMultiplePrice extends sBusiness
{
    /**
     * Lista todas ocorrências de curso para popular a Grid
     *
     * @param $filters (object): Search filters
     * @return (array): An array containing the search results
     */
    public function getCourseOccurrencesPrices($filters)
    {
        $sql = 'SELECT C.courseId,
                       CO.courseVersion,
                       C.name,
                       T.turnId,
                       T.description,
                       U.unitId,
                       U.description,
                       TO_CHAR(P.startDate, \'' . SAGU::getParameter('BASIC', 'MASK_DATE') . '\'),
                       TO_CHAR(P.endDate, \'' . SAGU::getParameter('BASIC', 'MASK_DATE') .'\'),
                       P.value
                  FROM acdCourseOccurrence CO
            INNER JOIN acdCourse C
                    ON C.courseId = CO.courseId
            INNER JOIN basTurn T
                    ON T.turnId = CO.turnId
            INNER JOIN basUnit U
                    ON U.unitId = CO.unitId
             LEFT JOIN finPrice P
                    ON P.courseId = CO.courseId
                   AND P.courseVersion = CO.courseVersion
                   AND P.unitId = CO.unitId
                   AND P.turnId = CO.turnId
                   AND (NOW() BETWEEN P.startDate AND P.endDate) ';

        if ( strlen($filters->formationLevelId) > 0 )
        {
            $where .= ' AND C.formationLevelId = ? ';
            $args[] = $filters->formationLevelId;
        }

        unset($result);
        if ( strlen($where) > 0 )
        {
            $sql .= ' WHERE ' . substr($where, 4) .
                    '  ORDER BY C.name';

            $db = $this->getDatabase();
            $result = $db->query(SAGU::prepare($sql, $args));

        }

        return $result;
    }
}
?>
