<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 02/02/2006
 *
 **/

/**
 * Class to manipulate the acdgenerateMultipleEnrollFee table
 **/
class BusinessFinanceBusGenerateMultipleEnrollFee extends sBusiness
{
    /**
     * Do a search on the database table handled by the class
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getCourses($filters)
    {
        $sql = 'SELECT E.learningPeriodId, 
                       A.courseId,
                       A.courseVersion,
                       B.name,
                       C.description,
                       D.description
                 FROM acdCourseOccurrence A
                 INNER JOIN acdCourse B
                    ON (A.courseId = B.courseId )
                 INNER JOIN basTurn C
                    ON (A.turnId = C.turnId)
                 INNER JOIN basUnit D
                    ON (A.unitId = D.unitId)
                 INNER JOIN acdLearningPeriod E
                    ON (A.courseId = E.courseId AND
                        A.courseVersion = E.courseVersion AND
                        A.unitId = E.unitId)';

        if ( strlen($filters->formationLevelId) > 0 )
        {
            $where .= ' AND B.formationLevelId = ? ';
            $args[] = $filters->formationLevelId;
        }
        
        if ( strlen($filters->periodId) > 0 )
        {
            $where .= ' AND E.periodId = ? ';
            $args[] = $filters->periodId;
        }
        
        unset($result);
        if ( strlen($where) > 0 )
        {
            $sql .= ' WHERE ' . substr($where, 4) . ' ORDER BY B.name';
            $db = $this->getDatabase();

            $result = $db->query(SAGU::prepare($sql, $args));
            
        }

        return $result;
        

    }
}

?>
