<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for finAgreementComments table
 *
 * @author William Prigol Lopes
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * @since
 * Class created on 22/12/2005
 *
 **/

/**
 * Class to manipulate the Bank table
 **/
class BusinessFinanceBusAgreementComments extends sBusiness
{
    /**
     * List all records from the table handled by the class
     *
     * @param: $data (object) Object containing filters to apply on search
     *
     * @returns (array): Return an array with the entire table
     *
     **/
    public function searchAgreementComments($data)
    {
        $sql = ' SELECT A.agreementCommentsId,
                        TO_CHAR(A.dateTime, \''.SAGU::getParameter('BASIC', 'MASK_DATE').'\')||\' \'||TO_CHAR(A.dateTime, \''.SAGU::getParameter('BASIC', 'MASK_TIME').'\'),
                        A.agreementTitle,
                        A.comments
                   FROM finAgreementComments A ';
                  
        if (strlen($data->personId)>0)
        {
            $sql.= ' WHERE A.personId = ? ';
            $args[] = $data->personId;
            $sql = SAGU::prepare($sql, $args);
        }
        $sql.=' ORDER BY 2, 3 ';
        $db  = $this->getDatabase();

        $return = $db->query($sql);
        return $return;
    }
    
   /**
    *
    * insert a record on table handled by class
    *
    * @param: $data (object) Object containing filters to insert a row
    *
    * @returns (boolean) True if runs, otherwise false
    *
    */
    public function insertAgreementComments($data)
    {
        $sql = ' INSERT INTO finAgreementComments ( personId,
                                                    agreementTitle,
                                                    comments )
                                           VALUES (?, ?, ?) ';
        
        $db     = $this->getDatabase();
        $args   = array($data->personId, $data->agreementTitle, $data->comments);
        $return = $db->execute(SAGU::prepare($sql, $args));
        return $return;
    }
  
   /**
    *
    * Update a record on table handled by class
    *
    * @param: $data (object) Object containing filters to update a row
    *
    * @returns: (boolean) True if runs, otherwise false
    *
    */
    public function updateAgreementComments($data)
    {
        $sql = ' UPDATE finAgreementComments 
                    SET personId = ?,
                        agreementTitle = ?,
                        comments = ?
                  WHERE agreementCommentsId = ? ';
        $db     = $this->getDatabase();
        $args   = array($data->personId, $data->agreementTitle, $data->comments, $data->agreementCommentsId);
        $return = $db->execute(SAGU::prepare($sql, $args));
        return $return;
    }

   /**
    *
    * Get a row for table handled by class
    *
    * @param: $agreementCommentsId (int) Primary key for table to get
    *
    * @return: (object) FinAgreementComments object to update
    *
    */
    public function getAgreementComments($agreementCommentsId)
    {
        $sql = ' SELECT agreementCommentsId,
                        personId,
                        agreementTitle,
                        comments,
                        ipAddress,
                        dateTime,
                        userName
                   FROM finAgreementComments
                  WHERE agreementCommentsId = ? ';
       
       $args = array($agreementCommentsId);
       $db   = $this->getDatabase();
       
       $return = $db->query(SAGU::prepare($sql, $args));
       $data = new FinAgreementComments();
       
       list($data->agreementCommentsId,
            $data->personId,
            $data->agreementTitle,
            $data->comments,
            $data->ipAddress,
            $data->dateTime,
            $data->userName ) = $return[0];
       
       return $data;
    }
    
   /**
    *
    * Delete a specific row for table handled by class
    *
    * @param: $agreementCommentsId (int) Primary key for the table to delete
    *
    * @return: (boolean) True if runs, otherwise false
    *
    */
    public function deleteAgreementComments($agreementCommentsId)
    {
        $sql = ' DELETE FROM finAgreementComments
                       WHERE agreementCommentsId = ? ';
        
        $args = array($agreementCommentsId);
        $db   = $this->getDatabase();
        
        $return = $db->execute(SAGU::prepare($sql, $args));
        return $return;
    }
}
?>
