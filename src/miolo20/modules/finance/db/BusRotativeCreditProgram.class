<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for Rotative Credit program listings obtained on finance related tables
 *
 * @author William Prigol Lopes [william@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 14/12/2005
 *
 **/

/**
 * Class to manipulate the BankAccount table
 **/
class BusinessFinanceBusRotativeCreditProgram extends sBusiness
{
    /**
     * List the invoices by a specific period and specific payment register
     *
     * @param: $data (object): Object containing the filters
     *
     * @returns (array): Return an array with the needed information
     *
     **/
    public function listFutureParcels()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $sql = ' SELECT A.personId,
                        (SELECT name
                      FROM ONLY basPerson
                          WHERE A.personId=basPerson.personId ),
                        A.invoiceId,
                        ROUND(A.value, '.SAGU::getParameter('BASIC', 'REAL_ROUND_VALUE').')
                        TO_CHAR(A.maturityDate, \''.SAGU::getParameter('BASIC', 'MASK_DATE').'\')
              FROM ONLY finReceivableInvoice A
              ';
   
        $args = array( $data->beginPaymentDate,
                       $data->endPaymentDate);
                
        $db = $this->getDatabase();
        $return = $db->query( SAGU::prepare($sql, $args) );
        return $return;
    }
    
}
?>
