<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for basIncomeSource table
 *
 * @author Rudi Uhrig Neto [rudi@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Moises Heberle [moises@solis.coop.br]
 * 
 * @since
 * Class created on 20/12/2005
 *
 **/

/**
 * Form to search the basIncomeSource table
 */
class FrmIncomeSourceSearch extends SSearchForm
{
    /**
     * Class constructor
     */
    public function __construct($data)
    {
        parent::__construct(_M('Localizar', $module), new FinIncomeSource(), array('incomeSourceId'), 'BusIncomeSource');
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        // Income source id
        $incomeSourceIdLabelS = new MText('incomeSourceIdLabelS', _M('Código', $module).':');
        $incomeSourceIdLabelS->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $incomeSourceIdS      = new MTextField('incomeSourceIdS', $this->incomeSourceIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $incomeSourceIdS->setJsHint(_M('Informe o código da origem', $module));
        $validators[]         = new MIntegerValidator('incomeSourceIdS', _M('Código', $module));
        $fields[]             = new MHContainer('hctIncomeSourceId', array($incomeSourceIdLabelS, $incomeSourceIdS));
        
        // Description
        $descriptionLabelS = new MText('descriptionLabelS', _M('Descrição', $module).':');
        $descriptionLabelS->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $descriptionS      = new MTextField('descriptionS', $this->incomeSourceNameS->value, '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $descriptionS->setJsHint(_M('Informe a descrição da origem', $module));
        $fields[]          = new MHContainer('hctIncomeSource', array($descriptionLabelS, $descriptionS));

        // Is agreement
        $isAgreementLabelS = new MText('isAgreementLabelS', _M('Relacionado a acordos', $module).':');
        $isAgreementLabelS->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $isAgreementS      = new MRadioButtonGroup('isAgreementS', '', SAGU::listTrueFalse(1), $this->isAgreementS->value, '', horizontal);
        $isAgreementS->setShowLabel(false);
        $isAgreementS->setJsHint(_M('Se você quer procurar por relacionados a acordos ou não, selecione aqui', $module));
        $fields[]          = new MHContainer('hctIsAgreement', array($isAgreementLabelS, $isAgreementS));

        parent::defineFields($fields, $module, 'GrdIncomeSourceSearch');
    }
}
?>
