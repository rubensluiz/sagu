<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Internal invoice generation form
 *
 * @author William Prigol Lopes [william@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.copp.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * @since
 * Class created on 12/12/2005
 *
 **/

/**
 * Form to manipulate a course occurrence
 **/
class FrmInternalInvoice extends MForm
{

    private $module;

    /**
     * Class constructor
     **/
    public function __construct()
    {
        $MIOLO        = MIOLO::getInstance();
        $module       = MIOLO::getCurrentModule();
        $this->module = $module;
        
        parent::__construct(_M('Imprimir título', $module));
        
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());
        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $toolBar = new MToolBar('toolBar', $MIOLO->getActionURL($module, $action));
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnNew');
        $toolBar->disableButton('tbBtnSearch');
        $toolBar->hideButton('tbBtnReset');
        $toolBar->hideButton('tbBtnBack');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Payment voucher generic', $this->home, 'paymentVoucherGeneric-16x16.png', true);
        }
        $fields[] = $toolBar;
        
        $data->invoiceId = $data->invoiceId ? $data->invoiceId : (MIOLO::_request('_invoiceId') ? MIOLO::_request('_invoiceId') : MIOLO::_request('_invoiceId', 'GET'));

        $invoiceId    = new MTextField('invoiceId', $this->getFormValue('invoiceId', $data->invoiceId), _M('Título', $module), SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $invoiceId->setJsHint(_M('Informe o código do título interno', $module));
        $validators[] = new MIntegerValidator('invoiceId', _M('Título', $module), 'required');

        $fields[] = $invoiceId;
        $fields[] = new Separator('');

        $this->setFields($fields);
        $this->setValidators($validators);
        $this->setLabelWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));
        $this->page->onLoad('document.'.$this->name.'.invoiceId.focus();');
     }

    /**
     * Event used when submit_button is clicked
     */
    public function tbBtnPrint_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $filters->invoiceId = $this->getFormValue('invoiceId') ? $this->getFormValue('invoiceId') : MIOLO::_request('_invoiceId', 'GET');
        
        $MIOLO->getClass($module, 'RptPrintInternalInvoice');
        
        $businessInvoice = new BusinessFinanceBusReceivableInvoice();
        
        if ($businessInvoice->verifyReceivableInvoice($filters->invoiceId))
        {
            $report = new RptPrintInternalInvoice($filters->invoiceId);
        }
        else
        {
            $MIOLO->error(_M('Código do título não encontrado', $module), $MIOLO->getActionURL($module, $action));
        }
    }
}

?>
