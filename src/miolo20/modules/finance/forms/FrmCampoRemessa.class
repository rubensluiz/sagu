<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Unit form
 *
 * @author Moises Heberle [moises@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class Created on 05/07/2013
 *
 **/
class FrmCampoRemessa extends sLinkedForm
{
    /**
     * Class constructor
     **/
    public function __construct()
    {
        parent::__construct(new FinCampoRemessa(), array('camporemessaid'), null, null, 'lnkCobrancaBancaria');
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $fields[] = $this->obterCampoCodigoLabel();
        $fields[] = new MSelection('fincamporemessa.tiporegistro', null, _M('Tipo de registro', $module), FinCampoRemessa::listarTiposDeRegistro());
        $fields[] = new MTextField('fincamporemessa.linha', null, _M('Linha',$module));
        $fields[] = new MTextField('fincamporemessa.posicao', null, _M('Posição',$module));
        $fields[] = new MTextField('fincamporemessa.tamanho', null, _M('Tamanho',$module));
        $fields[] = new MSelection('fincamporemessa.alinhamento', null, _M('Alinhamento', $module), FinCampoRemessa::listarAlinhamentos());
        $fields[] = new MSelection('fincamporemessa.completar', null, _M('Completar com', $module), FinCampoRemessa::listarCompletarCom());

        $fields[] = $tipoValor = new MSelection('fincamporemessa.tipovalor', null, _M('Tipo valor', $module), FinCampoRemessa::listarTiposDeValor());
        $tipoValor->setAutoPostBack(true);
        
        $fields[] = $valor = new MTextField('fincamporemessa.valor', null, _M('Valor',$module));
        $fields[] = $tipoReg = new MSelection('fincamporemessa.tipovalorvariavelremessaid', null, _M('Tipo de registro', $module), FinTipoValorVariavelRemessa::listarTipos());
        
        parent::defineFields($fields, $validators);
        
        // oculta campo valor
        if ( in_array($tipoValor->getValue(), array('', NULL, FinCampoRemessa::TIPO_VALOR_FIXO)) )
        {
//            $valor->setIsRequired(true);
        }
        else
        {
            $valor->setValue(' ');
            $valor->addBoxStyle('display', 'none');
        }
        
        // oculta campo tipo registro
        if ( in_array($tipoValor->getValue(), array(FinCampoRemessa::TIPO_VALOR_VARIAVEL, FinCampoRemessa::TIPO_VALOR_MODULO10, FinCampoRemessa::TIPO_VALOR_MODULO11)) )
        {
            $tipoReg->setIsRequired(true);
        }
        else
        {
            $tipoReg->addBoxStyle('display', 'none');
        }
    }
    
    public function beforeSave(FinCampoRemessa $typeObject)
    {
        $valor = $this->getRequestValue('fincamporemessa.valor');
        
        $typeObject->valor = ( strlen($valor) == 0 ) ? SType::NULL_VALUE : $valor;
        $typeObject->configuracaoremessaid = $this->obterConfiguracaoRemessaId();
        
        return $typeObject;
    }
    
    public function obterConfiguracaoRemessaId()
    {
        $cob = new FinCobrancaBancaria( MIOLO::_REQUEST('cobrancabancariaid') );
        return $cob->obterConfiguracaoRemessa()->configuracaoremessaid;
    }
}
?>
