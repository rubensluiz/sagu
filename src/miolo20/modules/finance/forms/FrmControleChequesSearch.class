<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * @author Augusto A. Silva [augusto@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Augusto A. Silva
 * 
 * @since
 * Class created on 02/07/2013
 *
 **/

class FrmControleChequesSearch extends SSearchForm
{

    /**
     * Class constructor
     */
    public function __construct()
    {
        parent::__construct(_M('Localizar', 'basic'), new FinCheque(), array('chequeId'));
        
        $this->toolbar->disableButton(MToolBar::BUTTON_NEW);
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        // Número do cheque.
        $numeroChequeLabel = new MText('numeroChequeLabelS', _M('Nº do cheque', $module) . ':');
        $numeroChequeLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $numeroChequeLabel->setClass('m-caption');
        $numeroCheque = new MTextField('finCheque.numeroChequeS');
        $fields[] = new MHContainer('numeroChequeHCS', array($numeroChequeLabel, $numeroCheque));
        
        // Data.
        $dataLabel = new MText('dataLabelS', _M('Data de vencimento', $module) . ':');
        $dataLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $dataLabel->setClass('m-caption');
        $data = new MCalendarField('finCheque.dataS');
        $fields[] = new MHContainer('dataHCS', array($dataLabel, $data));
        
        // Eminente.
        $eminenteLabel = new MText('eminenteLabelS', _M('Eminente', $module) . ':');
        $eminenteLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $eminenteLabel->setClass('m-caption');
        $eminente = new MTextField('finCheque.eminenteS', null, null, SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $fields[] = new MHContainer('eminenteHCS', array($eminenteLabel, $eminente));
        
        // CPF.
        $cpfLabel = new MText('cpfLabelS', _M('CPF', $module) . ':');
        $cpfLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $cpfLabel->setClass('m-caption');
        $cpf = new MTextField('finCheque.cpfS');
        $fields[] = new MHContainer('cpfHCS', array($cpfLabel, $cpf));
        $validators[] = new MCPFValidator('cpfS', _M('CPF', $module));
        
        // CNPJ.
        $cnpjLabel = new MText('cnpjLabelS', _M('CNPJ', $module) . ':');
        $cnpjLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $cnpjLabel->setClass('m-caption');
        $cnpj = new MTextField('finCheque.cnpjS');
        $fields[] = new MHContainer('cnpjHCS', array($cnpjLabel, $cnpj));
        $validators[] = new MCNPJValidator('cnpjS', _M('CNPJ', $module));
        
        // Banco.
        $busBank = new BusinessFinanceBusBank();
        $bankLabel = new MText('bankLabelS', _M('Banco', $module) . ':');
        $bankLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $bankLabel->setClass('m-caption');
        $bankId = new MComboBox('finCheque.bankIdS', null, null, $busBank->listBank(true));
        $fields[] = new MHContainer('bankHCS', array($bankLabel, $bankId));
        
        // Agência.
        $agenciaLabel = new MText('agenciaLabelS', _M('Agência', $module) . ':');
        $agenciaLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $agenciaLabel->setClass('m-caption');
        $agencia = new MTextField('finCheque.agenciaS');
        $fields[] = new MHContainer('agenciaHCS', array($agenciaLabel, $agencia));
        
        // Valor.
        $valorLabel = new MText('valorLabelS', _M('Valor', $module) . ':');
        $valorLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $valorLabel->setClass('m-caption');
        $valor = new MTextField('finCheque.valorS');
        $fields[] = new MHContainer('valorHCS', array($valorLabel, $valor));
        $validators[] = new MFloatValidator('valorS', _M('Valor', $module));
        
        // Situação
        $finStatusCheque = new FinStatusCheque();
        $statusLabel = new MText('statusLabelS', _M('Situação', $module) . ':');
        $statusLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $statusLabel->setClass('m-caption');
        $status = new MSelection('finCheque._statusatualid', null, null, $finStatusCheque->listStatusCheque());
        $fields[] = new MHContainer('statusHCS', array($statusLabel, $status));
        
        // Tipo
        $finCheque = new FinCheque();
        $tipoLabel = new MText('tipoLabelS', _M('Tipo', $module) . ':');
        $tipoLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $tipoLabel->setClass('m-caption');
        $tipo = new MSelection('tipoS', null, null, $finCheque->listTiposCheque());
        $fields[] = new MHContainer('tipoHCS', array($tipoLabel, $tipo));
        
        parent::defineFields($fields, $module, 'GrdControleCheques', $validators);
    }
}

?>
