<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of FrmRelatorioTitulosBaixadosDescontoFolha
 *
 * @author augusto
 */

class FrmRelatorioTitulosBaixadosDescontoFolha extends SForm
{
    /**
     * Class constructor
     */
    public function __construct($data)
    {
        $MIOLO = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        $action = $MIOLO->getCurrentAction();
        
        parent::__construct(_M("Relatório de títulos baixados por desconto em folha"), null, null);
        
        $this->toolbar->disableButton(MToolBar::BUTTON_SAVE);
        $this->toolbar->disableButton(MToolBar::BUTTON_NEW);
        $this->toolbar->disableButton(MToolBar::BUTTON_SEARCH);
        $this->toolbar->disableButton(MToolBar::BUTTON_DELETE);
        $this->toolbar->setButtonURL(MToolBar::BUTTON_PRINT, $MIOLO->getActionURL($module, $action, null, array('function' => 'print', 'event' => 'tbBtnPrint_click')));
        $this->toolbar->setIsPost(MToolBar::BUTTON_PRINT, true);
    }
    
    public function defineFields($args)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
       
        // Data de vencimento do título.
        $maturityDateLabel = new MText('maturityDateLabel', _M('Período de vencimento', $module) . ':');
        $maturityDateLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
        $maturityDateLabel->setClass('m-caption m-caption-required');
        $maturityDateBegin = new MCalendarField('maturityDateBegin');
        $maturityDateEnd = new MCalendarField('maturityDateEnd');
        $fields[] = new MHContainer('maturityHC', array($maturityDateLabel, $maturityDateBegin, $maturityDateEnd));
        $validators[] = new MRequiredValidator('maturityDateBegin', _M('Período inicial', $module));
        $validators[] = new MRequiredValidator('maturityDateEnd', _M('Período final', $module));
        
        parent::defineFields(array('fields' => $fields, 'validators' => $validators));
    }
    
    public function tbBtnPrint_click($args)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        
        if ( strlen($this->getFormValue('maturityDateBegin')) > 0 && strlen($this->getFormValue('maturityDateEnd')) > 0 )
        {
            $parameters = array();
            $parameters['contractId']        = (int) $MIOLO->_REQUEST('contractId');
            $parameters['maturityDateBegin'] = (String) $MIOLO->_REQUEST('maturityDateBegin');
            $parameters['maturityDateEnd']   = (String) $MIOLO->_REQUEST('maturityDateEnd');

            $report = new SReport();
            $report->setReportName('relatorioTitulosBaixadosDescontoFolha');
            $report->setParameters($parameters);
            
            if ( !$report->generate() )
            {
                $this->addAlert(_M("Nenhum registro encontrado.", $module));
            }
        }
        else
        {
            $this->addError(_M('Período de vencimento é requerido.', $module));
        }
    }
}

?>
