<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Operation group form
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coo.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Moises Heberle [moises@solis.coop.br]
 *
 * @since
 * Class created on 20/07/2006
 *
 **/

/**
 * Form to manipulate a operationGroup
 **/
class FrmOperationGroup extends SManagementForm
{

    /**
     * Class constructor
     **/
    public function __construct()
    {
        parent::__construct(new FinOperationGroup(), array('operationGroupId'), 'BusOperationGroup');
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        if ( in_array($function,array(SForm::FUNCTION_UPDATE, SForm::FUNCTION_DELETE)) )
        {
            $pk = $this->getObjectPk();
            $data = $this->busObject->getOperationGroup($pk->operationGroupId);
        }

        //Field operation group
        $data->operationGroupId = strtoupper($this->getFormValue('operationGroupId', $data->operationGroupId));
        $operationGroupId       = new MTextField('operationGroupId', $data->operationGroupId, _M('Código', $module), SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $operationGroupId->setJsHint(_M('Entre com o código do grupo de operações', $module));
        $validators[]           = new MRequiredValidator('operationGroupId', null, 1);
        $fields[]               = $operationGroupId;

        if ( in_array($function,array(SForm::FUNCTION_UPDATE, SForm::FUNCTION_DELETE)) )
        {
            $operationGroupId->setReadOnly(true);
        }

        //Field description
        $data->description = $this->getFormValue('description', $data->description);
        $operationGroupDescription = new MTextField('description', $data->description, _M('Descrição', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $operationGroupDescription->setJsHint(_M('Entre com a descrição do grupo de operações', $module));
        $fields[] = $operationGroupDescription;
        $validators[]      = new MRequiredValidator('description');

        parent::defineFields($fields, $validators, $data);
    }

    /**
     * Event triggered when user chooses Save from the toolbar
     **/
    public function tbBtnSave_click($sender=NULL)
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        $data     = $this->getTypesData();
        $business = new BusinessFinanceBusOperationGroup();

        if ( $function == SForm::FUNCTION_UPDATE )
        {
            parent::tbBtnSave_click($sender);
        }
        else
        {
            $dataOperationGroup = $business->getOperationGroup($data->operationGroupId);
            if (strlen($dataOperationGroup->operationGroupId)>0)
            { 
                $opts    = array('operationGroupId'=>$data->operationGroupId, 'function'=>'update'); 
                $gotoYes = $MIOLO->getActionURL($module, $action, null, $opts); 
                $opts    = array('operationGroupIdS'=>$data->operationGroupId, 'event'=>'btnSearch_click'); 
                $gotoNo  = $MIOLO->getActionURL($module, $action, null, $opts); 
                $msg     = _M('Grupo de operações com o código "@1" já existe. Você gostaria de editar este grupo de operações?', $module, $data->operationGroupId); 
                $MIOLO->question($msg, $gotoYes, $gotoNo);
            } 
            else
            {
                parent::tbBtnSave_click($sender);
            }
        }
    }
}
?>
