<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for acdInvoiceTarget table
 *
 * @author Rudi Uhrig Neto [rudi@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 09/01/2006
 *
 **/

/**
 * Form to search the basMovementContract table
 */
class FrmInvoiceTargetSearch extends SSearchForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    public function __construct($data)
    {
        $this->module = 'finance';
        $module = $this->module;
        $this->home   = $data->home;
        
        parent::__construct( _M('Localizar',$module), new FinInvoiceTarget(), array('contractId'), 'BusInvoiceTarget' );
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $contractIdS = new MLookupTextField('contractIdS', $this->personIdS->value, _M('Código do contrato',$module), SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'), null, null,
                'personIdS,personNameS,courseIdS, courseNameS, courseVersionS',
                'academic', 'Contract', null, null, true);
        $contractIdS->setJsHint(_M('Informe o código do contrato',$module));
        $validators[]   = new MIntegerValidator('contractIdS');
        $fields[] = $contractIdS;

        //personId
        $personLabelS = new MText('personLabelS', _M('Pessoa',$module).':');
        $personLabelS->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));

        $personIdS   = new MTextField('personIdS', $this->personIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $personIdS->setReadOnly(true);
        $personIdS->setJsHint(_M('Código da pessoa',$module));

        $personNameS   = new MTextField('personNameS', $this->personNameS->value, '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $personNameS->setReadOnly(true);
        $personNameS->setJsHint(_M('Nome da pessoa',$module));

        $hctPersonS = new MHContainer('hctPersonS', array($personLabelS, $personIdS, $personNameS));
        $hctPersonS->setShowLabel(true);
        $fields[]  = $hctPersonS;

        //course
        $courseLabelS = new MText('courseLabelS', _M('Curso',$module).':');
        $courseLabelS->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));

        $courseIdS   = new MTextField('courseIdS', $this->courseIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $courseIdS->setReadOnly(true);
        $courseIdS->setJsHint(_M('Código do curso',$module));

        $courseVersionS   = new MTextField('courseVersionS', $this->courseVersionS->value, '', 3);
        $courseVersionS->setReadOnly(true);
        $courseVersionS->setJsHint(_M('Versão do curso',$module));

        $courseNameS   = new MTextField('courseNameS', $this->courseNameS->value, '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $courseNameS->setReadOnly(true);
        $courseNameS->setJsHint(_M('Nome do curso',$module));

        $hctCourseS = new MHContainer('hctCourseS', array($courseLabelS, $courseIdS, $courseVersionS, $courseNameS));
        $hctCourseS->setShowLabel(true);
        $fields[]  = $hctCourseS;
        
        parent::defineFields( $fields, $module, 'GrdInvoiceTargetSearch', $validators );
        
        $this->toolbar->disableButton(MToolBar::BUTTON_SAVE);
        $this->toolbar->disableButton(MToolBar::BUTTON_DELETE);
        $this->toolbar->disableButton(MToolBar::BUTTON_PRINT);
    }

}

?>
