<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for finBank table
 *
 * @author Rudi Uhrig Neto [rudi@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Samuel Koch [samuel@solis.coo.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Fabiano Tomasini [fabiano@solis.coop.br]
 * 
 * @since
 * Class created on 22/12/2005
 *
 **/

class FrmBankSearch extends SSearchForm
{

    /**
     * Class constructor
     */
    public function __construct()
    {
        parent::__construct(_M('Localizar', 'basic'), new FinBank(), array('bankId'), 'BusBank');
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $bankIdLabelS = new MText('bankIdLabelS', _M('Código', $module) . ':');
        $bankIdLabelS->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $bankIdS = new MTextField('bankIdS', $this->bankIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'));
        $validators[] = new MIntegerValidator('bankIdS', _M('Código', $module));
        $bankIdS->setJsHint(_M('Informe o código do banco', $module));
        
        $bankIdVdLabelS = new MText('bankIdVdLabelS', '-');
        $bankIdVdS = new MTextField('bankIdVdS', $this->bankIdVdS->value, '', 3);
        $bankIdVdS->setJsHint(_M('Informe o dígito verificador do banco', $module));
        
        $fields[] = new MHContainer('hctBankId', array($bankIdLabelS, $bankIdS, $bankIdVdLabelS, $bankIdVdS));
        
        $descriptionLabelS = new MText('descriptionLabelS', _M('Descrição', $module) . ':');
        $descriptionLabelS->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $descriptionS = new MTextField('descriptionS', $this->descriptionS->value, '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $descriptionS->setJsHint(_M('Informe a descrição do banco', $module));
        $fields[] = new MHContainer('hctDescription', array($descriptionLabelS, $descriptionS));
        
        parent::defineFields($fields, $module, 'GrdBankSearch', $validators);
    }
}

?>
