<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * @author Jonas Guilherme Dahmer [jonas@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Jonas Guilherme Dahmer [jonas@solis.coop.br]
 *
 * @since
 * Class created on 13/03/2012
 *
 **/

/**
 * Form to manipulate a message
 **/
class FrmValidateInvoicePayment extends SManagementForm
{

    /**
     * Class constructor
     **/
    public function __construct()
    {
        parent::__construct(new FinCounterMovement(), array('counterMovementId'), 'BusCounterMovement', _M('Validador de comprovante de pagamento', $module));
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');
        
        $fields[] = new MCalendarField('referenceDate', '', _M('Data',$module));
        $validators[] = new MDATEDMYValidator('referenceDate');
        $validators[] = new MRequiredValidator('referenceDate');
        $fields[] = new MTextField('usuario', '', _M('Usuário',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $validators[] = new MRequiredValidator('usuario');
        $fields[] = new MTextField('valor', '', _M('Valor',$module));
        $validators[] = new MRequiredValidator('valor');
        $fields[] = new MTextField('ip', '', _M('Ip',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $validators[] = new MRequiredValidator('ip');
        $fields[] = new MTextField('digito', '', _M('Código de autenticação',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $validators[] = new MRequiredValidator('digito');
        
        $controls[] = new MButton('btnOK', _M('Verificar', $module));
        
        $fields[] = new MContainer('', $controls);
        
        parent::defineFields($fields, $validators, $data);
    }


    public function btnOK_click($sender = NULL)
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $referenceDate = $this->getFormValue('referenceDate');
        $usuario = $this->getFormValue('usuario');
        $valor = $this->getFormValue('valor');
        $ip = $this->getFormValue('ip');
        $digito = $this->getFormValue('digito');
        
        $validationString1 = $referenceDate . ' ' . $usuario . ' ' . $valor . ' '. $ip;
        $validationString = strtoupper(md5($validationString1));
        
        if ( $validationString == strtoupper($digito) )
        {
            $msg = _M('Código válido',$module);
            $goto = SAGU::getStackBackUrl();
            $goto = strlen($goto) > 0 ? $goto : $MIOLO->getActionURL($module, $action);
            $caption = _M('Verificação do dígito validador', $module);
            SAGU::information($msg, $goto);
        }
        else
        {
            $msg = _M('Código inválido', $module);
            $goto = SAGU::getStackBackUrl();
            $goto = strlen($goto) > 0 ? $goto : $MIOLO->getActionURL($module, $action);
            $caption = _M('Verificação do dígito validador', $module);
            SAGU::error($msg, $goto, $caption);
        }
    }
    
}
?>
