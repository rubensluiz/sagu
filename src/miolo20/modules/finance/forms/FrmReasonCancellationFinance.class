<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Reason cancellation form
 *
 * @author Jonas Gualberto Diel [jonas_diel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Jonas Gualberto Diel [jonas_diel@solis.coop.br]
 *
 * @since
 * Class created on 06/09/2010
 *
 **/

/**
 * Form to manipulate a reason cancellation
 **/

class FrmReasonCancellationFinance extends SManagementForm
{

    public function __construct()
    {

        $module = MIOLO::getCurrentModule();
        parent::__construct( new FinReasonCancellationFinance(), array('reasonCancellationId'), 'BusReasonCancellationFinance' );
        
    }
    
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $function = MIOLO::_request('function');

        if ( in_array( $function, array( SForm::FUNCTION_UPDATE, SForm::FUNCTION_DELETE)) )
        {
            $reasonCancellationId = $_GET['reasonCancellationId'] ? $_GET['reasonCancellationId'] : $_POST['reasonCancellationId'];
            $fields[]  = new MTextLabel('reasonCancellationId', $reasonCancellationId, _M('Código',$module));
            $fields[]  = new MHiddenField('reasonCancellationId', $reasonCancellationId);
            $business = new BusinessFinanceBusReasonCancellationFinance();
            $data     = $business->getReasonCancellationFinance($reasonCancellationId);
        }
        
        $description = new MTextField('description', $this->getFormValue('description',$data->description), _M('Descrição',$module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $description->setJsHint(_M('Informo a descrição do motivo do cancelamento',$module));
        $fields[] = $description;
        $validators[] = new MRequiredValidator('description');
        
        parent::defineFields($fields, $validators, $data);
    }
}

?>
