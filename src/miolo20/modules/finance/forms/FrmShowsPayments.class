<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * shows Payments
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 17/08/2005
 *
 **/

/**
 * Form to show the shows Payments
 **/
class FrmShowsPayments extends SForm
{

    /**
     * Class constructor
     **/
    public function __construct()
    {
        $module = MIOLO::getCurrentModule();
        parent::__construct( null, null, null );
    }

    /**
     * Default method to define fields
     **/
    public function defineFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $personId = MIOLO::_request('personId') ? MIOLO::_request('personId') : MIOLO::_request('personId', 'GET');
        $business = new BusinessFinanceBusShowsPayments();
        $data     = $business->getShowsPayments($personId);
        
        $MIOLO->page->addScript(SAGU::ABSOLUTE_URL_JS_FILES . 'sagu.js');
        
        $businessPerson = new BusinessBasicBusPerson();
        $personName     = $businessPerson->getPersonName($personId);
        
        // Person id
        $personInformation = new MText('personIdLabel', '<b>'._M('Pagamentos para', $module).': '.'</b>'.  $this->getFormValue('personId',$data->personId) . ' - ' .  $personName);
        $grdShowsPayments = $MIOLO->getUI()->getGrid($module, 'GrdShowsPayments');
        $grdShowsPayments->setData($data);
        $grdShowsPayments->setTitle($personInformation->generate());
        $grdShowsPayments->setClose('javascript:self.close()');
        
        $spacing = new MText('spacing', ' ');
        $spacing->setWidth('400');
        $footer2 = new MText('footer2', _M('Total', $module).':');
        
        
        for( $number = 0 ; $number < count($data); $number++)
        {
            $totalEntry   = SAGU::CalcNumber($totalEntry . ' + '. $data[$number][7]);
        }

        if (strlen($totalEntry) > 0)
        {
            $footer[] = $footer2;
            $footerTot = new MText('footerTotal2', $totalEntry);
            $footerTot->setWidth('200');
            $hctFooter = new MHContainer('hctFooter', array($spacing, $footer2, $footerTot));
            $footer_ = new MDiv('fotterDiv', array($hctFooter), null);
            $footer_->setWidth('100%');
            $grdShowsPayments->setFooter($footer_);
        }
        $fields[] = $grdShowsPayments;
        $buttonClose = new MButton('btnShowsPaymentsClosePositionDown', _M('Fechar janela', $module), 'self.close()');
        $fields[] = new MSeparator('');
        $fields[] = new MDiv('divDown', array($buttonClose), null, 'align="center"');
        $fields[] = new MSeparator('');
        
        parent::defineFields( array( 'fields' => $fields, 'validators' => $validators, 'toolbar' => false ) );
    }
}
?>
