<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for finSPC table
 *
 * @author Fabiano Tomasini [fabiano@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Fabiano Tomasini [fabiano@solis.coop.br]
 * 
 * @since
 * Class created on 26/08/2010
 *
 **/

class FrmSpcSearch extends SSearchForm
{
    /**
     * Class constructor
     */
    public function __construct()
    {
        parent::__construct(_M('Localizar', 'basic'), new FinSpc(), array('personId', 'entryDate'), 'BusSpc');
    }

    /**
     *  Default method to define fields
     */
    public function defineFields()
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        //Fields person
        $fieldsPerson['personLabel'] = new MText('personLabelS', _M('Pessoa', $module) . ':');
        $fieldsPerson['personLabel']->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));      
        $fieldsPerson['personId'] = new MLookupTextField('personIdS', $data->personIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'), null, null, 'personNameS', 'basic', 'PhysicalPerson', null, null, true);
        $fieldsPerson['personId']->setJsHint(_M('Informe o código da pessoa', $module));
        $fieldsPerson['personName'] = new MTextField('personNameS', $data->personNameS->value, '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $fieldsPerson['personName']->setJsHint(_M('Nome da pessoa', $module));      
        $fields['lookupPerson'] = new MHContainer('hctPersonS', $fieldsPerson);
        $fields['lookupPerson']->setShowLabel(true);
        
        //Fields period
        $fieldsPeriod['entryDateLabel'] = new MText('entryLabelS', _M('De', $module) . ':');
        $fieldsPeriod['entryDateLabel']->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $fieldsPeriod['entryDate'] = new MCalendarField('entryDateS',$this->getFormValue('entryDateS', $data->entryDateS),'', SAGU::getParameter('BASIC', 'FIELD_DATE_SIZE'));
        $fieldsPeriod['entryDate']->setJsHint(_M('Informe a data de entrada', $module));
        $fieldsPeriod['removalDateLabel'] = new MText('removalLabelS', _M('até', $module) . ':');
        $fieldsPeriod['removalDate'] = new MCalendarField('removalDateS',$this->getFormValue('removalDateS', $data->entryDateS),'', SAGU::getParameter('BASIC', 'FIELD_DATE_SIZE'));
        $fieldsPeriod['removalDate']->setJsHint(_M('Informe a data de saida', $module));
        $fields['period'] = new MHContainer('hctPersonS', $fieldsPeriod);

        //Fields period
        $fieldsPeriod['entryDateLabel'] = new MText('entryLabelS', _M('De', $module) . ':');
        $fieldsPeriod['entryDateLabel']->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $fieldsPeriod['entryDate'] = new MCalendarField('entryDateS',$this->getFormValue('entryDateS', $data->entryDateS),'', SAGU::getParameter('BASIC', 'FIELD_DATE_SIZE'));
        $fieldsPeriod['entryDate']->setJsHint(_M('Informe a data de entrada', $module));
        $fieldsPeriod['removalDateLabel'] = new MText('removalLabelS', _M('até', $module) . ':');
        $fieldsPeriod['removalDate'] = new MCalendarField('removalDateS',$this->getFormValue('removalDateS', $data->entryDateS),'', SAGU::getParameter('BASIC', 'FIELD_DATE_SIZE'));
        $fieldsPeriod['removalDate']->setJsHint(_M('Informe a data de saida', $module));
        $fields['period'] = new MHContainer('hctPersonS', $fieldsPeriod);
        
        
        //Validators
        $validators[] = new MIntegerValidator('personIdS', _M('Pessoa', $module), 'optional');
        
        parent::defineFields($fields, $module, 'GrdSpcSearch',$validators);
    }
}

?>
