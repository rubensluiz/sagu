<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * 
 * @since
 * Class created on 08/09/2010
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdIncomeForecastSearch extends SGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $module = 'finance';

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        
        $columns = array(
                         new MGridColumn(_M('Usuário', $module), 'left', true, null, false), // userName
                         new MGridColumn(_M('Última atualização', $module), 'left', true, null, false), // dateTime
                         new MGridColumn(_M('Endereço IP', $module), 'left', true, null, false), // ipAddress
                         new MGridColumn(_M('Código da previsão de lançamento', $module), 'left', true, null, true), // incomeForecastId
                         new MGridColumn(_M('Código do contrato', $module), 'right', true, null, true), // contractId
                         new MGridColumn(_M('Código da operação', $module), 'right', true, null, true), // operationId
                         new MGridColumn(_M('Operação', $module), 'left', true, null, true), // description
                         new MGridColumn(_M('Tipo de operação', $module), 'left', true, null, true), // operationTypeId
                         new MGridColumn(_M('Código do plano de contas', $module), 'left', true, null, false), // accountSchemeId
                         new MGridColumn(_M('Descrição', $module), 'left', true, null, false), // description
                         new MGridColumn(_M('Código do centro de custo', $module), 'left', true, null, false), // costCenterId
                         new MGridColumn(_M('Descrição', $module), 'left', true, null, false), // description
                         new MGridColumn(_M('Valor', $module), 'right', true, null, true), // value
                         new MGridColumn(_M('Comentários', $module), 'left', true, null, false), // comments
                         new MGridColumn(_M('Data de gravação', $module), 'left', true, null, false), // recordDate
                         new MGridColumn(_M('Data de vencimento', $module), 'left', true, null, true), // maturityDate
                         new MGridColumn(_M('Está contabilizado', $module), 'left', true, null, true, SAGU::listYesNo()), // isAccounted
                         new MGridColumn(_M('Está processado', $module), 'left', true, null, true, SAGU::listYesNo()), // isProcessed
                         new MGridColumn(_M('Foi gerado', $module), 'left', true, null, true, SAGU::listYesNo()), // isGenerated
                         new MGridColumn(_M('Código do incentivo', $module), 'left', true, null, false), // incentiveId
                         new MGridColumn(_M('É suprimida', $module), 'left', true, null, true, SAGU::listYesNo()), // isSupressed
                         new MGridColumn(_M('Código do período letivo', $module), 'left', true, null, true), // learningPeriodId
                        );
      
        $primaryKey = array('incomeForecastId' => '%3%');
        
        parent::__construct($filters, $columns, 'GrdIncomeForecastSearch', $primaryKey);
        
        $this->setRowMethod('GrdIncomeForecastSearch', 'myRowMethod');
    }
    
    /**
     * Execute this method for each grid row
     * 
     * @param $i
     * @param $row
     * @param $actions
     * @param $columns
     */
    public function myRowMethod($i, $row, $actions, $columns )
    {
        // debits will be red and credits will be blue
        $fontColor = $row[7] == 'D' ? 'red' : 'blue';
        for ($x=1; $x<count($columns); $x++)
        {
            $columns[$x]->control[$i]->_addStyle('color', $fontColor);
        }
    }
}

?>
