<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for finPaymentPlace table
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 17/08/2005
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdShowsPayments extends MGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();        
        $home   = 'main:register:showsPayments';

        $columns = array( new MGridColumn( _M('Código do título',            $module), 'right',  true, null, true, null, false),
                          new MGridColumn( _M('Data de vencimento',         $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Código do curso',             $module), 'right',  true, null, true, null, false),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn( _M('Descrição da operação', $module), 'left',   true, null, true, null, false),
                          new MGridColumn( _M('Data de lançamento',            $module), 'center', true, null, true, null, false),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn( _M('Lançamento devido',             $module), 'right',  true, null, true, null, false)
                        );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
        if (is_array($filters))
        {
            foreach ( $filters as $k => $v )
            {
                $opts[$k] = $v;
            }
        }
       
        $url = $MIOLO->getActionURL($module, "$home:search", null, $opts);
        parent::__construct( null, $columns, $url, null, 0, 'showsPayments' );
        $this->setLinkType('hyperlink');

        $this->setRowMethod($this, 'myRowMethod');
        $this->setIsScrollable();
        $this->eventHandler();
    }
    
    public function myRowMethod( $i, $row, $actions, $columns )
    {
        for ($x = 0; $x<count($columns); $x++)
        {
            $columns[$x]->control[$i]->_addStyle( 'color', ($x == (count($columns)-1)) ? 'red' : 'blue');
        }
    }
}
?>
