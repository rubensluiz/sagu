<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of GrdConsultaSolicitacoesDeProcessos
 *
 * @author augusto
 */
class GrdSolicitacoesDeProcessos extends SGrid
{
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        $MIOLO->page->AddScript('m_popup_control.js');

        $columns = array(
            'finfluxosolicitacao.fluxosolicitacaoid' => new SGridColumn( null, _M('Solicitação', $module), 'right'),
            'miolo_user.name' => new SGridColumn( null, _M('Solicitante', $module)),
            'fluxoaprovacaoprocesso.nomedoprocesso' => new SGridColumn( null, _M('Processo', $module)),
            'finfluxosolicitacao.codigodoregistro' => new SGridColumn( null, _M('Código do registro solicitado', $module), 'right'),
            'finfluxosolicitacao._datadoregistro' => new SGridColumn( null, _M('Data da solicitação', $module), 'center'),
            'finfluxosolicitacao.fluxoaprovacaostatusid' => new SGridColumn( null, _M('Código do status', $module), 'center', array('visible' => false)),
            'fluxoaprovacaostatus.descricao' => new SGridColumn( null, _M('Status', $module), 'center')
        );
        
        $pkeys = array(
            'fluxosolicitacaoid' => '%finfluxosolicitacao.fluxosolicitacaoid%',
            'iduser' => '%miolo_user.iduser%'
        );
        
        parent::__construct($filters, $columns, __CLASS__, $pkeys);
        
        $this->clearActions();
        $this->disableExports();
        $this->disablePagination();
        $this->setRowMethod($this, 'myRowMethod');        
        
        $href = SForm::getAjaxAction('popupVizualisarAvaliacoes', 'divLimbo', false, $pkeys, false, false);
        $this->addActionIcon(_M('Visualizar avaliações'), $MIOLO->getUI()->getImage($module, 'report-16x16.png'), $href);
        
        $href = SForm::getAjaxAction('popupAvaliar', 'divLimbo', false, $pkeys, false, false);
        $this->addActionIcon(_M('Avaliar solicitação'), $MIOLO->getUI()->getImage($module, 'checkStandBy.png'), $href);
    }
    
    /**
     * myRowMethod
     */
    public function myRowMethod($i, $row, $actions, $columns )
    {   
        $MIOLO  = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        
        $fluxoAprovacaoStatusId = $row['fluxoaprovacaostatus.fluxoaprovacaostatusid'];
        
        // Se é avaliador.
        if ( $row['eAvaliador'] )
        {
            // Se já avaliou a solicitação.
            if ( $row['jaAvaliou'] )
            {
                // Se aprovou
                if ( $fluxoAprovacaoStatusId == FinFluxoAprovacaoStatus::REPROVADO )
                {
                    $actions[1]->enabled = false;
                    $actions[1]->value   = $MIOLO->getUI()->getImage($module, 'checkOn.png');
                    $actions[1]->alt     = _M('Solicitação já avaliada');
                }
                // Se reprovou
                else
                {
                    $actions[1]->enabled = false;
                    $actions[1]->value   = $MIOLO->getUI()->getImage($module, 'checkOff.png');
                    $actions[1]->alt     = _M('Solicitação já avaliada');
                }
            }
            // Se avaliação está pendente
            else
            {
                $actions[1]->enabled = true;
                $actions[1]->value   = $MIOLO->getUI()->getImage($module, 'checkStandBy.png');
                $actions[1]->alt     = _M('Avaliar solicitação');
            }
        }
        // Se não é um avaliador.
        else
        {
            $actions[1]->enabled = false;
            
            // Se solicitação está reprovada
            if ( $fluxoAprovacaoStatusId == FinFluxoAprovacaoStatus::REPROVADO )
            {
                $actions[1]->value = $MIOLO->getUI()->getImage($module, 'red.png');
                $actions[1]->alt   = _M('Reprovado');
            }
            // Se solicitação está aprovada
            else if ( $fluxoAprovacaoStatusId == FinFluxoAprovacaoStatus::APROVADO )
            {
                $actions[1]->value = $MIOLO->getUI()->getImage($module, 'blue.png');
                $actions[1]->alt   = _M('Aprovado');
            }
            // Se solicitação está pendente.
            else
            {
                $actions[1]->value = $MIOLO->getUI()->getImage($module, 'green.png');
                $actions[1]->alt   = _M('Aguarde avaliação');
            }
        }
        
        $fluxoAprovacaoStatusStyle = FinFluxoAprovacaoStatus::obtemDescricaoDoStatus($fluxoAprovacaoStatusId, true);
        $columns['fluxoaprovacaostatus.descricao']->control[$i]->addAttribute('style', $fluxoAprovacaoStatusStyle);
        
        $finFluxoAprovacaoProcesso = new FinFluxoAprovacaoProcesso($row['finfluxosolicitacao.fluxoaprovacaoprocessoid']);
        $linkCodigoDoRegistro      = $row['finfluxosolicitacao.codigodoregistro'] = $finFluxoAprovacaoProcesso->gerarLinkDoRegistro($row['finfluxosolicitacao.codigodoregistro']);
        
        $columns['finfluxosolicitacao.codigodoregistro']->control[$i]->setValue($linkCodigoDoRegistro);
    }
}

?>
