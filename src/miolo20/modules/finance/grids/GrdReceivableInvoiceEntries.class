<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file shows finEntry table data
 *
 * @author Leovan Tavares da Silva [william@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 11/10/2010
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdReceivableInvoiceEntries extends MGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $columns = array( 
                          new MGridColumn( _M('Código do lançamento',         $module), 'right', true, null, false, null, false ),
                          new MGridColumn( _M('Código do título',       $module), 'right', true, null, false, null, false ),
                          new MGridColumn( _M('Código da operação',     $module), 'right', true, null, false, null, false ),
                          new MGridColumn( _M('Descrição',      $module),  'left', true, null, true, null, false ),
                          new MGridColumn( _M('Data de lançamento',       $module),  'left', true, null, true, null, false ),
                          new MGridColumn( _M('Valor',            $module), 'right', true, null, true, null, false ),
                          new MGridColumn( _M('Código do centro de custo',   $module), 'right', true, null, false, null, false ),
                          new MGridColumn( _M('Descrição',      $module),  'left', true, null, false, null, false ),
                          new MGridColumn( _M('Código de retorno do banco',   $module), 'right', true, null, false, null, false ),
                          new MGridColumn( _M('Está contabilizado',     $module),  'left', true, null, false, array( DB_TRUE => _M('Sim',$module), DB_FALSE => _M('Não',$module) ), true ),
                          new MGridColumn( _M('Código do tipo de operação',   $module), 'right', true, null, true, null, false )
                        );

        $url = $MIOLO->getActionURL($module, $action);
        parent::__construct(null, $columns, $url, 0, 0, 'gridReceivableInvoiceEntries', false, false);
        $this->setRowMethod('GrdReceivableInvoiceEntries', 'myRowMethod');

        $this->setIsScrollable();
        $this->eventHandler();
    }

   /**
    * Function to handle the before each row creation
    */
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        if ($row[10] == 'D')
        {
            $columns[3]->control[$i]->_addStyle('color', 'red');
            $columns[4]->control[$i]->_addStyle('color', 'red');
            $columns[5]->control[$i]->_addStyle('color', 'red');
            $columns[10]->control[$i]->_addStyle('color', 'red');
        }
        elseif ($row[10] == 'C')
        {
            $columns[3]->control[$i]->_addStyle('color', 'blue');
            $columns[4]->control[$i]->_addStyle('color', 'blue');
            $columns[5]->control[$i]->_addStyle('color', 'blue');
            $columns[10]->control[$i]->_addStyle('color', 'blue');
        }
    }
}
?>
