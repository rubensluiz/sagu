<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 * Retorno bancário
 *
 * @author Equipe SAGU [sagu@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Equipe SAGU [sagu@solis.coop.br]
 * 
 * @since
 * Class created on 22/12/2005
 *
 **/

class GrdBankReturn extends SGrid
{
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        $columns = array(
            new MGridColumn( _M('Codigo', $module), 'left', true, null, false, null, false ),
            new MGridColumn( _M('Nosso número', $module), 'left', true, null, true, null, false ),
            new MGridColumn( _M('Título', $module), 'left', true, null, true, null, false ),
            new MGridColumn( _M('Vencimento', $module), 'left',  true, null, true, null, false ),
            new MGridColumn( _M('Pagamento', $module), 'left',  true, null, true, null, false ),
            new MGridColumn( _M('Valor', $module), 'right',  true, null, true, null, false ),
            new MGridColumn( _M('Desconto', $module), 'right',  true, null, true, null, false ),
            new MGridColumn( _M('Juros/Multa', $module), 'right',  true, null, true, null, false ),
            new MGridColumn( _M('Taxa', $module), 'right',  true, null, true, null, false ),
            new MGridColumn( _M('Deduções', $module), 'right',  true, null, true, null, false ),
            new MGridColumn( _M('Acréscimos', $module), 'right',  true, null, true, null, false ),
            new MGridColumn( _M('Esperado', $module), 'right',  true, null, true, null, false ),
            new MGridColumn( _M('Recebido', $module), 'right',  true, null, true, null, false ),
            new MGridColumn( _M('Diferença', $module), 'right',  true, null, true, null, false ),
            new MGridColumn( _M('Status', $module), 'left',  true, null, true, null, false ),
        );

        parent::__construct($filters, $columns, __CLASS__);
        
        $this->clearActions();
        $this->pageLength = 999999999;
        $this->showExport = false;
        
        $this->setRowMethod($this, 'myRowMethod');
    }
    
    
    public function myRowMethod($i, $row, $actions, $columns)
    {
        list($n,$n,$n,$n,$n,$n,$n,$n,$n,$n,$n,$n, $n, $valorDiferenca) = $this->data[$i];
        list($n,$n,$n,$n,$n,$n,$n,$n,$n,$n,$n,$n, $n, $diferenca) = $columns;

        //
        if ( strlen($valorDiferenca) > 0)
        {
            $color = SAGU::calcNumber(" {$valorDiferenca} >= 0 ") == DB_TRUE ? 'blue' : 'red';
            $diferenca->control[$i]->setColor($color);
        }
    }
}
?>
