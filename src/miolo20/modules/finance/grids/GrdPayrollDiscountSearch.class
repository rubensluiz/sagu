<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for acdPayrollDiscount table
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * 
 * @since
 * Class created on 12/12/2005
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdPayrollDiscountSearch extends MGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        $action = MIOLO::getCurrentAction();
        $home   = 'main:finance:payrollDiscount';

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
       $href = $MIOLO->getActionURL($module, 'main:register:invoice:receivableInvoice', null, array('personId'=>'#0#', 'invoiceId'=>'#8#', 'function'=>'update'));
        $columns = array( new MGridColumn( _M('Código da pessoa', $module), 'right', true, null, true, null, true ),
                          new MGridColumn( _M('Aluno beneficiado', $module),   'left', true, null, true, null, true ),
                          new MGridColumn( _M('funcionário', $module),   'left', true, null, true, null, true ),
                          new MGridColumn( _M('Código da conta bancária', $module),    'left', true, null, true, null, true ),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn( _M('Saldo', $module),      'right', true, null, true, null, true ),
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn('', 'left', false, 0, false),
    //                new MGridColumn('', 'left', false, 0, false),
                          new MGridHyperlink( _M('Código do título', $module),  $href, '', true ), 
                          new MGridColumn('', 'left', false, 0, false),
                          new MGridColumn( _M('Valor do débito', $module),  'right', true, null, true, null , true ),
                          new MGridColumn( _M('Valor do desconto', $module),  'right', true, null, true, null, true ),
                          new MGridColumn( _M('Está processado', $module),  'right', true, null, true, array( DB_TRUE => _M('Sim',$module), DB_FALSE => _M('Não',$module) ), true ),
                          new MGridColumn( _M('Data de fechamento', $module),  'left', true, null, true, null, true ),
                          new MGridColumn( _M('Código do contrato', $module),  'left', true, null, true, null, true ),
                        );

 


        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
        foreach ( $filters as $k => $v )
        {
            $opts[$k] = $v;
        }
//        $url = $MIOLO->getActionURL( $module, "$home:search", null, $opts );
        parent::__construct( null, $columns, $url, 0, 0, 'gridPayrollDiscount' );

        $this->setIsScrollable();

 //       $this->addActionUpdate( $href_edit );
  //      $this->addActionDelete( $href_delete );

        $this->eventHandler();

    }
}

?>
