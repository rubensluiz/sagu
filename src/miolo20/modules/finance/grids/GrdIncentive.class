<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for finIncentive table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 29/12/2005
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdIncentive extends MGrid
{

    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        $home = 'main:register:incentive';
        
        $columns = array( new MGridColumn('', 'left', false, 0, false),
                                      new MGridColumn( _M('Patrocinador', $module ), 'left', true, null, true, null, false ),  
                                      new MGridColumn( _M('Incentivo', $module ), 'left', true, null, true, null, false ), 
                                      new MGridColumn( _M('Data inicial', $module ), 'center', true, null, true, null, false ), 
                                      new MGridColumn( _M('Data final', $module ), 'center', true, null, true, null, false ), 
                                      new MGridColumn( _M('Valor', $module ), 'right', true, null, true, null, false ), 
                                      new MGridColumn( _M('Centro de custo relacionado', $module ), 'left', true, null, true, null, false ),
                                      new MGridColumn( _M('Valor integral - desconsiderando incentivo', $module ), 'right', true, null, true, null, false, null, true ),
                                      new MGridColumn( _M('Valor total do incentivo', $module ), 'right', true, null, true, null, false, null, true ));
        
        unset( $opts );
        
        $opts = array( 'event' => 'aditarIncentivoEvento', 'incentiveId' => '%0%' );
        $hrefAditar = $MIOLO->getActionURL( $module, "main", null, $opts );
        
        $url = $MIOLO->getActionURL( $module, $home, null, $opts );
        parent::__construct( null, $columns, $url, 0, 'gridIncentive' );
        
        $this->addActionIcon( _M('Aditar', $module ), '', $hrefAditar );
        
        $this->setRowMethod($this, 'myRowMethod');
        
            
        $this->setIsScrollable();
        
        $this->eventHandler();
    
    }
    
    public function myRowMethod($i, $row, $actions, $columns)
    {  
        $MIOLO     = MIOLO::getInstance();
        $loginUser = $MIOLO->getLogin();
        
        $checkAcessAdmin = $MIOLO->checkAccess('FrmIncentive', A_ADMIN, false, true);
        
        if ( $row[9] == DB_TRUE )
        {
            $actions[0]->enabled = true;
            $actions[0]->value = 'unlock.png';
        }
        else
        {   
            $actions[0]->enabled = false;
            $actions[0]->value = 'lock.png';
        }
        
        if ( $row[10] == DB_TRUE )
        {
            $actions[0]->enabled = false;
            $actions[0]->value = 'lock.png';
            $actions[0]->alt = _M('Aditar');
            
            if ( $loginUser->isAdmin || $checkAcessAdmin )
            {
                $actions[0]->enabled = true;
                $actions[0]->alt = _M('Reverter aditamento');
            }
        }
    }
    
}

?>
