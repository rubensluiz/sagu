<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection and actions for finEntry table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Edaurdo Beal Miglioransa [eduardo@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Moises Heberle [moises@solis.coop.br]
 * 
 * @since
 * Class created on 05/01/2006
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdEntrySearch extends SGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $columns = array(
            new MGridColumn( _M('Código do lançamento',         $module), 'right', true, null, true, null, true ),
            new MGridColumn( _M('Código do título',       $module), 'right', true, null, true, null, true ),
            new MGridColumn( _M('Código da operação',     $module), 'right', true, null, true, null, true ),
            new MGridColumn( _M('Descrição',      $module),  'left', true, null, true, null, true ),
            new MGridColumn( _M('Data de lançamento',       $module),  'left', true, null, true, null, true ),
            new MGridColumn( _M('Valor',            $module), 'right', true, null, true, null, true ),
            new MGridColumn( _M('Código do centro de custo',   $module), 'right', true, null, true, null, true ),
            new MGridColumn( _M('Descrição',      $module),  'left', true, null, true, null, true ),
            new MGridColumn( _M('Código de retorno do banco',   $module), 'right', true, null, true, null, true ),
            new MGridColumn( _M('Está contabilizado',     $module),  'left', true, null, true, SAGU::listYesNo(), true ),
            new MGridColumn( _M('limbo', $module),  'right', true, null, false, null, true ),
            new MGridColumn( _M('limbo', $module),  'right', true, null, false, null, true ),
            new MGridColumn( _M('limbo', $module),  'right', true, null, false, null, true ),
            new MGridColumn( _M('limbo', $module),  'right', true, null, false, null, true ),
            new MGridColumn( _M('limbo', $module),  'right', true, null, false, null, true ),
            new MGridColumn( _M('limbo', $module),  'right', true, null, false, null, true ),
            new MGridColumn( _M('Título de referência', $module),  'right', true, null, true, null, true )
        );

        $this->setRowMethod('GrdEntrySearch',  'myRowMethod');
        parent::__construct($filters, $columns, __CLASS__, array('entryId'=>'%0%'));
    }

    /*
     * Event to execute for each row of grid
     */
    public function myRowMethod($i, $row, $actions, $columns)
    {
        $MIOLO = MIOLO::getInstance();
        $businessInvoice = new BusinessFinanceBusInvoice();

        if ( $row[9] == DB_TRUE )
        {
            $actions[0]->enabled = false;
            $actions[1]->enabled = false;
        }
        else
        {
            $actions[0]->enabled = true;
            $actions[1]->enabled = true;
        }
    }
}
?>
