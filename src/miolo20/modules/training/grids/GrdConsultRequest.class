<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 *
 * Grid do formulário de consuta de solicitação de estágio
 *
 * @author Fabiano Tomasini [fabiano@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Fabiano Tomasini [fabiano@solis.coop.br]
 *
 * @since
 * Class created on 05/04/2011
 *
 **/

class GrdConsultRequest extends SGrid
{
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $action = MIOLO::getCurrentAction();
        $module = SAGU::getFileModule(__FILE__);

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array(
            new MGridColumn(_M('Solicit.', $module), 'center', true, null, true, null, true),
            new MGridColumn(_M('Data solicit.', $module), 'center', true, null, true, null, true),
            new MGridColumn(_M('Cód. pessoa', $module), 'center', true, null, true, null, true),
            new MGridColumn(_M('Nome pessoa', $module), 'left', true, null, true, null, true),
            new MGridColumn(_M('Email', $module), 'left', true, null, true, null, true),
            new MGridColumn(_M('Fone', $module), 'left', true, null, true, null, true),
            new MGridColumn(_M('Instituição', $module), 'left', true, null, true, null, true),
            new MGridColumn(_M('Solicit. feita pela conveniada', $module), 'center', true, null, true, null, true),
            new MGridColumn(_M('Sem.', $module), 'center', true, null, true, null, true),
            new MGridColumn(_M('Início', $module), 'center', true, null, true, null, true),
            new MGridColumn(_M('Fim', $module), 'center', true, null, true, null, true),
            new MGridColumn(_M('Status', $module), 'left', true, null, true, TraRequest::listStatus(), true),
            new MGridColumn(_M('Área', $module), 'left', true, null, true, null, true),
            new MGridColumn(_M('Código da área', $module), 'left', true, null, false)
        );

        $primaryKey = array('requestId' => '%0%');
        
        parent::__construct($filters, $columns, __CLASS__, $primaryKey);
        
        $this->showExport = false;
        $this->actions = array();

        // enable row selection
        $this->addActionSelect();

        //Botão de visualização de vagas
        $intervalDates = array('beginDate'=>'%9%', 'endDate'=>'%10%', 'unitAreaId'=>'%13%');
        $href = $MIOLO->getActionURL($this->module, 'main:teamAllocation', null, $intervalDates);
        $this->addActionIcon(_M('Vagas disponíveis',$module), 'default-16x16.png', "javascript:teamAllocation('{$href}')");
        $MIOLO->page->addJsCode("function teamAllocation(url) { window.open (url); }");

        //Botão de ajuste de solicitação
        $opt['adjustmentRequestEnabled'] = DB_TRUE;
        $opts = array_merge($primaryKey, $opt);
        $href = $MIOLO->getActionURL($this->module, 'main:process:viewRequest', null, $opts);
        $this->addActionIcon(_M('Ajustar',$module), 'button_edit.png', $href);
        
        //Consultas Diversas
        $href = $MIOLO->getActionURL($module, 'main', null, array('personId' => '%1%','event'=>'btnSearch:click'));
        $this->addActionIcon(_M('Consultas diversas', $module), 'botao_explorar.png', $href);
        
        //Botão de deletar
        $href = SForm::getAjaxAction('btnDelete_click', 'divPopup', false, array('requestId' => '%0%'), false, null,false);
        $this->addActionIcon(_M('Excluir', $module), 'button_drop.png', 'javascript:' . $href);
    }
}

?>
