<?php

/**
 * <--- Copyright 2005-2012 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Widget de previsão do tempo.
 *
 * @author Fabiano Tomasini [fabiano@solis.coop.br]
 *
 * \b Maintainers: \n
 *
 * @since
 * Class created on 22/03/2012
 */

$MIOLO->uses('classes/SWidget.class', 'sagu2');

class SWidgetTitulosAbertos extends SWidget
{
    /**
     * Identificador do widget. Deve ser o nome da classe. 
     */
    const CODIGO = 'SWidgetTitulosAbertos';

    /**
     * Título do widget a ser exibido ao usuário.
     */
    const NOME = 'Títulos abertos e fechados no mês atual';

    /**
     * Construtor do widget de previsão do tempo. 
     */
    public function __construct()
    {
        $modulo = MIOLO::getCurrentModule();
        $dados = array();
        $controles = array();

        $titulos = $this->buscaTitulosAbertos();

        if ( count($titulos) )
        {
            list($emDia, $inadimplentes) = current($titulos);

            $dados[] = array( _M('Fechados', $modulo), $emDia );
            $dados[] = array( _M('Abertos', $modulo), $inadimplentes );
        }

        $controles[] = new MChart('graficoTitulos', $dados, NULL, MChart::TYPE_PIE);

        parent::__construct($controles);

        $this->addBoxStyle('text-align', 'center');
    }




    public static function buscaTitulosAbertos()
    {
        $sql = "SELECT (select count((select AA.invoiceid
                          from fininvoice AA
                         where date_part('month',aa.maturitydate) = date_part('month',CURRENT_TIMESTAMP)
                           AND AA.invoiceid =A.invoiceid
                      group by 1
                        HAVING balance(invoiceid) <=0))) AS emdia,
                        (select count((select AA.invoiceid
                          from fininvoice AA
                         where date_part('month',aa.maturitydate) = date_part('month',CURRENT_TIMESTAMP)
                           AND AA.invoiceid =A.invoiceid
                      group by 1
                        HAVING balance(invoiceid) >0))) AS inadimplentes
                  FROM fininvoice A
                 WHERE date_part('month',a.maturitydate) = date_part('month',CURRENT_TIMESTAMP);";


        return SDatabase::query($sql);
    }

    /**
     * @return string Obtém a constante de código do widget.
     */
    public function obterCodigo()
    {
        return self::CODIGO;
    }

    /**
     * @return string Obtém a constante de nome do widget.
     */
    public function obterNome()
    {
        return self::NOME;
    }
}
?>
