<?php

/**
 * <--- Copyright 2005-2012 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Widget de previsão do tempo.
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 * @author Daniel Hartmann [daniel@solis.coop.br]
 *
 * \b Maintainers: \n
 * Daniel Hartmann [daniel@solis.coop.br]
 *
 * @since
 * Class created on 22/03/2012
 */

$MIOLO->uses('classes/SWidget.class', 'sagu2');

class SWidgetInscritosPs extends SWidget
{
    /**
     * Identificador do widget. Deve ser o nome da classe. 
     */
    const CODIGO = 'SWidgetInscritosPs';

    /**
     * Título do widget a ser exibido ao usuário.
     */
    const NOME = 'Inscritos por curso';

    /**
     * Construtor do widget de inscritos por curso. 
     */
    public function __construct()
    {
        $controles = array();

        // Busca processos seletivos em andamento
        $processosSeletivos = SprSelectiveProcess::_list();

        foreach( (array) $processosSeletivos as $processoSeletivo )
        {
            $dados = array();

            $filtros = new stdClass();
            $filtros->selectiveProcessId = $processoSeletivo[0];
            $inscritosPorCurso = SprReports::buscaInscritosPorCurso($filtros);
            $titulo = 'INSCRITOS POR CURSO '.$processoSeletivo[1];

            foreach ($inscritosPorCurso as $curso)
            {
                $dados[] = array( $curso[1], $curso[0] );
            }

            $controles[] = $grafico = new MChart('graficoInscritosPorCurso', $dados, $titulo, MChart::TYPE_BAR);
            $grafico->setYAsCategory();
            $grafico->conf->seriesDefaults->rendererOptions->barDirection = 'horizontal';
            $grafico->setBarWidth(70);
        }

        parent::__construct($controles);

        $this->addBoxStyle('text-align', 'center');
    }

    /**
     * @return string Obtém a constante de código do widget.
     */
    public function obterCodigo()
    {
        return self::CODIGO;
    }

    /**
     * @return string Obtém a constante de nome do widget.
     */
    public function obterNome()
    {
        return self::NOME;
    }
}
?>
