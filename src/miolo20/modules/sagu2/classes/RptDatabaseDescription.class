<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This class Default defines To report identification
 *
 * @author Leovan Tavares da Silva [leovan] [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/06/2006
 *
 **/
 
/**
 * Default defines 
 * To report identification
 */
define('REPORT_ID', 'SGU001'); 
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

$MIOLO = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();
$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    /**
     * Defines the footer for this report
     */
    public function Footer()
    {
    }

    /**
     * Defines the header for this report
     */
    public function Header()
    {
    }
}


/**
 * PDF extension to generate report
 */
class RptDatabaseDescription
{
    /**
     * Method to generate the report
     */
    public function RptDatabaseDescription($data=null)
    {
        $MIOLO       = MIOLO::getInstance();
        $module      = MIOLO::getCurrentModule();

        // Generating PDF file
        $pdf = new PDF();
        $pdf->aliasNbPages();
        
        $MIOLO->getClass($module, 'documentation');
        DOCUMENTATION::generateStartPage($pdf, _M('Descrição da base de dados', $module));

        // First page        
        $pdf->addPage('P', 'mm', 'A4');
        $pdf->ln(10);

        if ( count($data) > 0 )
        {
            $modules['acc'] = _M('Contábil', $module);
            $modules['acd'] = _M('Acadêmico', $module);
            $modules['bas'] = _M('Básico', $module);
            $modules['ccp'] = _M('Controle de cópias', $module);
            $modules['fin'] = _M('Financeiro', $module);
            $modules['ins'] = _M('Institucional', $module);
            $modules['ptc'] = _M('Protocolo', $module);
            $modules['rsh'] = _M('Questionário', $module);
            $modules['spr'] = _M('Processo seletivo', $module);

            $x = 1;
            foreach ( $data as $row )
            {

                list ( $tableOID,
                       $tableName,
                       $tableDescription,
                       $tableData ) = $row;

                $module_ = substr($tableName, 0, 3);

                //nome do modulo
                if ( $module_ != $module__ )
                {
                    if ( $x++ != 1 )
                    {
                        $pdf->ln(20);
                    }
                    $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'B', 16);
                    $msg = $modules[$module_];
                    //width, heinght, string, border, break, align (a4 210 290)
                    $pdf->cell(190, 10, $msg, 0, 0, 'C');
                    $pdf->ln(10);
                    $module__ = $module_;
                }

                $pdf->ln(2);

                //nome da tabela
                $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'BU', 11);
                $pdf->cell(80, 5, $tableName . ':', 0, 0, 'R');

                $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'I', 11);
                $pdf->multiCell(110, 5, $tableDescription, 0, 'L');

                //imprime os campos de cada tabela
                if ( count($tableData) > 0 )
                {
                    foreach ( $tableData as $row2 )
                    {
                        list ( $fieldName,
                               $fieldDescription ) = $row2;

                        $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), '', 9);
                        $pdf->cell(80, 4, $fieldName . ': ', 0, 0, 'R');

                        $pdf->setFont(SAGU::getParameter('BASIC', 'DEFAULT_REPORT_FONT'), 'I', 9);
                        $pdf->multiCell(110, 4, $fieldDescription, 0, 'L');
                    }
                }
            }
        }
        //Close and generate the document        
        $pdf->close();
        $pdf->output();
    }
}

?>
