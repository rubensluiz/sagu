<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * @author Rafael Dutra  [rdutra@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 27/07/2006
 *
 **/

/**
 * Grid used by form to display search results
 **/

class FrmProjectSearch extends MForm
{

    public function __construct()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        parent::__construct(_M('Localizar'));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }
    
    public function createFields()
    {
        $MIOLO   = MIOLO::getInstance();
        $module  = MIOLO::getCurrentModule();
        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,'main:register:project'));
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnPrint');
        $this->defaultButton = false;
        $fields[]  = $toolBar;

        $fields[]  = new Separator();
        $fields[]  = new MTextField('projectIdS', $this->projectIdS->value, _M('Código do projeto', $module),'14');
        $fields[]  = new MTextField('descriptionS', $this->descriptionS->value, _M('Descrição', $module),'30');
        $fields[]  = new MButton('tbBtnPost', _M('Localizar'));
        $fields[]  = new Separator();
    
        $this->setFields($fields);
        
        //get values of createFields
        $values->description  = $this->descriptionS->value;
        $values->projectId    = $this->projectIdS->value;

        // create the grid without values, 
        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdProjectSearch', $values);
        $business   = new BusinessControlCopiesBusProject();
        $data       = $business->searchProject($values);
        $grdResults->setData($data);
        $this->addField($grdResults);
    }

}

?>
