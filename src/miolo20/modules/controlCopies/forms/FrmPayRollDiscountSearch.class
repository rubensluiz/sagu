<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * @author Rafael Dutra [rdutra@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Dutra [rdutra@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 21/08/2006
 *
 **/

class FrmPayRollDiscountSearch extends MForm
{
    private $home;
    private $module;

    public function __construct($data)
    {
        $this->module = 'basic';
        $module = $this->module;
        $this->home   = $data->home;
        parent::__construct(_M('Localizar',$module));
        $this->setShowPostButton(false);
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());
        $this->eventHandler();
    }

    public function createFields()
    {
        $MIOLO          = MIOLO::getInstance();
        $module         = MIOLO::getCurrentModule();
        $action         = MIOLO::getCurrentAction();
        $function       = MIOLO::_request('function');
        $toolBar        = new MToolBar('toolBar',$MIOLO->getActionURL($module,'main:register:payrolldiscount'));
        $toolBar        ->disableButton('tbBtnDelete');
        $toolBar        ->disableButton('tbBtnSave');
        $toolBar        ->disableButton('tbBtnPrint');
        $this           ->defaultButton = false;
        //favorites
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        
        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Pay Roll Discount', $this->home, 'payrolldiscount-16x16.png', true);
        }
       //end favorites
        $fields[]       = $toolBar;
        $serviceLabel   = new MText('serviceIdS', _M('Código de serviço',$module).':');
        $serviceLabel   ->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $serviceID      = new MLookupTextField('serviceIdS', $this->serviceIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'), null, null, 'serviceDescription', $module, 'Service', 'filler', null, true);
        $serviceName    = new MTextField('serviceDescription', $this->getFormValue('serviceDescription',$data->serviceDescription), '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $sectorLabel    = new MText('sectorIdS', _M('Código do setor',$module).':');
        $sectorLabel->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $sectorID       = new MLookupTextField('sectorIdS', $this->sectorIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'), null, null, 'sectorDescription', $module,'Sector', null, null, true);
        $sectorName     = new MTextField('sectorDescription', $this->getFormValue('sectorDescription',$data->sectorDescription), '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $personLabel    = new MText('personId', _M('Código da pessoa',$module).':');
        $personLabel    ->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $personID       = new MLookupTextField('personIdS', $this->personIdS->value, '', SAGU::getParameter('BASIC', 'FIELD_ID_SIZE'), null, null, 'personName', $module,'PhysicalPersonEmployee', null, null, true);
        $personName     = new MTextField('personName', $this->personName->value, '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $operatorLabel  = new MText('operatorsectorId', _M('Operador',$module).':');
        $operatorLabel  ->setWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE'));
        $operatorName   = new MTextField('operator', $this->operator->value, '', SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $hctService     = new MHContainer(null,array($serviceLabel, $serviceID,    $serviceName));
        $hctSector      = new MHContainer(null,array($sectorLabel,  $sectorID,     $sectorName));
        $hctPerson      = new MHContainer(null,array($personLabel,  $personID,     $personName));
        $hctOperator    = new MHContainer(null,array($operatorLabel,$operatorName));
        $fields[]       = $hctService ;
        $fields[]       = $hctSector  ;
        $fields[]       = $hctPerson  ;
        $fields[]       = $hctOperator;
        $fields[]       = new MButton('btnSearch',_M('Localizar',$module));
        $this           ->setFields($fields);
        $filters        = getTypesData('ccpPayrollDiscount');
        $this           ->setLabelWidth(SAGU::getParameter('BASIC', 'FIELD_LABEL_SIZE')+3);
        // create the grid without values,
        $grdResults     = $MIOLO->getUI()->getGrid($module,'GrdPayRollDiscountSearch', $values);
        $business       = new BusinessControlCopiesBusPayrollDiscountPtc();
        $data           = $business->searchPayRollDiscount($filters);
        $grdResults     ->setData($data);
        $this           ->addField($grdResults);
    }
}
