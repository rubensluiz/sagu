<?php

/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * @author Rafael Dutra  [rdutra@solis.coop.br]
 * @author another Eduardo Bonfandini [eduardo@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 28/07/2006
 *
 **/

class FrmServiceSearch extends MForm
{

    public function __construct()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        parent::__construct(_M('Localizar'));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());
        $this->eventHandler();
    }

    public function createFields()
    {
        $MIOLO   = MIOLO::getInstance();
        $module  = MIOLO::getCurrentModule();
        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,'main:register:service'));
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnPrint');
        $this->defaultButton = false;
        $fields[]  = $toolBar;
        $fields[]  = new MTextField('description', $this->description->value, _M('Descrição', $module), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
        $fields[]  = new MTextField('unitaryValue', $this->unitaryValue->value, _M('Valor unitário', $module), SAGU::getParameter('BASIC', 'FIELD_MONETARY_SIZE'));
        $validators[] = new MFloatValidator('unitaryValue');
        $fields[]  = new MTextField('unit', $this->unit->value, _M('Unidade', $module), SAGU::getParameter('BASIC', 'FIELD_MONETARY_SIZE'));
        $fields[]  = new MButton('tbBtnPost', _M('Localizar'));
        $fields[]  = new Separator();
        $this->setFields($fields);
        $this->setValidators($validators);
        //get values of createFields
        $values->serviceId    = $this->serviceId->value;
        $values->description  = $this->description->value;
        $values->unitaryValue = $this->unitaryValue->value;
        $values->unitaryValue = str_replace(',','.', $values->unitaryValue);
        $values->unit         = $this->unit->value;
        // create the grid without values,
        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdServiceSearch', $values);
        $business   = new BusinessControlCopiesBusService();
        $data       = $business->searchService($values);
        $grdResults->setData($data);
        $this->addField($grdResults);
        $this->page->onLoad('document.' . $this->name . '.description.focus();');
    }
}

?>
