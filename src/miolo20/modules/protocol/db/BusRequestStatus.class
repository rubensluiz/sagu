<?php
/**
 * <--- Copyright 2011-2011 de Facimed - Faculdade de Ci?ncias Biom?tricas de Cacoal.
 *
 * Este arquivo ? parte do programa Sagu.
 *
 * O Sagu ? um software livre; voc? pode redistribu?-lo e/ou modific?-lo
 * dentro dos termos da Licen?a P?blica Geral GNU como publicada pela Funda??o
 * do Software Livre (FSF); na vers?o 2 da Licen?a.
 *
 * Este programa ? distribu?do na esperan?a que possa ser ?til, mas SEM
 * NENHUMA GARANTIA; sem uma garantia impl?cita de ADEQUA??O a qualquer MERCADO
 * ou APLICA??O EM PARTICULAR. Veja a Licen?a P?blica Geral GNU/GPL em
 * portugu?s para maiores detalhes.
 *
 * Voc? deve ter recebido uma c?pia da Licen?a P?blica Geral GNU, sob o t?tulo
 * "LICENCA.txt", junto com este programa, se n?o, acesse o Portal do Software
 * P?blico Brasileiro no endere?o www.softwarepublico.gov.br ou escreva para a
 * Funda??o do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 *
 * This file handles the connection and actions for basCity table
 *
 * @author Glaubert Francis Dumpierre [desenvolvimento@facimed.edu.br]
 *
 * $version: $Id$
 *
 * \b Maintainers: \n
 * Equipe Sagu [sagu2@solis.coop.br]
 *
 * @since
 * Class created on 18/03/2011
 *
 **/

/**
 * Class to manipulate the ptc.requeststatus table
 **/
class BusinessProtocolBusRequestStatus extends sBusiness
{	
    const STATUS_SOLICITACAO_AGUARDANDO_PAGAMENTO = 1;
    const STATUS_SOLICITACAO_EM_ANDAMENTO = 2;
    const STATUS_SOLICITACAO_FECHADA = 3;
    const STATUS_SOLICITACAO_CANCELADA = 4;
    
    /**
     * Return all data obtained with search 
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function listResquestStatus( $filters )
    {
        $sql = 'SELECT A.requeststatusid,
                       A.description  
                  FROM ptcrequeststatus A ';

        $where = '';

        if ( strlen( $filters->requestStatusId ) > 0 )
        {
            $where .= ' AND A.requeststatusid = ? ';
            $args[] = $filters->requestStatusId;
        }

        if ( strlen( $filters->description ) > 0 )
        {
            $where .= ' AND A.description iLike ?';
            $args[] = $filters->description.'%';
        }

        unset($result);

        if ( strlen( $where ) > 0 )
        {
            $sql .= ' WHERE ' . substr($where, 4) . ' ORDER By A.description';

            $result = $this->getDatabase()->query(SAGU::prepare($sql, $args));
        }
        else 
        {
            $result = $this->getDatabase()->query(SAGU::prepare($sql, $args));
        }

        return $result;
    }
	
    /**
     * Return type status obtained with parameter 
     *
     * @param $statusId (value): Search value status
     *
     * @return (string): value containing the search results
     **/
    public function getStatusDescription( $statusId )
    {
        $sql = 'SELECT description
                  FROM ptcrequeststatus 
                 WHERE requestStatusId = ? ';

        $args[] = $statusId;

        $result = $this->getDatabase()->query(SAGU::prepare($sql, $args));

        return $result[0][0];
    }
}
?>
