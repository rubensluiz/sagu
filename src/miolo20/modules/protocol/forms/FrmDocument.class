<?php
/**
 * <--- Copyright 2011-2011 de Facimed - Faculdade de Ciências Biométricas de Cacoal.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Employee form
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Equipe Solis [sagu2@solis.coop.br]
 *
 * @since
 * Class created on 22/03/2011
 *
 **/
$MIOLO = MIOLO::getInstance();
$MIOLO->page->addScript('scanConnection.js', 'protocol');

class FrmDocument extends FrmRequestFather
{

    /**
     * Class constructor
     **/
    public function __construct($steps = null)
    {
        $module = 'protocol';

        parent::__construct(_M('Documentos e encaminhamento', $module), $steps, __CLASS__);

        $this->toolbar->disableButton(MToolBar::BUTTON_SAVE);
        
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = SAGU::getFileModule(__FILE__);
        $action = MIOLO::getCurrentAction();
        $function = MIOLO::_REQUEST('function');
                
        $formData1 = $this->getStepDataByForm('FrmRequest');

        $fields = $validators = array();

        $fields[] = new MDiv('divScanResponse');
        
        $link = $MIOLO->getActionURL('protocol', 'html:files:downloadAplicacaoScanner.html');
        
        $fields[] = $noteDiv = new MDiv('divNota', '<spam style="color: red; font-weight: bold; text-align: center;"><p style=" margin-top: -5px;">' . _M('Nota: para utilizar o recurso de integração com seu dispositivo scanner é necessário ter a aplicação ScanFromWeb rodando em seu sistema.', $module) . '</p>'
                           . '<p><a href="'. $link . '" target="_blank">'. _M('Clique aqui') . '</a> '. _M('para instruções e uma lista de downloads disponíveis.') . '</p></spam><br/>');
        
        try
        {
            $busRequiredDocument = new BusinessProtocolBusRequiredDocument();

            $requiredDocs = $busRequiredDocument->listRequiredDocument($formData1->subjectId);
            
            if ( count($requiredDocs) > 0 )
            {
                foreach ( $requiredDocs as $reqDoc )
                {
                    list ( $requiredDocumentId,
                           $description ) = $reqDoc;

                    $label = new MText('label' . $requiredDocumentId, ucfirst(strtolower($description)) . ':');
                    $label->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
                    $label->setClass('m-caption m-caption-required');
                    $txtField = new MTextField('description' . $requiredDocumentId, null, null, SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
                    $fileField = new MFileField('file' . $requiredDocumentId);
                    $scanButton = new MDiv('', new MButton('scanbtfileReq' . $requiredDocumentId, _M('Escanear', $module), SForm::getAjaxAction('startScanMenu', 'divScanResponse', false, array('uploadFileField' => 'file' . $requiredDocumentId), true, false), null));
                    $isScanned = new MHiddenField('scannedDocumentfile' . $requiredDocumentId);
                    
                    $fields[] = new MHContainer('hct' . $requiredDocumentId, array($label, $txtField, $fileField, $scanButton, $isScanned));
                    $validators[] = new MRequiredValidator('description' . $requiredDocumentId, ucfirst(strtolower($description)));
                }
            }
        }
        catch (Exception $e)
        {
            $this->addError($e->getMessage());
        }

        if ( is_numeric(SAGU::getParameter($module, 'ATTACHED_DOCUMENTS_NUMBER')) && SAGU::getParameter($module, 'ATTACHED_DOCUMENTS_NUMBER') > 0)
        {
            for ( $i=1; $i <= SAGU::getParameter($module, 'ATTACHED_DOCUMENTS_NUMBER'); $i++ )
            {
                $label = new MText('attlabel' . $i, _M('Documento anexado') . ' ' . $i .':');
                $label->setWidth(SAGU::getParameter('BASIC', 'FIELD_CONTAINER_SIZE'));
                $txtField = new MTextField('attdescription' . $i, null, null, SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
                $fileField = new MFileField('attfile' . $i);
                $scanButton = new MDiv('', new MButton('scanbtfile' . $i, _M('Escanear', $module), SForm::getAjaxAction('startScanMenu', 'divScanResponse', false, array('uploadFileField' => 'attfile' . $i), true, false), null));
                $isScanned = new MHiddenField('scannedDocumentattfile' . $i);
                $fields[] = new MHContainer('hctAtt' . $i, array($label, $txtField, $fileField, $scanButton, $isScanned));
            }
        }

        $fields[] = new MHiddenField('currentLevel', 1);
        $fields[] = new MHiddenField('currentSubjectId', $formData1->subjectId);

        try
        {
            $busSubjectSector = new BusinessProtocolBusSubjectSector();
            $sectorsList = $busSubjectSector->getSubjectSectorByLevel($formData1->subjectId, 1);

            if ( count($sectorsList) > 1 )
            {
                $fields[] = new MSelection('currentSectorId', $this->getFormValue('currentSectorId'), _M('Encaminhar para', $module), $sectorsList);
                $validators[] = new MRequiredValidator('currentSectorId');
            }
            elseif ( count($sectorsList) == 1 )
            {
                $fields[] = new MHiddenField('currentSectorId', $sectorsList[0][0]);
                $fields[] = $currentSector = new MTextField('currentSectorName', $sectorsList[0][1], _M('Encaminhar para'), SAGU::getParameter('BASIC', 'FIELD_DESCRIPTION_SIZE'));
                $currentSector->setReadOnly(true);
            }
            else
            {
                throw new Exception(_M('Nenhum encaminhamento cadastrado para o assunto informado.', $module));
            }
        }
        catch (Exception $e)
        {
            $this->addError($e->getMessage());
        }

        $fields[] = new MSeparator();
        $this->setFields($fields);
        $this->setValidators($validators);
    }
    
    public function startScanMenu($args)
    {
        $MIOLO = MIOLO::getInstance();
                
        $module = SAGU::getFileModule(__FILE__);
                
        $fields = $mainFields = $auxFields = array();
        
        $auxFields[] = new MText('labelScanDesc', _M('Status da conexão com a aplicação: ', $module));
        $auxFields[] = new MText('labelScanStatus', _M('Desconectado', $module));
        
        $fields[] = $stateDiv = new MDiv('divScanConnectionSt', $auxFields);        
        $fields[] = new MDiv('btnScan', '<p>' . _M('Escanear', $module) . '</p>');
        $fields[] = new MDiv('btnConfirmScan', '<p>' . _M('Confirmar', $module) . '</p>');
        
        $mainFields[] = $divImgReceiver = new MDiv('divImgReceiver', '<img id="scannedImg"/>');
                
        $divImgReceiver->addStyle('width', '265px');
        $divImgReceiver->addStyle('height', '375px');
        
        $stateDiv->addStyle('width','175px');
        
        $topFields = new MHContainer('hcScanPopup', $fields);
        $mainFields = new MVContainer('vcScanPopup', $mainFields);
        
        MPopup::show('popupScan', array($topFields, $mainFields), _M('Escanear documento', $module));
                
        $MIOLO->page->addAJAXJsCode("
            var interval = setInterval(function() {
                var divImgReceiver = document.getElementById('divImgReceiver');
                
                if(divImgReceiver !== null)
                {
                    clearInterval(interval);
                    
                    // PERSONALIZA O ONCLIK DO BOTÃO DE FECHAR DO POPUP
                    document.getElementById('mPopupClose').onclick = function()
                    {
                        mpopup.remove();
                        ScanConnection.close();
                        
                    }
                    
                    var btnScan = document.getElementById('btnScan');
                    btnScan.className = 'm-button';
                    btnScan.style.visibility = 'hidden';
                    btnScan.style.marginLeft = '-10px';
                    
                    btnScan.onclick = function()
                    {
                        ScanConnection.scan();

                    }

                    btnConfirmScan = document.getElementById('btnConfirmScan');
                    btnConfirmScan.className = 'm-button';
                    btnConfirmScan.style.visibility = 'hidden';
                    btnConfirmScan.style.marginLeft = '-10px';
                    
                    btnConfirmScan.onclick = function()
                    {
                        saguDoAjax('confirmImgScan','divScanResponse',false,'&uploadFileField=' + '{$args->uploadFileField}' + '&imgData=' + ScanConnection.currentImg);
                        ScanConnection.close();
                        document.getElementById('{$args->uploadFileField}').disabled = true;

                    }

                    divImgReceiver.style.backgroundColor = '#c3c3c3';
                    divImgReceiver.style.border = '1px solid black';
                    divImgReceiver.style.margin = '-15px auto -5px auto';
                                        
                    var divScanConSt = document.getElementById('divScanConnectionSt');
                    divScanConSt.style.position = 'absolute';
                    divScanConSt.style.top = '35px';
                    divScanConSt.style.right = '15px';
                    
                    var labelScanDesc = document.getElementById('labelScanDesc');
                    labelScanDesc.style.textAlign = 'center';
                    
                    var labelScanStatus = document.getElementById('labelScanStatus');
                    labelScanStatus.style.backgroundColor = '#f77';
                    labelScanStatus.style.padding = '2px';
                    labelScanStatus.style.borderRadius = '10px';
                    labelScanStatus.style.textAlign = 'center';
                    
                    ScanConnection.initElements(btnScan, btnConfirmScan, labelScanStatus, document.getElementById('scannedImg'));
                    ScanConnection.connect();
                    
                }

            }, 500);
                        
        ");
        
        return array();
        
    }
    
    public function confirmImgScan($args)
    {
        $MIOLO = MIOLO::getInstance();
        
        // Pega o base64 da imagem recém tirada.
        $base64 = $args->imgData;
        
        // Id do operador.
        $loginId = $MIOLO->getLogin()->id;

        // Decode no base64 da imagem.
        $imgData = base64_decode(str_replace(' ','+', $base64));

        $fileName = $loginId . '_scannedimage_document_' . $args->uploadFileField . '.jpg';
        $filePath = $MIOLO->getConf("home.modules") . '/protocol/html/tmp/';
                
        if (!is_dir($filePath)) { // Se não existir a tmp/
            mkdir($filePath, 0777, true);

        }
        
        $targetPath = $filePath . $fileName;
        
        if(file_put_contents($targetPath, $imgData))
        {
            $MIOLO->page->addAJAXJsCode("
                document.getElementById('scannedDocument{$args->uploadFileField}').value = 't';

            ");
                
        }
        
        return array();
        
    }
    
}
?>