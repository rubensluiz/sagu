<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This file handles the connection for services module
 *
 * @author Samuel Koch [Samuel Koch@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Equipe Solis [sagu2@solis.coop.br]
 * 
 * @since
 * Class created on 07/05/2009
 *
 **/

/**
 * Class to manipulate the basCenter table
 **/
class BusinessServicesBusPersonalData extends sBusiness
{
    /**
     * Return a specific record from the database
     *
     * @param $cityId (integer): Primary key of the record to be retrieved
     *
     * @return (object): Return an object of the type handled by the class
     *
     **/
    public function getUser($login)
    {
        $sql = 'SELECT login,
                       m_password
                  FROM miolo_user
                 WHERE login = \''.$login.'\'';
        $db     = $this->getDatabase();
        $result = $db->query($sql);

        list ( $user->logins,
               $user->passwords ) = $result[0];

        return $user; 
    }

    /**
     * Update data from a specific record
     *
     * @param $data (object): Data which will replace the old record data
     *
     * @return (boolean): True if succeed, otherwise False
     *
     **/
    public function updateUser($data)
    {
        $extra = '';
       
        if ( strlen($data->passwords) > 0 )
        {
            $extra = ',
                      m_password = MD5(\''.$data->passwords.'\')';
        }
       
        $sql = 'UPDATE miolo_user   
                   SET login      = \''.$data->logins.'\'
                       ' . $extra . '
                 WHERE login  = \''.$data->logins.'\'';
              
        $db   = $this->getDatabase();
        $result = $db->execute($sql);

        return $result;
    }
}
?>
