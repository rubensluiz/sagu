<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This class Business Admin Module
 *
 * @author Leovan Tavares da Silva [leovan] [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/06/2006
 *
 **/
 
class BusinessAdminModule extends sBusiness //implements IModule
{
    private $MIOLO, $MSQL;
    var $idModule;
    var $name;
    var $description;

    public function __construct($data = NULL)
    {
        parent::__construct('admin',$data);

        $this->MIOLO = MIOLO::getInstance();
        $this->setdata(null);
        $columns = '*';
        $tables  = 'miolo_module';

        $this->MSQL = new MSQL( $columns, $tables, '', '' );
    }

    public function setData($data)
    {
        $this->idModule    = $data->idModule;
        $this->name        = $data->name;
        $this->description = $data->description;
    }

    public function getName()
    {
        return $this->name;
    }

    public function getId()
    {
        return $this->idModule;
    }

    public function save()
    {
        parent::save();
    }

    public function delete()
    {
        parent::delete();
    }

    public function getById($id)
    {
        $this->idModule = $id;
        $this->retrieve();
        return $this;
    }

    public function listRange($range = NULL)
    {
        $criteria =  $this->getCriteria();
        $criteria->setRange($range);
        return $criteria->retrieveAsQuery();
    }

    public function listById($id)
    {
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('idModule','LIKE',"'{$id}%'");
        //$criteria->addOrderAttribute('name');
        return $criteria->retrieveAsQuery();
    }


    public function listAll()
    {
        $criteria =  $this->getCriteria();
        return $criteria->retrieveAsQuery();
    }

    public function insert()
    {
        $this->MSQL->clear();
        $columns = 'idModule, description, name';
        $this->MSQL->setColumns($columns);
        $this->MSQL->setTables('miolo_module');

        $sql = $this->MSQL->insert(array($this->idModule, $this->name, $this->description));
        //echo $sql;

        return $this->getDatabase()->execute($sql);
    }

}
?>
