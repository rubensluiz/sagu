<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This class Business Admin Grupo Acesso
 *
 * @author Leovan Tavares da Silva [leovan] [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/06/2006
 *
 **/
 
class BusinessAdminGrupoAcesso extends sBusiness
{
    var $idgrupo;
    var $grupo;
    var $transacoes;

    public function BusinessAdminGrupoAcesso($data=null)
    {
       $this->Business('admin',$data);
    }

    public function SetData($data)
    {
        $this->idgrupo = $data->idgrupo;
        $this->grupo = strtoupper($data->grupo);
        $this->transacoes = $data->transacoes;
    }

    public function GetById($idgrupo)
    {
        $sql = new sql('idgrupo, grupo', 'cm_grupoacesso', 'idgrupo = ?');
        $query = $this->objQuery($sql->Select($idgrupo));
        if ( $query )
        {
            $this->idgrupo = $query->fields('idgrupo');
            $this->grupo = $query->fields('grupo');

            $query = $this->ListAcessoByIdGrupo($idgrupo);
            if ( $query )
            {
               $this->transacoes = $query->result;
            }
        }
        return $this;
    }

    public function Insert()
    {   global $MIOLO;
        $this->idgrupo = $this->_db->GetNewId('seq_cm_grupoacesso');
        $sql = new sql('IdGrupo, Grupo','cm_grupoacesso');
        $args = array(
            $this->idgrupo,
            strtoupper($this->grupo)
        );
        $cmd[] = $sql->Insert($args);
        $sql->sql('idgrupo, idtrans, direito','cm_acesso');
        foreach($this->transacoes as $trans)
        {
           $cmd[] = $sql->Insert(array($this->idgrupo, $trans[0], $trans[1]));
        }
        $ok = $this->ExecuteBatch($cmd);
        if ($ok) {$this->Log(OP_INS,"idgrupo = $this->idgrupo");} 
        return $ok;
    }

    public function Update()
    {
        $sql = new sql('Grupo','cm_grupoacesso','idgrupo = ?');
        $args = array(
            strtoupper($this->grupo),
            $this->idgrupo
        );
        $cmd[] = $sql->Update($args);
        $sql->sql('','cm_acesso','idgrupo=?');
        $cmd[] = $sql->Delete($this->idgrupo);
        $sql->sql('idgrupo, idtrans, direito','cm_acesso');
        foreach($this->transacoes as $trans)
        {
           $cmd[] = $sql->Insert(array($this->idgrupo, $trans[0], $trans[1]));
        }
        $ok = $this->ExecuteBatch($cmd);
        if ($ok) {$this->Log(OP_UPD,"idgrupo = $this->idgrupo");} 
        return $ok;
    }
    
    public function Delete()
    {
        $sql = new sql('','cm_grupoacesso', 'idgrupo = ?');
        $ok = $this->Execute( $sql->Delete($this->idgrupo) );
        if ($ok) {$this->Log(OP_DEL,"idgrupo = $this->idgrupo");} 
        return $ok;
    }

    public function ListRange($range=NULL)
    {
        $sql = new sql('idgrupo, grupo', 'cm_grupoacesso', '','grupo');
        $sql->SetRange($range); 
        $query = $this->Query($sql);
        return $query;
    }

    public function ListAll()
    {
        return $this->ListRange();
    }

    public function ListUsuariosByIdGrupo($idgrupo)
    {
        $sql = new sql('g.idgrupo, g.grupo, u.login','','(g.grupo = ?)','u.login');
        $sql->SetJoin('cm_grupoacesso g','cm_grpusuario gu','(g.idgrupo = gu.idgrupo)');
        $sql->SetJoin('cm_grpusuario gu','cm_usuario u','(gu.idusuario = u.idusuario)'); 
        $query = $this->Query($sql, $idgrupo);
        return $query;
    }

    public function ListAcessoByIdGrupo($idgrupo)
    {
        $sql = new sql('a.idtrans, a.direito','', '(idgrupo = ?)','t.transacao');
        $sql->SetJoin('cm_acesso a','cm_transacao t','(a.idtrans=t.idtrans)');
        $query = $this->Query($sql,$idgrupo);
        return $query;
    }

    public function CountWhere($where='')
    {
        $sql = new sql('*','cm_grupoacesso',$where);
        return $this->_db->Count($sql->Select());
    }
}

?>
