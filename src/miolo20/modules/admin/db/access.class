<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This class Business Admin Access
 *
 * @author Leovan Tavares da Silva [leovan] [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/06/2006
 *
 **/
 
class BusinessAdminAccess extends sBusiness implements IAccess
{
    public $idTransaction;
    public $idGroup;
    public $rights;

    public $group;  // a Group object
    public $transaction; // a Transaction object

    public $cacheAccess;
    
    public function _construct($data = NULL)
    {
        parent::_construct('admin', $data);
    }
    
    public function getArrayGroups()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        $db = $this->getDatabase( $module );
        
        $sql = "select idgroup, m_group from miolo_group";
        
        $result = $db->query( $sql )->result;
        return $result;
    }
    
    public function insertAccess($idgroup, $idtransaction, $rights)
    {
        $MIOLO = MIOLO::getInstance();
        
        $db = $this->getDatabase();

        $sql= 'INSERT INTO miolo_access (
                           idgroup,
                           idtransaction,
                           rights )
                   VALUES ('. $idgroup . ', ' . $idtransaction . ', ' . $rights . ' )';

        $result = $db->execute($sql);
        
        return $result;
    }
    
    public function deleteAccess($idgroup)
    {
        $MIOLO = MIOLO::getInstance();
        
        $db = $this->getDatabase();

        $sql= 'DELETE FROM miolo_access
                      WHERE idgroup = ' . $idgroup;

        $result = $db->execute($sql);

        return $result;
    }
    
    public function getAccess($idgroup, $idtransaction, $rights)
    {
        $MIOLO = MIOLO::getInstance();
        
        $idgroup = strlen($idgroup) > 0 ? $idgroup : '0';

        if (!(count($this->cacheAccess) > 0))
        {
            $db = $this->getDatabase();
            $sql = 'SELECT idgroup, idtransaction, rights FROM miolo_access';
            $result = $db->query($sql);
            $this->cacheAccess = array();
            if (count($result) > 0)
            {
                foreach ($result as $r)
                {
                    list($_group, $_transaction, $_rights) = $r;
                    $this->cacheAccess[$_group][$_transaction][$_rights] = 1;
                }
            }
        }

        return isset($this->cacheAccess[$idgroup][$idtransaction][$rights]);
    }
    
    public function hasChildrenSelected($idgroup, $children)
    {
        $MIOLO = MIOLO::getInstance();
        
        $db = $this->getDatabase();
        
        $sql= 'SELECT count(idtransaction)
                 FROM miolo_access
                WHERE idtransaction = ' . $children . '
                  AND idgroup = ' . $idgroup . '';

        $result = $db->query($sql);
        
        if ( $result[0][0] > 0 )
        {
            return true;
        }
        else 
        {
            return false;
        }
    }
}
?>
