<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 * Class responsible for storing the functions of login.
 *
 * @author Samuel Koch [samuel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 *
 * @since
 * Class created on 09/07/2009
 *
 **/

/**
 * Form to manipulate a login
 **/

class webServicesAdmin
{
    private $auth;
    private $MIOLO;

    public function __construct()
    {
        global $MIOLO;

        chdir('../');

        $_SERVER['REQUEST_URI'] = 'module=admin';

        require_once 'classes/miolo.class';
        require_once 'classes/support.inc';

        $this->MIOLO = MIOLO::getInstance();

        $this->MIOLO->conf = new MConfigLoader();
        $this->MIOLO->conf->LoadConf();

        $this->MIOLO->Init();
        $this->MIOLO->Uses('classes/sagu.class', 'basic');
    }

    /**
     * Make the authentication
     *
     * @param $login
     * @param $password
     *
     * @return $login or false
     */
    public function wsAuthenticated($login, $password)
    {
        $busAdmin = new BusinessAdminUser();

        if ($this->MIOLO->getConf('options.authmd5'))
        {
            $challenge = uniqid(rand());
            $str = $login . ':' . md5($password) . ':' . $challenge;
            $this->MIOLO->auth->authenticate($login, $challenge, md5($str));
        }
        else
        {
            $ok = $this->MIOLO->auth->authenticate($login, $password);
        }

        $iduser = $this->MIOLO->getLogin()->idkey;

        if ( isset($iduser) )
        {
            return $login;
        }
        else
        {
            return null;
        }
    }

    /**
    * Efetua logout no Sagu
    */
    public function wsLogout()
    {
        $this->MIOLO->getAuth()->logout();
    }
}
?>
