<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 * 
 * Este arquivo é parte do programa Sagu.
 * 
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 * 
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 * 
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 * 
 *
 * This class form Rem Module
 *
 * @author Leovan Tavares da Silva [leovan] [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/06/2006
 *
 **/
 
class frmRemModule extends MForm
{
    var $home;
    var $objModule;

    function __construct()
    {   global $MIOLO, $module, $action;

        $this->home      = $MIOLO->getActionURL($module, $action);
        $this->objModule = new BusinessAdminModule();

        parent::__construct( _M('Remover modulos','admin') );
        $this->setWidth('100%');
        $this->setIcon( $MIOLO->getUI()->getImage('admin', 'modules-16x16.png') );
        $url = $MIOLO->getActionURL($module, 'main:rem_module');
        $this->page->setAction($url);
        $this->defaultButton = false;
        $this->setClose( $MIOLO->getActionURL('admin', 'main') );
        $this->eventHandler();
    }

    function createFields()
    {  global $MIOLO;

        $db = SDatabase::getInstance();
        $sql = "select idModule from miolo_module";
        $modules = $db->query($sql);

        foreach ($modules as $m)
        {
            //le informacoes do modulo no xml module.inf
            $dom = new DomDocument();
            $dom->load($MIOLO->getConf('home.modules') . '/' . $m[0] .'/etc/module.inf');

            $modInfo[0]=$dom->getElementsByTagName('name')->item(0)->nodeValue;
            $modInfo[1]=$dom->getElementsByTagName('version')->item(0)->nodeValue;
            $modInfo[2]=$dom->getElementsByTagName('description')->item(0)->nodeValue;

            $fields[] = array ( $modInfo[0], $modInfo[1], $modInfo[2] );
        }

        $columns = array( new MGridColumn( _M('Modulo', 'admin'), 'left', true, '20%', true, null, false, true),
                          new MGridColumn( _M('Versão', 'admin'), 'left', true, '15%', true, null, false, true ),
                          new MGridColumn( _M('Descrição', 'admin'), 'left', true, '65%', true, null, false, true ),
                            );

        $grid = new MGrid($fields, $columns, $url,0);
        $grid->addActionIcon('del','close.png',$MIOLO->getActionURL($module,'main:modules:rem_modules:rem_module_options',null,array ('moduleToDelete'=>'%0%')));
        $grid->addActionIcon('view','information16.png',$MIOLO->getActionURL($module,'main:modules:rem_modules:view_information_modules',null,array ('moduleInfo'=>'%0%')));
        $this->addField($grid);
    }

}

?>
