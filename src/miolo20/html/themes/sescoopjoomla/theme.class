<?php
/**
 * <--- Copyright 2005-2010 de Solis - Cooperativa de Soluções Livres Ltda.
 *
 * Este arquivo é parte do programa Sagu.
 *
 * O Sagu é um software livre; você pode redistribuí-lo e/ou modificá-lo
 * dentro dos termos da Licença Pública Geral GNU como publicada pela Fundação
 * do Software Livre (FSF); na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM
 * NENHUMA GARANTIA; sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO
 * ou APLICAÇÃO EM PARTICULAR. Veja a Licença Pública Geral GNU/GPL em
 * português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título
 * "LICENCA.txt", junto com este programa, se não, acesse o Portal do Software
 * Público Brasileiro no endereço www.softwarepublico.gov.br ou escreva para a
 * Fundação do Software Livre (FSF) Inc., 51 Franklin St, Fifth Floor, Boston,
 * MA 02110-1301, USA --->
 *
 *
 * Class theme
 *
 * @author Daniel Hartmann [daniel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Arthur Lehdermann [arthur@solis.coop.br]
 * Samuel Koch [samuel@solis.coop.br]
 *
 * @since
 * Class created on 25/10/2011
 */
class Theme extends MTheme
{
    public function __construct()
    {
        parent::__construct('sescoopjoomla');
    }

    public function Init()
    {
        $ui = $this->manager->GetUI();
        $logo = '
        <table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody>
        <tr>
          <td bgcolor="#ffffff" background="' . $ui->GetImageTheme($this->id, 'banner_sagu2_inicio.png') . '" width="100%"><center><a href="index.php?module=sagu2&action=main"><img alt="Sagu 2" src="' . $ui->GetImageTheme($this->id, 'banner_sagu2_principal.png') . '" border="0"></a></center>
          </td>
        </tr>
        </table>
           ';

        $top = new MDiv('', $logo, 'logo');
        $top->width = "100%";

        $this->SetElement('top', $top, 'm-container-top');
        // navigation
        $this->SetElement('navigation', new MNavigationBar(), 'm-container-topmenu');
    }

    public function Generate()
    {
        $method = "Generate" . $this->layout;
        return $this->$method();
    }

    public function GenerateDefault()
    {
        $html = '<div id="divSaguMessages" style="display: none;">';
        $html .= ' <div id="divSaguMessagesContent"></div>';
        $html .= '</div>';
        $html .= '<script language="javascript">
                  function hideLoadingDiv()
                  {
                      var bg = document.getElementById(\'m-loading-message-bg\');
                      var fg = document.getElementById(\'m-loading-message\');

                      if ( bg != null )
                      {
                          bg.style.display = \'none\';
                      }

                      if ( fg != null )
                      {
                          fg.style.display = \'none\';
                      }
                  }
                  </script>
                  <div id="m-loading-message-bg" onclick="javascript:hideLoadingDiv()"></div>
                  <div id="m-loading-message" onclick="javascript:hideLoadingDiv()">
                   <div id="m-loading-message-image">
                    <div id="m-loading-message-text">' . _M('Carregando', 'sagu2') . '...</div>
                   </div>
                  </div>';

        $this->SetElementId('toolbar', 'm-toolbar');
        $html .= $this->GenerateElement('toolbar');

        $html .= '<div id="extContent">';
        $html .= $this->GenerateElement('content');
        $html .= '</div>';

        $html .= '<div id="extBottom" style="visibility: visible; position: fixed; bottom:0; width: 100%">';
        $html .= $this->GenerateElement('bottom');
        $html .= '</div>';

        $html .= '
<script type="text/javascript">
function adjustContentHeight()
{
var height = document.documentElement.clientHeight

var elems = new Array("m-container-top", "div-dhtml-menu2", "m-container-module2", "m-toolbar", "m-container-bottom");

for ( var i=0; i<elems.length; i++ )
{
    var e = document.getElementById(elems[i]);
    if ( e != null )
    {
        height -= e.offsetHeight;
    }
}
height -= 30; // ajuste - margem de segurança

document.getElementById("extContent").style.height = height + "px";
}
document.getElementsByTagName("body")[0].setAttribute("onresize", "adjustContentHeight()");
adjustContentHeight();

// FIXME: nao funciona setar a largura da toolbar pelos metodos do miolo
var toolbar = document.getElementById("m_toolBar");
if ( toolbar != null )
{
toolbar.style.width = "100%";
}
</script>
';

        return $this->painter->div(new Div('m-container', $html));
    }

    public function GenerateLookup()
    {
        $html = $this->GenerateElement('content');
        $div = new Div('', $html, 'm-container');
        $div->AddStyle('width', '100%');
        return $this->painter->GenerateToString($div);
    }

    public function GenerateHtmlArea()
    {
        // content
        $this->SetElementId('content', 'm-htmlarea');
        $html .= $this->GenerateElement('content');
        return $this->painter->div(new Div('m-container', $html));
    }

    public function GeneratePopup()
    {
        $html = $this->GenerateElement('content');
        $div = new Div('', $html, 'm-container');
        $div->AddStyle('width', '100%');
        return $this->painter->GenerateToString($div);
    }

    public function GeneratePrint()
    {
        $this->GenerateDefault();
    }
}
?>
