======================================
  DESENVOLVIMENTO - CODING STANDARDS
======================================

- Tags de PHP:
==============
Prefira utilizar <? .... ?>
ao invÃ©s de <?php ...... ?>
NÃ£o utilize <script language="PHP" ... ?>


- IdentaÃ§Ã£o:
============
IdentaÃ§Ã£o padrÃ£o utilizando 4 caracteres.
Configurar o editor para substituir o caracter TAB por espaÃ§os.

Para configurar o vim/vi:
  set expandtab
  set shiftwidth=4
  set tabstop=4

JEdit:
  Global Options->Editing
  Tab width: 4
  Ident width: 4
  Soft tabs


- Nome de Constantes:
=====================
O nome de constantes devem ser identificados com todas as letras maiÃºsculas.
Utilize _ para separar palavras.

Exemplo:
  $MIOLO->....
  $DB_ACAO (onde DB identifica a classe)


- Nome de VariÃ¡ves:
===================
O nome de variÃ¡veis devem ser identificados com letra minÃºscula.
Utilize _ para separar palavras.

Exemplo:
  $var1       = "Valor";
  $variavel_1 = "Valor1";


- Estruturas de Controle:
=========================
Iniciar o bloco de comandos com '{' na linha apÃ³s o teste condicional.
Utilizar chaves mesmo quando existir apenas uma instruÃ§Ã£o.
No caso de teste composto com || e/ou && ... utilizar parÃªnteses para
separar os blocos e outro para delimitar todo o conjunto.
Deixar um espaÃ§o entre o comando de condicional e o bloco de teste.

if ( (condiÃ§Ã£o1) || (condiÃ§Ã£o2) )
{
    aÃ§Ã£o1;
}
elseif ( (condiÃ§Ã£o3) && (condiÃ§Ã£o4) )
{
    aÃ§Ã£o2;
    aÃ§Ã£o3;
}
else
{
    aÃ§Ã£o4;
}


switch ( condiÃ§Ã£o )
{
    case 1:
        aÃ§Ã£o1;
        break;

    case 2:
        aÃ§Ã£o2;
        break;

    default:
        aÃ§Ã£o3;
        break;
}


- Chamada de FunÃ§Ãµes:
=====================
Uma chamada:
$var = funcao($param1, $param2, $param3);

Bloco de chamada de funÃ§Ãµes (observe o alinhamento):
$var1      = foo($bar);
$variavel2 = foo($rin);


- DefiniÃ§Ã£o de FunÃ§Ãµes:
=======================
Iniciar o bloco de cÃ³digo (chaves) na segunda linha.
O nome da funÃ§Ã£o deve iniciar com letra maiÃºscula.

function UmaFunction($arg1, $arg2 = '')
{
    if ( condiÃ§Ã£o )
    {
        cÃ³digo;
    }

    return $val;
}


function connect(&$dsn, $persistent = false)
{
    if ( is_array($dsn) )
    {
        $dsninfo = &$dsn;
    }
    else
    {
        $dsninfo = DB::ParseDSN($dsn);
    }

    if ( (! $dsninfo) || (! $dsninfo['phptype']) )
    {
        return $this->RaiseError();
    }

    return true;
}


- ComposiÃ§Ã£o de variÃ¡vel sql
============================
As clÃ¡usulas select, from, where, and, group, ... ficam alinhadas
Ã  direita, e, conseqÃ¼entemente, as identificaÃ§Ãµes de arquivos, campos,...
ficam alinhados Ã  esquerda.
As condiÃ§Ãµes da clÃ¡usula where tambÃ©m devem ter os '=' alinhados de forma
que as condiÃ§Ãµes fiquema alinhados Ã  esquerda

    $sql = " select distinct C.campo1, C.campo2, c.campo3" .
           "        d.campo1, " .
           "        count(*) " .
           "   from tabela1 A, " .
           "        tabela2 B, " .
           "        tabela3 C, " .
           "        tabela4 D " .
           "  where (A.campo1 = $var1) " .
           "    and (B.cmp3   = '$var2') " .
           "    and (A.campo2 = C.campo1) " .
           "    and (A.cmp4   = D.campo1) " .
           "    and (D.cmp3   = B.cmp1) " .
           "  group by C.campo1, " .
           "           C.cmp2 " ;


- ComentÃ¡rios:
==============
// para uma linha


//
// para uma linha
//


//
// esta forma Ã©
// similar Ã  anterior
//


/*
 * outra forma
 * para mais de uma linha
 *
 */


- InclusÃ£o de Arquivos:
=======================
Utilize include_once() e require_once() ao invÃ©s de include() e require()


- CabeÃ§alho dos Arquivos:
=========================

// +--------------------------------------------------------------------+
// | Projeto - Projeto Development Team - UNIVATES Centro UniversitÃ¡rio |
// +--------------------------------------------------------------------+
// | CopyLeft (L) 2002 UNIVATES, Lajeado/RS - Brasil                    |
// +--------------------------------------------------------------------+
// | Licensed under GPL: see COPYING.TXT or FSF at www.fsf.org for      |
// |                     further details                                |
// |                                                                    |
// | Site: http://projeto.codigolivre.org.br                            |
// | E-mail: autor@univates.br                                          |
// |                                                                    |
// +--------------------------------------------------------------------+
// | Abstract: Objetivo deste arquivo...                                |
// |                                                                    |
// | Created: aaaa/mm/dd  Nome do autor1                                |
// |                     Nome do autor2                                 |
// |                                                                    |
// | Id: $Id: CodingStandards.txt,v 1.2 2005/04/03 15:51:42 ematos Exp $ 
// +--------------------------------------------------------------------+


Ambiente do MIOLO
=================
Os programas sÃ£o criados obedecendo Ã  seguinte estrutura de diretÃ³rios:

|
+-modules
     |
     +-Programa
          |
          +-handlers (manipuladores)
          |
          +-db (classes Base de Dados)
          |
          +-forms (classes formulÃ¡rios)
          |
          +-sql (diretÃ³rio que contÃ©m o sql de criaÃ§Ã£o/alteraÃ§Ã£o das bases)
	  |
	  +-doc (documentaÃ§Ã£o)
          |
          +-etc (demais arquivos)



- CodificaÃ§Ã£o dos Arquivos:
===========================
O arquivo principal dos sistemas deve ser main.inc, que fica localizado no
diretÃ³rio handlers do mÃ³dulo.
