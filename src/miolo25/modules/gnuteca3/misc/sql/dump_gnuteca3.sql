--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

--
-- Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: -; Owner: postgres
--

CREATE PROCEDURAL LANGUAGE plpgsql;


ALTER PROCEDURAL LANGUAGE plpgsql OWNER TO postgres;

SET search_path = public, pg_catalog;

--
-- Name: dblink_pkey_results; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE dblink_pkey_results AS (
	"position" integer,
	colname text
);


ALTER TYPE public.dblink_pkey_results OWNER TO postgres;

--
-- Name: lo; Type: DOMAIN; Schema: public; Owner: postgres
--

CREATE DOMAIN lo AS oid;


ALTER DOMAIN public.lo OWNER TO postgres;

--
-- Name: type_bibliography_data; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE type_bibliography_data AS (
	controlnumber integer,
	fieldid character varying,
	subfieldid character varying,
	content character varying
);


ALTER TYPE public.type_bibliography_data OWNER TO postgres;

--
-- Name: type_multa; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE type_multa AS (
	personid bigint,
	loanid integer,
	begindate timestamp without time zone,
	value numeric(10,2),
	observation text,
	waspaid boolean,
	fineid integer,
	operator character varying,
	allowance boolean,
	allowancejustify text,
	enddate timestamp without time zone,
	returnoperator character varying,
	slipthrough boolean
);


ALTER TYPE public.type_multa OWNER TO postgres;

--
-- Name: type_multas_em_aberto; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE type_multas_em_aberto AS (
	codigodamulta integer,
	codigodoemprestimo integer,
	valor numeric(10,2),
	observacao text,
	datahora timestamp without time zone
);


ALTER TYPE public.type_multas_em_aberto OWNER TO postgres;

--
-- Name: type_obter_restricoes; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE type_obter_restricoes AS (
	tipo text,
	quantidade bigint
);


ALTER TYPE public.type_obter_restricoes OWNER TO postgres;

--
-- Name: type_suggestion_material; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE type_suggestion_material AS (
	idperson bigint,
	number integer
);


ALTER TYPE public.type_suggestion_material OWNER TO postgres;

--
-- Name: applychanges(text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION applychanges(p_changes text, p_changeid integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
BEGIN
    EXECUTE p_changes;

    RETURN TRUE;
    EXCEPTION WHEN OTHERS
    THEN
        UPDATE dbchanges set error = SQLERRM, applieddate = now() WHERE changeid = p_changeid;

        RETURN FALSE;
    END;

$$;


ALTER FUNCTION public.applychanges(p_changes text, p_changeid integer) OWNER TO postgres;

--
-- Name: bas_chk_domain(character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION bas_chk_domain(p_domain character varying, p_key character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_result boolean;
BEGIN

    --Se o valor do dominio for nulo permite inserir pois, em alguns casos, o campo da tabela em questão pode aceitar NULL.
    IF p_key IS NULL
    THEN
        RETURN TRUE;
    END IF;

    PERFORM * FROM basDomain LIMIT 1;
    IF NOT FOUND
    THEN
        RETURN TRUE; --Caso não haja nenhum dado na basDomain retorna como true. Isso é para resolver o bug do postgres que não ignora os check no dump
    END IF;

    SELECT INTO v_result count(*) > 0
        FROM basDomain
        WHERE domainId = p_domain
            AND key = p_key;

    RETURN v_result;

END;
$$;


ALTER FUNCTION public.bas_chk_domain(p_domain character varying, p_key character varying) OWNER TO postgres;

--
-- Name: compareyearperiod(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION compareyearperiod(searchcontent character varying, field1 character varying, field2 character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
    DECLARE

        auxF1 varchar;
        auxF2 varchar;
        f1 varchar;
        f2 varchar;

        BEGIN

            IF strpos(searchContent, '-') <= 0 THEN
                RETURN FALSE;
            END IF;

            RAISE NOTICE ' == SearchContent: %, field1: %, field2: %; ', searchContent, field1, field2;

            auxF1   := getSearchContentToYearCompare(split_part(searchContent, '-', 1), FALSE);
            auxF2   := getSearchContentToYearCompare(split_part(searchContent, '-', 2), FALSE);
            f1      := getSearchContentToYearCompare(field1, FALSE);
            f2      := getSearchContentToYearCompare(field2, FALSE);

            IF char_length(auxF1) = 0 THEN
                auxF1 = 0;
            END IF;

            IF char_length(auxF2) = 0 THEN
                auxF2 = date_part('year', now());
            END IF;

            RAISE NOTICE ' == (split 1 % >= field1 % ) AND ( split2 % <= field2 % )', auxF1, f1,  auxF2,  f2;

            RETURN ((auxF1::integer >= f1::integer) AND (auxF2::integer <= f2::integer));

        END;

$$;


ALTER FUNCTION public.compareyearperiod(searchcontent character varying, field1 character varying, field2 character varying) OWNER TO postgres;

--
-- Name: corrigeindicadores(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION corrigeindicadores() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
    DECLARE

        row_data RECORD;

        BEGIN

            FOR row_data IN (SELECT DISTINCT controlNumber, fieldid, indicator1, indicator2 FROM gtcmaterial
                            WHERE subfieldid = '#' AND (char_length(indicator1) > 0 OR char_length(indicator2) > 0) )
            LOOP
                UPDATE  gtcMaterial
                SET     indicator1      = row_data.indicator1,
                        indicator2      = row_data.indicator2
                WHERE   controlNumber   = row_data.controlNumber
                AND     fieldid         = row_data.fieldid;
            END LOOP;

            DELETE FROM gtcmaterial WHERE subfieldid = '#';

            RETURN TRUE;

        END;

$$;


ALTER FUNCTION public.corrigeindicadores() OWNER TO postgres;

--
-- Name: criatabela(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION criatabela() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
foiCriada INTEGER :=0;
tabela RECORD;
BEGIN

SELECT INTO tabela tablename FROM pg_tables where tablename='dbchanges' and schemaname = ANY (current_schemas(true));

IF tabela.tablename IS NULL
THEN
    CREATE TABLE dbChanges
        (changeId SERIAL,
         change TEXT NOT NULL,
         applied BOOLEAN NOT NULL DEFAULT 'f',
         applicationVersion INTEGER NOT NULL,
         orderchange integer,
         error text,
         applieddate TIMESTAMP);

foiCriada = 1;

END IF;
RETURN foiCriada;
END;
$$;


ALTER FUNCTION public.criatabela() OWNER TO postgres;

--
-- Name: dblink(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink(text, text) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_record';


ALTER FUNCTION public.dblink(text, text) OWNER TO postgres;

--
-- Name: dblink(text, text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink(text, text, boolean) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_record';


ALTER FUNCTION public.dblink(text, text, boolean) OWNER TO postgres;

--
-- Name: dblink(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink(text) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_record';


ALTER FUNCTION public.dblink(text) OWNER TO postgres;

--
-- Name: dblink(text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink(text, boolean) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_record';


ALTER FUNCTION public.dblink(text, boolean) OWNER TO postgres;

--
-- Name: dblink_build_sql_delete(text, int2vector, integer, text[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_build_sql_delete(text, int2vector, integer, text[]) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_build_sql_delete';


ALTER FUNCTION public.dblink_build_sql_delete(text, int2vector, integer, text[]) OWNER TO postgres;

--
-- Name: dblink_build_sql_insert(text, int2vector, integer, text[], text[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_build_sql_insert(text, int2vector, integer, text[], text[]) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_build_sql_insert';


ALTER FUNCTION public.dblink_build_sql_insert(text, int2vector, integer, text[], text[]) OWNER TO postgres;

--
-- Name: dblink_build_sql_update(text, int2vector, integer, text[], text[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_build_sql_update(text, int2vector, integer, text[], text[]) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_build_sql_update';


ALTER FUNCTION public.dblink_build_sql_update(text, int2vector, integer, text[], text[]) OWNER TO postgres;

--
-- Name: dblink_cancel_query(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_cancel_query(text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_cancel_query';


ALTER FUNCTION public.dblink_cancel_query(text) OWNER TO postgres;

--
-- Name: dblink_close(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_close(text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_close';


ALTER FUNCTION public.dblink_close(text) OWNER TO postgres;

--
-- Name: dblink_close(text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_close(text, boolean) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_close';


ALTER FUNCTION public.dblink_close(text, boolean) OWNER TO postgres;

--
-- Name: dblink_close(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_close(text, text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_close';


ALTER FUNCTION public.dblink_close(text, text) OWNER TO postgres;

--
-- Name: dblink_close(text, text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_close(text, text, boolean) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_close';


ALTER FUNCTION public.dblink_close(text, text, boolean) OWNER TO postgres;

--
-- Name: dblink_connect(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_connect(text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_connect';


ALTER FUNCTION public.dblink_connect(text) OWNER TO postgres;

--
-- Name: dblink_connect(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_connect(text, text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_connect';


ALTER FUNCTION public.dblink_connect(text, text) OWNER TO postgres;

--
-- Name: dblink_connect_u(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_connect_u(text) RETURNS text
    LANGUAGE c STRICT SECURITY DEFINER
    AS '$libdir/dblink', 'dblink_connect';


ALTER FUNCTION public.dblink_connect_u(text) OWNER TO postgres;

--
-- Name: dblink_connect_u(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_connect_u(text, text) RETURNS text
    LANGUAGE c STRICT SECURITY DEFINER
    AS '$libdir/dblink', 'dblink_connect';


ALTER FUNCTION public.dblink_connect_u(text, text) OWNER TO postgres;

--
-- Name: dblink_current_query(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_current_query() RETURNS text
    LANGUAGE c
    AS '$libdir/dblink', 'dblink_current_query';


ALTER FUNCTION public.dblink_current_query() OWNER TO postgres;

--
-- Name: dblink_disconnect(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_disconnect() RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_disconnect';


ALTER FUNCTION public.dblink_disconnect() OWNER TO postgres;

--
-- Name: dblink_disconnect(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_disconnect(text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_disconnect';


ALTER FUNCTION public.dblink_disconnect(text) OWNER TO postgres;

--
-- Name: dblink_error_message(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_error_message(text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_error_message';


ALTER FUNCTION public.dblink_error_message(text) OWNER TO postgres;

--
-- Name: dblink_exec(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_exec(text, text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_exec';


ALTER FUNCTION public.dblink_exec(text, text) OWNER TO postgres;

--
-- Name: dblink_exec(text, text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_exec(text, text, boolean) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_exec';


ALTER FUNCTION public.dblink_exec(text, text, boolean) OWNER TO postgres;

--
-- Name: dblink_exec(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_exec(text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_exec';


ALTER FUNCTION public.dblink_exec(text) OWNER TO postgres;

--
-- Name: dblink_exec(text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_exec(text, boolean) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_exec';


ALTER FUNCTION public.dblink_exec(text, boolean) OWNER TO postgres;

--
-- Name: dblink_fetch(text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_fetch(text, integer) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_fetch';


ALTER FUNCTION public.dblink_fetch(text, integer) OWNER TO postgres;

--
-- Name: dblink_fetch(text, integer, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_fetch(text, integer, boolean) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_fetch';


ALTER FUNCTION public.dblink_fetch(text, integer, boolean) OWNER TO postgres;

--
-- Name: dblink_fetch(text, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_fetch(text, text, integer) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_fetch';


ALTER FUNCTION public.dblink_fetch(text, text, integer) OWNER TO postgres;

--
-- Name: dblink_fetch(text, text, integer, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_fetch(text, text, integer, boolean) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_fetch';


ALTER FUNCTION public.dblink_fetch(text, text, integer, boolean) OWNER TO postgres;

--
-- Name: dblink_get_connections(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_get_connections() RETURNS text[]
    LANGUAGE c
    AS '$libdir/dblink', 'dblink_get_connections';


ALTER FUNCTION public.dblink_get_connections() OWNER TO postgres;

--
-- Name: dblink_get_pkey(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_get_pkey(text) RETURNS SETOF dblink_pkey_results
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_get_pkey';


ALTER FUNCTION public.dblink_get_pkey(text) OWNER TO postgres;

--
-- Name: dblink_get_result(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_get_result(text) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_get_result';


ALTER FUNCTION public.dblink_get_result(text) OWNER TO postgres;

--
-- Name: dblink_get_result(text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_get_result(text, boolean) RETURNS SETOF record
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_get_result';


ALTER FUNCTION public.dblink_get_result(text, boolean) OWNER TO postgres;

--
-- Name: dblink_is_busy(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_is_busy(text) RETURNS integer
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_is_busy';


ALTER FUNCTION public.dblink_is_busy(text) OWNER TO postgres;

--
-- Name: dblink_open(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_open(text, text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_open';


ALTER FUNCTION public.dblink_open(text, text) OWNER TO postgres;

--
-- Name: dblink_open(text, text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_open(text, text, boolean) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_open';


ALTER FUNCTION public.dblink_open(text, text, boolean) OWNER TO postgres;

--
-- Name: dblink_open(text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_open(text, text, text) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_open';


ALTER FUNCTION public.dblink_open(text, text, text) OWNER TO postgres;

--
-- Name: dblink_open(text, text, text, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_open(text, text, text, boolean) RETURNS text
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_open';


ALTER FUNCTION public.dblink_open(text, text, text, boolean) OWNER TO postgres;

--
-- Name: dblink_send_query(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dblink_send_query(text, text) RETURNS integer
    LANGUAGE c STRICT
    AS '$libdir/dblink', 'dblink_send_query';


ALTER FUNCTION public.dblink_send_query(text, text) OWNER TO postgres;

--
-- Name: drop_function_if_exists(character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION drop_function_if_exists(name character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
            DECLARE
            v_sql varchar;
            BEGIN
                FOR v_sql IN SELECT 'DROP FUNCTION '|| proname || '(' ||
                    (
                    SELECT array_to_string( array_agg(coalesce(varname,'') || ' ' ||
                                        ( SELECT coalesce(typname,'') 
                                            FROM pg_type
                                            WHERE oid::varchar = type::varchar 
                                        ) ) , ' , ' )
                                        FROM (    SELECT  unnest( coalesce(proargnames,ARRAY[''] ) ) as varname,
                                                        regexp_split_to_table( proargtypes::varchar , E'\ +') as type
                                                FROM  pg_proc A
                                                WHERE pronamespace = 2200
                                                and lower(A.proname) = lower(name)
                                                and pg_proc.oid = oid                                               
                                        ) as foo ) || ');'                                              
            FROM pg_proc                                                                                             
            WHERE lower(proname) = lower( name )
            LOOP
                    EXECUTE v_sql;
                END LOOP;
            END
            $$;


ALTER FUNCTION public.drop_function_if_exists(name character varying) OWNER TO postgres;

--
-- Name: drop_function_if_exists(character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION drop_function_if_exists(name character varying, param character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
            BEGIN
                PERFORM drop_function_if_exists(lower(name));
            END
            $$;


ALTER FUNCTION public.drop_function_if_exists(name character varying, param character varying) OWNER TO postgres;

--
-- Name: existcontract(bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION existcontract(person bigint) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    result boolean;
BEGIN

   IF ( select count(*) > 0 from acdcontract where personid = person )
   THEN
   result = true; 
    ELSE
    result = false;
   END IF; 
    RETURN result;
 END;
$$;


ALTER FUNCTION public.existcontract(person bigint) OWNER TO postgres;

--
-- Name: existtable(character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION existtable(nometabela character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    result boolean;
BEGIN
    result = false;             
   IF ( select count(*) > 0 from pg_catalog.pg_tables  WHERE tablename = nomeTabela )
   THEN
   result = true; 
   END IF; 
    RETURN result;
 END;
$$;


ALTER FUNCTION public.existtable(nometabela character varying) OWNER TO postgres;

--
-- Name: get_multa(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION get_multa(p_fineid integer) RETURNS SETOF type_multa
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_line TYPE_MULTA;
    v_select text;
    
BEGIN
    
    v_select := 'SELECT C.personid, 
                        B.loanid, 
                        A.begindate, 
                        A.value, 
                        A.observation, 
                        (CASE WHEN finestatusid = 2
                        THEN
                            true
                        ELSE
                            false
                        END) AS waspaid, --foi paga
                        A.fineid,
                        B.loanoperator as operator,
                        (CASE WHEN finestatusid = 4 
                        THEN
                            true
                        ELSE
                            false
                        END) AS allowance, --foi abonada
                        '''' as allowancejustify, 
                        A.enddate,
                        B.returnoperator,
                        (CASE WHEN finestatusid = 3
                        THEN
                            true
                        ELSE
                        false
                        END) AS slipthrough --via boleto
                FROM gtcfine A 
            LEFT JOIN gtcloan B 
                    ON (A.loanid = B.loanid) 
            LEFT JOIN basPerson C 
                    ON (B.personid = C.personid)
                WHERE A.fineid = ' || p_fineid;


    FOR v_line IN EXECUTE v_select
    LOOP
        RETURN NEXT v_line;
    END LOOP;
    
    RETURN;
        
END;
$$;


ALTER FUNCTION public.get_multa(p_fineid integer) OWNER TO postgres;

--
-- Name: getrelated(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION getrelated(integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
    DECLARE

        text_output TEXT;
        row_data RECORD;

        BEGIN

            text_output := '';

            FOR row_data IN SELECT DISTINCT relatedcontent FROM gtcdictionaryrelatedcontent
                            WHERE dictionarycontentid = $1 LOOP
                text_output := text_output || row_data.relatedcontent || '<br>';
            END LOOP;

            RETURN text_output;

        END;

$_$;


ALTER FUNCTION public.getrelated(integer) OWNER TO postgres;

--
-- Name: getsearchcontenttoyearcompare(character varying, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION getsearchcontenttoyearcompare(character varying, boolean) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
    DECLARE

        text_output TEXT;

        BEGIN

            text_output := $1;

            IF char_length(text_output) = 0 AND $2 THEN
                text_output := date_part('year', now());
            END IF;

            text_output := replace(text_output, '?', '0');
            text_output := regexp_replace(text_output, '[^0-9]', '', 'g');

            IF char_length(text_output) = 0 THEN
                RETURN '0';
            END IF;

            RETURN text_output;

        END;

$_$;


ALTER FUNCTION public.getsearchcontenttoyearcompare(character varying, boolean) OWNER TO postgres;

--
-- Name: getsuggestionmaterial(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION getsuggestionmaterial() RETURNS SETOF type_suggestion_material
    LANGUAGE plpgsql
    AS $$
DECLARE
    vclassification RECORD;
    vcontrolNumber RECORD;
BEGIN
    CREATE TEMP TABLE gtcPersonMaterial (personid bigint, controlnumber int); --tabela temporária para relacionar pessoa a número de controle
    
    FOR vclassification IN SELECT A.personId, 
                                A.classificationareaid, 
                                regexp_split_to_table(B.classification, ', ') as classification, 
                                regexp_split_to_table( regexp_split_to_table(coalesce(B.ignoreclassification,''), ', '), ' ,')  as ignoreclassification
                            FROM gtcinterestsarea A
                    INNER JOIN gtcclassificationarea B
                            USING (classificationareaid)
    LOOP
        FOR vcontrolNumber IN SELECT distinct(A.controlNumber) as controlNumber, 
                                            count(B.*) as max 
                                        FROM gtcexemplarycontrol A 
                                INNER JOIN gtcloan B 
                                    USING (itemnumber) 
                                LEFT JOIN gtcMyLibrary C
                                        ON (C.tableid = 'gtcMaterial')  
                                INNER JOIN gtcMaterial D
                                        USING (controlNumber)
                                    WHERE A.controlNumber NOT IN (SELECT controlnumber 
                                                                    FROM gtcloan 
                                                                INNER JOIN gtcExemplaryControl 
                                                                    USING (itemnumber) 
                                                                    WHERE personid = vclassification.personId)
                                        AND (D.fieldid = '090' AND D.subfieldid = 'a')
                                        AND D.content LIKE (vclassification.classification) 
                                        AND D.content NOT LIKE (vclassification.ignoreclassification)
                                        AND controlNumber NOT IN (SELECT tableid::int FROM gtcMyLibrary WHERE tablename = 'gtcMaterial' AND personId = vclassification.personId)                      
                                    GROUP BY 1 ORDER BY 2 DESC LIMIT 1
        LOOP                    
            INSERT INTO gtcPersonMaterial VALUES ( vclassification.personId, vcontrolNumber.controlnumber );

        END LOOP;            
    END LOOP;

    RETURN QUERY SELECT DISTINCT personId, controlNumber FROM gtcPersonMaterial;

    DROP TABLE gtcPersonMaterial;
    
END;
$$;


ALTER FUNCTION public.getsuggestionmaterial() OWNER TO postgres;

--
-- Name: gtc_chk_domain(character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtc_chk_domain(p_domain character varying, p_key character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_result boolean;
BEGIN

    --Se o valor do dominio for nulo permite inserir pois, em alguns casos, o campo da tabela em questão pode aceitar NULL.
    IF p_key iS NULL
    THEN
        RETURN TRUE;
    END IF;

    PERFORM * FROM basDomain LIMIT 1;
    IF NOT FOUND
    THEN
        RETURN TRUE; --Caso não haja nenhum dado na basDomain retorna como true. Isso é para resolver o bug do postgres que não ignora os check no dump
    END IF;

    SELECT INTO v_result count(*) > 0
        FROM basDomain
        WHERE domainId = p_domain
            AND key = p_key;

    RETURN v_result;

END;
$$;


ALTER FUNCTION public.gtc_chk_domain(p_domain character varying, p_key character varying) OWNER TO postgres;

--
-- Name: gtc_chk_parameter(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtc_chk_parameter(p_parameter text) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_result boolean;
BEGIN
        SELECT INTO v_result count(*) > 0 FROM basConfig WHERE parameter = p_parameter;
        
        RETURN v_result;
END;
$$;


ALTER FUNCTION public.gtc_chk_parameter(p_parameter text) OWNER TO postgres;

--
-- Name: gtcfnc_updatesearchmaterialviewtable(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtcfnc_updatesearchmaterialviewtable() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
            BEGIN

                DELETE FROM gtcSearchMaterialView;
                INSERT INTO gtcSearchMaterialView SELECT * FROM searchMaterialView;

                DELETE FROM gtcSearchTableUpdateControl;
                INSERT INTO gtcSearchTableUpdateControl (lastUpdate) values (now());

                RETURN OLD;
            END;
        $$;


ALTER FUNCTION public.gtcfnc_updatesearchmaterialviewtable() OWNER TO postgres;

--
-- Name: gtcfnc_updatesearchmaterialviewtablebool(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtcfnc_updatesearchmaterialviewtablebool() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    lastUpdate_ BOOLEAN;
BEGIN
    --Havia problemas de corromper o indice. Então sempre exclui o indice e recria
    DROP INDEX index_gtcsearchmaterialview_controlnumber;

    DELETE FROM gtcSearchMaterialView;

    CREATE INDEX index_gtcsearchmaterialview_controlnumber ON gtcSearchMaterialView(controlnumber);

    INSERT INTO gtcSearchMaterialView SELECT * FROM searchMaterialView;

    DELETE FROM gtcSearchTableUpdateControl;
    INSERT INTO gtcSearchTableUpdateControl (lastUpdate) values (now());

    RETURN TRUE;
END;
$$;


ALTER FUNCTION public.gtcfnc_updatesearchmaterialviewtablebool() OWNER TO postgres;

--
-- Name: gtcfncupdatematerialson(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtcfncupdatematerialson() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    DECLARE

        row_data    RECORD;
        row_data1   RECORD;

        fatherCategory  char(2);
        fatherLevel     char(1);

        loopX       int;
        tag         char(5);
        fieldS      char(3);
        subFieldS   char(1);

        currentControlNumber    int;
        currentFieldId          char(3);
        currentSubFieldId       char(1);
        currentContent          text;
        currentSearchContent    text;
        currentLine             int;

    BEGIN

        IF (TG_OP != 'DELETE') THEN

            currentControlNumber    := NEW.controlnumber;
            currentFieldId          := NEW.fieldid;
            currentSubFieldId       := NEW.subfieldid;
            currentContent          := NEW.content;
            currentSearchContent    := NEW.searchcontent;
            currentLine             := NEW.line;

        ELSE

            currentControlNumber    := OLD.controlnumber;
            currentFieldId          := OLD.fieldid;
            currentSubFieldId       := OLD.subfieldid;
            currentContent          := OLD.content;
            currentSearchContent    := OLD.searchcontent;
            currentLine             := OLD.line;

        END IF;

        /**
        * BUSCA CATEGORIA E LEVEL DO PAI
        */
        FOR row_data IN (SELECT  category, level FROM  gtcMaterialControl WHERE  controlnumber = currentControlNumber)
        LOOP
            fatherCategory  := row_data.category;
            fatherLevel     := row_data.level;
        END LOOP;

        FOR row_data1 IN
        (
            SELECT  LK.tag, LK.tagson, MC.controlnumber
            FROM  gtcmaterialcontrol MC
        INNER JOIN  gtclinkoffieldsbetweenspreadsheets LK
                ON  (MC.category = LK.categoryson AND MC.level = LK.levelson )
            WHERE  LK.category         = fatherCategory
            AND  LK.level            = fatherLevel
            AND  LK.tag      like    ('%' || currentFieldId || '.' || currentSubFieldId || '%')
            AND  MC.controlnumberfather = currentControlNumber
            AND  LK.type = '2'
        )
        LOOP

            IF (strpos(row_data1.tagson, ',') = 0) THEN
                row_data1.tagson = row_data1.tagson || ',';
            END IF;

            loopX := 1;

            LOOP

                tag = split_part(row_data1.tagson, ',', loopX);

                IF char_length(tag) = 0 THEN
                    EXIT;
                END IF;

                fieldS      := split_part(tag, '.', 1);
                subFieldS   := split_part(tag, '.', 2);

                IF (TG_OP = 'DELETE') THEN

                    DELETE FROM gtcMaterial
                    WHERE controlnumber    = row_data1.controlnumber
                    AND fieldid          = fieldS
                    AND subfieldid       = subFieldS
                    AND line             = currentLine;

                ELSIF (TG_OP = 'UPDATE') THEN

                    UPDATE gtcMaterial
                    SET content          = currentContent,
                        searchcontent    = currentSearchContent
                    WHERE controlnumber    = row_data1.controlnumber
                    AND fieldid          = fieldS
                    AND subfieldid       = subFieldS
                    AND line             = currentLine;

                ELSIF (TG_OP = 'INSERT') THEN
                    --Deleta para garantir que nao tera nenhuma informacao que va gerar erro de chave duplicada ao tentar inserir o material
                    DELETE FROM gtcMaterial WHERE controlnumber =  row_data1.controlnumber AND fieldid = fieldS AND subfieldid = subFieldS AND line = currentLine;

                    INSERT INTO gtcMaterial
                        (content, searchcontent, controlnumber, fieldid, subfieldid, line)
                    VALUES
                        (currentContent, currentSearchContent, row_data1.controlnumber, fieldS, subFieldS, currentLine);

                END IF;

                loopX := loopX + 1;

            END LOOP;

        END LOOP;

        RETURN NULL;
    END;
$$;


ALTER FUNCTION public.gtcfncupdatematerialson() OWNER TO postgres;

--
-- Name: gtcgnccheckhelp(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtcgnccheckhelp() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_result boolean;
BEGIN

    IF ( TG_OP = 'UPDATE' )
    THEN
        IF ( (NEW.form = OLD.form) )
        THEN
            IF ( NEW.subform IS NOT NULL )
            THEN
                IF ( NEW.subform = OLD.subform )
                THEN
                    RETURN NEW;
                END IF;
            ELSE
                RETURN NEW;
            END IF; 
        END IF;
        
        RAISE EXCEPTION 'Não é possível alterar o formulário deste registro.';    
    ELSE
        IF (NEW.subform IS NULL )
        THEN
            SELECT into v_result count(*) = 0
            FROM gtcHelp
            WHERE form = NEW.form
                AND subform IS NULL;
        ELSE
        
            SELECT into v_result count(*) = 0 
            FROM gtcHelp
            WHERE form = NEW.form
                AND subform = NEW.subform;
        END IF;
        
        IF ( v_result )
        THEN
            RETURN NEW;
        END IF;
        
        RAISE EXCEPTION 'Já existe um registo para este formulário.';
    END IF;
    
    RETURN NULL;    

END;
$$;


ALTER FUNCTION public.gtcgnccheckhelp() OWNER TO postgres;

--
-- Name: gtcnadaconsta(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtcnadaconsta(person integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_result boolean;
BEGIN
    SELECT into v_result SUM(quantidade) = 0 FROM gtcObterRestricoes(person);
    
    RETURN v_result;
END; 
$$;


ALTER FUNCTION public.gtcnadaconsta(person integer) OWNER TO postgres;

--
-- Name: gtcobterrestricoes(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtcobterrestricoes(p_personid integer) RETURNS SETOF type_obter_restricoes
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN QUERY 
        SELECT 'Penalidade' AS "tipo",
               obterQuantPenalidades(p_personid) AS "quantidade"

         UNION
        SELECT 'Multas' AS "tipo",
               obterQuantMultas(p_personid) AS "quantidade"

         UNION
        SELECT 'Empréstimos atrasados' AS "tipo",
               obterQuantEmprestimos(p_personid) AS "quantidade";
END;
$$;


ALTER FUNCTION public.gtcobterrestricoes(p_personid integer) OWNER TO postgres;

--
-- Name: gtcobterrestricoesparasagu(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtcobterrestricoesparasagu(person integer) RETURNS SETOF type_obter_restricoes
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
	RETURN QUERY
	SELECT
		'Penalidade' AS tipo,
		( SELECT COUNT()
		  FROM gtcpenalty
		  WHERE coalesce( penaltyEndDate > now(), penaltyEndDate IS NULL )
		  AND personid = person ) as quantidade
	UNION
	(
		SELECT 'Multas' AS tipo,
		( SELECT COUNT()
		  FROM gtcfine f
		  LEFT JOIN gtcloan l
		  ON f.loanid = l.loanid
		  WHERE finestatusid = ( SELECT value FROM basconfig WHERE parameter ='ID_FINESTATUS_OPEN' )::int
		  AND personid = person ) as quantidade
	)
	UNION
	(
		SELECT 'Total de Empréstimos' AS tipo,
		( SELECT count()
		  FROM gtcloan
		  WHERE personid = person
		  AND returndate is null ) as quantidade
	)
	UNION
	(
		SELECT 'Empréstimos atrasados' AS tipo,
		( SELECT count()
		  FROM gtcloan
		  WHERE personid = person
		  AND returndate is null
		  AND returnforecastdate < NOW ) as quantidade
	);
END;
$$;


ALTER FUNCTION public.gtcobterrestricoesparasagu(person integer) OWNER TO postgres;

--
-- Name: gtcpersonunion(bigint, bigint); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION gtcpersonunion(stayperson bigint, outperson bigint) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    BEGIN

        PERFORM * FROM basPerson WHERE personId = stayPerson LIMIT 1;
        IF NOT FOUND
        THEN
            RAISE EXCEPTION 'Pessoa % não existe.' , stayPerson;
        END IF;
        PERFORM * FROM basPerson WHERE personId = outPerson;
        IF NOT FOUND
        THEN
            RAISE EXCEPTION 'Pessoa % não existe.' , outPerson;
        END IF;
        IF stayPerson = outPerson 
        THEN
            RAISE EXCEPTION 'É necessário escolher duas pessoas diferentes.';
        END IF;

        --UNIÃO.
        -- empréstimos
        UPDATE gtcLoan SET personId = stayPerson WHERE personId = outPerson;
        -- emprésimos entre biblioteca
        UPDATE gtcLoanBetweenLibrary SET personId = stayPerson WHERE personId = outPerson; 
        -- avaliação
        UPDATE gtcMaterialEvaluation SET personId = stayPerson WHERE personId = outPerson;
        -- mINha biblioteca
        UPDATE gtcMylibrary SET personId = stayPerson WHERE personId = outPerson;
        -- penalidades
        UPDATE gtcPenalty SET personId = stayPerson WHERE personId = outPerson;
        -- solicitação de compras
        UPDATE gtcPurchaseRequest SET personId = stayPerson WHERE personId = outPerson;
        -- solicitação de alteração de estado do exempla (congelamento)
        UPDATE gtcRequestChangeExemplaryStatus SET personId = stayPerson WHERE personId = outPerson;
        -- reservas
        UPDATE gtcReserve SET personId = stayPerson WHERE personId = outPerson;
        --CONTROLE DE NOTIFICAÇÃO DE E-MAIL DE REQUISIÇÃO.
        UPDATE gtcEmailControlNotifyAquisition SET personId = stayPerson WHERE personId = outPerson;
        --MANTER A DA PESSOA SELECIONADA, REMOVER AS OUTRAS.
        DELETE FROM gtcPersonConfig WHERE personId = outPerson;

        --TELEFONES
        INSERT INTO basPhone 
                    (personId, 
                    type ,phone)    
            (SELECT stayPerson,     
                    type, 
                    phone 
               FROM basPhone 
              WHERE personId = outPerson 
                AND type 
                 IN ( SELECT type 
               FROM basPhone 
              WHERE personId = outPerson EXCEPT
             SELECT type 
               FROM basPhone 
              WHERE personId = stayPerson)
            );

         DELETE FROM basPhone where personId = outPerson;

        --AREAS DE INTERESSE.
        INSERT INTO gtcInterestsArea
                    (personId,
                    classificationAreaId )
            (SELECT stayPerson,
                    classificationAreaId
               FROM gtcINterestsarea
              WHERE personId = outPerson
                AND classificationAreaId
             NOT IN ( SELECT classificationAreaId
               FROM gtcInterestsArea
              WHERE personId = stayPerson)
             );

        DELETE FROM gtcInterestsarea WHERE personId = outPerson;

        --LIGAÇÃO ENTRE PESSOAS
        INSERT INTO baspersonlink
                    (personId, 
                    linkId, 
                    dateValidate ) 
            (SELECT stayPerson, 
                    linkId, 
                    dateValidate 
               FROM baspersonLink               
              WHERE personId = outPerson 
                AND linkId NOT IN 
           ( SELECT linkId 
               FROM basPersonLink 
              WHERE personId = stayPerson)
           );

        DELETE FROM basPersonLink WHERE personId = outPerson;

        --ANALÍTICA

        UPDATE gtcAnalytics set personId = stayPerson where personId = outPerson;

        DELETE FROM gtcAnalytics WHERE personId = outPerson;

        --FAVORITOS
       INSERT INTO gtcFavorite 
                   (personId, 
                   controlNumber) 
           (select stayPerson, 
                   controlNumber 
              from gtcFavorite 
             where personId = outPerson 
               and controlNumber not in 
           (select controlNumber 
              from gtcFavorite 
             where personId = stayPerson)
           );

       DELETE FROM gtcFavorite where personId = outPerson;

       --PESSOAS NAS UNIDADES DE BIBLOTECA
       INSERT INTO gtcPersonLibraryUnit
                   (personId, 
                   libraryUnitId)    
                (SELECT stayPerson,     
                        libraryUnitId
                   FROM gtcPersonLibraryUnit
                  WHERE personId = outPerson 
                    AND libraryUnitId
                 NOT IN ( SELECT libraryUnitId
                   FROM gtcPersonLibraryUnit
                  WHERE personId = stayPerson)
                );

       DELETE FROM gtcPersonLibraryUnit where personId = outPerson;

        --DOCUMENTOS
        INSERT INTO basDocument 
                    (personId, 
                    documentTypeId) 
            (SELECT stayPerson, documentTypeId 
               FROM basDocument 
              WHERE personId = outPerson 
                AND documentTypeId  
             NOT IN (SELECT documentTypeId 
               FROM basDocument  
              WHERE personId = stayPerson)
            );

        DELETE FROM basDocument where personId = outPerson;

        IF (existTable( 'basphysicalperson' ))
        THEN    
            IF (existContract( outperson ))
            THEN
                IF NOT ( existContract( stayperson ) )
                THEN
                    RAISE EXCEPTION 'Pessoa % possui contrato e não pode ser unida ou removida. Tenta inverter as pessoas.', outPerson;
                END IF;

                RAISE EXCEPTION 'Pessoa % possui contrato e não pode ser unida ou removida.', outPerson;
            END IF;
        INSERT INTO basphysicalpersonkinship
                    (personid,
                     relativepersonid,
                     kinshipid,
                     datetime
                    ) 
            (SELECT stayPerson , 
                    relativepersonid, 
                    kinshipid,
                    datetime
               FROM basphysicalpersonkinship            
              WHERE personId = outPerson 
                AND kinshipid NOT IN 
           ( SELECT kinshipid
               FROM basphysicalpersonkinship
              WHERE personId = stayPerson )
           );
        DELETE FROM basphysicalpersonkinship WHERE personid = outPerson;

        INSERT INTO basbadgeloan
                    (personid,
                     datetime,
                     loanid, 
                     badgeid, 
                     loandate,  
                     expectedreturndate) 
            (SELECT stayPerson,
                    datetime, 
                    loanid,
                    badgeid,
                    loandate,
                    expectedreturndate
               FROM basbadgeloan            
              WHERE personId = outPerson 
                AND badgeid NOT IN 
           ( SELECT badgeid
               FROM basbadgeloan
              WHERE personId = stayPerson)
           );
        DELETE FROM basbadgeloan WHERE personid = outPerson;

        INSERT INTO bashistoricofuncional
                    (personid,
                     datetime,
                     historicofuncionalid,
                     data, 
                     assunto, 
                     inicio,  
                     observacao) 
            (SELECT stayPerson,
                    datetime, 
                    historicofuncionalid,
                    data,
                    assunto,
                    inicio,
                    observacao
               FROM bashistoricofuncional           
              WHERE personId = outPerson 
                AND historicofuncionalid NOT IN 
           ( SELECT historicofuncionalid
               FROM bashistoricofuncional
              WHERE personId = stayPerson)
           );
        DELETE FROM bashistoricofuncional WHERE personid = outPerson;

        INSERT INTO basprofessionalactivitypeople
                    (personid,
                     datetime,
                     professionalactivitypeopleid,
                     professionalactivityid, 
                     legalpersonid, 
                     begindate,  
                     professionalactivitylinktypeid) 
            (SELECT stayPerson,
                    datetime, 
                    professionalactivitypeopleid,
                    professionalactivityid,
                    legalpersonid,
                    begindate,
                    professionalactivitylinktypeid
               FROM basprofessionalactivitypeople           
              WHERE personId = outPerson 
                AND professionalactivityid NOT IN 
           ( SELECT professionalactivityid
               FROM basprofessionalactivitypeople
              WHERE personId = stayPerson)
           );
        DELETE FROM basprofessionalactivitypeople WHERE personid = outPerson;

        INSERT INTO bassectorboss
                    (bossid,
                     sectorid,
                     issendemail, 
                     email 
                     ) 
            (SELECT stayPerson,
                    sectorid,
                    issendemail, 
                    email
               FROM bassectorboss   
              WHERE bossid = outPerson 
                AND sectorid NOT IN 
           ( SELECT sectorid 
               FROM bassectorboss
              WHERE bossid = stayPerson)
           );
        DELETE FROM bassectorboss WHERE bossid = outPerson;

        INSERT INTO basstamp
                    (personid,
                     datetime,
                     stampid,
                     functiondescription 
                     ) 
            (SELECT stayPerson,
                    datetime, 
                    stampid,
                    functiondescription
               FROM basstamp            
              WHERE personId = outPerson 
                AND stampid NOT IN 
           ( SELECT stampid
               FROM basstamp
              WHERE personId = stayPerson)
           );
        DELETE FROM basstamp WHERE personid = outPerson;

        INSERT INTO basphysicalpersonprofessor 
                    ( personid , 
                    persondv , 
                    personmask , 
                    name , 
                    shortname , 
                    cityid , 
                    zipcode , 
                    location , 
                    number , 
                    complement , 
                    neighborhood , 
                    email , 
                    emailalternative , 
                    url , 
                    datein , 
                    password , 
                    isallowpersonaldata , 
                    miolousername , 
                    locationtypeid , 
                    sentemail , 
                    photoid , 
                    login , 
                    obs , 
                    sex , 
                    maritalstatusid , 
                    residentialphone , 
                    workphone , 
                    cellphone , 
                    messagephone , 
                    messagecontact , 
                    datebirth , 
                    cityidbirth , 
                    countryidbirth , 
                    responsablelegalid , 
                    carplate , 
                    specialnecessityid , 
                    specialnecessitydescription , 
                    cityidwork , 
                    zipcodework , 
                    locationwork , 
                    complementwork , 
                    neighborhoodwork , 
                    ethnicoriginid , 
                    datedeath , 
                    persontitleid , 
                    locationtypeidwork , 
                    mothername ,    
                    fathername , 
                    workemployername , 
                    workfunction , 
                    workstartdate ,
                    workenddate , 
                    workathome , 
                    ethnicorigin , 
                    identifier ) 
          ( SELECT  stayperson, 
                    persondv , 
                    personmask , 
                    name , 
                    shortname , 
                    cityid , 
                    zipcode , 
                    location , 
                    number , 
                    complement , 
                    neighborhood , 
                    email , 
                    emailalternative , 
                    url , 
                    datein , 
                    password , 
                    isallowpersonaldata , 
                    miolousername ,         
                    locationtypeid , 
                    sentemail , 
                    photoid , 
                    login , 
                    obs , 
                    sex , 
                    maritalstatusid , 
                    residentialphone , 
                    workphone ,         
                    cellphone  , 
                    messagephone , 
                    messagecontact ,    
                    datebirth , 
                    cityidbirth , 
                    countryidbirth , 
                    responsablelegalid , 
                    carplate , 
                    specialnecessityid , 
                    specialnecessitydescription , 
                    cityidwork , 
                    zipcodework , 
                    locationwork , 
                    complementwork , 
                    neighborhoodwork , 
                    ethnicoriginid , 
                    datedeath , 
                    persontitleid , 
                    locationtypeidwork , 
                    mothername , 
                    fathername , 
                    workemployername , 
                    workfunction , 
                    workstartdate , 
                    workenddate , 
                    workathome , 
                    ethnicorigin , 
                    identifier 
               FROM basphysicalpersonprofessor 
              WHERE personid = outperson);

        INSERT INTO basprofessorcommitment
                    (personid,
                     datetime,
                     begindate,
                     workload 
                     ) 
            (SELECT stayPerson,
                    datetime, 
                    begindate,
                    workload
               FROM basprofessorcommitment          
              WHERE personId = outPerson 
                AND begindate NOT IN 
           ( SELECT begindate
               FROM basprofessorcommitment
              WHERE personId = stayPerson)
           );
        DELETE FROM basprofessorcommitment WHERE personid = outPerson; 

        UPDATE fininvoice SET personId = stayPerson WHERE personId = outPerson;

        INSERT INTO acdprofessorformation
                    (professorid,
                     formationlevelid,
                     externalcourseid,
                     begindate,
                     dateconclusion,
                     institutionid 
                     ) 
            (SELECT stayPerson,
                    formationlevelid,
                    externalcourseid,
                    begindate,
                    dateconclusion,
                    institutionid 
               FROM acdprofessorformation           
              WHERE professorid = outPerson 
                AND formationlevelid NOT IN 
           ( SELECT formationlevelid
               FROM acdprofessorformation
              WHERE professorid = stayPerson)
                AND externalcourseid NOT IN
           ( SELECT externalcourseid
               FROM acdprofessorformation
              WHERE professorid = stayPerson));
         DELETE FROM acdprofessorformation WHERE professorid = outPerson;

   INSERT INTO acdprofessorcenter
                    (professorid,
                     centerid,
                     begindate 
                     ) 
            (SELECT stayPerson,
                    centerid,
                    begindate
               FROM acdprofessorcenter      
              WHERE professorid = outPerson 
                AND centerid NOT IN 
           ( SELECT centerid
               FROM acdprofessorcenter
              WHERE professorid = stayPerson));
    DELETE FROM acdprofessorcenter WHERE professorid = outPerson;

    INSERT INTO basphysicalpersonemployee 
                (personid , 
                persondv , 
                personmask , 
                name , 
                shortname , 
                cityid , 
                zipcode , 
                location , 
                number , 
                complement , 
                neighborhood , 
                email , 
                emailalternative , 
                url , 
                datein , 
                password , 
                isallowpersonaldata , 
                miolousername ,     
                locationtypeid , 
                sentemail , 
                photoid , 
                login , 
                obs , 
                sex , 
                maritalstatusid , 
                residentialphone , 
                workphone , 
                cellphone , 
                messagephone , 
                messagecontact , 
                datebirth , 
                cityidbirth , 
                countryidbirth , 
                responsablelegalid , 
                carplate , 
                specialnecessityid , 
                specialnecessitydescription , 
                cityidwork , 
                zipcodework , 
                locationwork , 
                complementwork , 
                neighborhoodwork , 
                ethnicoriginid , 
                datedeath , 
                persontitleid , 
                locationtypeidwork ,    
                mothername , 
                fathername ,
                workemployername , 
                workfunction , 
                workstartdate , 
                workenddate , 
                workathome , 
                ethnicorigin ,  
                identifier) 
       ( SELECT stayperson ,   
                persondv , 
                personmask , 
                name , 
                shortname , 
                cityid , 
                zipcode , 
                location , 
                number , 
                complement , 
                neighborhood , 
                email , 
                emailalternative , 
                url , 
                datein , 
                password , 
                isallowpersonaldata , 
                miolousername , 
                locationtypeid , 
                sentemail , 
                photoid , 
                login , 
                obs , 
                sex , 
                maritalstatusid , 
                residentialphone , 
                workphone , 
                cellphone , 
                messagephone , 
                messagecontact , 
                datebirth , 
                cityidbirth , 
                countryidbirth , 
                responsablelegalid , 
                carplate , 
                specialnecessityid , 
                specialnecessitydescription , 
                cityidwork , 
                zipcodework , 
                locationwork , 
                complementwork , 
                neighborhoodwork , 
                ethnicoriginid , 
                datedeath , 
                persontitleid , 
                locationtypeidwork , 
                mothername , 
                fathername , 
                workemployername , 
                workfunction , 
                workstartdate , 
                workenddate , 
                workathome , 
                ethnicorigin , 
                identifier 
           FROM basphysicalpersonemployee 
          WHERE personid = outperson);

    INSERT INTO basemployee
                    (personid,
                     employeetypeid 
                     ) 
            (SELECT stayPerson,
                    employeetypeid
               FROM basemployee     
              WHERE personid = outPerson 
                AND employeetypeid NOT IN 
           ( SELECT employeetypeid
               FROM basemployee
              WHERE personid = stayPerson));
    DELETE FROM basemployee WHERE personid = outPerson;

    INSERT INTO  Acdmoodlesubscription
                    (personId, 
                    groupid)    
            (SELECT stayPerson,
                    groupid     

               FROM Acdmoodlesubscription
              WHERE personId = outPerson 
                AND groupid
                 IN ( SELECT groupid
               FROM Acdmoodlesubscription 
              WHERE personId = outPerson EXCEPT
             SELECT groupid 
               FROM Acdmoodlesubscription 
              WHERE personId = stayPerson)
            );

         DELETE FROM Acdmoodlesubscription  where personId = outPerson;

    DELETE FROM basphysicalperson WHERE personId = outperson; 
    DELETE FROM basphysicalpersonprofessor WHERE personId = outperson;
    DELETE FROM basphysicalpersonemployee WHERE personId = outperson; 
    DELETE FROM basphysicalpersonstudent WHERE personId = outperson; 
    UPDATE fininvoice SET personId = stayPerson WHERE personId = outPerson; 
    END IF;

    DELETE FROM basDocument where personId = outPerson;
    DELETE FROM gtcLibPerson WHERE personId = outPerson;
    DELETE FROM basPerson WHERE personId = outperson;

        RETURN true;

        END;
$$;


ALTER FUNCTION public.gtcpersonunion(stayperson bigint, outperson bigint) OWNER TO postgres;

--
-- Name: maskcpf(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION maskcpf(p_cpf text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_unmasked text;
BEGIN

    SELECT INTO v_unmasked unmaskCPF( p_cpf ) ;

    RETURN substring( v_unmasked from 1 for 3 ) || '.' 
        || substring( v_unmasked from 4 for 3 ) || '.' 
        || substring( v_unmasked from 7 for 3 ) || '-' 
        || substring( v_unmasked from 10 for 2 );
END;
 $$;


ALTER FUNCTION public.maskcpf(p_cpf text) OWNER TO postgres;

--
-- Name: obterquantemprestimos(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION obterquantemprestimos(p_personid integer) RETURNS bigint
    LANGUAGE plpgsql
    AS $$ 
BEGIN
    RETURN ( SELECT count(*)
               FROM gtcloan
              WHERE personid = p_personid
                AND returnforecastdate::date < now()::date
                AND returndate is null);
END; 
$$;


ALTER FUNCTION public.obterquantemprestimos(p_personid integer) OWNER TO postgres;

--
-- Name: obterquantmultas(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION obterquantmultas(p_personid integer) RETURNS bigint
    LANGUAGE plpgsql
    AS $$ 
BEGIN
    RETURN ( SELECT COUNT(*)
               FROM gtcfine f
          LEFT JOIN gtcloan l
                 ON f.loanid = l.loanid
              WHERE finestatusid = ( SELECT value 
                                       FROM basconfig 
                                      WHERE parameter = 'ID_FINESTATUS_OPEN' )::int
                AND personid = p_personid );
END; 
$$;


ALTER FUNCTION public.obterquantmultas(p_personid integer) OWNER TO postgres;

--
-- Name: obterquantpenalidades(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION obterquantpenalidades(p_personid integer) RETURNS bigint
    LANGUAGE plpgsql
    AS $$ 
BEGIN
    RETURN ( SELECT COUNT(*)
               FROM gtcpenalty
              WHERE coalesce( penaltyEndDate > now(), penaltyEndDate IS NULL )
                AND personid = p_personid );
END; 
$$;


ALTER FUNCTION public.obterquantpenalidades(p_personid integer) OWNER TO postgres;

--
-- Name: prepareallsearchcontent(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION prepareallsearchcontent() RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    vClassification varchar;
    vDate varchar;
BEGIN
    vClassification := value FROM basconfig WHERE parameter = 'MARC_CLASSIFICATION_TAG';
    vDate := value FROM basconfig WHERE parameter = 'CATALOGUE_DATE_FIELDS';

    --atualiza o searchContent de todos materiais para unaccent, conforme unaccent do PHP troca a + pelo A
    UPDATE gtcmaterial SET searchcontent = trim( upper( translate( unaccent( content ) ,'+', 'A') ) );

    -- atualiza as tags 090.a e etc considerando a preferencia MARC_CLASSIFICATION_TAG
    UPDATE gtcmaterial EM SET searchContent = prepareTopographicIndex
        ( content,
            ( SELECT content
            FROM gtcmaterial IM
            WHERE fieldid = '090'
                AND subfieldid = 'b'
                AND line = 0
                AND EM.controlnumber = IM.controlNumber
            )
        )
    WHERE fieldid || '.' || subfieldid in (  SELECT regexp_split_to_table( vClassification, ',' ) );

    -- atualiza as tags de data. Observação: na 3.2 tem que ser dd/mm/yyyy
    UPDATE gtcmaterial SET searchContent = to_char( content::date, 'YYYY-mm-dd')
    WHERE fieldid || '.' || subfieldid in ( SELECT regexp_split_to_table( vDate , ',') );

    return true;
END;
$$;


ALTER FUNCTION public.prepareallsearchcontent() OWNER TO postgres;

--
-- Name: preparesearchcontent(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION preparesearchcontent(tag character varying, content character varying, complement character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
    isClassification integer;
    isDate integer;
BEGIN
    -- Controla casos onde a tag vem nula ou somente com ponto.
    IF length( tag ) > 1 
    THEN
        isClassification = position( tag in ( SELECT value FROM basconfig WHERE parameter = 'MARC_CLASSIFICATION_TAG' ) );

        IF isClassification > 0
        THEN
            return prepareTopographicIndex( content,complement );
        END IF;

        isDate = position( tag in ( SELECT value FROM basconfig WHERE parameter = 'CATALOGUE_DATE_FIELDS' ) );

        IF isDate > 0
        THEN
            return to_char( content::date, 'YYYY-mm-dd');
            --return to_char( content::date, 'dd/mm/yyyy'); --na 3.2 tem que ser dd/mm/yyyy
        END IF;
    END IF;

    return trim( upper( unaccent( translate( content ,'+', 'A') ) ) );
END;
$$;


ALTER FUNCTION public.preparesearchcontent(tag character varying, content character varying, complement character varying) OWNER TO postgres;

--
-- Name: preparesearchcontentforsearchmodule(character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION preparesearchcontentforsearchmodule(tag character varying, content character varying, complement character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
    isClassification integer;
    isDate integer;
BEGIN
    -- Controla casos onde a tag vem nula ou somente com ponto.
    IF length( tag ) > 1 
    THEN
        isClassification = position( tag in ( SELECT value FROM basconfig WHERE parameter = 'MARC_CLASSIFICATION_TAG' ) );

        IF isClassification > 0
        THEN
            return preparetopographicindexsearch( content,complement );
        END IF;

        isDate = position( tag in ( SELECT value FROM basconfig WHERE parameter = 'CATALOGUE_DATE_FIELDS' ) );

        IF isDate > 0
        THEN
            return to_char( content::date, 'YYYY-mm-dd');
            --return to_char( content::date, 'dd/mm/yyyy'); --na 3.2 tem que ser dd/mm/yyyy
        END IF;
    END IF;

    return trim( upper( unaccent( translate( content ,'+', 'A') ) ) );
END;
$$;


ALTER FUNCTION public.preparesearchcontentforsearchmodule(tag character varying, content character varying, complement character varying) OWNER TO postgres;

--
-- Name: preparetopographicindex(character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION preparetopographicindex(content character varying, complement character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
DECLARE
    result varchar;
    resultAux varchar;
    number integer;
    content_v varchar;

    count int;
    new_content varchar;
    letter char;
BEGIN
    --tira acentos e converte pra minusculas e adiciona | como terminador de string.
    result := lower ( unaccent ( trim( content ) ) ) || '|';

    -- Separa somente números
    new_content := '';
    count := 0;
    number := 0;

    WHILE (count < char_length(content))
    LOOP
        -- Obtém caractere.
        letter := substring(content, count+1, 1);

        -- Testa se caractere é numérico.
        IF letter ~ '^[0-9]$'
        THEN
            new_content := new_content || letter;
        ELSE
            IF char_length(new_content) > 0
            THEN
                 number := new_content::integer;
                EXIT;
            END IF;
        END IF;

        count = count + 1;
    END LOOP;

    content_v := substring(content from position(number::text in content));

    /**
        Exemplo de precedência que deve ser levado em conta, vide #12268 :
        658.012.4+657 -> + vem primeiro
        658.012.4/.5 -> / vem segundo
        658.012.4 -> Numeros inteiros em terceiro
        658.012.4:266 -> : depois dos números inteiros
    */
    result := translate( result, '+/|:=("*-.\'0123456789', 'ABCDEFGHIJKMNOPQRSTUV');
    --tratamento da excessão (0 => EI deve vir após (1/9 => EJ/9
    --result := replace( result, 'FJ','FT');

    --tratamento da exceção "(=" vai depois de ([0-9].
    result := replace( result, 'FE','FW');

    --Trata a excessão quando o termo >= 820 e < 900 o (1/9 => F[KLMNOPQRS] vai depois do . => I (J))
    IF (number>= 82 AND number < 90) OR (number >= 820 and number < 900 )
    THEN
        IF ( (content_v ~ E'^(([0-9]{3})|([0-9]{2}))\\([1-9].*$') OR (content_v ~ E'^(([0-9]{3})|([0-9]{2}))\\.[0-9]{1}\\([1-9].*$') )
        THEN
             resultAux = substring(result FROM position(')' in result));
             result = substring(result FROM 0 FOR position(')' in result));

             result := regexp_replace(result, 'F([NOPQRSTUV])', E'L\\1','g');
             result := result || resultAux;

         END IF;
    END IF;

    -- Substitui o ')' por um caractere de baixa prioridade.
    result = translate( result, ')', '5');

    --adiciona F na frente de cada caracter minusculo a fim de priorizar alguns caracteres
    result := trim( regexp_replace( result,'([a-z])',E'GX\\1','g') );

    --caso tenha complemento concatena
    IF complement IS NOT NULL AND result <> ''
    THEN
        result := result || '@' || complement;
    END IF;

    return result;
END;
$_$;


ALTER FUNCTION public.preparetopographicindex(content character varying, complement character varying) OWNER TO postgres;

--
-- Name: preparetopographicindexsearch(character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION preparetopographicindexsearch(content character varying, complement character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
DECLARE
    result varchar;
    resultAux varchar;
    number integer;
    content_v varchar;

    count int;
    new_content varchar;
    letter char;
BEGIN
    --tira acentos e converte pra minusculas e adiciona | como terminador de string.
    result := lower ( unaccent ( trim( content ) ) );

    -- Separa somente números
    new_content := '';
    count := 0;
    number := 0;

    WHILE (count < char_length(content))
    LOOP
        -- Obtém caractere.
        letter := substring(content, count+1, 1);

        -- Testa se caractere é numérico.
        IF letter ~ '^[0-9]$'
        THEN
            new_content := new_content || letter;
        ELSE
            IF char_length(new_content) > 0
            THEN
                 number := new_content::integer;
                EXIT;
            END IF;
        END IF;

        count = count + 1;
    END LOOP;

    content_v := substring(content from position(number::text in content));

    /**
        Exemplo de precedência que deve ser levado em conta, vide #12268 :
        658.012.4+657 -> + vem primeiro
        658.012.4/.5 -> / vem segundo
        658.012.4 -> Numeros inteiros em terceiro
        658.012.4:266 -> : depois dos números inteiros
    */
    result := translate( result, '+/|:=("*-.\'0123456789', 'ABCDEFGHIJKMNOPQRSTUV');
    --tratamento da excessão (0 => EI deve vir após (1/9 => EJ/9
    --result := replace( result, 'FJ','FT');

    --tratamento da exceção "(=" vai depois de ([0-9].
    result := replace( result, 'FE','FW');

    --Trata a excessão quando o termo >= 820 e < 900 o (1/9 => F[KLMNOPQRS] vai depois do . => I (J))
    IF (number>= 82 AND number < 90) OR (number >= 820 and number < 900 )
    THEN
        IF ( (content_v ~ E'^(([0-9]{3})|([0-9]{2}))\\([1-9].*$') OR (content_v ~ E'^(([0-9]{3})|([0-9]{2}))\\.[0-9]{1}\\([1-9].*$') )
        THEN
             resultAux = substring(result FROM position(')' in result));
             result = substring(result FROM 0 FOR position(')' in result));

             result := regexp_replace(result, 'F([NOPQRSTUV])', E'L\\1','g');
             result := result || resultAux;

         END IF;
    END IF;

    -- Substitui o ')' por um caractere de baixa prioridade.
    result = translate( result, ')', '5');

    --adiciona F na frente de cada caracter minusculo a fim de priorizar alguns caracteres
    result := trim( regexp_replace( result,'([a-z])',E'GX\\1','g') );

    --caso tenha complemento concatena
    IF complement IS NOT NULL AND result <> ''
    THEN
        result := result || '@' || complement;
    END IF;

    return result;
END;
$_$;


ALTER FUNCTION public.preparetopographicindexsearch(content character varying, complement character varying) OWNER TO postgres;

--
-- Name: reserveposition(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION reserveposition(p_reserveid integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
    DECLARE

        v_position integer;
        v_position_aux integer;
        v_reservestatusid integer;
       -- v_linha RECORD;
        v_itemnumber varchar;
    BEGIN 
	SELECT INTO v_reservestatusid reservestatusid FROM gtcreserve WHERE reserveid=p_reserveid;

	--se for atendida ou comunicada retorna 0 para depois ser tratado de outra forma
        IF v_reservestatusid = 2 OR v_reservestatusid = 3
        THEN
  	    v_position = 0;
	    
	ELSE --senão busca a posição da reserva  
            v_position = 0;
 
            FOR v_itemnumber IN (SELECT itemnumber FROM gtcreservecomposition WHERE reserveid = p_reserveid)
            LOOP
                
                SELECT INTO v_position_aux COUNT(DISTINCT gtcreserve.reserveid) 
              FROM gtcreserve 
        INNER JOIN gtcreservecomposition 
	        ON(gtcreserve.reserveid = gtcreservecomposition.reserveid) 
             WHERE gtcreservecomposition.itemnumber = v_itemnumber
               AND requesteddate <= (SELECT requesteddate 
                                       FROM gtcreserve 
	                              WHERE reserveid= p_reserveid) 
                AND reservestatusid='1'; 

                IF v_position_aux > v_position
                THEN 
                    v_position = v_position_aux;
                END IF; 
           
            END LOOP;

            
      	END IF;

        RETURN v_position;

     END;

$$;


ALTER FUNCTION public.reserveposition(p_reserveid integer) OWNER TO postgres;

--
-- Name: sea_bibliography_data(integer, character varying, integer, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION sea_bibliography_data(p_controlnumber integer, p_content character varying, p_libraryunit integer, p_tags character varying) RETURNS SETOF type_bibliography_data
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_line TYPE_BIBLIOGRAPHY_DATA;
    v_select text;
    
BEGIN
    
    v_select  = 'SELECT DISTINCT controlnumber
                        FROM gtcmaterial 
                        WHERE subfieldid <> ''#''';


    IF p_controlnumber IS NOT NULL
    THEN
        v_select = v_select || ' AND controlnumber = ' || p_controlnumber;
    END IF;
                                            
    IF p_content IS NOT NULL 
    THEN
        v_select = v_select || ' AND lower( unaccent( searchcontent ) ) LIKE lower( unaccent( ''%' || p_content || '%'' ) )';
    END IF;

                
    v_select = 'SELECT controlnumber,
                    fieldid,
                    subfieldid,
                    content
                FROM gtcmaterial
                WHERE controlnumber IN ( ' || v_select || ')';
                
    IF p_tags IS NOT NULL 
    THEN
        v_select = v_select || ' AND fieldid || ''.'' || subfieldid IN ( '''|| replace(p_tags, ',', ''',''') || ''')';
    END IF;            
            
    v_select = v_select || ' ORDER BY controlnumber, fieldid, subfieldid';        
                        
    FOR v_line IN EXECUTE v_select
    LOOP
        RETURN NEXT v_line;
    END LOOP;
    
    RETURN;
        
END;
$$;


ALTER FUNCTION public.sea_bibliography_data(p_controlnumber integer, p_content character varying, p_libraryunit integer, p_tags character varying) OWNER TO postgres;

--
-- Name: sea_multas_em_aberto(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION sea_multas_em_aberto(p_codigo_da_pessoa integer) RETURNS SETOF type_multas_em_aberto
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_select varchar;
    v_line type_multas_em_aberto;
BEGIN

    -- Funcao para buscar as multas em aberto. Será utilizado pelo SAGU
    v_select := 'SELECT F.fineId as codigodamulta , F.loanId as codigodoemprestimo, F.value as valor, F.observation as observacao, F.begindate as datahora FROM gtcFine F INNER JOIN gtcLoan L ON (F.loanId = L.loanId) WHERE L.personId = ' || p_codigo_da_pessoa || ' AND F.fineStatusId = 1';

    FOR v_line IN EXECUTE v_select
    LOOP
        RETURN NEXT v_line;
    END LOOP;
END;
$$;


ALTER FUNCTION public.sea_multas_em_aberto(p_codigo_da_pessoa integer) OWNER TO postgres;

--
-- Name: syncdatabase(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION syncdatabase(p_applicationversion integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    line RECORD;
    result_change BOOLEAN;
BEGIN
    --Percorre comandos que não foram executados e aplica na base
    FOR line IN  SELECT * 
                   FROM dbchanges 
                  WHERE applied IS false 
                    AND applicationversion <= p_applicationversion 
               ORDER BY orderchange
    LOOP
        SELECT INTO result_change applyChanges(line.change, line.changeid);

        IF result_change IS TRUE
        THEN
            EXECUTE 'UPDATE dbchanges SET applied = true, error = null, applieddate = now() WHERE changeId = '|| line.changeid || '';
        END IF;

    END LOOP;

    RETURN True;
END;
$$;


ALTER FUNCTION public.syncdatabase(p_applicationversion integer) OWNER TO postgres;

--
-- Name: unaccent(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION unaccent(text) RETURNS text
    LANGUAGE plpgsql
    AS $_$
BEGIN
    RETURN translate($1, 'áàâãäéèêëíìïóòôõöúùûüÁÀÂÃÄÉÈÊËÍÌÏÓÒÔÕÖÚÙÛÜçÇñÑ', 'aaaaaeeeeiiiooooouuuuAAAAAEEEEIIIOOOOOUUUUcCnN');
END;
$_$;


ALTER FUNCTION public.unaccent(text) OWNER TO postgres;

--
-- Name: unmaskcpf(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION unmaskcpf(p_cpf text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
    RETURN lpad( regexp_replace( p_cpf, '[^0-9]', '', 'gi'),  11, '0');
END;
 $$;


ALTER FUNCTION public.unmaskcpf(p_cpf text) OWNER TO postgres;

--
-- Name: upd_gerar_boleto_multa(integer, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION upd_gerar_boleto_multa(p_codigo_da_multa integer, p_operador character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_select varchar;
    v_line gtcFine;
BEGIN

    -- Funcao para pagar uma multa em aberto. Será utilizado pelo SAGU

    SELECT INTO v_line * from gtcFine where fineId = p_codigo_da_multa;

    IF ( v_line.fineStatusId = 2 )
    THEN
        raise exception 'Não foi possível gerar o boleto da multa % pois ela está como paga.', v_line.fineId;
        return FALSE;
    END IF;

    IF ( v_line.fineStatusId = 4 )
    THEN
        raise exception 'Não foi possível gerar o boleto da multa % pois ela está como abonada.', v_line.fineId;
        return FALSE;
    END IF;

    IF ( v_line.fineStatusId = 3 )
    THEN
        raise exception 'Não foi possível gerar o boleto da multa % pois ela está como paga via boleto.', v_line.fineId;
        return FALSE;
    END IF;

    UPDATE gtcFine SET fineStatusId = 3, enddate = now() where fineId = p_codigo_da_multa;
    INSERT INTO gtcFineStatusHistory (fineid, finestatusid, date, operator) VALUES (p_codigo_da_multa, 3, now(), p_operador);

    return true;
END;
$$;


ALTER FUNCTION public.upd_gerar_boleto_multa(p_codigo_da_multa integer, p_operador character varying) OWNER TO postgres;

--
-- Name: upd_pagar_multa(integer, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION upd_pagar_multa(p_codigo_da_multa integer, p_operador character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_select varchar;
    v_line gtcFine;
BEGIN
    -- Funcao para pagar uma multa em aberto. Será utilizado pelo SAGU

    SELECT INTO v_line * from gtcFine where fineId = p_codigo_da_multa;

    IF ( v_line.fineStatusId = 2 OR v_line.fineStatusId = 3 )
    THEN
        raise exception 'Não foi possível pagar a multa % pois ela está como paga.', v_line.fineId;
        return FALSE;
    END IF;

    IF (v_line.fineStatusId = 4)
    THEN
        raise exception 'Não foi possível pagar a multa % pois ela está como abonada.', v_line.fineId;
        return FALSE;
    END IF;

    UPDATE gtcFine SET fineStatusId = 2, enddate = now() where fineId = p_codigo_da_multa;
    INSERT INTO gtcFineStatusHistory (fineid, finestatusid, date, operator) VALUES (p_codigo_da_multa, 2, now(), p_operador);

    return true;
END;
$$;


ALTER FUNCTION public.upd_pagar_multa(p_codigo_da_multa integer, p_operador character varying) OWNER TO postgres;

--
-- Name: updatesequences(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION updatesequences() RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
/**
  NAME: updateSequences
  PURPOSE: Atualizar todas as sequences do banco para os valores de acordo com a
  tabela que gerenciam, fazendo SELECT MAX(coluna_gerenciada) FROM tabela.

  REVISIONS:
  Ver       Date       Author            Description
  --------- ---------- ----------------- ------------------------------------
  1.0       09/07/2011 Alex Smith        1. Função criada.
*/
DECLARE
    v_row RECORD;
BEGIN
    FOR v_row IN SELECT DISTINCT 'SELECT setval(''' || REGEXP_REPLACE(pg_catalog.pg_get_expr(d.adbin, d.adrelid), '(^.*''([^'']*)[''].*$)',E'\\2') || ''', COALESCE((SELECT MAX(' || a.attname || ') FROM ' || n.nspname || '.' || c.relname || '), 1));' AS sqlToRun
                   FROM pg_catalog.pg_attribute a
             INNER JOIN pg_catalog.pg_attrdef d
                     ON d.adrelid = a.attrelid
                    AND d.adnum = a.attnum
                    AND a.atthasdef
             INNER JOIN pg_class c
                     ON a.attrelid = c.oid
              LEFT JOIN pg_catalog.pg_namespace n
                     ON n.oid = c.relnamespace
                  WHERE a.attnum > 0
                    AND NOT a.attisdropped
                    AND a.attislocal -- somente campos nao herdados
                    AND d.adsrc like '%nextval%' AND atttypid <> 1043 --somente campos que não são string
               ORDER BY 1
    LOOP
        RAISE NOTICE '%', v_row.sqlToRun;
        EXECUTE v_row.sqlToRun;
    END LOOP;

    RETURN TRUE;
END;
 $_$;


ALTER FUNCTION public.updatesequences() OWNER TO postgres;

--
-- Name: array_agg(anyelement); Type: AGGREGATE; Schema: public; Owner: postgres
--

CREATE AGGREGATE array_agg(anyelement) (
    SFUNC = array_append,
    STYPE = anyarray,
    INITCOND = '{}'
);


ALTER AGGREGATE public.array_agg(anyelement) OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: baslog; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE baslog (
    username character varying(20) DEFAULT "current_user"(),
    datetime timestamp with time zone DEFAULT now(),
    ipaddress inet
);


ALTER TABLE public.baslog OWNER TO postgres;

--
-- Name: TABLE baslog; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE baslog IS 'Registro de acessos e modificações aos registros.';


--
-- Name: COLUMN baslog.username; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN baslog.username IS 'nome do usuário';


--
-- Name: COLUMN baslog.datetime; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN baslog.datetime IS 'Data do registo';


--
-- Name: seq_cityid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_cityid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_cityid OWNER TO postgres;

--
-- Name: seq_cityid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_cityid', 11118, true);


--
-- Name: bascity; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bascity (
    cityid integer DEFAULT nextval('seq_cityid'::regclass) NOT NULL,
    name text NOT NULL,
    zipcode character varying(9),
    stateid character varying(2) NOT NULL,
    countryid character varying(3) NOT NULL,
    ibgeid integer
)
INHERITS (baslog);


ALTER TABLE public.bascity OWNER TO postgres;

--
-- Name: TABLE bascity; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bascity IS 'Cidade';


--
-- Name: COLUMN bascity.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascity.cityid IS 'Código da cidade';


--
-- Name: COLUMN bascity.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascity.name IS 'Nome da cidade.';


--
-- Name: COLUMN bascity.zipcode; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascity.zipcode IS 'CEP - Código de Endereçamento Postal';


--
-- Name: COLUMN bascity.stateid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascity.stateid IS 'Código do estado.';


--
-- Name: COLUMN bascity.countryid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascity.countryid IS 'código do pais';


--
-- Name: COLUMN bascity.ibgeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascity.ibgeid IS 'Código do ibge';


--
-- Name: basconfig; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE basconfig (
    username character varying(20) DEFAULT "current_user"(),
    datetime timestamp with time zone DEFAULT now(),
    ipaddress inet,
    moduleconfig text NOT NULL,
    parameter text NOT NULL,
    value text,
    description text NOT NULL,
    type character varying(50) NOT NULL,
    groupby character varying(50),
    orderby integer,
    label character varying(50),
    CONSTRAINT chk_basconfig_groupby CHECK (gtc_chk_domain('ABAS_PREFERENCIA'::character varying, groupby))
)
INHERITS (baslog);


ALTER TABLE public.basconfig OWNER TO postgres;

--
-- Name: TABLE basconfig; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE basconfig IS 'configurações do sistema';


--
-- Name: COLUMN basconfig.moduleconfig; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basconfig.moduleconfig IS 'Modulo do parâmetro';


--
-- Name: COLUMN basconfig.parameter; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basconfig.parameter IS 'Parametro';


--
-- Name: COLUMN basconfig.value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basconfig.value IS 'Valor';


--
-- Name: COLUMN basconfig.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basconfig.description IS 'Descricao do parametro';


--
-- Name: COLUMN basconfig.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basconfig.type IS 'Tipo do parametro';


--
-- Name: COLUMN basconfig.groupby; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basconfig.groupby IS 'Agrupa os parametros para uma tela de pesquisa mais amigavel';


--
-- Name: COLUMN basconfig.orderby; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basconfig.orderby IS 'Ordem em que a preferancia ira aparecer dentro do grupo. O numero mais baixo vem antes';


--
-- Name: COLUMN basconfig.label; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basconfig.label IS 'Rotulo do campo que sera exibido na interface de preferencias';


--
-- Name: bascountry; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE bascountry (
    countryid character varying(3) NOT NULL,
    name character varying(50) NOT NULL,
    nationality character varying(30) NOT NULL,
    currency character varying(20),
    pluralcurrency character varying(20),
    decimaldescription character varying(20),
    pluraldecimaldescription character varying(20),
    currencysymbol character varying(20)
)
INHERITS (baslog);


ALTER TABLE public.bascountry OWNER TO postgres;

--
-- Name: TABLE bascountry; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE bascountry IS 'País';


--
-- Name: COLUMN bascountry.countryid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascountry.countryid IS 'Código do país';


--
-- Name: COLUMN bascountry.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascountry.name IS 'nome';


--
-- Name: COLUMN bascountry.nationality; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascountry.nationality IS 'nacionalidade';


--
-- Name: COLUMN bascountry.currency; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascountry.currency IS 'Moeda Ex. Real';


--
-- Name: COLUMN bascountry.pluralcurrency; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascountry.pluralcurrency IS 'moeda no plural (Ex. Reais)';


--
-- Name: COLUMN bascountry.decimaldescription; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascountry.decimaldescription IS 'Descrição decimal (Ex. centavo)';


--
-- Name: COLUMN bascountry.pluraldecimaldescription; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascountry.pluraldecimaldescription IS 'Descrição decimal no plural (Ex. centavos)';


--
-- Name: COLUMN bascountry.currencysymbol; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN bascountry.currencysymbol IS 'Simbolo da moeda Ex. R$';


--
-- Name: basdocument; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE basdocument (
    username character varying(20) DEFAULT "current_user"(),
    datetime timestamp with time zone DEFAULT now(),
    ipaddress inet,
    personid bigint NOT NULL,
    documenttypeid integer NOT NULL,
    content text,
    organ character varying(15),
    dateexpedition date,
    observation text,
    obs text,
    cityid integer,
    isexcused boolean,
    isdelivered boolean
)
INHERITS (baslog);


ALTER TABLE public.basdocument OWNER TO postgres;

--
-- Name: TABLE basdocument; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE basdocument IS 'Documentos da pessoa.';


--
-- Name: COLUMN basdocument.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocument.personid IS 'Código da pessoa.';


--
-- Name: COLUMN basdocument.documenttypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocument.documenttypeid IS 'Tipo de documento.';


--
-- Name: COLUMN basdocument.content; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocument.content IS 'Conteúdo do documento.';


--
-- Name: COLUMN basdocument.organ; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocument.organ IS 'Orgão expedidor.';


--
-- Name: COLUMN basdocument.dateexpedition; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocument.dateexpedition IS 'Data de expedição.';


--
-- Name: COLUMN basdocument.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocument.obs IS 'Observação.';


--
-- Name: seq_documenttypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_documenttypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_documenttypeid OWNER TO postgres;

--
-- Name: seq_documenttypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_documenttypeid', 1, false);


--
-- Name: basdocumenttype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE basdocumenttype (
    username character varying(20) DEFAULT "current_user"(),
    datetime timestamp with time zone DEFAULT now(),
    ipaddress inet,
    documenttypeid integer DEFAULT nextval('seq_documenttypeid'::regclass) NOT NULL,
    name text NOT NULL,
    mask text,
    persontype character(1) NOT NULL,
    sex character(1),
    minage integer,
    maxage integer,
    needdeliver boolean DEFAULT true NOT NULL,
    isblockenroll boolean DEFAULT false NOT NULL,
    fillhint text
)
INHERITS (baslog);


ALTER TABLE public.basdocumenttype OWNER TO postgres;

--
-- Name: TABLE basdocumenttype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE basdocumenttype IS 'Tipo de documento ';


--
-- Name: COLUMN basdocumenttype.documenttypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.documenttypeid IS 'código do tipo de documento.';


--
-- Name: COLUMN basdocumenttype.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.name IS 'Nome do tipo de documento.';


--
-- Name: COLUMN basdocumenttype.mask; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.mask IS 'Máscara';


--
-- Name: COLUMN basdocumenttype.persontype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.persontype IS 'Tipo de pessoa';


--
-- Name: COLUMN basdocumenttype.sex; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.sex IS 'sexo que deve ter este documento.';


--
-- Name: COLUMN basdocumenttype.minage; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.minage IS 'idade mínima';


--
-- Name: COLUMN basdocumenttype.maxage; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.maxage IS 'idade máxima';


--
-- Name: COLUMN basdocumenttype.needdeliver; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.needdeliver IS 'precisa de entrega';


--
-- Name: COLUMN basdocumenttype.isblockenroll; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.isblockenroll IS 'bloqueia matricula';


--
-- Name: COLUMN basdocumenttype.fillhint; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basdocumenttype.fillhint IS 'dica de preenchimento';


--
-- Name: basdomain; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE basdomain (
    username character varying(20) DEFAULT "current_user"(),
    datetime timestamp with time zone DEFAULT now(),
    ipaddress inet,
    domainid character varying(100) NOT NULL,
    sequence integer NOT NULL,
    key character varying(100) NOT NULL,
    abbreviated character varying(100) NOT NULL,
    label character varying(255) NOT NULL
)
INHERITS (baslog);


ALTER TABLE public.basdomain OWNER TO postgres;

--
-- Name: TABLE basdomain; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE basdomain IS 'armazena os dominios do sistema';


--
-- Name: seq_linkid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_linkid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_linkid OWNER TO postgres;

--
-- Name: seq_linkid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_linkid', 2, true);


--
-- Name: baslink; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE baslink (
    username character varying(20) DEFAULT "current_user"(),
    datetime timestamp with time zone DEFAULT now(),
    ipaddress inet,
    linkid integer DEFAULT nextval('seq_linkid'::regclass) NOT NULL,
    description text,
    level integer,
    isvisibletoperson boolean,
    isoperator boolean
)
INHERITS (baslog);


ALTER TABLE public.baslink OWNER TO postgres;

--
-- Name: seq_locationtypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_locationtypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_locationtypeid OWNER TO postgres;

--
-- Name: seq_locationtypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_locationtypeid', 1, false);


--
-- Name: baslocationtype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE baslocationtype (
    locationtypeid integer DEFAULT nextval('seq_locationtypeid'::regclass) NOT NULL,
    name character varying(30) NOT NULL
);


ALTER TABLE public.baslocationtype OWNER TO postgres;

--
-- Name: TABLE baslocationtype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE baslocationtype IS 'tipo de Local';


--
-- Name: COLUMN baslocationtype.locationtypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN baslocationtype.locationtypeid IS 'código do tipo de locação';


--
-- Name: COLUMN baslocationtype.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN baslocationtype.name IS 'nome do tipo do locação';


--
-- Name: seq_personid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_personid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_personid OWNER TO postgres;

--
-- Name: seq_personid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_personid', 1, false);


--
-- Name: basperson; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE basperson (
    username character varying(20) DEFAULT "current_user"(),
    datetime timestamp with time zone DEFAULT now(),
    ipaddress inet,
    personid bigint DEFAULT nextval('seq_personid'::regclass) NOT NULL,
    name character varying(100) NOT NULL,
    zipcode character varying(9),
    location text,
    number character varying(10),
    complement character varying(60),
    neighborhood text,
    email character varying(60),
    password character varying(100),
    login character varying(50),
    persondv integer,
    personmask integer,
    shortname character varying(30),
    cityid integer,
    emailalternative character varying(60),
    url text,
    datein date DEFAULT now(),
    isallowpersonaldata boolean DEFAULT true,
    locationtypeid integer NOT NULL,
    sentemail boolean,
    obs text,
    photoid integer
)
INHERITS (baslog);


ALTER TABLE public.basperson OWNER TO postgres;

--
-- Name: TABLE basperson; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE basperson IS 'Pessoas';


--
-- Name: COLUMN basperson.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.personid IS 'Codigo da pessoa';


--
-- Name: COLUMN basperson.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.name IS 'Nome';


--
-- Name: COLUMN basperson.zipcode; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.zipcode IS 'CEP';


--
-- Name: COLUMN basperson.location; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.location IS 'Logradouro';


--
-- Name: COLUMN basperson.number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.number IS 'Numero';


--
-- Name: COLUMN basperson.complement; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.complement IS 'Complemento';


--
-- Name: COLUMN basperson.neighborhood; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.neighborhood IS 'Bairro';


--
-- Name: COLUMN basperson.email; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.email IS 'Email';


--
-- Name: COLUMN basperson.password; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.password IS 'Senha para acesso aos processo on-line';


--
-- Name: COLUMN basperson.login; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.login IS 'Campo com login do usuário.';


--
-- Name: COLUMN basperson.persondv; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.persondv IS 'Digito verificador da pessoa.';


--
-- Name: COLUMN basperson.personmask; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.personmask IS 'máscara da pessoa???';


--
-- Name: COLUMN basperson.shortname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.shortname IS 'Apelido';


--
-- Name: COLUMN basperson.cityid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.cityid IS 'Codigo da cidade';


--
-- Name: COLUMN basperson.emailalternative; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.emailalternative IS 'email alternativo';


--
-- Name: COLUMN basperson.url; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.url IS 'url de site, blog, facebook, etc.';


--
-- Name: COLUMN basperson.datein; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.datein IS 'Data de criação/entrada do registro';


--
-- Name: COLUMN basperson.isallowpersonaldata; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.isallowpersonaldata IS 'é permitido mostrar informações pessoais?';


--
-- Name: COLUMN basperson.locationtypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.locationtypeid IS 'código do tipo de locação.';


--
-- Name: COLUMN basperson.sentemail; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.sentemail IS 'se permite envio de emails';


--
-- Name: COLUMN basperson.obs; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basperson.obs IS 'Observações.';


--
-- Name: baspersonlink; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE baspersonlink (
    username character varying(20) DEFAULT "current_user"(),
    datetime timestamp with time zone DEFAULT now(),
    ipaddress inet,
    personid bigint NOT NULL,
    linkid integer NOT NULL,
    datevalidate date
)
INHERITS (baslog);


ALTER TABLE public.baspersonlink OWNER TO postgres;

--
-- Name: TABLE baspersonlink; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE baspersonlink IS 'vinculos das pessoas';


--
-- Name: COLUMN baspersonlink.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN baspersonlink.personid IS 'Codigo da pessoa';


--
-- Name: COLUMN baspersonlink.linkid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN baspersonlink.linkid IS 'Codigo do vinculo';


--
-- Name: COLUMN baspersonlink.datevalidate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN baspersonlink.datevalidate IS 'Data de validade';


--
-- Name: seq_phoneid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_phoneid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_phoneid OWNER TO postgres;

--
-- Name: seq_phoneid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_phoneid', 1, false);


--
-- Name: basphone; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE basphone (
    username character varying(20) DEFAULT "current_user"(),
    datetime timestamp with time zone DEFAULT now(),
    ipaddress inet,
    personid bigint NOT NULL,
    type character varying(100) NOT NULL,
    phone character varying(20) NOT NULL,
    phoneid integer DEFAULT nextval('seq_phoneid'::regclass) NOT NULL,
    CONSTRAINT chk_basphone_type CHECK (gtc_chk_domain('TIPO_DE_TELEFONE'::character varying, type))
)
INHERITS (baslog);


ALTER TABLE public.basphone OWNER TO postgres;

--
-- Name: TABLE basphone; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE basphone IS 'armazena os telefones da pessoa';


--
-- Name: COLUMN basphone.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basphone.personid IS 'código da pessoa';


--
-- Name: COLUMN basphone.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basphone.type IS 'Tipo de telefone';


--
-- Name: COLUMN basphone.phone; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basphone.phone IS 'telefone da pessoa';


--
-- Name: COLUMN basphone.phoneid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basphone.phoneid IS 'Código do telefone';


--
-- Name: basphone_phoneid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE basphone_phoneid_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.basphone_phoneid_seq OWNER TO postgres;

--
-- Name: basphone_phoneid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE basphone_phoneid_seq OWNED BY basphone.phoneid;


--
-- Name: basphone_phoneid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('basphone_phoneid_seq', 1, false);


--
-- Name: basstate; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE basstate (
    stateid character varying(2) NOT NULL,
    countryid character varying(3) NOT NULL,
    name character varying(50) NOT NULL,
    ibgeid integer
)
INHERITS (baslog);


ALTER TABLE public.basstate OWNER TO postgres;

--
-- Name: TABLE basstate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE basstate IS 'estado';


--
-- Name: COLUMN basstate.stateid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basstate.stateid IS 'código do estado';


--
-- Name: COLUMN basstate.countryid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basstate.countryid IS 'código do país';


--
-- Name: COLUMN basstate.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basstate.name IS 'nome do estado';


--
-- Name: COLUMN basstate.ibgeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN basstate.ibgeid IS 'código do ibge';


--
-- Name: dbchanges; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE dbchanges (
    changeid integer NOT NULL,
    change text NOT NULL,
    applied boolean DEFAULT false NOT NULL,
    applicationversion integer NOT NULL,
    orderchange integer,
    error text,
    applieddate timestamp without time zone
);


ALTER TABLE public.dbchanges OWNER TO postgres;

--
-- Name: dbchanges_changeid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE dbchanges_changeid_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.dbchanges_changeid_seq OWNER TO postgres;

--
-- Name: dbchanges_changeid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE dbchanges_changeid_seq OWNED BY dbchanges.changeid;


--
-- Name: dbchanges_changeid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('dbchanges_changeid_seq', 101, true);


--
-- Name: seq_analyticsid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_analyticsid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_analyticsid OWNER TO postgres;

--
-- Name: seq_analyticsid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_analyticsid', 25, true);


--
-- Name: gtcanalytics; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcanalytics (
    analyticsid integer DEFAULT nextval('seq_analyticsid'::regclass) NOT NULL,
    query text,
    action text,
    event text,
    libraryunitid integer,
    operator character varying(30),
    personid bigint,
    "time" timestamp without time zone,
    ip text,
    browser text,
    loglevel integer NOT NULL,
    accesstype integer NOT NULL,
    menu text,
    timespent double precision
);


ALTER TABLE public.gtcanalytics OWNER TO postgres;

--
-- Name: TABLE gtcanalytics; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcanalytics IS 'Tabela que registra acessos (termos pesquisados e erros) ao sistemas.
Utilizada para estatísticas.';


--
-- Name: COLUMN gtcanalytics.analyticsid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.analyticsid IS 'Código do registro.';


--
-- Name: COLUMN gtcanalytics.query; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.query IS 'A intrução do navegador.';


--
-- Name: COLUMN gtcanalytics.action; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.action IS 'Ação do miolo.';


--
-- Name: COLUMN gtcanalytics.event; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.event IS 'Evento do miolo.';


--
-- Name: COLUMN gtcanalytics.libraryunitid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.libraryunitid IS 'Unidade de bibllioteca logada.';


--
-- Name: COLUMN gtcanalytics.operator; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.operator IS 'Operador.';


--
-- Name: COLUMN gtcanalytics.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.personid IS 'Código da pessoa.';


--
-- Name: COLUMN gtcanalytics."time"; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics."time" IS 'Data e Hora de registro.';


--
-- Name: COLUMN gtcanalytics.ip; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.ip IS 'Ip de acesso.';


--
-- Name: COLUMN gtcanalytics.browser; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.browser IS 'Navegador.';


--
-- Name: COLUMN gtcanalytics.loglevel; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.loglevel IS 'Nível de registro.';


--
-- Name: COLUMN gtcanalytics.accesstype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.accesstype IS 'Tipo de acesso.';


--
-- Name: COLUMN gtcanalytics.menu; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.menu IS 'Título do menu.';


--
-- Name: COLUMN gtcanalytics.timespent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcanalytics.timespent IS 'Tempo dispendido.';


--
-- Name: seq_associationid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_associationid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_associationid OWNER TO postgres;

--
-- Name: seq_associationid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_associationid', 1, false);


--
-- Name: gtcassociation; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcassociation (
    associationid integer DEFAULT nextval('seq_associationid'::regclass) NOT NULL,
    description character varying
);


ALTER TABLE public.gtcassociation OWNER TO postgres;

--
-- Name: seq_backgroundtasklogid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_backgroundtasklogid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_backgroundtasklogid OWNER TO postgres;

--
-- Name: seq_backgroundtasklogid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_backgroundtasklogid', 1, false);


--
-- Name: gtcbackgroundtasklog; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcbackgroundtasklog (
    backgroundtasklogid integer DEFAULT nextval('seq_backgroundtasklogid'::regclass) NOT NULL,
    begindate timestamp without time zone NOT NULL,
    enddate timestamp without time zone,
    task character varying NOT NULL,
    label character varying NOT NULL,
    status integer NOT NULL,
    message character varying,
    operator character varying NOT NULL,
    args character varying,
    libraryunitid integer,
    CONSTRAINT chk_gtcbackgroundtasklog_status CHECK (gtc_chk_domain('BACKGROUND_TASK_STATUS'::character varying, (status)::character varying))
);


ALTER TABLE public.gtcbackgroundtasklog OWNER TO postgres;

--
-- Name: TABLE gtcbackgroundtasklog; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcbackgroundtasklog IS 'armazena os logs executados pela tarefa de background';


--
-- Name: COLUMN gtcbackgroundtasklog.backgroundtasklogid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcbackgroundtasklog.backgroundtasklogid IS 'Codigo da tarefa ';


--
-- Name: gtcbackgroundtasklog_backgroundtasklogid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE gtcbackgroundtasklog_backgroundtasklogid_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.gtcbackgroundtasklog_backgroundtasklogid_seq OWNER TO postgres;

--
-- Name: gtcbackgroundtasklog_backgroundtasklogid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE gtcbackgroundtasklog_backgroundtasklogid_seq OWNED BY gtcbackgroundtasklog.backgroundtasklogid;


--
-- Name: gtcbackgroundtasklog_backgroundtasklogid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('gtcbackgroundtasklog_backgroundtasklogid_seq', 1, false);


--
-- Name: seq_cataloguingformatid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_cataloguingformatid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_cataloguingformatid OWNER TO postgres;

--
-- Name: seq_cataloguingformatid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_cataloguingformatid', 1, true);


--
-- Name: gtccataloguingformat; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtccataloguingformat (
    cataloguingformatid integer DEFAULT nextval('seq_cataloguingformatid'::regclass) NOT NULL,
    description character varying NOT NULL,
    observation character varying
);


ALTER TABLE public.gtccataloguingformat OWNER TO postgres;

--
-- Name: TABLE gtccataloguingformat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtccataloguingformat IS 'tabela para separadores';


--
-- Name: seq_classificationareaid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_classificationareaid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_classificationareaid OWNER TO postgres;

--
-- Name: seq_classificationareaid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_classificationareaid', 1, false);


--
-- Name: gtcclassificationarea; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcclassificationarea (
    classificationareaid integer DEFAULT nextval('seq_classificationareaid'::regclass) NOT NULL,
    areaname character varying(50) NOT NULL,
    classification text,
    ignoreclassification text
);


ALTER TABLE public.gtcclassificationarea OWNER TO postgres;

--
-- Name: TABLE gtcclassificationarea; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcclassificationarea IS 'area de classificacao';


--
-- Name: COLUMN gtcclassificationarea.classificationareaid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcclassificationarea.classificationareaid IS 'Identificacao da classifica';


--
-- Name: COLUMN gtcclassificationarea.areaname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcclassificationarea.areaname IS 'Nome da area de classificacao';


--
-- Name: COLUMN gtcclassificationarea.classification; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcclassificationarea.classification IS 'Classificacoess separadas por virgula e com percente para caracter de truncamento';


--
-- Name: COLUMN gtcclassificationarea.ignoreclassification; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcclassificationarea.ignoreclassification IS 'Ignorar classificacoes separadas por virgula e com percente para caracter de truncamento';


--
-- Name: seq_controlfielddetailid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_controlfielddetailid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_controlfielddetailid OWNER TO postgres;

--
-- Name: seq_controlfielddetailid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_controlfielddetailid', 64, true);


--
-- Name: gtccontrolfielddetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtccontrolfielddetail (
    controlfielddetailid integer DEFAULT nextval('seq_controlfielddetailid'::regclass) NOT NULL,
    fieldid character varying(3) NOT NULL,
    subfieldid character varying(1) NOT NULL,
    beginposition integer NOT NULL,
    lenght integer NOT NULL,
    description character varying(100) NOT NULL,
    categoryid character varying(2) NOT NULL,
    marctaglistid character varying,
    isactive boolean,
    defaultvalue character varying,
    emptyvalue character varying(50)
);


ALTER TABLE public.gtccontrolfielddetail OWNER TO postgres;

--
-- Name: TABLE gtccontrolfielddetail; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtccontrolfielddetail IS 'Registra forma padrão de montagem de campos de controle Marc. Ex.:000 e 008';


--
-- Name: seq_costcenterid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_costcenterid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_costcenterid OWNER TO postgres;

--
-- Name: seq_costcenterid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_costcenterid', 1, false);


--
-- Name: gtccostcenter; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtccostcenter (
    costcenterid integer DEFAULT nextval('seq_costcenterid'::regclass) NOT NULL,
    libraryunitid integer,
    description character varying(255) NOT NULL
);


ALTER TABLE public.gtccostcenter OWNER TO postgres;

--
-- Name: TABLE gtccostcenter; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtccostcenter IS 'centro de custo';


--
-- Name: gtccutter; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtccutter (
    abbreviation character varying NOT NULL,
    code integer NOT NULL
);


ALTER TABLE public.gtccutter OWNER TO postgres;

--
-- Name: TABLE gtccutter; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtccutter IS 'tabela cutter';


--
-- Name: seq_dictionaryid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_dictionaryid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_dictionaryid OWNER TO postgres;

--
-- Name: seq_dictionaryid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_dictionaryid', 1, false);


--
-- Name: gtcdictionary; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcdictionary (
    dictionaryid integer DEFAULT nextval('seq_dictionaryid'::regclass) NOT NULL,
    description character varying NOT NULL,
    tags text,
    readonly boolean
);


ALTER TABLE public.gtcdictionary OWNER TO postgres;

--
-- Name: TABLE gtcdictionary; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcdictionary IS 'dicion';


--
-- Name: seq_dictionarycontentid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_dictionarycontentid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_dictionarycontentid OWNER TO postgres;

--
-- Name: seq_dictionarycontentid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_dictionarycontentid', 1, false);


--
-- Name: gtcdictionarycontent; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcdictionarycontent (
    dictionarycontentid integer DEFAULT nextval('seq_dictionarycontentid'::regclass) NOT NULL,
    dictionaryid integer NOT NULL,
    dictionarycontent text NOT NULL
);


ALTER TABLE public.gtcdictionarycontent OWNER TO postgres;

--
-- Name: TABLE gtcdictionarycontent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcdictionarycontent IS 'dicion';


--
-- Name: seq_dictionaryrelatedcontentid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_dictionaryrelatedcontentid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_dictionaryrelatedcontentid OWNER TO postgres;

--
-- Name: seq_dictionaryrelatedcontentid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_dictionaryrelatedcontentid', 1, false);


--
-- Name: gtcdictionaryrelatedcontent; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcdictionaryrelatedcontent (
    dictionaryrelatedcontentid integer DEFAULT nextval('seq_dictionaryrelatedcontentid'::regclass) NOT NULL,
    dictionarycontentid integer NOT NULL,
    relatedcontent character varying
);


ALTER TABLE public.gtcdictionaryrelatedcontent OWNER TO postgres;

--
-- Name: TABLE gtcdictionaryrelatedcontent; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcdictionaryrelatedcontent IS 'dicion';


--
-- Name: gtcemailcontroldelayedloan; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcemailcontroldelayedloan (
    loanid integer,
    lastsent timestamp without time zone NOT NULL,
    amountsent integer NOT NULL
);


ALTER TABLE public.gtcemailcontroldelayedloan OWNER TO postgres;

--
-- Name: gtcemailcontrolnotifyaquisition; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcemailcontrolnotifyaquisition (
    personid bigint,
    lastsent timestamp without time zone NOT NULL
);


ALTER TABLE public.gtcemailcontrolnotifyaquisition OWNER TO postgres;

--
-- Name: gtcexemplarycontrol; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcexemplarycontrol (
    controlnumber integer NOT NULL,
    itemnumber character varying(20) NOT NULL,
    originallibraryunitid integer NOT NULL,
    libraryunitid integer NOT NULL,
    acquisitiontype character varying(1) NOT NULL,
    exemplarystatusid integer NOT NULL,
    materialgenderid integer,
    materialtypeid integer,
    materialphysicaltypeid integer,
    entrancedate date,
    lowdate date,
    line integer,
    observation text
);


ALTER TABLE public.gtcexemplarycontrol OWNER TO postgres;

--
-- Name: TABLE gtcexemplarycontrol; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcexemplarycontrol IS 'armazena os exemplares';


--
-- Name: COLUMN gtcexemplarycontrol.controlnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarycontrol.controlnumber IS 'Identificador da obra';


--
-- Name: COLUMN gtcexemplarycontrol.itemnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarycontrol.itemnumber IS 'Descri';


--
-- Name: COLUMN gtcexemplarycontrol.libraryunitid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarycontrol.libraryunitid IS 'Codigo da unidade';


--
-- Name: COLUMN gtcexemplarycontrol.acquisitiontype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarycontrol.acquisitiontype IS 'Tipo de aquisicao';


--
-- Name: COLUMN gtcexemplarycontrol.exemplarystatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarycontrol.exemplarystatusid IS 'C';


--
-- Name: seq_exemplaryfuturestatusdefinedid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_exemplaryfuturestatusdefinedid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_exemplaryfuturestatusdefinedid OWNER TO postgres;

--
-- Name: seq_exemplaryfuturestatusdefinedid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_exemplaryfuturestatusdefinedid', 1, false);


--
-- Name: gtcexemplaryfuturestatusdefined; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcexemplaryfuturestatusdefined (
    exemplaryfuturestatusdefinedid integer DEFAULT nextval('seq_exemplaryfuturestatusdefinedid'::regclass) NOT NULL,
    exemplarystatusid integer,
    itemnumber character varying(20),
    applied boolean,
    date timestamp without time zone,
    operator character varying(30),
    observation text,
    cancelreserveemailobservation text
);


ALTER TABLE public.gtcexemplaryfuturestatusdefined OWNER TO postgres;

--
-- Name: TABLE gtcexemplaryfuturestatusdefined; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcexemplaryfuturestatusdefined IS '
';


--
-- Name: seq_exemplarystatusid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_exemplarystatusid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_exemplarystatusid OWNER TO postgres;

--
-- Name: seq_exemplarystatusid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_exemplarystatusid', 17, true);


--
-- Name: gtcexemplarystatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcexemplarystatus (
    exemplarystatusid integer DEFAULT nextval('seq_exemplarystatusid'::regclass) NOT NULL,
    description character varying(40) NOT NULL,
    mask character varying(40),
    level integer,
    executeloan boolean,
    momentaryloan boolean,
    daysofmomentaryloan integer,
    executereserve boolean,
    executereserveininitiallevel boolean,
    meetreserve boolean,
    isreservestatus boolean,
    islowstatus boolean,
    observation text,
    schedulechangestatusforrequest boolean
);


ALTER TABLE public.gtcexemplarystatus OWNER TO postgres;

--
-- Name: TABLE gtcexemplarystatus; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcexemplarystatus IS 'estado dos exemplares';


--
-- Name: COLUMN gtcexemplarystatus.exemplarystatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarystatus.exemplarystatusid IS 'Identificador do status';


--
-- Name: COLUMN gtcexemplarystatus.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarystatus.description IS 'descri';


--
-- Name: COLUMN gtcexemplarystatus.level; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarystatus.level IS 'Nivel definido como: 1 - Inicial e 2 - Transicao';


--
-- Name: COLUMN gtcexemplarystatus.executeloan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarystatus.executeloan IS 'Define se neste estado o material podera ser emprestado.';


--
-- Name: COLUMN gtcexemplarystatus.momentaryloan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarystatus.momentaryloan IS 'Se permite que o estado seja emprestado para o Xerox, etc.';


--
-- Name: COLUMN gtcexemplarystatus.meetreserve; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarystatus.meetreserve IS 'Se for true e um livro for devolvido para este estado ele executara o processo de atender reserva';


--
-- Name: gtcexemplarystatushistory; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcexemplarystatushistory (
    itemnumber character varying(20) NOT NULL,
    exemplarystatusid integer NOT NULL,
    libraryunitid integer NOT NULL,
    date timestamp without time zone NOT NULL,
    operator character varying(30) NOT NULL
);


ALTER TABLE public.gtcexemplarystatushistory OWNER TO postgres;

--
-- Name: TABLE gtcexemplarystatushistory; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcexemplarystatushistory IS 'mantem o historico das trocas de estado';


--
-- Name: COLUMN gtcexemplarystatushistory.itemnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarystatushistory.itemnumber IS 'Identifica';


--
-- Name: COLUMN gtcexemplarystatushistory.exemplarystatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarystatushistory.exemplarystatusid IS 'Estado do exemplar';


--
-- Name: COLUMN gtcexemplarystatushistory.date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcexemplarystatushistory.date IS 'Cado o exemplar volta ela se torna confirmada';


--
-- Name: gtcfavorite; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcfavorite (
    personid bigint NOT NULL,
    controlnumber integer NOT NULL,
    entracedate timestamp without time zone
);


ALTER TABLE public.gtcfavorite OWNER TO postgres;

--
-- Name: TABLE gtcfavorite; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcfavorite IS 'materiais favoritos do usu';


--
-- Name: COLUMN gtcfavorite.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfavorite.personid IS 'Id da pessoa';


--
-- Name: COLUMN gtcfavorite.controlnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfavorite.controlnumber IS 'numero de controle';


--
-- Name: COLUMN gtcfavorite.entracedate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfavorite.entracedate IS 'Data de entrada';


--
-- Name: seq_fineid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_fineid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_fineid OWNER TO postgres;

--
-- Name: seq_fineid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_fineid', 1, false);


--
-- Name: gtcfine; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcfine (
    fineid integer DEFAULT nextval('seq_fineid'::regclass) NOT NULL,
    loanid integer NOT NULL,
    begindate timestamp without time zone NOT NULL,
    value numeric(10,2) NOT NULL,
    finestatusid integer NOT NULL,
    enddate timestamp without time zone,
    observation text
);


ALTER TABLE public.gtcfine OWNER TO postgres;

--
-- Name: TABLE gtcfine; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcfine IS 'multas';


--
-- Name: COLUMN gtcfine.fineid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfine.fineid IS 'Identificador da multa';


--
-- Name: COLUMN gtcfine.loanid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfine.loanid IS 'Identifica';


--
-- Name: COLUMN gtcfine.begindate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfine.begindate IS 'Data do registor da multa';


--
-- Name: COLUMN gtcfine.value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfine.value IS 'Valor total da multa. Deve vir calculada.';


--
-- Name: COLUMN gtcfine.finestatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfine.finestatusid IS 'Estado da multa. 1 - Em aberto. 2 - Abonada. 3 - Pago 4 - Pagamento via boleto';


--
-- Name: COLUMN gtcfine.enddate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfine.enddate IS 'Data do pagamento';


--
-- Name: seq_finestatusid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_finestatusid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_finestatusid OWNER TO postgres;

--
-- Name: seq_finestatusid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_finestatusid', 4, true);


--
-- Name: gtcfinestatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcfinestatus (
    finestatusid integer DEFAULT nextval('seq_finestatusid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcfinestatus OWNER TO postgres;

--
-- Name: TABLE gtcfinestatus; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcfinestatus IS 'estado da multa';


--
-- Name: COLUMN gtcfinestatus.finestatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfinestatus.finestatusid IS 'Identificador do estado da multa';


--
-- Name: COLUMN gtcfinestatus.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfinestatus.description IS 'Descri';


--
-- Name: gtcfinestatushistory; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcfinestatushistory (
    fineid integer NOT NULL,
    finestatusid integer NOT NULL,
    date timestamp without time zone NOT NULL,
    operator character varying(30) NOT NULL,
    observation text
);


ALTER TABLE public.gtcfinestatushistory OWNER TO postgres;

--
-- Name: TABLE gtcfinestatushistory; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcfinestatushistory IS 'mantem o historico das trocas de estado';


--
-- Name: COLUMN gtcfinestatushistory.fineid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfinestatushistory.fineid IS 'Identifica';


--
-- Name: COLUMN gtcfinestatushistory.finestatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfinestatushistory.finestatusid IS 'Estado da reserva';


--
-- Name: COLUMN gtcfinestatushistory.date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcfinestatushistory.date IS 'Cado o exemplar volta ela se torna confirmada';


--
-- Name: seq_formatbackofbookid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_formatbackofbookid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_formatbackofbookid OWNER TO postgres;

--
-- Name: seq_formatbackofbookid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_formatbackofbookid', 2, true);


--
-- Name: gtcformatbackofbook; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcformatbackofbook (
    formatbackofbookid integer DEFAULT nextval('seq_formatbackofbookid'::regclass) NOT NULL,
    description character varying(40) NOT NULL,
    format text NOT NULL,
    internalformat text
);


ALTER TABLE public.gtcformatbackofbook OWNER TO postgres;

--
-- Name: seq_formcontentid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_formcontentid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_formcontentid OWNER TO postgres;

--
-- Name: seq_formcontentid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_formcontentid', 5, true);


--
-- Name: gtcformcontent; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcformcontent (
    formcontentid integer DEFAULT nextval('seq_formcontentid'::regclass) NOT NULL,
    operator character varying,
    form character varying NOT NULL,
    name character varying,
    description character varying,
    formcontenttype integer NOT NULL
);


ALTER TABLE public.gtcformcontent OWNER TO postgres;

--
-- Name: gtcformcontentdetail; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcformcontentdetail (
    formcontentid character varying NOT NULL,
    field character varying NOT NULL,
    value character varying
);


ALTER TABLE public.gtcformcontentdetail OWNER TO postgres;

--
-- Name: seq_formcontenttypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_formcontenttypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_formcontenttypeid OWNER TO postgres;

--
-- Name: seq_formcontenttypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_formcontenttypeid', 3, true);


--
-- Name: gtcformcontenttype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcformcontenttype (
    formcontenttypeid integer DEFAULT nextval('seq_formcontenttypeid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcformcontenttype OWNER TO postgres;

--
-- Name: TABLE gtcformcontenttype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcformcontenttype IS 'identifica tipos de empr';


--
-- Name: COLUMN gtcformcontenttype.formcontenttypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcformcontenttype.formcontenttypeid IS 'Identificador do tipo de emprestimo';


--
-- Name: COLUMN gtcformcontenttype.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcformcontenttype.description IS 'Descri';


--
-- Name: gtcgeneralpolicy; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcgeneralpolicy (
    privilegegroupid integer NOT NULL,
    linkid integer NOT NULL,
    loangenerallimit integer,
    reservegenerallimit integer,
    reservegenerallimitininitiallevel integer
);


ALTER TABLE public.gtcgeneralpolicy OWNER TO postgres;

--
-- Name: gtchelp; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtchelp (
    helpid integer NOT NULL,
    form character varying(150) NOT NULL,
    subform character varying(150),
    help text NOT NULL,
    isactive boolean NOT NULL
);


ALTER TABLE public.gtchelp OWNER TO postgres;

--
-- Name: gtchelp_helpid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE gtchelp_helpid_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.gtchelp_helpid_seq OWNER TO postgres;

--
-- Name: gtchelp_helpid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE gtchelp_helpid_seq OWNED BY gtchelp.helpid;


--
-- Name: gtchelp_helpid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('gtchelp_helpid_seq', 4, true);


--
-- Name: seq_holidayid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_holidayid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_holidayid OWNER TO postgres;

--
-- Name: seq_holidayid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_holidayid', 3, true);


--
-- Name: gtcholiday; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcholiday (
    holidayid integer DEFAULT nextval('seq_holidayid'::regclass) NOT NULL,
    date date,
    description character varying,
    occursallyear boolean,
    libraryunitid integer
);


ALTER TABLE public.gtcholiday OWNER TO postgres;

--
-- Name: TABLE gtcholiday; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcholiday IS 'especifica o feriado para uma unidade. se for null vale para todas as unidades';


--
-- Name: seq_interchangeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_interchangeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_interchangeid OWNER TO postgres;

--
-- Name: seq_interchangeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_interchangeid', 1, false);


--
-- Name: gtcinterchange; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcinterchange (
    interchangeid integer DEFAULT nextval('seq_interchangeid'::regclass) NOT NULL,
    type character(1),
    supplierid integer NOT NULL,
    description character varying,
    date timestamp without time zone NOT NULL,
    interchangestatusid integer,
    interchangetypeid integer,
    operator character varying(30),
    CONSTRAINT gtcinterchange_type_check CHECK ((type = ANY (ARRAY['p'::bpchar, 'd'::bpchar])))
);


ALTER TABLE public.gtcinterchange OWNER TO postgres;

--
-- Name: TABLE gtcinterchange; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcinterchange IS 'permuta';


--
-- Name: COLUMN gtcinterchange.interchangeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterchange.interchangeid IS 'Identifica';


--
-- Name: COLUMN gtcinterchange.interchangetypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterchange.interchangetypeid IS '1 - Envio; 2 - Recebimento';


--
-- Name: seq_interchangeitemid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_interchangeitemid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_interchangeitemid OWNER TO postgres;

--
-- Name: seq_interchangeitemid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_interchangeitemid', 1, false);


--
-- Name: gtcinterchangeitem; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcinterchangeitem (
    interchangeitemid integer DEFAULT nextval('seq_interchangeitemid'::regclass) NOT NULL,
    interchangeid integer NOT NULL,
    controlnumber integer,
    content character varying
);


ALTER TABLE public.gtcinterchangeitem OWNER TO postgres;

--
-- Name: TABLE gtcinterchangeitem; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcinterchangeitem IS 'itens de permuta';


--
-- Name: COLUMN gtcinterchangeitem.interchangeitemid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterchangeitem.interchangeitemid IS 'Identifica';


--
-- Name: seq_interchangeobservationid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_interchangeobservationid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_interchangeobservationid OWNER TO postgres;

--
-- Name: seq_interchangeobservationid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_interchangeobservationid', 1, false);


--
-- Name: gtcinterchangeobservation; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcinterchangeobservation (
    interchangeobservationid integer DEFAULT nextval('seq_interchangeobservationid'::regclass) NOT NULL,
    interchangeid integer NOT NULL,
    observation text,
    date timestamp without time zone,
    operator character varying(30)
);


ALTER TABLE public.gtcinterchangeobservation OWNER TO postgres;

--
-- Name: TABLE gtcinterchangeobservation; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcinterchangeobservation IS 'observa';


--
-- Name: COLUMN gtcinterchangeobservation.interchangeobservationid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterchangeobservation.interchangeobservationid IS 'Identifica';


--
-- Name: seq_interchangestatusid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_interchangestatusid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_interchangestatusid OWNER TO postgres;

--
-- Name: seq_interchangestatusid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_interchangestatusid', 1, false);


--
-- Name: gtcinterchangestatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcinterchangestatus (
    interchangestatusid integer DEFAULT nextval('seq_interchangestatusid'::regclass) NOT NULL,
    description character varying(40) NOT NULL,
    interchangetypeid integer
);


ALTER TABLE public.gtcinterchangestatus OWNER TO postgres;

--
-- Name: TABLE gtcinterchangestatus; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcinterchangestatus IS 'estado da reserva';


--
-- Name: COLUMN gtcinterchangestatus.interchangestatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterchangestatus.interchangestatusid IS 'Identificador da situa';


--
-- Name: COLUMN gtcinterchangestatus.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterchangestatus.description IS 'Descri';


--
-- Name: seq_interchangetypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_interchangetypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_interchangetypeid OWNER TO postgres;

--
-- Name: seq_interchangetypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_interchangetypeid', 1, false);


--
-- Name: gtcinterchangetype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcinterchangetype (
    interchangetypeid integer DEFAULT nextval('seq_interchangetypeid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcinterchangetype OWNER TO postgres;

--
-- Name: TABLE gtcinterchangetype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcinterchangetype IS 'estado da reserva';


--
-- Name: COLUMN gtcinterchangetype.interchangetypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterchangetype.interchangetypeid IS 'Identificador da situa';


--
-- Name: COLUMN gtcinterchangetype.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterchangetype.description IS 'Descri';


--
-- Name: gtcinterestsarea; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcinterestsarea (
    personid bigint NOT NULL,
    classificationareaid integer NOT NULL,
    bud_dia2sql_ignorar integer
);


ALTER TABLE public.gtcinterestsarea OWNER TO postgres;

--
-- Name: TABLE gtcinterestsarea; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcinterestsarea IS 'define as ';


--
-- Name: COLUMN gtcinterestsarea.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterestsarea.personid IS 'C';


--
-- Name: COLUMN gtcinterestsarea.classificationareaid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcinterestsarea.classificationareaid IS 'C';


--
-- Name: gtckardexcontrol; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtckardexcontrol (
    controlnumber integer NOT NULL,
    codigodeassinante character varying(40),
    libraryunitid integer NOT NULL,
    acquisitiontype character varying(1) NOT NULL,
    vencimentodaassinatura date,
    datadaassinatura date,
    entrancedate date,
    line integer
);


ALTER TABLE public.gtckardexcontrol OWNER TO postgres;

--
-- Name: TABLE gtckardexcontrol; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtckardexcontrol IS 'armazena dados da cole';


--
-- Name: COLUMN gtckardexcontrol.controlnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtckardexcontrol.controlnumber IS 'Identificador da obra';


--
-- Name: COLUMN gtckardexcontrol.libraryunitid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtckardexcontrol.libraryunitid IS 'Codigo da unidade';


--
-- Name: COLUMN gtckardexcontrol.acquisitiontype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtckardexcontrol.acquisitiontype IS 'Tipo de aquisicao';


--
-- Name: seq_labellayoutid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_labellayoutid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_labellayoutid OWNER TO postgres;

--
-- Name: seq_labellayoutid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_labellayoutid', 98, true);


--
-- Name: gtclabellayout; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclabellayout (
    labellayoutid integer DEFAULT nextval('seq_labellayoutid'::regclass) NOT NULL,
    description character varying,
    topmargin double precision,
    leftmargin double precision,
    verticalspacing double precision,
    horizontalspacing double precision,
    height double precision,
    width double precision,
    lines double precision,
    columns double precision,
    pageformat character varying
);


ALTER TABLE public.gtclabellayout OWNER TO postgres;

--
-- Name: gtclibperson; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclibperson (
    personid bigint NOT NULL,
    baseldap character varying(50),
    sex character(1),
    profession character varying(100),
    workplace character varying(100),
    school character varying(100),
    datebirth date,
    persongroup character varying(255),
    operationprocess timestamp without time zone
);


ALTER TABLE public.gtclibperson OWNER TO postgres;

--
-- Name: TABLE gtclibperson; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtclibperson IS 'Informação da pessoa, relacionadas a biblioteca';


--
-- Name: COLUMN gtclibperson.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibperson.personid IS 'código da pessoa';


--
-- Name: COLUMN gtclibperson.baseldap; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibperson.baseldap IS 'Determina a base ldap onde o login deve ser efetuado.';


--
-- Name: COLUMN gtclibperson.sex; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibperson.sex IS 'Sexo, valores válidos M e F.';


--
-- Name: COLUMN gtclibperson.profession; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibperson.profession IS 'Profissão';


--
-- Name: COLUMN gtclibperson.workplace; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibperson.workplace IS 'Local de trabalho.';


--
-- Name: COLUMN gtclibperson.school; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibperson.school IS 'Escola.';


--
-- Name: COLUMN gtclibperson.datebirth; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibperson.datebirth IS 'Data de nascimento.';


--
-- Name: COLUMN gtclibperson.persongroup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibperson.persongroup IS 'Grupo da pessoa, utilizado para caracterizar uma pessoa em alguma situação, varia de acordo com o cliente.';


--
-- Name: COLUMN gtclibperson.operationprocess; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibperson.operationprocess IS 'Processo de operação';


--
-- Name: gtclibraryassociation; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclibraryassociation (
    associationid integer NOT NULL,
    libraryunitid integer NOT NULL
);


ALTER TABLE public.gtclibraryassociation OWNER TO postgres;

--
-- Name: seq_librarygroupid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_librarygroupid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_librarygroupid OWNER TO postgres;

--
-- Name: seq_librarygroupid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_librarygroupid', 1, false);


--
-- Name: gtclibrarygroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclibrarygroup (
    librarygroupid integer DEFAULT nextval('seq_librarygroupid'::regclass) NOT NULL,
    description character varying(100) NOT NULL,
    observation text
);


ALTER TABLE public.gtclibrarygroup OWNER TO postgres;

--
-- Name: TABLE gtclibrarygroup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtclibrarygroup IS 'cadastra grupos para separar as unidades';


--
-- Name: COLUMN gtclibrarygroup.librarygroupid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibrarygroup.librarygroupid IS 'C';


--
-- Name: COLUMN gtclibrarygroup.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibrarygroup.description IS 'Nome do grupo';


--
-- Name: COLUMN gtclibrarygroup.observation; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibrarygroup.observation IS 'Observacoes';


--
-- Name: seq_level; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_level
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_level OWNER TO postgres;

--
-- Name: seq_level; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_level', 1, true);


--
-- Name: seq_libraryunitid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_libraryunitid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_libraryunitid OWNER TO postgres;

--
-- Name: seq_libraryunitid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_libraryunitid', 1, true);


--
-- Name: gtclibraryunit; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclibraryunit (
    libraryunitid integer DEFAULT nextval('seq_libraryunitid'::regclass) NOT NULL,
    libraryname character varying(100) NOT NULL,
    isrestricted boolean DEFAULT false,
    city character varying(50),
    zipcode character varying(9),
    location character varying(100),
    number character varying(10),
    complement character varying(60),
    email character varying(60),
    url character varying(60),
    librarygroupid integer,
    privilegegroupid integer NOT NULL,
    observation text,
    level integer DEFAULT nextval('seq_level'::regclass),
    acceptpurchaserequest boolean DEFAULT false NOT NULL
);


ALTER TABLE public.gtclibraryunit OWNER TO postgres;

--
-- Name: TABLE gtclibraryunit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtclibraryunit IS 'Unidade de biblioteca.';


--
-- Name: COLUMN gtclibraryunit.libraryunitid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.libraryunitid IS 'C';


--
-- Name: COLUMN gtclibraryunit.libraryname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.libraryname IS 'Nome da unidade';


--
-- Name: COLUMN gtclibraryunit.city; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.city IS 'Nome da cidade, por enquanto fica com nome direto';


--
-- Name: COLUMN gtclibraryunit.zipcode; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.zipcode IS 'CEP';


--
-- Name: COLUMN gtclibraryunit.location; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.location IS 'Logradouro';


--
-- Name: COLUMN gtclibraryunit.number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.number IS 'N';


--
-- Name: COLUMN gtclibraryunit.complement; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.complement IS 'Complemento';


--
-- Name: COLUMN gtclibraryunit.email; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.email IS 'Email da unidade';


--
-- Name: COLUMN gtclibraryunit.url; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.url IS 'Site da unidade';


--
-- Name: COLUMN gtclibraryunit.acceptpurchaserequest; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunit.acceptpurchaserequest IS 'Determina se aceita ou não solicitação de compras.';


--
-- Name: gtclibraryunitaccess; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclibraryunitaccess (
    libraryunitid integer NOT NULL,
    linkid integer NOT NULL
);


ALTER TABLE public.gtclibraryunitaccess OWNER TO postgres;

--
-- Name: TABLE gtclibraryunitaccess; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtclibraryunitaccess IS 'identifica os grupos que ter';


--
-- Name: gtclibraryunitconfig; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclibraryunitconfig (
    libraryunitid integer NOT NULL,
    parameter text NOT NULL,
    value text,
    CONSTRAINT chk_library_unit_parameter CHECK (gtc_chk_parameter(parameter))
);


ALTER TABLE public.gtclibraryunitconfig OWNER TO postgres;

--
-- Name: TABLE gtclibraryunitconfig; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtclibraryunitconfig IS 'Configuracoes do sistema relativas a unidade de biblioteca.';


--
-- Name: COLUMN gtclibraryunitconfig.libraryunitid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunitconfig.libraryunitid IS 'Modulo do parametro';


--
-- Name: COLUMN gtclibraryunitconfig.parameter; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunitconfig.parameter IS 'Parametro';


--
-- Name: COLUMN gtclibraryunitconfig.value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclibraryunitconfig.value IS 'Valor';


--
-- Name: gtclibraryunitisclosed; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclibraryunitisclosed (
    libraryunitid integer NOT NULL,
    weekdayid integer NOT NULL
);


ALTER TABLE public.gtclibraryunitisclosed OWNER TO postgres;

--
-- Name: seq_linkoffieldsbetweenspreadsheetsid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_linkoffieldsbetweenspreadsheetsid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_linkoffieldsbetweenspreadsheetsid OWNER TO postgres;

--
-- Name: seq_linkoffieldsbetweenspreadsheetsid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_linkoffieldsbetweenspreadsheetsid', 17, true);


--
-- Name: gtclinkoffieldsbetweenspreadsheets; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclinkoffieldsbetweenspreadsheets (
    linkoffieldsbetweenspreadsheetsid integer DEFAULT nextval('seq_linkoffieldsbetweenspreadsheetsid'::regclass) NOT NULL,
    category character varying(2) NOT NULL,
    level character varying(1) NOT NULL,
    tag character varying NOT NULL,
    categoryson character varying(2) NOT NULL,
    levelson character varying(1) NOT NULL,
    tagson character varying NOT NULL,
    type integer
);


ALTER TABLE public.gtclinkoffieldsbetweenspreadsheets OWNER TO postgres;

--
-- Name: TABLE gtclinkoffieldsbetweenspreadsheets; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtclinkoffieldsbetweenspreadsheets IS 'liga';


--
-- Name: seq_loanid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_loanid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_loanid OWNER TO postgres;

--
-- Name: seq_loanid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_loanid', 1, false);


--
-- Name: gtcloan; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcloan (
    loanid integer DEFAULT nextval('seq_loanid'::regclass) NOT NULL,
    loantypeid integer NOT NULL,
    personid bigint NOT NULL,
    linkid integer NOT NULL,
    privilegegroupid integer NOT NULL,
    itemnumber character varying(20) NOT NULL,
    libraryunitid integer,
    loandate timestamp without time zone NOT NULL,
    loanoperator character varying(30) NOT NULL,
    returnforecastdate timestamp without time zone NOT NULL,
    returndate timestamp without time zone,
    returnoperator character varying(30),
    renewalamount integer NOT NULL,
    renewalwebamount integer NOT NULL,
    renewalwebbonus boolean NOT NULL
);


ALTER TABLE public.gtcloan OWNER TO postgres;

--
-- Name: TABLE gtcloan; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcloan IS 'emprestimos';


--
-- Name: COLUMN gtcloan.loanid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.loanid IS 'Identificador do emprestimo';


--
-- Name: COLUMN gtcloan.linkid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.linkid IS 'Grupo que pertence o usu';


--
-- Name: COLUMN gtcloan.itemnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.itemnumber IS 'N';


--
-- Name: COLUMN gtcloan.libraryunitid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.libraryunitid IS 'Unidade da biblioteca que emprestou';


--
-- Name: COLUMN gtcloan.loandate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.loandate IS 'Data e hora do empr';


--
-- Name: COLUMN gtcloan.loanoperator; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.loanoperator IS 'Login do miolo que emprestou o material';


--
-- Name: COLUMN gtcloan.returnforecastdate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.returnforecastdate IS 'Data prevista para devolu';


--
-- Name: COLUMN gtcloan.returndate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.returndate IS 'Data da devolu';


--
-- Name: COLUMN gtcloan.returnoperator; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.returnoperator IS 'Login do miolo que devolveu o material';


--
-- Name: COLUMN gtcloan.renewalamount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.renewalamount IS 'Quantidade de renova';


--
-- Name: COLUMN gtcloan.renewalwebamount; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.renewalwebamount IS 'Valor das renova';


--
-- Name: COLUMN gtcloan.renewalwebbonus; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloan.renewalwebbonus IS 'Se este campo for verdadeiro, reinicia o campo renewalWebAmount a cada renova';


--
-- Name: seq_loanbetweenlibraryid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_loanbetweenlibraryid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_loanbetweenlibraryid OWNER TO postgres;

--
-- Name: seq_loanbetweenlibraryid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_loanbetweenlibraryid', 1, false);


--
-- Name: gtcloanbetweenlibrary; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcloanbetweenlibrary (
    loanbetweenlibraryid integer DEFAULT nextval('seq_loanbetweenlibraryid'::regclass) NOT NULL,
    loandate timestamp without time zone NOT NULL,
    returnforecastdate timestamp without time zone NOT NULL,
    returndate timestamp without time zone,
    limitdate timestamp without time zone,
    libraryunitid integer,
    personid bigint,
    loanbetweenlibrarystatusid integer NOT NULL,
    observation text
);


ALTER TABLE public.gtcloanbetweenlibrary OWNER TO postgres;

--
-- Name: TABLE gtcloanbetweenlibrary; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcloanbetweenlibrary IS 'emprestimos';


--
-- Name: COLUMN gtcloanbetweenlibrary.loanbetweenlibraryid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrary.loanbetweenlibraryid IS 'Identificador do emprestimo';


--
-- Name: COLUMN gtcloanbetweenlibrary.loandate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrary.loandate IS 'Data e hora do empr';


--
-- Name: COLUMN gtcloanbetweenlibrary.returnforecastdate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrary.returnforecastdate IS 'Data prevista para devolu';


--
-- Name: COLUMN gtcloanbetweenlibrary.returndate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrary.returndate IS 'Data da devolu';


--
-- Name: gtcloanbetweenlibrarycomposition; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcloanbetweenlibrarycomposition (
    loanbetweenlibraryid integer NOT NULL,
    itemnumber character varying(20) NOT NULL,
    isconfirmed boolean NOT NULL
);


ALTER TABLE public.gtcloanbetweenlibrarycomposition OWNER TO postgres;

--
-- Name: TABLE gtcloanbetweenlibrarycomposition; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcloanbetweenlibrarycomposition IS 'composi';


--
-- Name: COLUMN gtcloanbetweenlibrarycomposition.loanbetweenlibraryid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrarycomposition.loanbetweenlibraryid IS 'Identificador do emprestimo';


--
-- Name: COLUMN gtcloanbetweenlibrarycomposition.itemnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrarycomposition.itemnumber IS 'Data e hora do empr';


--
-- Name: COLUMN gtcloanbetweenlibrarycomposition.isconfirmed; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrarycomposition.isconfirmed IS 'Data prevista para devolu';


--
-- Name: seq_loanbetweenlibrarystatusid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_loanbetweenlibrarystatusid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_loanbetweenlibrarystatusid OWNER TO postgres;

--
-- Name: seq_loanbetweenlibrarystatusid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_loanbetweenlibrarystatusid', 1, false);


--
-- Name: gtcloanbetweenlibrarystatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcloanbetweenlibrarystatus (
    loanbetweenlibrarystatusid integer DEFAULT nextval('seq_loanbetweenlibrarystatusid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcloanbetweenlibrarystatus OWNER TO postgres;

--
-- Name: TABLE gtcloanbetweenlibrarystatus; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcloanbetweenlibrarystatus IS 'estado dos empr';


--
-- Name: COLUMN gtcloanbetweenlibrarystatus.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrarystatus.description IS 'Descri';


--
-- Name: gtcloanbetweenlibrarystatushistory; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcloanbetweenlibrarystatushistory (
    loanbetweenlibraryid integer NOT NULL,
    loanbetweenlibrarystatusid integer NOT NULL,
    date timestamp without time zone NOT NULL,
    operator character varying(30) NOT NULL
);


ALTER TABLE public.gtcloanbetweenlibrarystatushistory OWNER TO postgres;

--
-- Name: TABLE gtcloanbetweenlibrarystatushistory; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcloanbetweenlibrarystatushistory IS 'mantem o historico dos emprestimos entre bibliotecas';


--
-- Name: COLUMN gtcloanbetweenlibrarystatushistory.loanbetweenlibraryid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrarystatushistory.loanbetweenlibraryid IS 'Identifica';


--
-- Name: COLUMN gtcloanbetweenlibrarystatushistory.loanbetweenlibrarystatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrarystatushistory.loanbetweenlibrarystatusid IS 'Estado da reserva';


--
-- Name: COLUMN gtcloanbetweenlibrarystatushistory.date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloanbetweenlibrarystatushistory.date IS 'Cado o exemplar volta ela se torna confirmada';


--
-- Name: seq_loantypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_loantypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_loantypeid OWNER TO postgres;

--
-- Name: seq_loantypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_loantypeid', 1, false);


--
-- Name: gtcloantype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcloantype (
    loantypeid integer DEFAULT nextval('seq_loantypeid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcloantype OWNER TO postgres;

--
-- Name: TABLE gtcloantype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcloantype IS 'identifica tipos de empr';


--
-- Name: COLUMN gtcloantype.loantypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloantype.loantypeid IS 'Identificador do tipo de emprestimo';


--
-- Name: COLUMN gtcloantype.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcloantype.description IS 'Descri';


--
-- Name: seq_locationformaterialmovementid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_locationformaterialmovementid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_locationformaterialmovementid OWNER TO postgres;

--
-- Name: seq_locationformaterialmovementid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_locationformaterialmovementid', 1, true);


--
-- Name: gtclocationformaterialmovement; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtclocationformaterialmovement (
    locationformaterialmovementid integer DEFAULT nextval('seq_locationformaterialmovementid'::regclass) NOT NULL,
    description character varying(40) NOT NULL,
    observation text,
    sendloanreceiptbyemail boolean,
    sendrenewreceiptbyemail boolean,
    sendreturnreceiptbyemail boolean
);


ALTER TABLE public.gtclocationformaterialmovement OWNER TO postgres;

--
-- Name: TABLE gtclocationformaterialmovement; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtclocationformaterialmovement IS 'local para circula';


--
-- Name: COLUMN gtclocationformaterialmovement.locationformaterialmovementid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclocationformaterialmovement.locationformaterialmovementid IS 'Identificador do local para circula';


--
-- Name: COLUMN gtclocationformaterialmovement.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtclocationformaterialmovement.description IS 'Descri';


--
-- Name: seq_marctaglistingid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_marctaglistingid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_marctaglistingid OWNER TO postgres;

--
-- Name: seq_marctaglistingid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_marctaglistingid', 1, false);


--
-- Name: gtcmarctaglisting; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmarctaglisting (
    marctaglistingid character varying DEFAULT nextval('seq_marctaglistingid'::regclass) NOT NULL,
    description character varying NOT NULL
);


ALTER TABLE public.gtcmarctaglisting OWNER TO postgres;

--
-- Name: gtcmarctaglistingoption; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmarctaglistingoption (
    marctaglistingid character varying,
    option text,
    description character varying
);


ALTER TABLE public.gtcmarctaglistingoption OWNER TO postgres;

--
-- Name: seq_controlnumber; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_controlnumber
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_controlnumber OWNER TO postgres;

--
-- Name: seq_controlnumber; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_controlnumber', 1, false);


--
-- Name: gtcmaterial; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmaterial (
    controlnumber integer DEFAULT nextval('seq_controlnumber'::regclass) NOT NULL,
    fieldid character varying(3) NOT NULL,
    subfieldid character varying(1) NOT NULL,
    line integer NOT NULL,
    indicator1 character varying(1),
    indicator2 character varying(1),
    content text,
    searchcontent text,
    prefixid integer,
    suffixid integer,
    separatorid integer,
    searchcontentforsearchmodule text
);


ALTER TABLE public.gtcmaterial OWNER TO postgres;

--
-- Name: TABLE gtcmaterial; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcmaterial IS 'armazena os materias no padr';


--
-- Name: gtcmaterialcontrol; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmaterialcontrol (
    controlnumber integer NOT NULL,
    controlnumberfather integer,
    entrancedate date NOT NULL,
    lastchangedate date NOT NULL,
    category character varying(2) NOT NULL,
    level character varying(1) NOT NULL,
    materialgenderid integer,
    materialtypeid integer,
    materialphysicaltypeid integer,
    lastchangeoperator character varying(255) DEFAULT 'gnuteca3'::character varying NOT NULL
);


ALTER TABLE public.gtcmaterialcontrol OWNER TO postgres;

--
-- Name: TABLE gtcmaterialcontrol; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcmaterialcontrol IS 'armazena os exemplares';


--
-- Name: COLUMN gtcmaterialcontrol.controlnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcmaterialcontrol.controlnumber IS 'Identificador da obra';


--
-- Name: seq_materialevaluationid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_materialevaluationid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_materialevaluationid OWNER TO postgres;

--
-- Name: seq_materialevaluationid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_materialevaluationid', 1, false);


--
-- Name: gtcmaterialevaluation; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmaterialevaluation (
    materialevaluationid integer DEFAULT nextval('seq_materialevaluationid'::regclass) NOT NULL,
    controlnumber integer NOT NULL,
    personid bigint NOT NULL,
    date timestamp without time zone NOT NULL,
    comment text,
    evaluation integer
);


ALTER TABLE public.gtcmaterialevaluation OWNER TO postgres;

--
-- Name: seq_materialgenderid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_materialgenderid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_materialgenderid OWNER TO postgres;

--
-- Name: seq_materialgenderid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_materialgenderid', 5, true);


--
-- Name: gtcmaterialgender; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmaterialgender (
    materialgenderid integer DEFAULT nextval('seq_materialgenderid'::regclass) NOT NULL,
    description character varying
);


ALTER TABLE public.gtcmaterialgender OWNER TO postgres;

--
-- Name: seq_materialhistoryid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_materialhistoryid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_materialhistoryid OWNER TO postgres;

--
-- Name: seq_materialhistoryid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_materialhistoryid', 1, false);


--
-- Name: gtcmaterialhistory; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmaterialhistory (
    materialhistoryid integer DEFAULT nextval('seq_materialhistoryid'::regclass) NOT NULL,
    controlnumber integer NOT NULL,
    revisionnumber integer NOT NULL,
    operator character varying(30) NOT NULL,
    data timestamp without time zone NOT NULL,
    chancestype character(1) NOT NULL,
    fieldid character varying(3) NOT NULL,
    subfieldid character varying(1) NOT NULL,
    previousline integer,
    previousindicator1 character varying(1),
    previousindicator2 character varying(1),
    previouscontent text,
    currentline integer,
    currentindicator1 character varying(1),
    currentindicator2 character varying(1),
    currentcontent text,
    previousprefixid integer,
    previoussuffixid integer,
    previousseparatorid integer,
    currentprefixid integer,
    currentsuffixid integer,
    currentseparatorid integer
);


ALTER TABLE public.gtcmaterialhistory OWNER TO postgres;

--
-- Name: TABLE gtcmaterialhistory; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcmaterialhistory IS 'armazena os materias no padr';


--
-- Name: COLUMN gtcmaterialhistory.chancestype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcmaterialhistory.chancestype IS 'I - insert U - update D - delete';


--
-- Name: gtcmateriallocation; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmateriallocation (
    materiallocationid integer NOT NULL,
    name character varying(255),
    libraryunitid integer NOT NULL
);


ALTER TABLE public.gtcmateriallocation OWNER TO postgres;

--
-- Name: gtcmateriallocationtag; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmateriallocationtag (
    materiallocationtagid integer NOT NULL,
    type character(1),
    fieldid integer,
    subfieldidid character(1),
    rule character(1),
    content text,
    gtcmateriallocatioid integer NOT NULL
);


ALTER TABLE public.gtcmateriallocationtag OWNER TO postgres;

--
-- Name: seq_materialphysicaltypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_materialphysicaltypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_materialphysicaltypeid OWNER TO postgres;

--
-- Name: seq_materialphysicaltypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_materialphysicaltypeid', 9, true);


--
-- Name: gtcmaterialphysicaltype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmaterialphysicaltype (
    materialphysicaltypeid integer DEFAULT nextval('seq_materialphysicaltypeid'::regclass) NOT NULL,
    description character varying NOT NULL,
    image text,
    observation text
);


ALTER TABLE public.gtcmaterialphysicaltype OWNER TO postgres;

--
-- Name: seq_materialtypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_materialtypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_materialtypeid OWNER TO postgres;

--
-- Name: seq_materialtypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_materialtypeid', 39, true);


--
-- Name: gtcmaterialtype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmaterialtype (
    materialtypeid integer DEFAULT nextval('seq_materialtypeid'::regclass) NOT NULL,
    description character varying NOT NULL,
    isrestricted boolean NOT NULL,
    level integer,
    observation text
);


ALTER TABLE public.gtcmaterialtype OWNER TO postgres;

--
-- Name: seq_mylibraryid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_mylibraryid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_mylibraryid OWNER TO postgres;

--
-- Name: seq_mylibraryid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_mylibraryid', 1, false);


--
-- Name: gtcmylibrary; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcmylibrary (
    mylibraryid integer DEFAULT nextval('seq_mylibraryid'::regclass) NOT NULL,
    personid bigint NOT NULL,
    tablename character varying(255),
    tableid character varying(255),
    date timestamp without time zone NOT NULL,
    message text NOT NULL,
    visible boolean NOT NULL
);


ALTER TABLE public.gtcmylibrary OWNER TO postgres;

--
-- Name: COLUMN gtcmylibrary.mylibraryid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcmylibrary.mylibraryid IS 'Código da minha biblioteca';


--
-- Name: gtcmylibrary_mylibraryid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE gtcmylibrary_mylibraryid_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.gtcmylibrary_mylibraryid_seq OWNER TO postgres;

--
-- Name: gtcmylibrary_mylibraryid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE gtcmylibrary_mylibraryid_seq OWNED BY gtcmylibrary.mylibraryid;


--
-- Name: gtcmylibrary_mylibraryid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('gtcmylibrary_mylibraryid_seq', 1, false);


--
-- Name: seq_newsid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_newsid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_newsid OWNER TO postgres;

--
-- Name: seq_newsid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_newsid', 1, true);


--
-- Name: gtcnews; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcnews (
    newsid integer DEFAULT nextval('seq_newsid'::regclass) NOT NULL,
    place integer NOT NULL,
    title1 character varying,
    news text,
    date timestamp without time zone NOT NULL,
    begindate timestamp without time zone,
    enddate timestamp without time zone,
    isrestricted boolean,
    isactive boolean,
    operator character varying(30),
    libraryunitid integer
);


ALTER TABLE public.gtcnews OWNER TO postgres;

--
-- Name: TABLE gtcnews; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcnews IS 'noticia';


--
-- Name: COLUMN gtcnews.newsid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcnews.newsid IS 'Identifica';


--
-- Name: COLUMN gtcnews.place; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcnews.place IS '1 - Minha biblioteca, 2 - Tela inicial, 3 - Pesquisa';


--
-- Name: gtcnewsaccess; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcnewsaccess (
    newsid integer NOT NULL,
    linkid integer NOT NULL
);


ALTER TABLE public.gtcnewsaccess OWNER TO postgres;

--
-- Name: TABLE gtcnewsaccess; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcnewsaccess IS 'identifica os grupos que ter';


--
-- Name: seq_operationid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_operationid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_operationid OWNER TO postgres;

--
-- Name: seq_operationid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_operationid', 22, true);


--
-- Name: gtcoperation; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcoperation (
    operationid integer DEFAULT nextval('seq_operationid'::regclass) NOT NULL,
    description character varying(100) NOT NULL,
    definerule boolean
);


ALTER TABLE public.gtcoperation OWNER TO postgres;

--
-- Name: TABLE gtcoperation; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcoperation IS 'operacoes';


--
-- Name: COLUMN gtcoperation.operationid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcoperation.operationid IS 'Identificador da operacao';


--
-- Name: COLUMN gtcoperation.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcoperation.description IS 'Descricao';


--
-- Name: gtcoperatorlibraryunit; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcoperatorlibraryunit (
    operator character varying NOT NULL,
    libraryunitid integer
);


ALTER TABLE public.gtcoperatorlibraryunit OWNER TO postgres;

--
-- Name: seq_penaltyid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_penaltyid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_penaltyid OWNER TO postgres;

--
-- Name: seq_penaltyid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_penaltyid', 1, false);


--
-- Name: gtcpenalty; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcpenalty (
    penaltyid integer DEFAULT nextval('seq_penaltyid'::regclass) NOT NULL,
    personid bigint NOT NULL,
    libraryunitid integer,
    observation text,
    internalobservation text,
    penaltydate timestamp without time zone NOT NULL,
    penaltyenddate timestamp without time zone,
    operator character varying(30) NOT NULL
);


ALTER TABLE public.gtcpenalty OWNER TO postgres;

--
-- Name: TABLE gtcpenalty; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcpenalty IS 'penalidade';


--
-- Name: COLUMN gtcpenalty.penaltyid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpenalty.penaltyid IS 'Identifica';


--
-- Name: COLUMN gtcpenalty.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpenalty.personid IS 'C';


--
-- Name: COLUMN gtcpenalty.observation; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpenalty.observation IS 'Descri';


--
-- Name: COLUMN gtcpenalty.penaltydate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpenalty.penaltydate IS 'Data da inclus';


--
-- Name: COLUMN gtcpenalty.penaltyenddate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpenalty.penaltyenddate IS 'Data de final da penalidade.';


--
-- Name: COLUMN gtcpenalty.operator; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpenalty.operator IS 'Usu';


--
-- Name: gtcpersonconfig; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcpersonconfig (
    personid bigint NOT NULL,
    parameter text NOT NULL,
    value text
);


ALTER TABLE public.gtcpersonconfig OWNER TO postgres;

--
-- Name: TABLE gtcpersonconfig; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcpersonconfig IS 'configuracoes do sistema';


--
-- Name: COLUMN gtcpersonconfig.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpersonconfig.personid IS 'Modulo do parametro';


--
-- Name: COLUMN gtcpersonconfig.parameter; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpersonconfig.parameter IS 'Parametro';


--
-- Name: COLUMN gtcpersonconfig.value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpersonconfig.value IS 'Valor';


--
-- Name: gtcpersonlibraryunit; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcpersonlibraryunit (
    libraryunitid integer NOT NULL,
    personid bigint NOT NULL
);


ALTER TABLE public.gtcpersonlibraryunit OWNER TO postgres;

--
-- Name: TABLE gtcpersonlibraryunit; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcpersonlibraryunit IS 'reservas';


--
-- Name: COLUMN gtcpersonlibraryunit.libraryunitid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpersonlibraryunit.libraryunitid IS 'C';


--
-- Name: COLUMN gtcpersonlibraryunit.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpersonlibraryunit.personid IS 'C';


--
-- Name: gtcpolicy; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcpolicy (
    privilegegroupid integer NOT NULL,
    linkid integer NOT NULL,
    materialgenderid integer NOT NULL,
    loandays integer,
    loandate date,
    loanlimit integer,
    renewallimit integer,
    reservelimit integer,
    daysofwaitforreserve integer,
    reservelimitininitiallevel integer,
    daysofwaitforreserveininitiallevel integer,
    finevalue double precision,
    renewalweblimit integer,
    renewalwebbonus boolean,
    additionaldaysforholidays integer,
    penaltybydelay double precision,
    momentaryfinevalue double precision
);


ALTER TABLE public.gtcpolicy OWNER TO postgres;

--
-- Name: TABLE gtcpolicy; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcpolicy IS 'numero maximo de reservas de nivel inicial - disponivel, congelado, etc';


--
-- Name: COLUMN gtcpolicy.penaltybydelay; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcpolicy.penaltybydelay IS 'Número de dias aplicado para cada dia de atraso';


--
-- Name: gtcprecatalogue; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcprecatalogue (
    controlnumber integer NOT NULL,
    fieldid character varying(3) NOT NULL,
    subfieldid character varying(1) NOT NULL,
    line integer NOT NULL,
    indicator1 character varying(1),
    indicator2 character varying(1),
    content text,
    searchcontent text,
    prefixid integer,
    suffixid integer,
    separatorid integer
);


ALTER TABLE public.gtcprecatalogue OWNER TO postgres;

--
-- Name: TABLE gtcprecatalogue; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcprecatalogue IS 'armazena temporariamente os materias no padr';


--
-- Name: seq_prefixsuffixid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_prefixsuffixid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_prefixsuffixid OWNER TO postgres;

--
-- Name: seq_prefixsuffixid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_prefixsuffixid', 2, true);


--
-- Name: gtcprefixsuffix; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcprefixsuffix (
    prefixsuffixid integer DEFAULT nextval('seq_prefixsuffixid'::regclass) NOT NULL,
    fieldid character varying(3) NOT NULL,
    subfieldid character varying(1) NOT NULL,
    content character varying NOT NULL,
    type integer
);


ALTER TABLE public.gtcprefixsuffix OWNER TO postgres;

--
-- Name: TABLE gtcprefixsuffix; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcprefixsuffix IS 'tabela para prefixos e sufixos';


--
-- Name: COLUMN gtcprefixsuffix.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcprefixsuffix.type IS '1 - prefix 2 - suffix';


--
-- Name: seq_privilegegroupid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_privilegegroupid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_privilegegroupid OWNER TO postgres;

--
-- Name: seq_privilegegroupid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_privilegegroupid', 1, true);


--
-- Name: gtcprivilegegroup; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcprivilegegroup (
    privilegegroupid integer DEFAULT nextval('seq_privilegegroupid'::regclass) NOT NULL,
    description character varying(50) NOT NULL
);


ALTER TABLE public.gtcprivilegegroup OWNER TO postgres;

--
-- Name: TABLE gtcprivilegegroup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcprivilegegroup IS 'grupo de privilegio. relaciona as unidade com pol';


--
-- Name: seq_gtcpurchaserequest; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_gtcpurchaserequest
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_gtcpurchaserequest OWNER TO postgres;

--
-- Name: seq_gtcpurchaserequest; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_gtcpurchaserequest', 1, false);


--
-- Name: gtcpurchaserequest; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcpurchaserequest (
    purchaserequestid integer DEFAULT nextval('seq_gtcpurchaserequest'::regclass) NOT NULL,
    libraryunitid integer NOT NULL,
    personid bigint NOT NULL,
    costcenterid integer,
    amount integer NOT NULL,
    course character varying(255),
    observation text,
    needdelivery date,
    forecastdelivery date,
    deliverydate date,
    voucher integer,
    controlnumber integer,
    precontrolnumber integer,
    externalid character varying(255)
);


ALTER TABLE public.gtcpurchaserequest OWNER TO postgres;

--
-- Name: gtcpurchaserequestmaterial; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcpurchaserequestmaterial (
    purchaserequestid integer NOT NULL,
    fieldid character varying(3) NOT NULL,
    subfieldid character varying(1) NOT NULL,
    content text NOT NULL
);


ALTER TABLE public.gtcpurchaserequestmaterial OWNER TO postgres;

--
-- Name: gtcpurchaserequestquotation; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcpurchaserequestquotation (
    purchaserequestid integer NOT NULL,
    supplierid integer NOT NULL,
    value real NOT NULL,
    observation text
);


ALTER TABLE public.gtcpurchaserequestquotation OWNER TO postgres;

--
-- Name: gtcpurchaserequestquotation_supplierid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE gtcpurchaserequestquotation_supplierid_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.gtcpurchaserequestquotation_supplierid_seq OWNER TO postgres;

--
-- Name: gtcpurchaserequestquotation_supplierid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE gtcpurchaserequestquotation_supplierid_seq OWNED BY gtcpurchaserequestquotation.supplierid;


--
-- Name: gtcpurchaserequestquotation_supplierid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('gtcpurchaserequestquotation_supplierid_seq', 1, false);


--
-- Name: seq_renewid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_renewid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_renewid OWNER TO postgres;

--
-- Name: seq_renewid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_renewid', 1, false);


--
-- Name: gtcrenew; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcrenew (
    renewid integer DEFAULT nextval('seq_renewid'::regclass) NOT NULL,
    loanid integer NOT NULL,
    renewtypeid integer,
    renewdate timestamp without time zone,
    returnforecastdate timestamp without time zone NOT NULL,
    operator character varying(30) NOT NULL
);


ALTER TABLE public.gtcrenew OWNER TO postgres;

--
-- Name: TABLE gtcrenew; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcrenew IS 'renovacao';


--
-- Name: COLUMN gtcrenew.renewid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrenew.renewid IS 'Identifica';


--
-- Name: COLUMN gtcrenew.loanid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrenew.loanid IS 'C';


--
-- Name: COLUMN gtcrenew.renewdate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrenew.renewdate IS 'Data e hora da renovacao';


--
-- Name: COLUMN gtcrenew.returnforecastdate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrenew.returnforecastdate IS 'Data da inclus';


--
-- Name: COLUMN gtcrenew.operator; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrenew.operator IS 'Usu';


--
-- Name: seq_renewtypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_renewtypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_renewtypeid OWNER TO postgres;

--
-- Name: seq_renewtypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_renewtypeid', 1, false);


--
-- Name: gtcrenewtype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcrenewtype (
    renewtypeid integer DEFAULT nextval('seq_renewtypeid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcrenewtype OWNER TO postgres;

--
-- Name: TABLE gtcrenewtype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcrenewtype IS 'identifica tipos de renovacao.';


--
-- Name: COLUMN gtcrenewtype.renewtypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrenewtype.renewtypeid IS 'Identificador do tipo de renovaca';


--
-- Name: COLUMN gtcrenewtype.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrenewtype.description IS 'Descri';


--
-- Name: gtcreport; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcreport (
    reportid character varying(20) NOT NULL,
    title character varying NOT NULL,
    description text,
    permission character varying NOT NULL,
    reportsql text,
    reportsubsql text,
    script text,
    model character varying,
    isactive boolean NOT NULL,
    reportgroup character varying,
    CONSTRAINT chk_gtcreport_reportgroup CHECK (gtc_chk_domain('REPORT_GROUP'::character varying, reportgroup))
);


ALTER TABLE public.gtcreport OWNER TO postgres;

--
-- Name: TABLE gtcreport; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcreport IS 'relatorios';


--
-- Name: seq_reportparameterid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_reportparameterid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_reportparameterid OWNER TO postgres;

--
-- Name: seq_reportparameterid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_reportparameterid', 192, true);


--
-- Name: gtcreportparameter; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcreportparameter (
    reportparameterid integer DEFAULT nextval('seq_reportparameterid'::regclass) NOT NULL,
    reportid character varying(20) NOT NULL,
    label character varying NOT NULL,
    identifier character varying NOT NULL,
    type character varying NOT NULL,
    defaultvalue character varying,
    options text,
    lastvalue character varying,
    level integer
);


ALTER TABLE public.gtcreportparameter OWNER TO postgres;

--
-- Name: TABLE gtcreportparameter; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcreportparameter IS 'parametros do relatorios';


--
-- Name: seq_requestchangeexemplarystatusid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_requestchangeexemplarystatusid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_requestchangeexemplarystatusid OWNER TO postgres;

--
-- Name: seq_requestchangeexemplarystatusid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_requestchangeexemplarystatusid', 1, false);


--
-- Name: gtcrequestchangeexemplarystatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcrequestchangeexemplarystatus (
    requestchangeexemplarystatusid integer DEFAULT nextval('seq_requestchangeexemplarystatusid'::regclass) NOT NULL,
    futurestatusid integer NOT NULL,
    personid bigint NOT NULL,
    observation text,
    date timestamp without time zone NOT NULL,
    finaldate timestamp without time zone NOT NULL,
    requestchangeexemplarystatusstatusid integer NOT NULL,
    libraryunitid integer NOT NULL,
    aprovejustone boolean DEFAULT true,
    discipline character varying
);


ALTER TABLE public.gtcrequestchangeexemplarystatus OWNER TO postgres;

--
-- Name: TABLE gtcrequestchangeexemplarystatus; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcrequestchangeexemplarystatus IS 'estado do exemplar';


--
-- Name: COLUMN gtcrequestchangeexemplarystatus.requestchangeexemplarystatusstatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrequestchangeexemplarystatus.requestchangeexemplarystatusstatusid IS 'referencia tabela de possiveis estados';


--
-- Name: COLUMN gtcrequestchangeexemplarystatus.libraryunitid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrequestchangeexemplarystatus.libraryunitid IS 'referencia biblioteca';


--
-- Name: COLUMN gtcrequestchangeexemplarystatus.discipline; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrequestchangeexemplarystatus.discipline IS 'Disciplina (mat';


--
-- Name: gtcrequestchangeexemplarystatusaccess; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcrequestchangeexemplarystatusaccess (
    baslinkid integer NOT NULL,
    exemplarystatusid integer NOT NULL
);


ALTER TABLE public.gtcrequestchangeexemplarystatusaccess OWNER TO postgres;

--
-- Name: gtcrequestchangeexemplarystatuscomposition; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcrequestchangeexemplarystatuscomposition (
    requestchangeexemplarystatusid integer NOT NULL,
    itemnumber character varying(20) NOT NULL,
    exemplaryfuturestatusdefinedid integer,
    confirm boolean DEFAULT false,
    date timestamp without time zone NOT NULL,
    applied boolean DEFAULT false
);


ALTER TABLE public.gtcrequestchangeexemplarystatuscomposition OWNER TO postgres;

--
-- Name: TABLE gtcrequestchangeexemplarystatuscomposition; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcrequestchangeexemplarystatuscomposition IS 'quando o administrador permite a requisi';


--
-- Name: COLUMN gtcrequestchangeexemplarystatuscomposition.applied; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrequestchangeexemplarystatuscomposition.applied IS 'quando a requisi';


--
-- Name: seq_requestchangeexemplarystatusstatusid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_requestchangeexemplarystatusstatusid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_requestchangeexemplarystatusstatusid OWNER TO postgres;

--
-- Name: seq_requestchangeexemplarystatusstatusid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_requestchangeexemplarystatusstatusid', 6, true);


--
-- Name: gtcrequestchangeexemplarystatusstatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcrequestchangeexemplarystatusstatus (
    requestchangeexemplarystatusstatusid integer DEFAULT nextval('seq_requestchangeexemplarystatusstatusid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcrequestchangeexemplarystatusstatus OWNER TO postgres;

--
-- Name: gtcrequestchangeexemplarystatusstatushistory; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcrequestchangeexemplarystatusstatushistory (
    requestchangeexemplarystatusid integer NOT NULL,
    requestchangeexemplarystatusstatusid integer NOT NULL,
    date timestamp without time zone NOT NULL,
    operator character varying(40) NOT NULL
);


ALTER TABLE public.gtcrequestchangeexemplarystatusstatushistory OWNER TO postgres;

--
-- Name: seq_reserveid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_reserveid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_reserveid OWNER TO postgres;

--
-- Name: seq_reserveid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_reserveid', 1, false);


--
-- Name: gtcreserve; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcreserve (
    reserveid integer DEFAULT nextval('seq_reserveid'::regclass) NOT NULL,
    libraryunitid integer,
    personid bigint NOT NULL,
    requesteddate timestamp without time zone NOT NULL,
    limitdate timestamp without time zone,
    reservestatusid integer NOT NULL,
    reservetypeid integer NOT NULL
);


ALTER TABLE public.gtcreserve OWNER TO postgres;

--
-- Name: TABLE gtcreserve; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcreserve IS 'reservas';


--
-- Name: COLUMN gtcreserve.reserveid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreserve.reserveid IS 'Identificador da reserva';


--
-- Name: COLUMN gtcreserve.libraryunitid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreserve.libraryunitid IS 'C';


--
-- Name: COLUMN gtcreserve.personid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreserve.personid IS 'C';


--
-- Name: COLUMN gtcreserve.limitdate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreserve.limitdate IS 'Data limite de esprera. ';


--
-- Name: COLUMN gtcreserve.reservestatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreserve.reservestatusid IS 'C';


--
-- Name: gtcreservecomposition; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcreservecomposition (
    reserveid integer NOT NULL,
    itemnumber character varying(20) NOT NULL,
    isconfirmed boolean DEFAULT false
);


ALTER TABLE public.gtcreservecomposition OWNER TO postgres;

--
-- Name: TABLE gtcreservecomposition; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcreservecomposition IS 'composi';


--
-- Name: COLUMN gtcreservecomposition.reserveid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservecomposition.reserveid IS 'Identifica';


--
-- Name: COLUMN gtcreservecomposition.itemnumber; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservecomposition.itemnumber IS 'N';


--
-- Name: COLUMN gtcreservecomposition.isconfirmed; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservecomposition.isconfirmed IS 'Cado o exemplar volta ela se torna confirmada';


--
-- Name: seq_reservestatusid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_reservestatusid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_reservestatusid OWNER TO postgres;

--
-- Name: seq_reservestatusid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_reservestatusid', 6, true);


--
-- Name: gtcreservestatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcreservestatus (
    reservestatusid integer DEFAULT nextval('seq_reservestatusid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcreservestatus OWNER TO postgres;

--
-- Name: TABLE gtcreservestatus; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcreservestatus IS 'estado da reserva';


--
-- Name: COLUMN gtcreservestatus.reservestatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservestatus.reservestatusid IS 'Identificador da situa';


--
-- Name: COLUMN gtcreservestatus.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservestatus.description IS 'Descri';


--
-- Name: gtcreservestatushistory; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcreservestatushistory (
    reserveid integer NOT NULL,
    reservestatusid integer NOT NULL,
    date timestamp without time zone NOT NULL,
    operator character varying(30) NOT NULL
);


ALTER TABLE public.gtcreservestatushistory OWNER TO postgres;

--
-- Name: TABLE gtcreservestatushistory; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcreservestatushistory IS 'mantem o historico das trocas de estado';


--
-- Name: COLUMN gtcreservestatushistory.reserveid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservestatushistory.reserveid IS 'Identifica';


--
-- Name: COLUMN gtcreservestatushistory.reservestatusid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservestatushistory.reservestatusid IS 'Estado da reserva';


--
-- Name: COLUMN gtcreservestatushistory.date; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservestatushistory.date IS 'Cado o exemplar volta ela se torna confirmada';


--
-- Name: seq_reservetypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_reservetypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_reservetypeid OWNER TO postgres;

--
-- Name: seq_reservetypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_reservetypeid', 5, true);


--
-- Name: gtcreservetype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcreservetype (
    reservetypeid integer DEFAULT nextval('seq_reservetypeid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcreservetype OWNER TO postgres;

--
-- Name: TABLE gtcreservetype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcreservetype IS 'identifica tipos de reserva.';


--
-- Name: COLUMN gtcreservetype.reservetypeid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservetype.reservetypeid IS 'Identificador do tipo de reserva';


--
-- Name: COLUMN gtcreservetype.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcreservetype.description IS 'Descri';


--
-- Name: seq_returnregisterid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_returnregisterid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_returnregisterid OWNER TO postgres;

--
-- Name: seq_returnregisterid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_returnregisterid', 1, false);


--
-- Name: gtcreturnregister; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcreturnregister (
    returnregisterid integer DEFAULT nextval('seq_returnregisterid'::regclass) NOT NULL,
    returntypeid integer NOT NULL,
    itemnumber character varying(20) NOT NULL,
    date timestamp without time zone NOT NULL,
    operator character varying(30) NOT NULL
);


ALTER TABLE public.gtcreturnregister OWNER TO postgres;

--
-- Name: TABLE gtcreturnregister; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcreturnregister IS 'registra as devolu';


--
-- Name: seq_returntypeid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_returntypeid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_returntypeid OWNER TO postgres;

--
-- Name: seq_returntypeid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_returntypeid', 2, true);


--
-- Name: gtcreturntype; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcreturntype (
    returntypeid integer DEFAULT nextval('seq_returntypeid'::regclass) NOT NULL,
    description character varying(250) NOT NULL,
    sendmailreturnreceipt boolean
);


ALTER TABLE public.gtcreturntype OWNER TO postgres;

--
-- Name: TABLE gtcreturntype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcreturntype IS 'define os tipos de devolu';


--
-- Name: gtcright; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcright (
    privilegegroupid integer NOT NULL,
    linkid integer NOT NULL,
    materialgenderid integer NOT NULL,
    operationid integer NOT NULL
);


ALTER TABLE public.gtcright OWNER TO postgres;

--
-- Name: gtcrulesformaterialmovement; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcrulesformaterialmovement (
    currentstate integer NOT NULL,
    operationid integer NOT NULL,
    locationformaterialmovementid integer NOT NULL,
    futurestate integer NOT NULL
);


ALTER TABLE public.gtcrulesformaterialmovement OWNER TO postgres;

--
-- Name: TABLE gtcrulesformaterialmovement; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcrulesformaterialmovement IS 'regras para circulacao de material';


--
-- Name: COLUMN gtcrulesformaterialmovement.currentstate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrulesformaterialmovement.currentstate IS 'Estado atual';


--
-- Name: COLUMN gtcrulesformaterialmovement.operationid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrulesformaterialmovement.operationid IS 'Identificador da operacao';


--
-- Name: COLUMN gtcrulesformaterialmovement.locationformaterialmovementid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrulesformaterialmovement.locationformaterialmovementid IS 'Identificacao do local para circulacao do material';


--
-- Name: COLUMN gtcrulesformaterialmovement.futurestate; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrulesformaterialmovement.futurestate IS 'Estado futuro';


--
-- Name: seq_rulestocompletefieldsmarcid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_rulestocompletefieldsmarcid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_rulestocompletefieldsmarcid OWNER TO postgres;

--
-- Name: seq_rulestocompletefieldsmarcid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_rulestocompletefieldsmarcid', 1, false);


--
-- Name: gtcrulestocompletefieldsmarc; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcrulestocompletefieldsmarc (
    rulestocompletefieldsmarcid integer DEFAULT nextval('seq_rulestocompletefieldsmarcid'::regclass) NOT NULL,
    category character varying(2) NOT NULL,
    originfield text NOT NULL,
    fatefield text NOT NULL,
    affectrecordscompleted boolean
);


ALTER TABLE public.gtcrulestocompletefieldsmarc OWNER TO postgres;

--
-- Name: TABLE gtcrulestocompletefieldsmarc; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcrulestocompletefieldsmarc IS 'regras para preenchimento de campos marc';


--
-- Name: COLUMN gtcrulestocompletefieldsmarc.affectrecordscompleted; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcrulestocompletefieldsmarc.affectrecordscompleted IS 'Se for true altera os registros com valor';


--
-- Name: gtcschedulecycle; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcschedulecycle (
    schedulecycleid integer NOT NULL,
    description character varying NOT NULL,
    valuetype character varying NOT NULL
);


ALTER TABLE public.gtcschedulecycle OWNER TO postgres;

--
-- Name: TABLE gtcschedulecycle; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcschedulecycle IS 'ciclos de agendamento';


--
-- Name: gtcscheduletask; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcscheduletask (
    scheduletaskid integer NOT NULL,
    taskid integer NOT NULL,
    schedulecycleid integer NOT NULL,
    description character varying NOT NULL,
    cyclevalue character varying NOT NULL,
    enable boolean DEFAULT true,
    parameters character varying
);


ALTER TABLE public.gtcscheduletask OWNER TO postgres;

--
-- Name: TABLE gtcscheduletask; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcscheduletask IS 'agendamento de tarefas';


--
-- Name: gtcscheduletasklog; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcscheduletasklog (
    scheduletaskid integer NOT NULL,
    log text NOT NULL,
    date timestamp without time zone NOT NULL,
    status character varying(50) NOT NULL
);


ALTER TABLE public.gtcscheduletasklog OWNER TO postgres;

--
-- Name: TABLE gtcscheduletasklog; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcscheduletasklog IS 'Log de tarefas realizadas';


--
-- Name: COLUMN gtcscheduletasklog.status; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcscheduletasklog.status IS 'Estado deste log';


--
-- Name: seq_searchablefieldid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_searchablefieldid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_searchablefieldid OWNER TO postgres;

--
-- Name: seq_searchablefieldid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_searchablefieldid', 18, true);


--
-- Name: gtcsearchablefield; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsearchablefield (
    searchablefieldid integer DEFAULT nextval('seq_searchablefieldid'::regclass) NOT NULL,
    description character varying NOT NULL,
    field character varying NOT NULL,
    identifier character varying NOT NULL,
    fieldtype integer,
    isrestricted boolean,
    level integer,
    observation text,
    helps character varying
);


ALTER TABLE public.gtcsearchablefield OWNER TO postgres;

--
-- Name: TABLE gtcsearchablefield; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsearchablefield IS 'campos pesquisaveis';


--
-- Name: COLUMN gtcsearchablefield.fieldtype; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcsearchablefield.fieldtype IS '1 - Numerico, 2 - String';


--
-- Name: gtcsearchablefieldaccess; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsearchablefieldaccess (
    searchablefieldid integer NOT NULL,
    linkid integer NOT NULL
);


ALTER TABLE public.gtcsearchablefieldaccess OWNER TO postgres;

--
-- Name: TABLE gtcsearchablefieldaccess; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsearchablefieldaccess IS 'especifica o acesso para o formato da pesquisa';


--
-- Name: seq_searchformatid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_searchformatid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_searchformatid OWNER TO postgres;

--
-- Name: seq_searchformatid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_searchformatid', 10, true);


--
-- Name: gtcsearchformat; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsearchformat (
    searchformatid integer DEFAULT nextval('seq_searchformatid'::regclass) NOT NULL,
    description character varying NOT NULL,
    isrestricted boolean
);


ALTER TABLE public.gtcsearchformat OWNER TO postgres;

--
-- Name: TABLE gtcsearchformat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsearchformat IS 'formato da pesquisa';


--
-- Name: gtcsearchformataccess; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsearchformataccess (
    searchformatid integer NOT NULL,
    linkid integer NOT NULL
);


ALTER TABLE public.gtcsearchformataccess OWNER TO postgres;

--
-- Name: TABLE gtcsearchformataccess; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsearchformataccess IS 'especifica o acesso para o formato da pesquisa';


--
-- Name: gtcsearchformatcolumn; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsearchformatcolumn (
    searchformatid integer NOT NULL,
    "column" character varying NOT NULL
);


ALTER TABLE public.gtcsearchformatcolumn OWNER TO postgres;

--
-- Name: TABLE gtcsearchformatcolumn; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsearchformatcolumn IS 'especifica as colunas no search format';


--
-- Name: gtcsearchmaterialview; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsearchmaterialview (
    controlnumber integer,
    entrancedate date,
    lastchangedate date,
    category character varying(2),
    level character varying(1),
    materialgenderid integer,
    materialtypeid integer,
    materialphysicaltypeid integer,
    exemplaryitemnumber character varying(20),
    exemplaryoriginallibraryunitid integer,
    exemplarylibraryunitid integer,
    exemplaryacquisitiontype character varying(1),
    exemplaryexemplarystatusid integer,
    exemplarymaterialgenderid integer,
    exemplarymaterialtypeid integer,
    exemplarymaterialphysicaltypeid integer,
    exemplaryentrancedate date,
    exemplarylowdate date
);


ALTER TABLE public.gtcsearchmaterialview OWNER TO postgres;

--
-- Name: gtcsearchpresentationformat; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsearchpresentationformat (
    searchformatid integer NOT NULL,
    category character varying(2) NOT NULL,
    searchformat text NOT NULL,
    detailformat text NOT NULL
);


ALTER TABLE public.gtcsearchpresentationformat OWNER TO postgres;

--
-- Name: TABLE gtcsearchpresentationformat; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsearchpresentationformat IS 'formato da apresentacao da pesquisa';


--
-- Name: gtcsearchtableupdatecontrol; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsearchtableupdatecontrol (
    lastupdate timestamp without time zone
);


ALTER TABLE public.gtcsearchtableupdatecontrol OWNER TO postgres;

--
-- Name: seq_separatorid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_separatorid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_separatorid OWNER TO postgres;

--
-- Name: seq_separatorid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_separatorid', 1, true);


--
-- Name: gtcseparator; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcseparator (
    separatorid integer DEFAULT nextval('seq_separatorid'::regclass) NOT NULL,
    cataloguingformatid integer NOT NULL,
    fieldid character varying(3) NOT NULL,
    subfieldid character varying(1) NOT NULL,
    content character varying NOT NULL,
    fieldid2 character varying(3) NOT NULL,
    subfieldid2 character varying(1) NOT NULL
);


ALTER TABLE public.gtcseparator OWNER TO postgres;

--
-- Name: TABLE gtcseparator; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcseparator IS 'tabela para separadores';


--
-- Name: gtcsoapaccess; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsoapaccess (
    soapclientid integer NOT NULL,
    webserviceid integer NOT NULL
);


ALTER TABLE public.gtcsoapaccess OWNER TO postgres;

--
-- Name: TABLE gtcsoapaccess; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsoapaccess IS 'access soap';


--
-- Name: gtcsoapclient; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsoapclient (
    soapclientid integer NOT NULL,
    clientdescription character varying,
    ip character varying NOT NULL,
    password character varying NOT NULL,
    enable boolean DEFAULT true
);


ALTER TABLE public.gtcsoapclient OWNER TO postgres;

--
-- Name: TABLE gtcsoapclient; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsoapclient IS 'clientes soap';


--
-- Name: gtcspreadsheet; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcspreadsheet (
    category character varying(2) NOT NULL,
    level character varying(1) NOT NULL,
    field text NOT NULL,
    required text,
    repeatfieldrequired text,
    defaultvalue text,
    menuname character varying,
    menuoption character varying,
    menulevel integer
);


ALTER TABLE public.gtcspreadsheet OWNER TO postgres;

--
-- Name: TABLE gtcspreadsheet; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcspreadsheet IS 'armazenam o modelo das planilhas';


--
-- Name: COLUMN gtcspreadsheet.level; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcspreadsheet.level IS 'Nivel de catalogacao';


--
-- Name: COLUMN gtcspreadsheet.required; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcspreadsheet.required IS 'Campo obrigatorios';


--
-- Name: COLUMN gtcspreadsheet.defaultvalue; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcspreadsheet.defaultvalue IS 'Valor padrao de um campo marc';


--
-- Name: seq_supplierid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_supplierid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_supplierid OWNER TO postgres;

--
-- Name: seq_supplierid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_supplierid', 1, false);


--
-- Name: gtcsupplier; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsupplier (
    supplierid integer DEFAULT nextval('seq_supplierid'::regclass) NOT NULL,
    name character varying,
    companyname character varying,
    date timestamp without time zone
);


ALTER TABLE public.gtcsupplier OWNER TO postgres;

--
-- Name: TABLE gtcsupplier; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsupplier IS 'fornecedor';


--
-- Name: COLUMN gtcsupplier.supplierid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcsupplier.supplierid IS 'Identifica';


--
-- Name: gtcsuppliertypeandlocation; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcsuppliertypeandlocation (
    supplierid integer DEFAULT nextval('seq_supplierid'::regclass) NOT NULL,
    type character(1) NOT NULL,
    name character varying,
    companyname character varying,
    cnpj character varying,
    location character varying,
    neighborhood character varying,
    city character varying,
    zipcode character varying,
    phone character varying,
    fax character varying,
    alternativephone character varying,
    email character varying,
    alternativeemail character varying,
    contact character varying,
    site character varying,
    observation text,
    bankdeposit text,
    date timestamp without time zone,
    CONSTRAINT gtcsuppliertypeandlocation_type_check CHECK ((type = ANY (ARRAY['c'::bpchar, 'p'::bpchar, 'd'::bpchar])))
);


ALTER TABLE public.gtcsuppliertypeandlocation OWNER TO postgres;

--
-- Name: TABLE gtcsuppliertypeandlocation; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcsuppliertypeandlocation IS 'tipo de fornecedor e detalhes de localiza';


--
-- Name: COLUMN gtcsuppliertypeandlocation.supplierid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcsuppliertypeandlocation.supplierid IS 'Identifica';


--
-- Name: COLUMN gtcsuppliertypeandlocation.cnpj; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcsuppliertypeandlocation.cnpj IS 'CNPJ';


--
-- Name: COLUMN gtcsuppliertypeandlocation.location; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcsuppliertypeandlocation.location IS 'Endere';


--
-- Name: COLUMN gtcsuppliertypeandlocation.neighborhood; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcsuppliertypeandlocation.neighborhood IS 'Bairro';


--
-- Name: gtctag; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtctag (
    fieldid character varying(3) NOT NULL,
    subfieldid character varying(1) NOT NULL,
    description character varying(100) NOT NULL,
    observation text,
    isrepetitive boolean,
    hassubfield boolean,
    isactive boolean,
    indemonstration boolean,
    isobsolete boolean,
    help text
);


ALTER TABLE public.gtctag OWNER TO postgres;

--
-- Name: TABLE gtctag; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtctag IS 'etiquetas';


--
-- Name: COLUMN gtctag.fieldid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtctag.fieldid IS 'Campo marc';


--
-- Name: COLUMN gtctag.subfieldid; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtctag.subfieldid IS 'Subcampo marc';


--
-- Name: gtctask; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtctask (
    taskid integer NOT NULL,
    description character varying NOT NULL,
    parameters character varying,
    enable boolean DEFAULT true,
    scriptname character varying NOT NULL
);


ALTER TABLE public.gtctask OWNER TO postgres;

--
-- Name: TABLE gtctask; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtctask IS 'tarefas';


--
-- Name: gtcwebservice; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcwebservice (
    webserviceid integer NOT NULL,
    servicedescription text,
    class character varying NOT NULL,
    method character varying NOT NULL,
    enable boolean DEFAULT true,
    needauthentication boolean DEFAULT true,
    checkclientip boolean DEFAULT true
);


ALTER TABLE public.gtcwebservice OWNER TO postgres;

--
-- Name: TABLE gtcwebservice; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcwebservice IS 'lista de servi';


--
-- Name: seq_weekdayid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_weekdayid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_weekdayid OWNER TO postgres;

--
-- Name: seq_weekdayid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_weekdayid', 1, false);


--
-- Name: gtcweekday; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcweekday (
    weekdayid integer DEFAULT nextval('seq_weekdayid'::regclass) NOT NULL,
    description character varying(40) NOT NULL
);


ALTER TABLE public.gtcweekday OWNER TO postgres;

--
-- Name: seq_workflowhistoryid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_workflowhistoryid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_workflowhistoryid OWNER TO postgres;

--
-- Name: seq_workflowhistoryid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_workflowhistoryid', 1, false);


--
-- Name: gtcworkflowhistory; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcworkflowhistory (
    workflowhistoryid integer DEFAULT nextval('seq_workflowhistoryid'::regclass) NOT NULL,
    workflowinstanceid integer NOT NULL,
    workflowstatusid integer NOT NULL,
    date timestamp without time zone NOT NULL,
    operator character varying(30) NOT NULL,
    comment text
);


ALTER TABLE public.gtcworkflowhistory OWNER TO postgres;

--
-- Name: seq_workflowinstanceid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_workflowinstanceid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_workflowinstanceid OWNER TO postgres;

--
-- Name: seq_workflowinstanceid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_workflowinstanceid', 1, false);


--
-- Name: gtcworkflowinstance; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcworkflowinstance (
    workflowinstanceid integer DEFAULT nextval('seq_workflowinstanceid'::regclass) NOT NULL,
    workflowstatusid integer NOT NULL,
    date timestamp without time zone NOT NULL,
    tablename character varying(255) NOT NULL,
    tableid character varying(255) NOT NULL
);


ALTER TABLE public.gtcworkflowinstance OWNER TO postgres;

--
-- Name: seq_workflowstatusid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_workflowstatusid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_workflowstatusid OWNER TO postgres;

--
-- Name: seq_workflowstatusid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_workflowstatusid', 1, false);


--
-- Name: gtcworkflowstatus; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcworkflowstatus (
    workflowstatusid integer DEFAULT nextval('seq_workflowstatusid'::regclass) NOT NULL,
    workflowid character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    initial boolean NOT NULL,
    transaction character varying,
    CONSTRAINT chk_gtcworkflowstatus_workflowid CHECK (gtc_chk_domain('WORKFLOW'::character varying, workflowid))
);


ALTER TABLE public.gtcworkflowstatus OWNER TO postgres;

--
-- Name: COLUMN gtcworkflowstatus.transaction; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN gtcworkflowstatus.transaction IS 'Transação necessária para verificar a permissão';


--
-- Name: gtcworkflowtransition; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcworkflowtransition (
    previousworkflowstatusid integer NOT NULL,
    nextworkflowstatusid integer NOT NULL,
    name character varying(255) NOT NULL,
    function character varying(255)
);


ALTER TABLE public.gtcworkflowtransition OWNER TO postgres;

--
-- Name: seq_serverid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_serverid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_serverid OWNER TO postgres;

--
-- Name: seq_serverid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_serverid', 13, true);


--
-- Name: gtcz3950servers; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE gtcz3950servers (
    serverid integer DEFAULT nextval('seq_serverid'::regclass) NOT NULL,
    description character varying(255) NOT NULL,
    host character varying(255) NOT NULL,
    recordtype character varying(100) NOT NULL,
    sintax character varying(50),
    username character varying(50),
    password character varying(32),
    country character varying(100),
    CONSTRAINT chk_gtcz3950servers_recordtype CHECK (gtc_chk_domain('Z3950_RECORD_TYPE'::character varying, recordtype))
);


ALTER TABLE public.gtcz3950servers OWNER TO postgres;

--
-- Name: TABLE gtcz3950servers; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE gtcz3950servers IS 'armazena o servidores z3950';


--
-- Name: miolo_access; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_access (
    idtransaction integer NOT NULL,
    idgroup integer NOT NULL,
    rights integer NOT NULL,
    validatefunction text
);


ALTER TABLE public.miolo_access OWNER TO postgres;

--
-- Name: TABLE miolo_access; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE miolo_access IS 'Registra os permissões por grupo';


--
-- Name: COLUMN miolo_access.idtransaction; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_access.idtransaction IS 'Código da transação';


--
-- Name: COLUMN miolo_access.idgroup; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_access.idgroup IS 'Código do grupo';


--
-- Name: COLUMN miolo_access.rights; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_access.rights IS 'Direitos, quanto maior mais poder';


--
-- Name: COLUMN miolo_access.validatefunction; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_access.validatefunction IS 'Função de validação';


--
-- Name: miolo_group; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_group (
    idgroup integer NOT NULL,
    m_group character varying(50) NOT NULL,
    idmodule character varying(40)
);


ALTER TABLE public.miolo_group OWNER TO postgres;

--
-- Name: TABLE miolo_group; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE miolo_group IS 'Grupos de usuários/operadores';


--
-- Name: miolo_group_idgroup_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE miolo_group_idgroup_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.miolo_group_idgroup_seq OWNER TO postgres;

--
-- Name: miolo_group_idgroup_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE miolo_group_idgroup_seq OWNED BY miolo_group.idgroup;


--
-- Name: miolo_group_idgroup_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('miolo_group_idgroup_seq', 1, false);


--
-- Name: miolo_groupuser; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_groupuser (
    iduser integer NOT NULL,
    idgroup integer NOT NULL
);


ALTER TABLE public.miolo_groupuser OWNER TO postgres;

--
-- Name: TABLE miolo_groupuser; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE miolo_groupuser IS 'Relaciona usuários/operadores e grupos';


--
-- Name: miolo_log; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_log (
    idlog integer NOT NULL,
    m_timestamp timestamp without time zone NOT NULL,
    description text,
    module character varying(40) NOT NULL,
    class character varying(25),
    iduser integer NOT NULL,
    idtransaction integer,
    remoteaddr character varying(15) NOT NULL
);


ALTER TABLE public.miolo_log OWNER TO postgres;

--
-- Name: miolo_log_idlog_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE miolo_log_idlog_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.miolo_log_idlog_seq OWNER TO postgres;

--
-- Name: miolo_log_idlog_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE miolo_log_idlog_seq OWNED BY miolo_log.idlog;


--
-- Name: miolo_log_idlog_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('miolo_log_idlog_seq', 1, false);


--
-- Name: miolo_module; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_module (
    idmodule character varying(40) NOT NULL,
    name character varying(100),
    description text
);


ALTER TABLE public.miolo_module OWNER TO postgres;

--
-- Name: TABLE miolo_module; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE miolo_module IS 'Módulos do miolo';


--
-- Name: miolo_schedule; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_schedule (
    idschedule integer NOT NULL,
    idmodule character varying(40) NOT NULL,
    action text NOT NULL,
    parameters text,
    begintime timestamp without time zone,
    completed boolean DEFAULT false NOT NULL,
    running boolean DEFAULT false NOT NULL
);


ALTER TABLE public.miolo_schedule OWNER TO postgres;

--
-- Name: miolo_schedule_idschedule_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE miolo_schedule_idschedule_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.miolo_schedule_idschedule_seq OWNER TO postgres;

--
-- Name: miolo_schedule_idschedule_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE miolo_schedule_idschedule_seq OWNED BY miolo_schedule.idschedule;


--
-- Name: miolo_schedule_idschedule_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('miolo_schedule_idschedule_seq', 1, false);


--
-- Name: miolo_sequence; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_sequence (
    sequence character varying(30) NOT NULL,
    value integer NOT NULL
);


ALTER TABLE public.miolo_sequence OWNER TO postgres;

--
-- Name: miolo_session; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_session (
    idsession integer NOT NULL,
    iduser integer NOT NULL,
    tsin character varying(15),
    tsout character varying(15),
    name character varying(50),
    sid character varying(40),
    forced character(1),
    remoteaddr character varying(15)
);


ALTER TABLE public.miolo_session OWNER TO postgres;

--
-- Name: miolo_session_idsession_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE miolo_session_idsession_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.miolo_session_idsession_seq OWNER TO postgres;

--
-- Name: miolo_session_idsession_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE miolo_session_idsession_seq OWNED BY miolo_session.idsession;


--
-- Name: miolo_session_idsession_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('miolo_session_idsession_seq', 1, false);


--
-- Name: miolo_transaction; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_transaction (
    idtransaction integer NOT NULL,
    m_transaction character varying NOT NULL,
    idmodule character varying(40),
    nametransaction character varying(80) NOT NULL,
    idparent integer,
    action character varying(80),
    parentm_transaction text
);


ALTER TABLE public.miolo_transaction OWNER TO postgres;

--
-- Name: TABLE miolo_transaction; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE miolo_transaction IS 'Descrimina as transações/permissões do sistema.';


--
-- Name: COLUMN miolo_transaction.idmodule; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_transaction.idmodule IS 'Modulo ao qual a transação/permissão pertence.';


--
-- Name: COLUMN miolo_transaction.action; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_transaction.action IS 'Ação (url) do miolo ao qual a transação está relacionada, utilizada para montagem do menu principal do sistema.';


--
-- Name: COLUMN miolo_transaction.parentm_transaction; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_transaction.parentm_transaction IS 'Transação pai, usada para hierarquia entre transações para montagem de menu.';


--
-- Name: miolo_transaction_idtransaction_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE miolo_transaction_idtransaction_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.miolo_transaction_idtransaction_seq OWNER TO postgres;

--
-- Name: miolo_transaction_idtransaction_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE miolo_transaction_idtransaction_seq OWNED BY miolo_transaction.idtransaction;


--
-- Name: miolo_transaction_idtransaction_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('miolo_transaction_idtransaction_seq', 1, false);


--
-- Name: miolo_user; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE miolo_user (
    iduser integer NOT NULL,
    login character varying(25) NOT NULL,
    name character varying(100),
    nickname character varying(25),
    m_password character varying(40),
    confirm_hash character varying(40),
    theme character varying(20),
    idmodule character varying(40)
);


ALTER TABLE public.miolo_user OWNER TO postgres;

--
-- Name: TABLE miolo_user; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE miolo_user IS 'Usuários do miolo/operadores.';


--
-- Name: COLUMN miolo_user.iduser; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_user.iduser IS 'Código do usuário';


--
-- Name: COLUMN miolo_user.login; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_user.login IS 'usuário para autenticação';


--
-- Name: COLUMN miolo_user.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_user.name IS 'Nome completo do usuário';


--
-- Name: COLUMN miolo_user.nickname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_user.nickname IS 'Apelido do usuário';


--
-- Name: COLUMN miolo_user.m_password; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_user.m_password IS 'Senha para autenticação';


--
-- Name: COLUMN miolo_user.confirm_hash; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_user.confirm_hash IS 'Hash de confirmação de senha. ( Não utilizado pelo gnuteca)';


--
-- Name: COLUMN miolo_user.theme; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_user.theme IS 'Tema escolhido pelo usuário (não utilizado pelo Gnuteca).';


--
-- Name: COLUMN miolo_user.idmodule; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN miolo_user.idmodule IS 'Módulo ao qual o usuário pertence';


--
-- Name: miolo_user_iduser_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE miolo_user_iduser_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.miolo_user_iduser_seq OWNER TO postgres;

--
-- Name: miolo_user_iduser_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE miolo_user_iduser_seq OWNED BY miolo_user.iduser;


--
-- Name: miolo_user_iduser_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('miolo_user_iduser_seq', 1, false);


--
-- Name: searchmaterialview; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW searchmaterialview AS
    (((SELECT gtcmaterialcontrol.controlnumber, gtcmaterialcontrol.entrancedate, gtcmaterialcontrol.lastchangedate, gtcmaterialcontrol.category, gtcmaterialcontrol.level, gtcmaterialcontrol.materialgenderid, gtcmaterialcontrol.materialtypeid, gtcmaterialcontrol.materialphysicaltypeid, gtcexemplarycontrol.itemnumber AS exemplaryitemnumber, gtcexemplarycontrol.originallibraryunitid AS exemplaryoriginallibraryunitid, gtcexemplarycontrol.libraryunitid AS exemplarylibraryunitid, gtcexemplarycontrol.acquisitiontype AS exemplaryacquisitiontype, gtcexemplarycontrol.exemplarystatusid AS exemplaryexemplarystatusid, gtcexemplarycontrol.materialgenderid AS exemplarymaterialgenderid, gtcexemplarycontrol.materialtypeid AS exemplarymaterialtypeid, gtcexemplarycontrol.materialphysicaltypeid AS exemplarymaterialphysicaltypeid, gtcexemplarycontrol.entrancedate AS exemplaryentrancedate, gtcexemplarycontrol.lowdate AS exemplarylowdate FROM (gtcmaterialcontrol LEFT JOIN gtcexemplarycontrol USING (controlnumber)) UNION SELECT gtcmaterialcontrol.controlnumberfather AS controlnumber, gtcmaterialcontrol.entrancedate, gtcmaterialcontrol.lastchangedate, gtcmaterialcontrolfather.category, gtcmaterialcontrolfather.level, gtcmaterialcontrol.materialgenderid, gtcmaterialcontrol.materialtypeid, gtcmaterialcontrol.materialphysicaltypeid, gtcexemplarycontrol.itemnumber AS exemplaryitemnumber, gtcexemplarycontrol.originallibraryunitid AS exemplaryoriginallibraryunitid, gtcexemplarycontrol.libraryunitid AS exemplarylibraryunitid, gtcexemplarycontrol.acquisitiontype AS exemplaryacquisitiontype, gtcexemplarycontrol.exemplarystatusid AS exemplaryexemplarystatusid, gtcexemplarycontrol.materialgenderid AS exemplarymaterialgenderid, gtcexemplarycontrol.materialtypeid AS exemplarymaterialtypeid, gtcexemplarycontrol.materialphysicaltypeid AS exemplarymaterialphysicaltypeid, gtcexemplarycontrol.entrancedate AS exemplaryentrancedate, gtcexemplarycontrol.lowdate AS exemplarylowdate FROM ((gtcmaterialcontrol LEFT JOIN gtcexemplarycontrol USING (controlnumber)) JOIN gtcmaterialcontrol gtcmaterialcontrolfather ON ((gtcmaterialcontrol.controlnumberfather = gtcmaterialcontrolfather.controlnumber))) WHERE (gtcmaterialcontrol.controlnumberfather IS NOT NULL)) UNION SELECT a.controlnumberfather AS controlnumber, b.entrancedate, b.lastchangedate, b.category, b.level, b.materialgenderid, b.materialtypeid, b.materialphysicaltypeid, c.itemnumber AS exemplaryitemnumber, c.originallibraryunitid AS exemplaryoriginallibraryunitid, c.libraryunitid AS exemplarylibraryunitid, c.acquisitiontype AS exemplaryacquisitiontype, c.exemplarystatusid AS exemplaryexemplarystatusid, c.materialgenderid AS exemplarymaterialgenderid, c.materialtypeid AS exemplarymaterialtypeid, c.materialphysicaltypeid AS exemplarymaterialphysicaltypeid, c.entrancedate AS exemplaryentrancedate, c.lowdate AS exemplarylowdate FROM ((gtcmaterialcontrol a LEFT JOIN gtcmaterialcontrol b ON ((b.controlnumber = a.controlnumberfather))) LEFT JOIN gtcexemplarycontrol c ON ((a.controlnumber = c.controlnumber))) WHERE (a.controlnumberfather IS NOT NULL)) UNION SELECT gtcmaterialcontrol.controlnumber, gtcmaterialcontrol.entrancedate, gtcmaterialcontrol.lastchangedate, gtcmaterialcontrol.category, gtcmaterialcontrol.level, gtcmaterialcontrol.materialgenderid, gtcmaterialcontrol.materialtypeid, gtcmaterialcontrol.materialphysicaltypeid, gtcexemplarycontrol.itemnumber AS exemplaryitemnumber, gtcexemplarycontrol.originallibraryunitid AS exemplaryoriginallibraryunitid, gtcexemplarycontrol.libraryunitid AS exemplarylibraryunitid, gtcexemplarycontrol.acquisitiontype AS exemplaryacquisitiontype, gtcexemplarycontrol.exemplarystatusid AS exemplaryexemplarystatusid, gtcexemplarycontrol.materialgenderid AS exemplarymaterialgenderid, gtcexemplarycontrol.materialtypeid AS exemplarymaterialtypeid, gtcexemplarycontrol.materialphysicaltypeid AS exemplarymaterialphysicaltypeid, gtcexemplarycontrol.entrancedate AS exemplaryentrancedate, gtcexemplarycontrol.lowdate AS exemplarylowdate FROM (gtcmaterialcontrol JOIN gtcexemplarycontrol ON ((gtcmaterialcontrol.controlnumberfather = gtcexemplarycontrol.controlnumber)))) UNION SELECT gtcmaterialcontrol.controlnumber, gtcmaterialcontrol.entrancedate, gtcmaterialcontrol.lastchangedate, gtcmaterialcontrol.category, gtcmaterialcontrol.level, gtcmaterialcontrol.materialgenderid, gtcmaterialcontrol.materialtypeid, gtcmaterialcontrol.materialphysicaltypeid, ''::character varying(20) AS exemplaryitemnumber, gtckardexcontrol.libraryunitid AS exemplaryoriginallibraryunitid, gtckardexcontrol.libraryunitid AS exemplarylibraryunitid, gtckardexcontrol.acquisitiontype AS exemplaryacquisitiontype, NULL::unknown AS exemplaryexemplarystatusid, NULL::unknown AS exemplarymaterialgenderid, gtcmaterialcontrol.materialtypeid AS exemplarymaterialtypeid, NULL::unknown AS exemplarymaterialphysicaltypeid, gtckardexcontrol.entrancedate AS exemplaryentrancedate, NULL::unknown AS exemplarylowdate FROM (gtcmaterialcontrol RIGHT JOIN gtckardexcontrol USING (controlnumber));


ALTER TABLE public.searchmaterialview OWNER TO postgres;

--
-- Name: seq_fileid; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_fileid
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_fileid OWNER TO postgres;

--
-- Name: seq_fileid; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_fileid', 1, false);


--
-- Name: seq_gtcmaterialevaluation; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_gtcmaterialevaluation
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_gtcmaterialevaluation OWNER TO postgres;

--
-- Name: seq_gtcmaterialevaluation; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_gtcmaterialevaluation', 1, false);


--
-- Name: seq_gtcworkflowhistory; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_gtcworkflowhistory
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_gtcworkflowhistory OWNER TO postgres;

--
-- Name: seq_gtcworkflowhistory; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_gtcworkflowhistory', 1, false);


--
-- Name: seq_gtcworkflowinstance; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_gtcworkflowinstance
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_gtcworkflowinstance OWNER TO postgres;

--
-- Name: seq_gtcworkflowinstance; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_gtcworkflowinstance', 1, false);


--
-- Name: seq_gtcworkflowstatus; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_gtcworkflowstatus
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.seq_gtcworkflowstatus OWNER TO postgres;

--
-- Name: seq_gtcworkflowstatus; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_gtcworkflowstatus', 1, false);


--
-- Name: seq_miolo_group; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_miolo_group
    START WITH 100
    INCREMENT BY 1
    NO MAXVALUE
    MINVALUE 100
    CACHE 1;


ALTER TABLE public.seq_miolo_group OWNER TO postgres;

--
-- Name: seq_miolo_group; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_miolo_group', 100, false);


--
-- Name: seq_miolo_log; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_miolo_log
    START WITH 100
    INCREMENT BY 1
    NO MAXVALUE
    MINVALUE 100
    CACHE 1;


ALTER TABLE public.seq_miolo_log OWNER TO postgres;

--
-- Name: seq_miolo_log; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_miolo_log', 100, false);


--
-- Name: seq_miolo_session; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_miolo_session
    START WITH 100
    INCREMENT BY 1
    NO MAXVALUE
    MINVALUE 100
    CACHE 1;


ALTER TABLE public.seq_miolo_session OWNER TO postgres;

--
-- Name: seq_miolo_session; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_miolo_session', 100, false);


--
-- Name: seq_miolo_transaction; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_miolo_transaction
    START WITH 100
    INCREMENT BY 1
    NO MAXVALUE
    MINVALUE 100
    CACHE 1;


ALTER TABLE public.seq_miolo_transaction OWNER TO postgres;

--
-- Name: seq_miolo_transaction; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_miolo_transaction', 100, false);


--
-- Name: seq_miolo_user; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE seq_miolo_user
    START WITH 100
    INCREMENT BY 1
    NO MAXVALUE
    MINVALUE 100
    CACHE 1;


ALTER TABLE public.seq_miolo_user OWNER TO postgres;

--
-- Name: seq_miolo_user; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('seq_miolo_user', 100, false);


--
-- Name: username; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bascity ALTER COLUMN username SET DEFAULT "current_user"();


--
-- Name: datetime; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bascity ALTER COLUMN datetime SET DEFAULT now();


--
-- Name: username; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bascountry ALTER COLUMN username SET DEFAULT "current_user"();


--
-- Name: datetime; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bascountry ALTER COLUMN datetime SET DEFAULT now();


--
-- Name: username; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY basstate ALTER COLUMN username SET DEFAULT "current_user"();


--
-- Name: datetime; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY basstate ALTER COLUMN datetime SET DEFAULT now();


--
-- Name: changeid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY dbchanges ALTER COLUMN changeid SET DEFAULT nextval('dbchanges_changeid_seq'::regclass);


--
-- Name: helpid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtchelp ALTER COLUMN helpid SET DEFAULT nextval('gtchelp_helpid_seq'::regclass);


--
-- Name: supplierid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpurchaserequestquotation ALTER COLUMN supplierid SET DEFAULT nextval('gtcpurchaserequestquotation_supplierid_seq'::regclass);


--
-- Name: idgroup; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_group ALTER COLUMN idgroup SET DEFAULT nextval('miolo_group_idgroup_seq'::regclass);


--
-- Name: idlog; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_log ALTER COLUMN idlog SET DEFAULT nextval('miolo_log_idlog_seq'::regclass);


--
-- Name: idschedule; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_schedule ALTER COLUMN idschedule SET DEFAULT nextval('miolo_schedule_idschedule_seq'::regclass);


--
-- Name: idsession; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_session ALTER COLUMN idsession SET DEFAULT nextval('miolo_session_idsession_seq'::regclass);


--
-- Name: idtransaction; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_transaction ALTER COLUMN idtransaction SET DEFAULT nextval('miolo_transaction_idtransaction_seq'::regclass);


--
-- Name: iduser; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_user ALTER COLUMN iduser SET DEFAULT nextval('miolo_user_iduser_seq'::regclass);


--
-- Data for Name: bascity; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bascity (username, datetime, ipaddress, cityid, name, zipcode, stateid, countryid, ibgeid) FROM stdin;
postgres	2013-06-07 08:49:37.390904-03	\N	1407	Gázea	62235000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6745	São Roque	85667000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1021	Riacho Seco	48933000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2803	Baú	35615000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7836	Iruí	96655000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8637	Ouro	89663000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8860	Malhador	49570000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8861	Maruim	49770000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8862	Miranda	49702000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8863	Moita Bonita	49560000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8864	Monte Alegre De Sergipe	49690000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8865	Mosqueiro	49099700	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8866	Muribeca	49780000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8867	Neópolis	49980000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8868	Nossa Senhora Aparecida	49540000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	61	Feijó	69960000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8869	Nossa Senhora Da Glória	49680000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8870	Nossa Senhora Das Dores	49600000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8871	Nossa Senhora De Lourdes	49890000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8872	Nossa Senhora Do Socorro	49160000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8873	Pacatuba	49970000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8874	Palmares	49325000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8875	Pedra Mole	49512000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8876	Pedras	49704000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8877	Pedrinhas	49350000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8878	Pinhão	49517000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8879	Pirambu	49190000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8880	Poço Redondo	49810000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8881	Poço Verde	49490000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8882	Porto Da Folha	49800000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8883	Propriá	49900000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8884	Riachão Do Dantas	49320000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8885	Riachuelo	49130000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8886	Ribeirópolis	49530000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8887	Rosário Do Catete	49760000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8888	Salgado	49390000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8889	Samambaia	49310000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8890	Santa Luzia Do Itanhy	49230000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8891	Santa Rosa De Lima	49640000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8892	Santana Do São Francisco	49985000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8893	Santo Amaro Das Brotas	49180000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8894	São Cristóvão	49100000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8895	São Domingos	49525000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8896	São Francisco	49945000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8897	São José	49099000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8898	São Mateus Da Palestina	49840000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8899	São Miguel Do Aleixo	49535000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8900	Simão Dias	49480000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8901	Siriri	49630000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8902	Telha	49910000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8903	Tobias Barreto	49300000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8904	Tomar Do Geru	49280000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8905	Umbaúba	49260000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9799	Tuiuti	12930000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9800	Tujuguaba	13839000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9801	Tupã	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9802	Tupi	13428000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9803	Tupi Paulista	17930000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9804	Turiba Do Sul	18450000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9805	Turiúba	15280000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9806	Turmalina	15755000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9807	Turvínia	14716000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9808	Ubarana	15225000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9809	Ubatuba	11680000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9810	Ubirajara	17440000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9811	Uchoa	15890000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9812	União Paulista	15250000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9813	Universo	17623000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9814	Urânia	15760000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9815	Uru	16650000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9816	Urupês	15850000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9817	Ururai	15955000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9818	Utinga	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9819	Vale Formoso	14970000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9820	Valentim Gentil	15520000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9821	Valinhos	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9822	Valparaíso	16880000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9823	Vanglória	17282000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9824	Vargem	12935000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1150	Una	45690000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1480	Jaburuna	62354000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9825	Vargem Grande Do Sul	13880000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5472	Sanharó	55250000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8171	São Bento	99518000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9313	Itu	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9371	Lindóia	13950000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	753	Itajuípe	45630000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1260	Baú	63512000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1380	Ema	62988000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2433	Anajatuba	65490000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3413	Luz	35595000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5931	Cachoeira	85823750	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6282	Joá	86457000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6544	Pranchita	85730000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	54	Acrelândia	69945000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	55	Assis Brasil	69935000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	56	Brasiléia	69932000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	57	Bujari	69923000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	58	Capixaba	69922000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	59	Cruzeiro Do Sul	69980000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	60	Epitaciolândia	69934000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	62	Jordão	69975000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	63	Mâncio Lima	69990000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	64	Manoel Urbano	69950000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	65	Marechal Thaumaturgo	69983000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	66	Plácido De Castro	69928000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	67	Porto Acre	69921000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	68	Porto Walter	69982000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	69	Rio Branco	00000000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	70	Rodrigues Alves	69985000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	71	Santa Rosa	69955000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	72	Sena Madureira	69940000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	73	Senador Guiomard	69925000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	74	Tarauacá	69970000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	75	Xapuri	69930000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	11112	Campinas	69929000	AC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	76	Água Branca	57490000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	77	Alazão	57317000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	78	Alecrim	57405000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	79	Anadia	57660000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	80	Anel	57710000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	81	Anum Novo	57610100	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	82	Anum Velho	57610200	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	83	Arapiraca	00000000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	84	Atalaia	57690000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	85	Baixa Da Onça	57317100	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	86	Baixa Do Capim	57317200	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	87	Bálsamo	57317300	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	88	Bananeiras	57317400	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	89	Barra De Santo Antônio	57925000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	90	Barra De São Miguel	57180000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	91	Barra Do Bonifácio	57610300	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	92	Barra Grande	57958000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	93	Batalha	57420000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	94	Batingas	57317500	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	95	Belém	57630000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	96	Belo Monte	57435000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	97	Boa Sorte	57610400	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	98	Boa Vista	57317600	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9826	Vargem Grande Paulista	06730000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	100	Boca Da Mata	57680000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	101	Bom Jardim	57317700	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	102	Bonifácio	57610600	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	103	Branquinha	57830000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	104	Cacimbinhas	57570000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	105	Cajarana	57317800	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	106	Cajueiro	57770000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	107	Caldeirões De Cima	57614000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	108	Camadanta	57318000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	109	Campestre	57968000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	110	Campo Alegre	57250000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	111	Campo Grande	57350000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	112	Canaã	57317900	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	113	Canafístula	57613000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	114	Canapi	57530000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	115	Canastra	57895000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	116	Cangandu	57318100	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	117	Capela	57780000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	118	Carneiros	57535000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	119	Carrasco	57318200	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	120	Chã Preta	57760000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	121	Coité Do Nóia	57325000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	122	Colônia Leopoldina	57975000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	123	Coqueiro Seco	57140000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	124	Coruripe	57230000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	125	Coruripe Da Cal	57610900	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	126	Craíbas	57320000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	127	Delmiro Gouveia	57480000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	128	Dois Riachos	57560000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	129	Entremontes	57465000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	130	Estrela De Alagoas	57625000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	131	Feira Grande	57340000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	132	Feliz Deserto	57220000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	134	Flexeiras	57995000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	136	Gaspar	57318300	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	137	Girau Do Ponciano	57360000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	138	Ibateguara	57890000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	139	Igaci	57620000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	140	Igreja Nova	57280000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	141	Inhapi	57545000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	142	Jacaré Dos Homens	57430000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	143	Jacuípe	57960000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	144	Japaratinga	57950000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	145	Jaramataia	57425000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	146	Jenipapo	57318400	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	147	Joaquim Gomes	57980000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	148	Jundiá	57965000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	149	Junqueiro	57270000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	150	Lagoa Da Areia	57611200	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	151	Lagoa Da Canoa	57330000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	152	Lagoa Da Pedra	57318500	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	153	Lagoa Dantas	57611500	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	154	Lagoa Do Caldeirão	57611300	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	155	Lagoa Do Canto	57611400	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	156	Lagoa Do Exú	57611600	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	157	Lagoa Do Rancho	57318600	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9827	Varpa	17625000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	159	Lajes Do Caldeirão	57611800	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	160	Laranjal	57318700	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	161	Limoeiro De Anadia	57260000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	162	Maceió	00000000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	163	Major Isidoro	57580000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	164	Mar Vermelho	57730000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	165	Maragogi	57955000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	166	Maravilha	57520000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	167	Marechal Deodoro	57160000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	168	Maribondo	57670000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	169	Massaranduba	57318800	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	170	Mata Grande	57540000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	171	Matriz De Camaragibe	57910000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	172	Messias	57990000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	173	Minador Do Negrão	57615000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	174	Monteirópolis	57440000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	175	Moreira	57611900	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	176	Munguba	57850000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	177	Murici	57820000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	178	Novo Lino	57970000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	179	Olho D`água Grande	57390000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	180	Olho D`água Das Flores	57442000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	181	Olho D`água De Cima	57318900	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	182	Olho D`água Do Casado	57470000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	183	Olho D`água Dos Dandanhas	57319000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	184	Olivença	57550000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	185	Ouro Branco	57525000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	186	Palestina	57410000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	187	Palmeira De Fora	57613500	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	188	Palmeira Dos Índios	00000000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	189	Pão De Açúcar	57400000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	190	Pariconha	57475000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	191	Paripueira	57935000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	192	Passo De Camaragibe	57930000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	193	Pau D`arco	57319100	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	194	Pau Ferro	57319200	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	195	Paulo Jacinto	57740000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	196	Penedo	57200000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	197	Piaçabuçu	57210000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	198	Pilar	57150000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	199	Pindoba	57720000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	200	Piranhas	57460000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	201	Poção	57319300	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	202	Poço Da Pedra	57319400	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	203	Poço Das Trincheiras	57510000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	204	Porto Calvo	57900000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	205	Porto De Pedras	57945000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	206	Porto Real Do Colégio	57290000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	207	Poxim	57235000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	208	Quebrangulo	57750000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	209	Riacho Do Sertão	57585000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	210	Riacho Fundo De Cima	57611000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	211	Rio Largo	57100000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	212	Rocha Cavalcante	57810000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	213	Roteiro	57246000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	214	Santa Efigênia	57790000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	215	Santa Luzia Do Norte	57130000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	216	Santana Do Ipanema	57500000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	217	Santana Do Mundaú	57840000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	218	Santo Antônio	57611100	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	219	São Brás	57380000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	220	São José Da Laje	57860000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	221	São José Da Tapera	57445000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	222	São Luís Do Quitunde	57920000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	223	São Miguel Dos Campos	57240000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	224	São Miguel Dos Milagres	57940000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	225	São Sebastião	57275000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	226	Sapucaia	57319500	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9828	Várzea Paulista	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	228	Satuba	57120000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	229	Senador Rui Palmeira	57515000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	230	Serra Da Mandioca	57612000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	231	Serra Do São José	57612500	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	232	Taboleiro Do Pinto	57110000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	233	Taboquinha	57319600	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	234	Tanque D`arca	57635000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	235	Taquarana	57640000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	236	Tatuamunha	57948000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	237	Teotônio Vilela	57265000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	238	Traipu	57370000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	239	União Dos Palmares	57800000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	240	Usina Camaçari	57233000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	241	Viçosa	57700000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	242	Vila Aparecida	57319700	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	243	Vila São Francisco	57319800	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10142	Jequiá Da Praia	57244000	AL	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	331	Abacate Da Pedreira	68912350	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	332	Serra Do Navio	68948000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	333	Amapá	68950000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	334	Amapari	68945000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	335	Ambé	68912000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	336	Aporema	68994000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	337	Ariri	68912050	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	338	Bailique	68913000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	339	Boca Do Jari	68923000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	340	Calçoene	68960000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	341	Cantanzal	68912800	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	342	Carmo	68912100	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	343	Clevelândia Do Norte	68985000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	344	Corre Água	68912600	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	345	Cunani	68965000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	346	Curiaú	68912300	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	347	Cutias	68973000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	348	Fazendinha	68912250	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	349	Ferreira Gomes	68915000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	350	Fortaleza	68939000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	351	Gaivota	68912150	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	352	Gurupora	68912650	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	353	Igarapé Do Lago	68935000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	354	Ilha De Santana	68937000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	355	Inajá	68912750	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	356	Itaubal	68976000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	357	Laranjal Do Jari	68920000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	358	Livramento Do Pacuí	68912450	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	359	Lourenço	68970000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	360	Macapá	00000000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	361	Mazagão	68940000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	362	Mazagão Velho	68943000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	363	Oiapoque	68980000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	364	Paredão	68917000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	365	Porto Grande	68997000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	366	Pracuúba	68918000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	367	Santa Luzia Do Pacuí	68912530	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	368	Santa Maria	68912200	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	369	Santana	68925000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	370	São Joaquim Do Pacuí	68912500	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	371	São Sebastião Do Livramento	68912550	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	372	São Tomé	68912700	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9829	Venda Branca	13707000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	374	Sucuriju	68958000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	375	Tartarugalzinho	68990000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	376	Vila Velha	68988000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	377	Vitória Do Jari	68924000	AP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	244	Alvarães	69475000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	245	Amatari	69105000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	246	Amaturá	69620000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	247	Anamã	69445000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	248	Anori	69440000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	249	Apuí	69265000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	250	Ariaú	69165000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	251	Atalaia Do Norte	69650000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	252	Augusto Montenegro	69182000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	253	Autazes	69240000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	254	Axinim	69210000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	255	Badajós	69452000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	256	Balbina	69736000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	257	Barcelos	69700000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	258	Barreirinha	69160000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	259	Benjamin Constant	69630000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	260	Beruri	69430000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	261	Boa Vista Do Ramos	69195000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	262	Boca Do Acre	69850000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	263	Borba	69200000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	264	Caapiranga	69410000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	265	Cametá	69162000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	266	Canumã	69212000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	267	Canutama	69820000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	268	Carauari	69500000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	269	Careiro	69250000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	270	Careiro Da Várzea	69255000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	271	Carvoeiro	69725000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	272	Coari	69460000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	273	Codajás	69450000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	274	Cucuí	69765000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	275	Eirunepé	69880000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	276	Envira	69870000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	277	Floriano Peixoto	69855000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	278	Fonte Boa	69670000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	279	Freguesia Do Andirá	69170000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	280	Guajará	69895000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	281	Humaitá	69800000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	282	Iauaretê	69790000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	283	Içanã	69760000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	284	Ipixuna	69890000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	285	Iranduba	69405000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	286	Itacoatiara	69100000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	287	Itamarati	69510000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	288	Itapiranga	69120000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	289	Japurá	69495000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	290	Juruá	69520000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	291	Jutaí	69660000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	292	Lábrea	69830000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	293	Lago Preto	69196000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	294	Manacapuru	69400000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	295	Manaquiri	69435000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	296	Manaus	00000000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	297	Manicoré	69280000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	298	Maraã	69490000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	299	Massauari	69197000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	300	Maués	69190000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	301	Mocambo	69158000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	302	Moura	69720000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	303	Murutinga	69245000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	304	Nhamundá	69140000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	305	Nova Olinda Do Norte	69230000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	306	Novo Airão	69730000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	307	Novo Aripuanã	69260000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	308	Osório Da Fonseca	69192000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	309	Parintins	00000000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	310	Pauini	69860000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	311	Pedras	69175000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	312	Presidente Figueiredo	69735000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	313	Repartimento	69193000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	314	Rio Preto Da Eva	69115000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	315	Santa Isabel Do Rio Negro	69740000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	316	Santa Rita	69610000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	317	Santo Antônio Do Içá	69680000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	318	São Felipe	69752000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	319	São Gabriel Da Cachoeira	69750000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	320	São Paulo De Olivença	69600000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	321	São Sebastião Do Uatumã	69135000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	322	Silves	69110000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	323	Tabatinga	69640000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	324	Tapauá	69480000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	325	Tefé	69470000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	326	Tonantins	69685000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	327	Uarini	69485000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	328	Urucará	69130000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	329	Urucurituba	69180000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	330	Vila Pitinga	69737000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10524	Cacau Pirêra	69408000	AM	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	378	Abadia	48320000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	379	Abaíra	46690000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	380	Abaré	48680000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	381	Abelhas	45112000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	382	Abóbora	48912000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	383	Abrantes	42840000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	384	Acajutiba	48360000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	385	Açu Da Torre	48288000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	386	Açudina	47645000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	387	Acupe	44218000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	388	Adustina	48435000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	389	Afligidos	44338000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	390	Afrânio Peixoto	46965000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	391	Água Doce	45295000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	392	Água Fria	48170000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	393	Águas Do Paulista	47505000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	394	Aiquara	45220000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	395	Alagoinhas	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	396	Alcobaça	45990000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	397	Alegre	46203000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	398	Algodão	45582000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	399	Algodões	48832000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	400	Almadina	45640000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	401	Alto Bonito	44805000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	402	Amado Bahia	48282000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	403	Amaniú	47380000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	404	Amargosa	45300000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	405	Amélia Rodrigues	44230000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	406	América Dourada	44910000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	407	Américo Alves	47370000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	408	Anagé	45180000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	409	Andaraí	46830000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	410	Andorinha	48990000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	411	Angical	47960000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	412	Angico	44633000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	413	Anguera	44670000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	414	Antas	48420000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	415	Antônio Cardoso	44180000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	416	Antônio Gonçalves	44780000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	417	Aporá	48350000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	418	Apuarema	45355000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	419	Araçás	48108000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	420	Aracatu	46130000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	421	Araci	48760000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	422	Aramari	48130000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	423	Arapiranga	46177000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	424	Arataca	45695000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	425	Aratuípe	44490000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	426	Areias	42847000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	427	Arembepe	42835000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	428	Argoim	44525000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	429	Argolo	45925000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	430	Aribice	48504000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	431	Aritaguá	45663000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	432	Aurelino Leal	45675000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	433	Baianópolis	47830000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	434	Baixa Do Palmeira	44535000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	435	Baixa Grande	44620000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	436	Baixão	45212000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	437	Baixinha	45313000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	438	Baluarte	47270000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	439	Banco Central	45673000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	440	Banco Da Vitória	45661000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	441	Bandeira Do Almada	45635000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	442	Bandeira Do Colônia	45705000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	443	Bandiaçu	48745000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	444	Banzaê	48405000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	445	Baraúnas	46920000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	446	Barcelos Do Sul	45448000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	447	Barra	47100000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	448	Barra Da Estiva	46650000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	449	Barra Do Choça	45120000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	450	Barra Do Jacuípe	42833000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	451	Barra Do Mendes	44990000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	452	Barra Do Pojuca	42825000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	453	Barra Do Rocha	45560000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	454	Barra Do Tarrachil	48668000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	455	Barracas	44757000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	456	Barreiras	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	457	Barro Alto	44895000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	458	Governador Lomanto Júnior	45625000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	459	Barro Vermelho	48935000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	460	Barrocas	48705000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	461	Bastião	46745000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	462	Bate Pé	45107000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	463	Batinga	45975000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	464	Bela Flor	48113000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	465	Belém Da Cachoeira	44315000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	466	Belmonte	45800000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	467	Belo Campo	45160000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9830	Vera Cruz	17560000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	469	Bem-Bom	47330000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	470	Bendegó	48524000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	471	Bento Simões	44258000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	472	Biritinga	48780000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	473	Boa Espera	44265000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	474	Boa Nova	45250000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	475	Boa União	48103000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	476	Boa Vista Do Lagamar	47525000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	477	Boa Vista Do Tupim	46850000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	478	Boaçu	45209000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	479	Boca Do Córrego	45805000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	480	Bom Jesus Da Lapa	47600000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	481	Bom Jesus Da Serra	45263000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	482	Bom Sossego	47540000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	483	Bonfim Da Feira	44120000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	484	Boninal	46740000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	485	Bonito	46820000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	486	Boquira	46530000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	487	Botuporã	46570000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	488	Botuquara	46475000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	489	Brejinho Das Ametistas	46405000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	490	Brejo Da Serra	47260000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	491	Brejo Luíza De Brito	46733000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	492	Brejo Novo	46855000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	493	Brejões	45325000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	494	Brejolândia	47750000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	495	Brotas De Macaúbas	47560000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	496	Brumado	46100000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	497	Bucuituba	46535000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	498	Buerarema	45615000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	499	Buracica	44285000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	500	Buranhém	45845000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	501	Buril	48483000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	502	Buris De Abrantes	42845000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	503	Buritirama	47120000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	504	Caatiba	45130000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	505	Cabaceiras Do Paraguaçu	44345000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	506	Cabrália	46768000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	507	Cacha Pregos	44478000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	508	Cachoeira	44300000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	509	Cachoeira Do Mato	45999000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	510	Caculé	46300000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	511	Caém	44730000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	512	Caetanos	45265000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	513	Caeté-Açu	46940000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	514	Caetité	46400000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	515	Cafarnaum	44880000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	516	Caiçara	45118000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	517	Caimbé	48506000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	518	Cairu	45420000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	519	Caiubi	45858000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	520	Cajuí	47390000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	521	Caldas Do Jorro	48793000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	522	Caldeirão	48955000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	523	Caldeirão Grande	44750000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	524	Caldeiras	46420000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	525	Camacan	45880000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	526	Camaçari	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	527	Camamu	45445000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	528	Camassandi	44482000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	529	Camirim	44860000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	530	Campinhos	44215000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	531	Campo Alegre De Lourdes	47220000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	532	Campo Formoso	44790000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9831	Vicente De Carvalho	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	534	Camurugi	45434000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	535	Canabravinha	46195000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	536	Canápolis	47730000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	537	Canarana	44890000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	538	Canatiba	46510000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	539	Canavieiras	45860000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	540	Canché	48560000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	541	Candeal	48710000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	542	Candeias	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	543	Candiba	46380000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	544	Cândido Sales	45157000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	545	Canoão	44965000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	546	Cansanção	48840000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	547	Canto Do Sol	42830000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	548	Canudos	48520000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9832	Vicentinópolis	16140000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	550	Capão	45495000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	551	Capela Do Alto Alegre	44645000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	552	Capim Grosso	44695000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	553	Caraguataí	46680000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	554	Caraíbas	45177000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	555	Caraibuna	46630000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	556	Caraípe	44555000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	557	Caraiva	45819000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	558	Caravelas	45900000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	559	Cardeal Da Silva	48390000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	560	Carinhanha	46445000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	561	Caripare	47980000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	562	Carnaíba Do Sertão	48922000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	563	Carrapichel	48985000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	564	Casa Nova	47300000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	565	Castelo Novo	45667000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	566	Castro Alves	44500000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	567	Catinga Do Moura	44704000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	568	Catingal	45245000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	569	Catolândia	47815000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	570	Catolés	46695000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	571	Catolezinho	45145000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	572	Catu	48110000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	573	Catu De Abrantes	42841000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	574	Caturama	46575000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	575	Cavunge	44685000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	576	Central	44940000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	577	Ceraima	46433000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	578	Chorrochó	48660000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	579	Cícero Dantas	48410000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	580	Cinco Rios	43860000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	581	Cipó	48450000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	582	Coaraci	45638000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	583	Cocos	47680000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	584	Colônia	45832000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	585	Comércio	44545000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	586	Conceição Da Feira	44320000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	587	Conceição Do Almeida	44540000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	588	Conceição Do Coité	48730000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	589	Conceição Do Jacuípe	44245000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	590	Conde	48300000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	591	Condeúba	46200000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	592	Contendas Do Sincorá	46620000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	593	Copixaba	47430000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	594	Coqueiros	44430000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	595	Coquinhos	45185000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	596	Coração De Maria	44250000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	597	Cordeiros	46280000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	598	Coribe	47690000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	599	Coronel João Sá	48590000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	600	Correntina	47650000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	601	Corta Mão	45301000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	602	Cotegipe	47900000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	603	Coutos	45664000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	604	Cravolândia	45330000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	605	Crisópolis	48480000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	606	Cristalândia	46108000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	607	Cristópolis	47950000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	608	Crussaí	44505000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	609	Cruz Das Almas	44380000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	610	Cumuruxatiba	45983000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	611	Cunhangi	44488000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	612	Curaçá	48930000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	613	Curral Falso	48403000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	614	Dário Meira	45590000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	615	Delfino	44795000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	616	Descoberto	47695000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	617	Dias Coelho	44855000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	618	Dias D`ávila	42850000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	619	Diógenes Sampaio	45302000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	620	Dom Basílio	46165000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	621	Dom Macedo Costa	44560000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	622	Dona Maria	48473000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	623	Duas Barras Do Morro	44865000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	624	Elísio Medrado	45305000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	625	Encruzilhada	45150000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	626	Engenheiro França	45312000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	627	Engenheiro Pontes	45498000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	628	Entre Rios	48180000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	629	Érico Cardoso	46180000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	630	Esplanada	48370000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	631	Euclides Da Cunha	48500000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	632	Eunápolis	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	633	Fátima	48415000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	634	Feira Da Mata	46446000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	635	Feira De Santana	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	636	Ferradas	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	637	Filadélfia	44775000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	638	Filanésia	45358000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	639	Firmino Alves	45720000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	640	Floresta Azul	45740000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	641	Formosa Do Rio Preto	47990000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	642	França	44837000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	643	Gabiarra	45831000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	644	Galeão	45422000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	645	Gamboa	45424000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	646	Gameleira Da Lapa	47620000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	647	Gameleira Do Assuruá	47470000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	648	Gandu	45450000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	649	Gavião	44650000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	650	Gentio Do Ouro	47450000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	651	Geolândia	44349000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	652	Glória	48610000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	653	Gongogi	45540000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	654	Governador João Durval Carneiro	44130000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	655	Governador Mangabeira	44350000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	656	Guagirus	42837000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	657	Guaí	44423000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	658	Guajeru	46205000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	659	Guanambi	46430000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	660	Guapira	44425000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	661	Guarajuba	42827000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	662	Guaratinga	45840000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	663	Guerém	45413000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	664	Guiné	46753000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	665	Guirapa	46370000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	666	Gurupá Mirim	45795000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	667	Heliópolis	48445000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	668	Helvecia	45923000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	669	Hidrolândia	44955000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	670	Humildes	44135000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	671	Iaçu	46860000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	672	Ibatui	48185000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	673	Ibiaçu	45523000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	674	Ibiajara	46560000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	675	Ibiapora	44825000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	676	Ibiassucê	46390000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	677	Ibicaraí	45745000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	678	Ibicoara	46760000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	679	Ibicuí	45290000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	680	Ibipeba	44970000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	681	Ibipetum	47595000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	682	Ibipitanga	46540000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	683	Ibiquera	46840000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	684	Ibiraba	47110000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	685	Ibirajá	45972000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	686	Ibiranhém	45938000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	687	Ibirapitanga	45500000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	688	Ibirapuã	45940000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	689	Ibirataia	45580000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	690	Ibitiara	46700000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	691	Ibitiguira	45378000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	692	Ibitira	46225000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	693	Ibititá	44960000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	694	Ibitunane	47480000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	695	Ibitupa	45298000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	696	Ibó	48685000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	697	Ibotirama	47520000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	698	Ichu	48725000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	699	Icó	44852000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	700	Igaporã	46490000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	701	Igará	48975000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	702	Igarité	47105000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	703	Igatu	46834000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	704	Igrapiúna	45443000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	705	Iguá	45105000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	706	Iguaí	45280000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	707	Iguaibi	45285000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	708	Iguatemi	46150000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	709	Iguira	47410000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	710	Iguitu	44975000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	711	Ilha De Maré	42500000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	712	Ilhéus	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	713	Indaí	44810000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	714	Inema	45669000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	715	Inhambupe	48490000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	716	Inhata	44235000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	717	Inhaúmas	47648000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	718	Inhobim	45110000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	719	Inúbia	46766000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	720	Ipecaetá	44680000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	721	Ipiaú	45570000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	722	Ipirá	44600000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	723	Ipiúna	45347000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	724	Ipucaba	47550000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	725	Ipupiara	47590000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	726	Irajuba	45370000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	727	Iramaia	46770000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	728	Iraporanga	46985000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	729	Iraquara	46980000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	730	Irará	44255000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	731	Irecê	44900000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	732	Irundiara	46315000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	733	Ita-Azul	45838000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	734	Itabela	45848000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	735	Itaberaba	46880000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	736	Itabuna	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	737	Itacaré	45530000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	738	Itacava	44253000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	739	Itachama	45303000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	740	Itacimirim	42823000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	741	Itaeté	46790000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	742	Itagi	45230000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	743	Itagibá	45585000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	744	Itagimirim	45850000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	745	Itaguaçu Da Bahia	47440000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	746	Itaia	45723000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	747	Itaibó	45213000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	748	Itaipu	45116000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	749	Itaítu	44702000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	750	Itajaí	45275000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	751	Itaju Do Colônia	45730000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	752	Itajubaquara	47460000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	754	Itajuru	45211000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	755	Itamaraju	45836000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	756	Itamari	45455000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	757	Itambé	45140000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	758	Itamira	48355000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	759	Itamotinga	48920000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	760	Itanagé	46143000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	761	Itanagra	48290000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	762	Itanhém	45970000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	763	Itanhi	48315000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	764	Itaparica	44460000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	765	Itapé	45750000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	766	Itapebi	45855000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	767	Itapeipu	44708000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	768	Itapetinga	45700000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	769	Itapicuru	48475000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	770	Itapirema	45117000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	771	Itapitanga	45645000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	772	Itapora	44343000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	773	Itapura	44727000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	774	Itaquara	45340000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	775	Itaquaraí	46103000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	776	Itarantim	45780000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	777	Itati	45714000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	778	Itatim	46875000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	779	Itatingui	45698000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	780	Itiruçu	45350000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	781	Itiúba	48850000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	782	Itororó	45710000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	783	Ituaçu	46640000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	784	Ituberá	45435000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	785	Itupeva	45968000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	786	Iuiu	46438000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	787	Jaborandi	47655000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	788	Jacaraci	46310000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	789	Jacobina	44700000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	790	Jacu	44273000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	791	Jacuípe	43870000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	792	Jacuruna	44484000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	793	Jaguaquara	45345000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	794	Jaguara	44125000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	795	Jaguarari	48960000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	796	Jaguaripe	44480000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	797	Jaíba	44115000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	798	Jandaíra	48310000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	799	Japomirim	45588000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	800	Japu	45665000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	801	Jauá	42843000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	802	Jequié	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	803	Jequiriçá	45470000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	804	Jeremoabo	48540000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	805	Jiribatuba	44475000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	806	Jitaúna	45225000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	807	João Amaro	46865000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	808	João Correia	46755000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	809	João Dourado	44920000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	810	José Gonçalves	45115000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	811	Juacema	48965000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	812	Juazeiro	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	813	Jucuruçu	45834000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	814	Juerana	45910000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	815	Junco	48910000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	816	Jupaguá	47920000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	817	Juraci	46785000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	818	Juremal	48915000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	819	Jussara	44925000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	820	Jussari	45610000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	821	Jussiape	46670000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	822	Km Sete	44133000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	823	Lafaiete Coutinho	45215000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	824	Lagoa Clara	46520000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	825	Lagoa De Melquíades	45114000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	826	Lagoa Do Boi	44898000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	827	Lagoa Grande	45158000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9833	Vila Dirce	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	829	Lagoa José Luís	45113000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	830	Lagoa Preta	45175000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	831	Lagoa Real	46425000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	832	Laje	45490000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	833	Laje Do Banco	45676000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	834	Lajedão	45950000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	835	Lajedinho	46825000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	836	Lajedo Alto	46868000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	837	Lajedo Do Tabocal	45365000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	838	Lamarão	48720000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	839	Lamarão Do Passe	43855000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	840	Lapão	44905000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	841	Largo	44835000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	842	Lauro De Freitas	42700000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	843	Lençóis	46960000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	844	Licínio De Almeida	46330000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	845	Limoeiro Do Bom Viver	44137000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	846	Livramento De Nossa Senhora	46140000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	847	Lucaia	45195000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	848	Luís Viana	47340000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	849	Lustosa	44283000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	850	Macajuba	46805000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	851	Macarani	45760000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	852	Macaúbas	46500000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	853	Macururé	48650000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	854	Madre De Deus	42600000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	855	Maetinga	46255000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	856	Maiquinique	45770000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	857	Mairi	44630000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	858	Malhada	46440000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	859	Malhada De Pedras	46110000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	860	Mandiroba	46455000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	861	Mangue Seco	48325000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	862	Maniaçu	46410000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	863	Manoel Vitorino	45240000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	864	Mansidão	47160000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	865	Mantiba	44117000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	866	Mar Grande	44473000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	867	Maracás	45360000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	868	Maragogipe	44420000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	869	Maragogipinho	44495000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	870	Maraú	45520000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	871	Marcionílio Souza	46780000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	872	Marcolino Moura	46175000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	873	Maria Quitéria	44110000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	874	Maricoabo	45412000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	875	Mariquita	47770000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	876	Mascote	45870000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	877	Massacara	48510000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	878	Massaroca	48918000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	879	Mata Da Aliança	44240000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	880	Mata De São João	48280000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	881	Mataripe	43970000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	882	Matina	46480000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	883	Matinha	44118000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	884	Medeiros Neto	45960000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	885	Miguel Calmon	44720000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	886	Milagres	45315000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	887	Luís Eduardo Magalhães	47850000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	888	Minas Do Espírito Santo	44995000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	889	Minas Do Mimoso	47375000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	890	Mirandela	48409000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	891	Miranga	48126000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	892	Mirangaba	44745000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	893	Mirante	45255000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	894	Mocambo	46720000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	895	Mogiquiçaba	45803000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	896	Monte Cruzeiro	45306000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	897	Monte Gordo	42820000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	898	Monte Recôncavo	43980000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	899	Monte Santo	48800000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	900	Morpará	47580000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	901	Morrinhos	44127000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	902	Morro Das Flores	46802000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	903	Morro De São Paulo	45428000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	904	Morro Do Chapéu	44850000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	905	Mortugaba	46290000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	906	Mucugê	46750000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	907	Mucuri	45930000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	908	Mulungu Do Morro	44885000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	909	Mundo Novo	44800000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	910	Muniz Ferreira	44575000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	911	Muquém De São Francisco	47115000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	912	Muritiba	44340000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	913	Mutas	46436000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	914	Mutuípe	45480000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	915	Nagé	44432000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	916	Narandiba	48107000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	917	Nazaré	44400000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	918	Nilo Peçanha	45440000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	919	Nordestina	48870000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	920	Nova Alegria	45838500	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	921	Nova Brasília	45156000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	922	Nova Canaã	45270000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	923	Nova Fátima	44642000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	924	Nova Ibiá	45452000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	925	Nova Itaipê	45380000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	926	Nova Itarana	45390000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	927	Nova Lídice	45965000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	928	Nova Redenção	46835000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	929	Nova Soure	48460000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	930	Nova Viçosa	45920000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	931	Novo Acre	46775000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	932	Novo Horizonte	46730000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	933	Novo Triunfo	48455000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	934	Núcleo Residencial Pilar	48967000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	935	Nuguaçu	44747000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	936	Olhos D`água Do Seco	46715000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	937	Olhos D`água Do Serafim	46735000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	938	Olindina	48470000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	939	Oliveira Dos Brejinhos	47530000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	940	Olivença	45668000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	941	Onha	44578000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	942	Oriente Novo	45210000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	943	Ouricana	45863000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	944	Ouriçangas	48150000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	945	Ouricuri Do Ouro	47565000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	946	Ourolândia	44718000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	947	Outeiro Redondo	44365000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	948	Paiol	46320000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	949	Pajeú Do Vento	46402000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	950	Palame	48380000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	951	Palmas De Monte Alto	46460000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	952	Palmeiras	46930000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	953	Parafuso	42849000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	954	Paramirim	46190000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	955	Parateca	46443000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	956	Paratinga	47500000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	957	Paripiranga	48430000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	958	Pataíba	48175000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	959	Patamuté	48945000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	960	Pau A Pique	47320000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	961	Pau Brasil	45890000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	962	Paulo Afonso	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	963	Pé De Serra	44655000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	964	Pedrão	48140000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	965	Pedras Altas Do Mirim	44697000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	966	Pedro Alexandre	48580000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	967	Peixe	47230000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	968	Petim	44510000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	969	Piabanha	45525000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	970	Piatã	46765000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	971	Piçarrão	47360000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	972	Pilão Arcado	47240000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	973	Pimenteira	45672000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	974	Pindaí	46360000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	975	Pindobaçu	44770000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	976	Pinhões	48924000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	977	Pintadas	44610000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	978	Piragi	45837500	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	979	Piraí Do Norte	45436000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	980	Pirajá	45837000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	981	Pirajuia	44486000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	982	Piri	47355000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	983	Piripá	46270000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	984	Piritiba	44830000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	985	Pituba	47454000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	986	Planaltino	45375000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	987	Planalto	45190000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	988	Poço Central	45678000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	989	Poço De Fora	48940000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	990	Poções	45260000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	991	Poços	47210000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	992	Pojuca	48120000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	993	Polo Petroquímico De Camaçari	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	994	Ponta Da Areia	45905000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	995	Ponto Novo	44755000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	996	Porto Novo	47710000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	997	Porto Seguro	45810000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	998	Posto Da Mata	45928000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	999	Potiraguá	45790000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1000	Poxim Do Sul	45862000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1001	Prado	45980000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1002	Presidente Dutra	44930000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1003	Presidente Jânio Quadros	46250000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1004	Presidente Tancredo Neves	45416000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1005	Prevenido	44912000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1006	Quaraçu	45159000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1007	Queimadas	48860000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1008	Quijingue	48830000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1009	Quixabá	47585000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1010	Quixabeira	44713000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1011	Rafael Jambeiro	44520000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1012	Recife	44927000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1013	Remanso	47200000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1014	Remédios	46738000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1015	Retirolândia	48750000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1016	Riachão Das Neves	47970000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1017	Riachão Do Jacuípe	44640000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1018	Riachão Do Utinga	46815000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1019	Riacho Da Guia	48105000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1020	Riacho De Santana	46470000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1022	Ribeira Do Amparo	48440000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1023	Ribeira Do Pombal	48400000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1024	Ribeirão Do Largo	45155000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1025	Ribeirão Do Salto	45785000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1026	Rio Da Dona	44548000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1027	Rio De Contas	46170000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1028	Rio Do Antônio	46220000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1029	Rio Do Braço	45666000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1030	Rio Do Meio	45712000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1031	Rio Do Pires	46550000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1032	Rio Fundo	44275000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1033	Rio Real	48330000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1034	Rodelas	48630000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1035	Ruy Barbosa	46800000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1036	Saldanha	47250000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1037	Salgadália	48740000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1038	Salinas Da Margarida	44450000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1039	Salobrinho	45662000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1040	Salobro	44892000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1041	Salvador	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1042	Sambaíba	48476000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9834	Vila Nery	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1043	Santa Bárbara	44150000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1044	Santa Brígida	48570000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1045	Santa Cruz Cabrália	45807000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1046	Santa Cruz Da Vitória	45725000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1047	Santa Inês	45320000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1048	Santa Luzia	45865000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1049	Santa Maria Da Vitória	47640000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1050	Santa Rita De Cássia	47150000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1051	Santa Terezinha	44590000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1052	Santaluz	48880000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1053	Santana	47700000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1054	Santana Do Sobrado	47310000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1055	Santanópolis	44260000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1056	Santiago Do Iguapé	44310000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1057	Santo Amaro	44200000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1058	Santo Antônio De Barcelona	45915000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1059	Santo Antônio De Jesus	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1060	Santo Estevão	44190000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1061	Santo Inácio	47490000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1062	São Desidério	47820000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1063	São Domingos	48895000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1064	São Felipe	44550000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1065	São Félix	44360000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1066	São Félix Do Coribe	47665000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1067	São Francisco Do Conde	43900000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1068	São Gabriel	44915000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1069	São Gonçalo Dos Campos	44330000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1070	São João Da Fortaleza	48413000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1071	São João Da Vitória	45111000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1072	São José Da Vitória	45620000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1073	São José Do Colônia	45142000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1074	São José Do Jacuípe	44698000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1075	São José Do Prado	45958000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1076	São José Do Rio Grande	47975000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1077	São Miguel Das Matas	44580000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1078	São Paulinho	45839000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1079	São Roque Do Paraguaçu	44428000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1080	São Sebastião Do Passe	43850000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1081	São Timóteo	46145000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1082	Sapeaçu	44530000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1083	Sátiro Dias	48485000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1084	Saubara	44220000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1085	Saudável	47570000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1086	Saúde	44740000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1087	Seabra	46900000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1088	Sebastião Laranjeiras	46450000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1089	Senhor Do Bonfim	48970000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1090	Sento Sé	47350000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1091	Sergi	44335000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1092	Serra Da Canabrava	48953000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1093	Serra Do Ramalho	47630000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1094	Serra Dourada	47740000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1095	Serra Grande	48414000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9835	Vila Xavier	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1097	Serra Preta	44660000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1098	Serrinha	48700000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1099	Serrolândia	44710000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1100	Simões Filho	43700000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1101	Sítio Da Baraúna	48993000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1102	Sítio Do Mato	47610000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1103	Sítio Do Meio	44508000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1104	Sítio Do Quinto	48565000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1105	Sítio Grande	47825000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1106	Sítio Novo	48115000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1107	Soares	44913000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1108	Sobradinho	48925000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1109	Souto Soares	46990000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1110	Subaúma	48190000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1111	Sussuarana	46605000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1112	Tabocas Do Brejo Velho	47760000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1113	Taboleiro Do Castro	44568000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1114	Taboquinhas	45534000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1115	Taguá	47930000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1116	Tamburil	44862000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1117	Tanhaçu	46600000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1118	Tanque Novo	46580000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1119	Tanquinho	44160000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1120	Tanquinho Do Poço	48994000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1121	Taperoá	45430000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1122	Tapiraípe	46804000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1123	Tapirama	45543000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1124	Tapiramutá	44840000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1125	Tapiranga	44723000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1126	Tapúia	45449000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1127	Taquarendi	44748000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1128	Taquarinha	45935000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1129	Tartaruga	45318000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1130	Tauapé	46335000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1131	Teixeira De Freitas	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1132	Teodoro Sampaio	44280000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1133	Teofilândia	48770000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1134	Teolândia	45465000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1135	Terra Nova	44270000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1136	Tijuaçú	48980000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1137	Tiquaruçu	44140000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1138	Tremedal	45170000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1139	Triunfo Do Sincorá	46660000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1140	Tucano	48790000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1141	Uauá	48950000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1142	Ubaíra	45310000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1143	Ubaitaba	45545000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1144	Ubatã	45550000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1145	Ubiracaba	46105000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1146	Ubiraitá	46833000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1147	Uibaí	44950000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1148	Umburanas	44798000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1149	Umbuzeiro	48474000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1151	Urandi	46350000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1152	Uruçuca	45680000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1153	Utinga	46810000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1154	Vale Verde	45817000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1155	Valença	45400000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1156	Valente	48890000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1157	Várzea Da Roça	44635000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1158	Várzea Do Caldas	46910000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1159	Várzea Do Cerco	44888000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1160	Várzea Do Poço	44715000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1161	Várzea Nova	44690000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1162	Várzeas	47840000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1163	Varzedo	44565000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1164	Velha Boipeba	45426000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1165	Ventura	44875000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1166	Vera Cruz	44470000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1167	Vereda	45955000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1168	Vila Do Café	45153000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1248	Barra Nova	63667000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1169	Vitória Da Conquista	00000000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1170	Volta Grande	44845000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1171	Wagner	46970000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1172	Wanderley	47940000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1173	Wenceslau Guimarães	45460000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1174	Xique-Xique	47400000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10262	Arraial D`ajuda	45816000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10263	Trancoso	45818000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10264	Itabatã	45936000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10664	Ilha De Bom Jesus Dos Passos	42510000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10665	Ilha Dos Frades	42505000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10912	Pilões	46388000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10913	Pedra Alta	48767000	BA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1175	Abaiara	63240000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1176	Abílio Martins	62252000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1177	Acarape	62785000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1178	Acaraú	62580000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1179	Acopiara	63560000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1180	Adrianópolis	62435000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1181	Água Verde	61895000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1182	Aguaí	62602000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1183	Aiuá	62143000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1184	Aiuaba	63575000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1185	Alagoinha	63174000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9836	Vinhedo	13280000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1187	Alcântaras	62120000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1188	Algodões	63655000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1189	Almofala	62592000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1190	Altaneira	63195000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1191	Alto Santo	62970000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1192	Amanaiara	62263000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1193	Amanari	61979000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1194	Amaniutuba	63306000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1195	Amarelas	62405000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1196	Amaro	63144000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1197	América	62240000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1198	Amontada	62540000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1199	Anauá	63217000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1200	Aningás	62882000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1201	Anjinhos	63193000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1202	Antonina Do Norte	63570000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1203	Antônio Bezerra	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1204	Antônio Diogo	62791000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1205	Antônio Marques	61994000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1206	Aprazível	62114000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1207	Apuiarés	62630000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1208	Aquinópolis	63479000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1209	Aquiraz	61700000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1210	Araçás	62682000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1211	Aracati	62800000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1212	Aracatiaçu	62111000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1213	Aracatiara	62548000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1214	Aracoiaba	62750000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1215	Arajara	63183000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1216	Aranaú	62585000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1217	Arapá	62328000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1218	Arapari	62508000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1219	Araporanga	63194000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1220	Araquém	62165000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1221	Ararendá	62210000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1222	Araripe	63170000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1223	Arariús	62186000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1224	Aratama	63143000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1225	Araticum	62352000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1226	Aratuba	62762000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1227	Areial	62290000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1228	Ariscos Dos Marianos	62759000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1229	Arneiroz	63670000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1230	Aroeiras	62163000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1231	Arrojado	63305000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1232	Aruaru	62951000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1233	Assaré	63140000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1234	Assunção	62505000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9837	Viradouro	14740000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1236	Aurora	63360000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1237	Baixa Grande	62605000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1238	Baixio	63320000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1239	Baixio Da Donana	63582000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1240	Banabuiú	63960000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1241	Bandeira	62723000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1242	Barão De Aquiraz	63153000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1243	Barbalha	63180000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1244	Barra	63578000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9838	Vista Alegre Do Alto	15920000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9839	Vitória Brasil	15705000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1247	Barra Do Sotero	62393000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1249	Barreira	62795000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1250	Barreira Dos Vianas	62802000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1251	Barreiras	63508000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1252	Barreiros	63785000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9840	Vitoriana	18619000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9841	Votorantim	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1255	Barrento	62515000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1256	Barro	63380000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1257	Barro Alto	63509000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1258	Barroquinha	62410000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1259	Baturité	62760000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1261	Beberibe	62840000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1262	Bela Cruz	62570000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1263	Bela Vista	62510000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1264	Betânia	62392000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9842	Votuporanga	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9843	Zacarias	15265000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1267	Bitupitá	62414000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1268	Bixopa	62935000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1269	Boa Água	62953000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1270	Boa Esperança	63770000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1271	Boa Viagem	63870000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1272	Boa Vista	63615000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8820	Altos Verdes	49555000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1274	Boa Vista Do Caxitoré	62623000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1275	Bonfim	63601000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1277	Bonhu	62905000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1278	Bonito	62705000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1279	Borges	62835000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1280	Brejinho	63176000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1281	Brejo Grande	63192000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1282	Brejo Santo	63260000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1283	Brotas	62533000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1284	Buritizal	62227000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1285	Buritizinho	63213000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1286	Cabreiro	62806000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1287	Cachoeira	62728000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1288	Cachoeira Grande	62228000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1289	Caiçara	62597000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1290	Caiçarinha	63957000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1291	Caio Prado	62742000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1292	Caioca	62109000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1293	Caipu	63538000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1294	Calabaça	63545000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1295	Caldeirão	63157000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1296	Califórnia	63920000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1297	Camará	61753000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1298	Camboas	62688000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1299	Camilos	62132000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1300	Camocim	62400000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1301	Campanário	62468000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1302	Campestre	62817000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1303	Campos Sales	63150000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1304	Canaan	62692000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1305	Canafistula	62638000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8821	Amparo De São Francisco	49920000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1307	Cangati	63612000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8822	Aquidabã	49790000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1309	Canindé	62700000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1310	Canindezinho	62203000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8823	Aracaju	00000000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8824	Arauá	49220000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1313	Capistrano	62748000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1314	Caponga	62852000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1315	Caponga Da Bernarda	61754000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1316	Caracará	62112000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1317	Caridade	62730000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1318	Cariré	62184000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1319	Caririaçu	63220000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1320	Cariús	63530000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1321	Cariutaba	63189000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1322	Carmelópolis	63151000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1323	Carnaubal	62375000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1324	Carnaúbas	63616000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1325	Carnaubinha	63637000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1326	Carquejo	62175000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1327	Carrapateiras	63662000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1328	Caruataí	62325000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1329	Carvalho	63768000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1330	Carvoeiro	62594000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1331	Cascavel	62850000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1332	Castanhão	62975000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1333	Catarina	63595000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1334	Catolé	63613000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1335	Catuana	61680000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1336	Catunda	62297000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1337	Caucaia	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1338	Caxitoré	62614000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8825	Areia Branca	49580000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1340	Cedro	63400000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1341	Cemoaba	62657000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1342	Chaval	62420000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1343	Choró	63950000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1344	Chorozinho	62875000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1345	Cipó Dos Anjos	63925000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1346	Cococi	63685000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1347	Codiá	63603000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1348	Coité	63212000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1349	Colina	62774000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1350	Conceição	62275000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1351	Coreaú	62160000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1352	Córrego Dos Fernandes	62807000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1353	Crateús	63700000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1354	Crato	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1355	Crioulos	63465000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1356	Cristais	62859000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1357	Croatá	62390000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8827	Barra Dos Coqueiros	49140000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8828	Barracas	49710000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1360	Cruxati	62525000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1361	Cruz	62595000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8829	Boquim	49360000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1363	Cruz De Pedra	63513000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1364	Cruzeirinho	63440000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1365	Cuncas	63395000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1366	Curatis	63755000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1367	Curupira	62758000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1368	Custódio	63915000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1369	Daniel De Queirós	63930000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1370	Delmiro Gouveia	62258000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1371	Deputado Irapuan Pinheiro	63645000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1372	Deserto	62502000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1373	Dom Leme	63191000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1374	Dom Maurício	63945000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1375	Dom Quintino	63137000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1376	Domingos Da Costa	63880000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1377	Donato	62259000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1378	Dourados	62884000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1379	Ebron	63567000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1381	Ematuba	63641000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1382	Encantado	63810000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1383	Engenheiro João Tomé	62233000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1384	Engenheiro José Lopes	63602000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1385	Engenho Velho	63383000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1386	Ererê	63470000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1387	Espacinha	62207000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1388	Esperança	62708000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1389	Espinho	62388000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1390	Eusébio	61760000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1391	Farias Brito	63185000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1392	Fátima	62772000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1393	Feiticeiro	63477000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1394	Feitosa	63225000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1395	Felizardo	63345000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1396	Flamengo	63592000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1397	Flores	62253000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8830	Brejo Grande	49995000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1399	Forquilha	62115000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1400	Fortaleza	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1401	Fortim	62815000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1402	Frecheirinha	62340000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1403	Gado	62782000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1404	Gado Dos Rodrigues	62784000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1405	Gameleira De São Sebastião	63208000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1406	Garças	62541000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1408	General Sampaio	62738000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1409	General Tibúrcio	62305000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1410	Genipapeiro	62754100	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1411	Gereraú	61887000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1412	Giqui	62830000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1413	Girau	62807500	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1414	Graça	62365000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1415	Granja	62430000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1416	Granjeiro	63230000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1417	Groairas	62190000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1418	Guaiúba	61890000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1419	Guajiru	62818000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1420	Guanacés	62856000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1421	Guaraciaba Do Norte	62380000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1422	Guaramiranga	62766000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1423	Guararu	61690000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1424	Guassi	62794000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1425	Guassossé	63527000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1426	Guia	63885000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1427	Guriú	62408000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1428	Hidrolândia	62270000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1429	Holanda	63760000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1430	Horizonte	62880000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1431	Iapi	63643000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1432	Iara	63390000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1433	Ibaretama	63970000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1434	Ibiapaba	63725000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1435	Ibiapina	62360000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1436	Ibicatu	63558000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1437	Ibicuã	63608000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1438	Ibicuitaba	62813000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1439	Ibicuitinga	62955000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1440	Iborepi	63303000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1441	Ibuaçu	63890000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1442	Ibuguaçu	62448000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1443	Icapuí	62810000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1444	Icaraí	62545000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1445	Icó	63430000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1446	Icozinho	63445000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1447	Ideal	62754000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1448	Igaroi	63528000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1449	Iguatu	63500000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1450	Independência	63640000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1451	Ingazeiras	63370000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1452	Inhamuns	63666000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1453	Inhuçu	62373000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1454	Inhuporanga	62734000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1455	Ipaporanga	62215000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1456	Ipaumirim	63340000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1457	Ipu	62250000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1458	Ipueiras	62230000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1459	Ipueiras Dos Gomes	62715000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1460	Iracema	62980000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1461	Irajá	62278000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1462	Irapuã	63728000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1463	Iratinga	62608000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1464	Irauçuba	62620000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1465	Isidoro	63563000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1466	Itacima	61893000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1467	Itaguá	63152000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1468	Itaiçaba	62820000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1469	Itaipaba	62872000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1470	Itaitinga	61880000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1471	Itans	62746000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1472	Itapagé	62600000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1473	Itapebussu	61988000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1474	Itapeim	62843000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1475	Itapipoca	62500000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1476	Itapiúna	62740000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1477	Itapó	61877000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1478	Itarema	62590000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1479	Itatira	62720000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1481	Jacampari	63895000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1482	Jacarecoara	62855000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1483	Jacaúna	61752000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1484	Jaguarão	62754050	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1485	Jaguaretama	63480000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1486	Jaguaribara	63490000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1487	Jaguaribe	63475000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1488	Jaguaruana	62823000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1489	Jaibaras	62107000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1490	Jamacaru	63207000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1491	Jandrangoeira	63642000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1492	Jardim	63290000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8831	Campo Do Brito	49520000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1494	Jardimirim	63295000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1495	Jati	63275000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1496	Jijoca De Jericoacoara	62598000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1497	João Cordeiro	62158000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1498	Jordão	62108000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1499	José De Alencar	63505000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1500	Juá	62628000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8832	Canhoba	49880000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1502	Juatama	63910000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1503	Juazeiro De Baixo	62945000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1504	Juazeiro Do Norte	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1505	Jubaia	61955000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1506	Jucás	63580000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1507	Jurema	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1508	Justiniano Serpa	61751000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1509	Lacerda	63820000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1510	Ladeira Grande	61953000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1511	Lagoa De São José	62754150	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1512	Lagoa Do Juvenal	61991000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1513	Lagoa Do Mato	62725000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1514	Lagoa Dos Crioulos	63158000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1515	Lagoa Grande	62542000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8833	Canindé De São Francisco	49820000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8834	Capela	49700000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1518	Lagoinha	62922000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1519	Lambedouro	62308000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1520	Lameiro	63134000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1521	Lavras Da Mangabeira	63300000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1522	Lima Campos	63435000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1523	Limoeiro Do Norte	62930000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1524	Lisieux	62293000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1525	Livramento	62238000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1526	Logradouro	62292000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1527	Macambira	62225000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1528	Macaóca	63865000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1529	Macaraú	62285000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1530	Maceió	62819000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1531	Madalena	63860000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1532	Major Simplício	62208000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1533	Majorlândia	62809000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1534	Malhada Grande	62294000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1535	Mangabeira	63307000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1536	Manibu	62814000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1537	Manituba	63830000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1538	Mapuá	63476000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1539	Maracanaú	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1540	Maraguá	63218000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1541	Maranguape	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1542	Mararupá	63216000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1543	Marco	62560000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1544	Marinheiros	62520000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1545	Marrecas	63664000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1546	Marrocos	63084000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1547	Marruás	63665000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1548	Martinópole	62450000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1549	Massapê	62140000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1550	Mata Fresca	62808000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1551	Matias	62645000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1552	Matriz	62232000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1553	Mauriti	63210000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1554	Mel	63587000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1555	Meruoca	62130000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1556	Messejana	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1557	Miguel Xavier	63228000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1558	Milagres	63250000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1559	Milhã	63635000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1560	Milton Belo	62754200	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1561	Mineirolândia	63632000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1562	Miragem	63223000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1563	Miraíma	62530000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1564	Mirambé	61685000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1565	Missão Nova	63203000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1566	Missão Velha	63200000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1567	Missi	62625000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1568	Moitas	62543000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1569	Mombaça	63610000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1570	Mondubim	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1571	Monguba	61860000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1572	Monsenhor Tabosa	63780000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1573	Monte Alegre	63389000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8835	Carira	49550000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1575	Monte Castelo	63154100	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1576	Monte Grave	63639000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1577	Monte Sion	63695000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1578	Montenebo	63715000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1579	Morada Nova	62940000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1580	Moraújo	62480000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1581	Morrinhos	62550000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1582	Morrinhos Novos	62386000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1583	Morro Branco	62727000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1584	Mucambo	62170000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1585	Mulungu	62764000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8836	Carmópolis	49740000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1587	Mumbaba	62142000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1588	Mundau	62695000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1589	Muribeca	62296000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1590	Muriti	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1591	Mutambeiras	62154000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1592	Naraniu	63550000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1593	Nascente	62544000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1594	Nenenlândia	63814000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1595	Nossa Senhora Do Livramento	63790000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1596	Nova Betânia	63187000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8837	Cedro De São João	49930000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1598	Nova Fátima	62245000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1599	Nova Floresta	63478000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1600	Nova Olinda	63165000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1601	Nova Russas	62200000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1602	Nova Vida	63980000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1603	Novo Assis	63690000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1604	Novo Oriente	63740000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8838	Cristinápolis	49270000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1606	Ocara	62755000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1607	Oiticica	63730000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8839	Cumbe	49660000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1609	Olho-D`água	62113000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1610	Olho-D`água Da Bica	62964000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1611	Oliveiras	63775000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1612	Orós	63520000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1613	Pacajus	62870000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1614	Pacatuba	61800000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1615	Pacoti	62770000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1616	Pacujá	62180000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1617	Padre Cícero	63082000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1618	Padre Linhares	62146000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1619	Padre Vieira	62315000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1620	Pajeú	63172000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1622	Palestina	63215000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8840	Divina Pastora	49650000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1624	Palestina Do Norte	62134000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1625	Palhano	62910000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1626	Palmácia	62780000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1627	Palmatória	62744000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1628	Panacuí	62565000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1629	Paracuá	62465000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1630	Paracuru	62680000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1631	Paraipaba	62685000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1632	Parajuru	62848000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1633	Parambu	63680000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1634	Paramoti	62736000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1635	Parangaba	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1636	Parapuí	62156000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1637	Parazinho	62437000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1638	Paripueira	62844000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1639	Passagem	62425000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8841	Estância	49200000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1641	Passagem Funda	62754350	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1642	Pasta	63622000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1643	Patacas	61756000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1644	Patriarca	62104000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1645	Pavuna	61870000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1646	Pecém	62674000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1647	Pedra Branca	63630000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8842	Feira Nova	49670000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1649	Pedras	62943000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1650	Pedrinhas	63455000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1651	Peixe	62907000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1652	Peixe Gordo	62962000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1653	Penaforte	63280000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1654	Pentecoste	62640000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1655	Pereiro	63460000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1656	Pernambuquinho	62768000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1657	Pessoa Anta	62445000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1658	Pindoguaba	62330000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1659	Pindoretama	62860000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1660	Pio X	63315000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1661	Piquet Carneiro	63605000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1662	Pirabibu	63802000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1663	Pirangi	63982000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1664	Pires Ferreira	62255000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1665	Pitombeira	62606000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1666	Pitombeiras	62858000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1667	Plácido Martins	62754300	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1668	Poço	63268000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1669	Poço Comprido	62546000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8843	Frei Paulo	49514000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1671	Poço Grande	63588000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1672	Podimirim	63255000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1673	Ponta Da Serra	63138000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1674	Poranga	62220000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1675	Porfirio Sampaio	62648000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1676	Porteiras	63270000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1677	Potengi	63160000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1678	Poti	63720000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1679	Potiretama	62990000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1680	Prata	62575000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1681	Prudente De Morais	63815000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1682	Quatiguaba	62310000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1683	Queimadas	62886000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1684	Quimami	63205000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1685	Quincoé	63562000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1686	Quincuncá	63188000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1687	Quitaiús	63308000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1688	Quiterianópolis	63650000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1689	Quixadá	63900000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1690	Quixariú	63154000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1691	Quixelô	63515000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1692	Quixeramobim	63800000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1693	Quixeré	62920000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1694	Quixoá	63502000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1695	Raimundo Martins	62295000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1696	Redenção	62790000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1697	Reriutaba	62260000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1698	Riachão Do Banabuiú	63631000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1699	Riacho Grande	63178000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1700	Riacho Verde	63548000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1701	Riacho Vermelho	63511000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1702	Rinaré	63965000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1703	Roldão	62948000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1704	Russas	62900000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1705	Sabiaguaba	62547000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1706	Saboeiro	63590000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1707	Sacramento	62218000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1708	Salão	62475000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1709	Salitre	63155000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1710	Sambaíba	62433000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1711	Santa Ana	62776000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1712	Santa Fé	63136000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1713	Santa Felícia	63565000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1714	Santa Luzia	62652000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1715	Santa Quitéria	62280000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1716	Santa Tereza	62808500	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8844	Gararu	49830000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1718	Santana	63735000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1719	Santana Do Acaraú	62150000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1720	Santana Do Cariri	63190000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1721	Santarém	63523000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1722	Santo Antônio	63561000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8845	General Maynard	49750000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8846	Graccho Cardoso	49860000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8847	Ilha Das Flores	49990000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8848	Indiaroba	49250000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1726	Santo Antônio Da Pindoba	62363000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1727	Santo Antônio Dos Fernandes	62138000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1728	São Bartolomeu	63533000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1729	São Benedito	62370000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1730	São Domingos	62732000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1731	São Felipe	63265000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1732	São Francisco	63652000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8849	Itabaiana	49500000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1734	São Gerardo	62792000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1735	São Gonçalo Do Amarante	62670000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1736	São Gonçalo Do Umari	63617000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1737	São João De Deus	62908000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1738	São João Do Jaguaribe	62965000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1739	São João Dos Queiroz	63948000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1740	São Joaquim	62663000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1741	São Joaquim Do Salgado	63604000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1742	São José	63245000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8850	Itabaianinha	49290000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8851	Itabi	49870000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8852	Itaporanga D`ajuda	49120000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1746	São José Das Lontras	62248000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1747	São José De Solonópole	63621000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1748	São José Do Torto	62105000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1749	São Luís Do Curu	62665000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1750	São Miguel	63219000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8853	Japaratuba	49960000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1752	São Paulo	63568000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1753	São Pedro	63585000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8854	Japoatã	49950000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1755	São Romão	63198000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1756	São Sebastião	63535000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1757	São Vicente	63450000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8855	Lagarto	49400000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1759	Sapo	62152000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1760	Sapupara	61950000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1761	Sebastião De Abreu	62642000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1762	Senador Carlos Jereissati	61865000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1763	Senador Pompeu	63600000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1764	Senador Sá	62470000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1765	Sereno De Cima	62759200	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1766	Serra Do Félix	62846000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1767	Serragem	62759300	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1768	Serrota	63392000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8856	Lagoa Funda	49835000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1770	Serrote	63507000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8857	Laranjeiras	49170000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1772	Sitiá	63962000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1773	Sítios Novos	61695000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1774	Siupê	62675000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1775	Sobral	00000000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1776	Soledade	62607000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1777	Solonópole	63620000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1778	Suassurana	63510000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1779	Sucatinga	62842000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1780	Sucesso	63765000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1781	Sussuanha	62385000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1782	Tabainha	62335000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1783	Taboleiro	63573000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1784	Tabuleiro Do Norte	62960000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1785	Taíba	62677000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1786	Tamboril	63750000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1787	Tanques	61976000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1788	Tapera	61758000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1789	Taperuaba	62106000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1790	Tapuiara	63935000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1791	Targinos	62713000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1792	Tarrafas	63145000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1793	Tauá	63660000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1794	Tejuçuoca	62610000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1795	Tianguá	62320000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1796	Timonha	62440000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1797	Tipi	63365000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1798	Tomé	62924000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1799	Trairi	62690000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1800	Trapiá	62283000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8858	Macambira	49565000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1802	Trici	63663000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1803	Tróia	63633000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1804	Trussu	63564000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1805	Tucunduba	61688000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1806	Tucuns	63710000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1807	Tuína	62141000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1808	Tururu	62655000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1809	Ubajara	62350000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1810	Ubaúna	62168000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1811	Ubiraçu	62710000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1812	Uiraponga	62950000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1813	Umari	63310000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1814	Umarituba	62672000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1815	Umburanas	63214000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1816	Umirim	62660000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1817	Uruburetama	62650000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1818	Uruoca	62460000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1819	Uruquê	63805000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1820	Varjota	62265000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1821	Várzea	63405000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1822	Várzea Alegre	63540000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1823	Várzea Da Volta	62485000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1824	Várzea Do Gilo	62254000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1825	Vazantes	62752000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1826	Ventura	62125000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1827	Vertentes Do Lagedo	61977000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1828	Viçosa	62819500	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1829	Viçosa Do Ceará	62300000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1830	Vila Soares	62635000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10157	Canaúna	63342000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10173	Triângulo	62877000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8859	Malhada Dos Bois	49940000	SE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10175	Patos Dos Liberatos	62879000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9714	São Lourenço Da Serra	06890000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10177	Timbaúba Dos Marinheiros	62878000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10824	Penedo	61956000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10825	Umarizeiras	61959000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10826	Lages	61962000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9715	São Lourenço Do Turvo	15999000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10828	São João Do Amanari	61982000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10829	Papara	61967000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10831	Manoel Guedes	61984000	CE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1831	Brasília	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1832	Brazlândia	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1833	Candangolândia	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1834	Ceilândia	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1835	Cruzeiro	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1836	Gama	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1837	Guará	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1838	Lago Norte	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1839	Lago Sul	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1840	Núcleo Bandeirante	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1841	Paranoá	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1842	Planaltina	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1843	Recanto Das Emas	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1844	Riacho Fundo	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1845	Samambaia	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1846	Santa Maria	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1847	São Sebastião	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1848	Sobradinho	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1849	Taguatinga	00000000	DF	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1850	Acioli	29687000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1851	Afonso Cláudio	29600000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1852	Aghá	29287000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1853	Água Doce Do Norte	29820000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1854	Águia Branca	29795000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1855	Airituba	29477000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1856	Alegre	29500000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1857	Alfredo Chaves	29240000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1858	Alto Calçado	29475000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1859	Alto Caldeirão	29656000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1860	Alto Mutum Preto	29737000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1861	Alto Rio Novo	29760000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1862	Alto Santa Maria	29662000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1863	Anchieta	29230000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1864	Ângelo Frechiani	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1865	Anutiba	29530000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1866	Apiacá	29450000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1867	Araçatiba	29138000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1868	Aracê	29278000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1869	Aracruz	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1870	Aracui	29365000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1871	Araguaia	29258000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1872	Araraí	29535000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1873	Argolas	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1874	Atílio Vivácqua	29490000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1875	Baía Nova	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1876	Baixo Guandu	29730000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1877	Barra De Novo Brasil	29723000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1878	Barra De São Francisco	29800000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1879	Barra Do Itapemirim	29349000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1880	Barra Nova	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1881	Barra Seca	29954000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1882	Baunilha	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1883	Bebedouro	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1884	Boa Esperança	29845000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1885	Boapaba	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1886	Bom Jesus Do Norte	29460000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1887	Bonsucesso	29458000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1888	Braço Do Rio	29967000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1889	Brejetuba	29630000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1890	Burarama	29327000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1891	Cachoeirinha De Itaúna	29805000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1892	Cachoeiro De Itapemirim	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1893	Café	29515000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1894	Calogi	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1895	Câmara	29485000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1896	Carapina	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1897	Cariacica	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1898	Castelo	29360000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1899	Celina	29510000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1900	Colatina	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1901	Conceição Da Barra	29960000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1902	Conceição Do Castelo	29370000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1903	Conceição Do Muqui	29410000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1904	Conduru	29329000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1905	Praia Do Coqueiral	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1906	Córrego Dos Monos	29328000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1907	Cotaxé	29855000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1908	Cristal Do Norte	29978000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1909	Crubixá	29242000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1910	Desengano	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1911	Divino De São Lourenço	29590000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1912	Divino Espírito Santo	29479000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1913	Djalma Coutinho	29642000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1914	Domingos Martins	29260000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1915	Dona América	29445000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1916	Dores Do Rio Preto	29580000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1917	Duas Barras	29283000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1918	Ecoporanga	29850000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1919	Estrela Do Norte	29367000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1920	Fartura	29783000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1921	Fazenda Guandu	29609000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1922	Fundão	29185000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1923	Garrafão	29649000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1924	Gironda	29326000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1925	Goiabeiras	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1926	Governador Lacerda De Aguiar	29826000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1927	Governador Lindenberg	29720000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1928	Graça Aranha	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1929	Gruta	29324000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1930	Guaçuí	29560000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1931	Vila Guaraná	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1932	Guarapari	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1933	Guararema	29842000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1934	Ibatiba	29395000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1935	Ibes	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1936	Ibicaba	29612000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1937	Ibiraçu	29670000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1938	Ibitirama	29540000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1939	Ibitiruí	29244000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1940	Ibituba	29740000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1941	Iconha	29280000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1942	Imburana	29853000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1943	Iriritiba	29238000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1944	Irundi	29189000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1945	Irupi	29398000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1946	Isabel	29263000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1947	Itabaiana	29884000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1948	Itaçu	29697000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1949	Itaguaçu	29690000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1950	Itaicí	29388000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1951	Itaimbé	29695000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1952	Itaipava	29338000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1953	Itamira	29889000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1954	Itaóca	29325000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1955	Itapecoá	29335000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1956	Itapemirim	29330000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1957	Itaperuna	29812000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1958	Itapina	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1959	Itaquari	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1960	Itarana	29620000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1961	Itaúnas	29965000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1962	Itauninhas	29948000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1963	Iúna	29390000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1964	Jabaquara	29236000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1965	Jacaraipe	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1966	Jaciguá	29297000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1967	Jacupemba	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1968	Jaguaré	29950000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1969	Jerônimo Monteiro	29550000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1970	Joaçuba	29860000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1971	João Neiva	29680000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1972	Joatuba	29617000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1973	José Carlos	29455000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1974	Jucu	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1975	Lajinha	29755000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1976	Laranja Da Terra	29615000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1977	Limoeiro	29369000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1978	Linhares	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1979	Mangaraí	29644000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1980	Mantenópolis	29770000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1981	Marataízes	29345000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1982	Marechal Floriano	29255000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1983	Marilândia	29725000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1984	Matilde	29248000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1985	Melgaço	29276000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1986	Menino Jesus	29384000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1987	Mimoso Do Sul	29400000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1988	Montanha	29890000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1989	Monte Carmelo Do Rio Novo	29767000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1990	Monte Pio	29368000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1991	Monte Sinai	29807000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1992	Mucurici	29880000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1993	Mundo Novo	29585000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1994	Muniz Freire	29380000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1995	Muqui	29480000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1996	Nestor Gomes	29949000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1997	Nova Almeida	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1998	Nova Canaã	29333000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	1999	Nova Venécia	29830000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2000	Nova Verona	29947000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2001	Novo Brasil	29724000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2002	Novo Horizonte	29852000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2003	Pacotuba	29323000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2004	Paineiras	29342000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2005	Palmeira	29699000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2006	Palmerino	29764000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2007	Pancas	29750000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2008	Paraju	29273000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2009	Paulista	29815000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2010	Pedro Canário	29970000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2011	Pendanga	29675000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2012	Pequiá	29392000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2013	Perdição	29394000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2014	Piaçu	29386000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2015	Pinheiros	29980000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2016	Piracema	29607000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2017	Piúma	29285000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2018	Ponte De Itabapoana	29440000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2019	Ponto Belo	29885000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2020	Pontões	29604000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2021	Porangá	29817000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2022	Barra Do Riacho	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2023	Praia Grande	29187000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2024	Presidente Kennedy	29350000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2025	Princesa	29293000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2026	Queimado	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2027	Quilômetro 14 Do Mutum	29735000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2028	Regência	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2029	Riacho	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2030	Ribeirão Do Cristo	29250000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2031	Rio Bananal	29920000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2032	Rio Calçado	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2033	Rio Muqui	29340000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2034	Rio Novo Do Sul	29290000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2035	Rio Preto	29841000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2036	Rive	29520000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2037	Sagrada Família	29253000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2038	Santa Angélica	29525000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2039	Santa Cruz	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2040	Santa Júlia	29669000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2041	Santa Leopoldina	29640000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2042	Santa Luzia De Mantenópolis	29772000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2043	Santa Luzia Do Azul	29823000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2044	Santa Luzia Do Norte	29856000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2045	Santa Maria De Jetibá	29645000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2046	Santa Marta	29545000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2047	Santa Teresa	29650000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2048	Santa Terezinha	29875000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2049	Santíssima Trindade	29393000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2050	Santo Agostinho	29824000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2051	Santo Antônio	29810000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2052	Santo Antônio Do Canaã	29654000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2053	Santo Antônio Do Muqui	29407000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2054	Santo Antônio Do Pousalegre	29848000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2055	Santo Antônio Do Quinze	29839000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2056	São Domingos Do Norte	29745000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2057	São Francisco	29748000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2058	São Francisco Xavier Do Guandu	29613000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2059	São Gabriel Da Palha	29780000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2060	São Geraldo	29776000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2061	São Jacinto	29667000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2062	São João De Petrópolis	29660000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2063	São João De Viçosa	29378000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2064	São João Do Sobrado	29985000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2066	São Jorge Do Oliveira	29635000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2067	São Jorge Do Tiradentes	29925000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2068	São José Das Torres	29420000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2069	São José De Mantenópolis	29778000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2070	São José Do Calçado	29470000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2071	São José Do Sobradinho	29847000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2072	São Mateus	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2073	São Pedro	29389000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2074	São Pedro De Itabapoana	29405000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2075	São Pedro De Rates	29564000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2076	São Rafael	29918000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2077	São Roque Do Canaã	29665000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2078	São Tiago	29562000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2079	São Torquato	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2080	Sapucaia	29728000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2081	Serra	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2082	Serra Pelada	29603000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2083	Sobreiro	29619000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2084	Sooretama	29927000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2085	Timbuí	29188000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2086	Todos Os Santos	29228000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2087	Urânia	29246000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2088	Vargem Alta	29295000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2089	Vargem Grande Do Soturno	29321000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2090	Venda Nova Do Imigrante	29375000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2091	Viana	29135000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2092	Vieira Machado	29383000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2093	Vila Nelita	29822000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2094	Vila Nova De Bananal	29742000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2095	Vila Pavão	29843000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2096	Vila Valério	29785000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2097	Vila Velha	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2098	Vila Verde	29752000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2099	Vinhático	29894000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2100	Vinte E Cinco De Julho	29652000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2101	Vitória	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10158	São João Do Norte	29537000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10159	São Raimundo Da Pedra Menina	29588000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10160	Santa Cruz De Irupi	29399000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10161	São João Do Príncipe	29391000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10162	Nossa Senhora De Fátima	29957000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10163	Santa Maria De Marechal	29259000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10164	Alto Castelinho	29296000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10165	Prosperidade	29299000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10166	São José De Fruteiras	29298000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10167	São Jorge Da Barra Seca	29790000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10168	Jurama	29793000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10764	Barra Do Sahy	00000000	ES	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7426	Alto Alegre	69350000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7427	Amajari	69343000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7428	Boa Vista	00000000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7429	Bonfim	69380000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7430	Cantá	69390000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7431	Caracaraí	69360000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7432	Caroebe	69378000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7433	Iracema	69348000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7434	Mucajaí	69340000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7435	Normandia	69355000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7436	Pacaraima	69345000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7437	Rorainópolis	69373000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7438	São João Da Baliza	69375000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7439	São Luiz	69370000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7440	Uiramutã	69358000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10914	Santa Cecília	69395000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10915	Félix Pinto	69397000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10916	Taboca	69399000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10917	Novo Paraíso	69365000	RR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2102	Abadia De Goiás	75345000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2103	Abadiânia	72940000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2104	Acreúna	75960000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2105	Adelândia	76155000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2106	Água Fria De Goiás	73780000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2107	Água Limpa	75665000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2108	Águas Lindas De Goiás	72910000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2109	Alexânia	72920000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2110	Aloândia	75615000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2111	Alto Alvorada	75283000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2112	Alto Horizonte	76560000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2113	Alto Paraíso De Goiás	73770000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2114	Alvorada Do Norte	73950000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2115	Amaralina	76493000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2116	Americano Do Brasil	76165000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2117	Amorinópolis	76140000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2118	Anápolis	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2119	Anhangüera	75770000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2120	Anicuns	76170000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2121	Aparecida	76163000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2122	Aparecida De Goiânia	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2123	Aparecida De Goiás	76363000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2124	Aparecida Do Rio Claro	76256000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2125	Aparecida Do Rio Doce	75827000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2126	Aporé	75825000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2127	Araçu	75410000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2128	Aragarças	76240000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2129	Aragoiânia	75360000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2130	Araguapaz	76720000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2131	Arenópolis	76235000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2132	Aruanã	76710000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2133	Aurilândia	76120000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2134	Auriverde	76513000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2135	Avelinópolis	75395000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2136	Bacilândia	76222000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2137	Baliza	76250000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2138	Bandeirantes	76523000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2139	Barbosilândia	73907000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2140	Barro Alto	76390000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2141	Bela Vista De Goiás	75240000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2142	Bom Jardim De Goiás	76245000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2143	Bom Jesus De Goiás	75570000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2144	Bonfinópolis	75195000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2145	Bonópolis	76555000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2146	Brazabrantes	75440000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2147	Britânia	76280000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2148	Buenolândia	76606000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2149	Buriti Alegre	75660000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2150	Buriti De Goiás	76152000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2151	Buritinópolis	73975000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2152	Cabeceiras	73870000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2153	Cachoeira Alta	75870000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2154	Cachoeira De Goiás	76125000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2155	Cachoeira Dourada	75560000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2156	Caçu	75813000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2157	Caiapônia	75850000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2158	Caiçara	76742000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2159	Calcilândia	76604000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2160	Caldas Novas	75690000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2161	Caldazinha	75245000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2162	Calixto	75158000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2163	Campestre De Goiás	75385000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2164	Campinaçu	76440000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2165	Campinorte	76410000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2166	Campo Alegre De Goiás	75795000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2167	Campo Limpo	75545000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2168	Campolândia	76133000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2169	Campos Belos	73840000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2170	Campos Verdes	76515000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2171	Cana Brava	76458000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2172	Canadá	76274000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2173	Capelinha	76174000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2174	Caraíba	75263000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2175	Carmo Do Rio Verde	76340000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2176	Castelândia	75925000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2177	Castrinópolis	76313000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2178	Catalão	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2179	Caturaí	75430000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2180	Cavalcante	73790000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2181	Cavalheiro	75783000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2182	Cebrasa	75156000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2183	Ceres	76300000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2184	Cezarina	76195000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2185	Chapadão Do Céu	75828000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2186	Choupana	76172000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2187	Cibele	76682000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2188	Cidade Ocidental	72880000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2189	Cirilândia	76323000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2190	Cocalzinho De Goiás	72975000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2191	Colinas Do Sul	73740000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2192	Córrego Do Ouro	76145000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2193	Córrego Rico	73759000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2194	Corumbá De Goiás	72960000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2195	Corumbaíba	75680000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2196	Cristalina	73850000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2197	Cristianópolis	75230000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2198	Crixás	76510000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2199	Cromínia	75635000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2200	Cruzeiro Do Norte	76554000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2201	Cumari	75760000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2202	Damianópolis	73980000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2203	Damolândia	75420000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2204	Davidópolis	76602000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2205	Davinópolis	75730000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2206	Diolândia	76683000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2207	Diorama	76260000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2208	Divinópolis De Goiás	73865000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2209	Domiciano Ribeiro	75784000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2210	Doverlândia	75855000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2211	Edealina	75945000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2212	Edéia	75940000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2213	Estrela Do Norte	76485000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2214	Faina	76740000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2215	Fazenda Nova	76220000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2216	Firminópolis	76105000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2217	Flores De Goiás	73890000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2218	Formosa	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2219	Formoso	76470000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2220	Forte	73764000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2221	Gameleira De Goiás	75184000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2222	Geriaçu	76402000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2223	Goialândia	75151000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2224	Goianápolis	75170000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2225	Goiandira	75740000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2226	Goianésia	76380000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2227	Goiânia	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2228	Goianira	75370000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2229	Goiás	76600000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2230	Goiatuba	75600000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2231	Gouvelândia	75865000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2232	Guapó	75350000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2233	Guaraíta	76690000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2234	Guarani De Goiás	73910000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2235	Guarinos	76385000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2236	Heitoraí	76670000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2237	Hidrolândia	75340000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2238	Hidrolina	76375000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2239	Iaciara	73920000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2240	Inaciolândia	75550000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2241	Indiara	75955000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2242	Inhumas	75400000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2243	Interlândia	75152000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2244	Ipameri	75780000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2245	Iporá	76200000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2246	Israelândia	76205000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2247	Itaberaí	76630000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2248	Itaguaçu	75893000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2249	Itaguari	76650000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2250	Itaguaru	76660000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2251	Itajá	75815000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2252	Itapaci	76360000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2253	Itapirapuã	76290000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2254	Itapuranga	76680000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2255	Itarumã	75810000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2256	Itauçu	75450000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2257	Itumbiara	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2258	Ivolândia	76130000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2259	Jacilândia	76293000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2260	Jandaia	75950000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2261	Jaraguá	76330000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2262	Jataí	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2263	Jaupaci	76210000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2264	Jeroaquara	76744000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2265	Jesúpolis	75495000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2266	Joanápolis	75157000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2267	Joviânia	75610000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2269	Juscelino Kubitschek	76478000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2270	Jussara	76270000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2271	Lagoa Do Bauzinho	75912000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2272	Lagolândia	72984000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2273	Leopoldo De Bulhões	75190000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2274	Lucilândia	76257000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2275	Luziânia	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2276	Mairipotaba	75630000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2277	Mambaí	73970000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2278	Mara Rosa	76490000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2279	Marcianópolis	75574000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2280	Marzagão	75670000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2281	Matrinchã	76730000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2282	Maurilândia	75930000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2283	Meia Ponte	75547000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2284	Messianópolis	76138000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2285	Mimoso De Goiás	73730000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2286	Minaçu	76450000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2287	Mineiros	75830000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2288	Moiporá	76135000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2289	Monte Alegre De Goiás	73830000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2448	Balsas	65800000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2290	Montes Claros De Goiás	76255000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2291	Montividiu	75915000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2292	Montividiu Do Norte	76465000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2293	Morrinhos	75650000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2294	Morro Agudo De Goiás	76355000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2295	Mossâmedes	76150000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2296	Mozarlândia	76700000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2297	Mundo Novo	76530000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2298	Mutunópolis	76540000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2299	Natinópolis	76383000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2300	Nazário	76180000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2301	Nerópolis	75460000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2302	Niquelândia	76420000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2303	Nova América	76345000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2304	Nova Aurora	75750000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2305	Nova Crixás	76520000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2306	Nova Glória	76305000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2307	Nova Iguaçu De Goiás	76495000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2308	Nova Roma	73820000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2309	Nova Veneza	75470000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2310	Novo Brasil	76285000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2311	Novo Gama	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2312	Novo Planalto	76580000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2313	Olaria Do Angico	75812000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2314	Olhos D`água	75714100	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2315	Orizona	75280000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2316	Ouro Verde De Goiás	75165000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2317	Ouroana	75911000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2318	Ouvidor	75715000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2319	Padre Bernardo	73700000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2320	Palestina De Goiás	75845000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2321	Palmeiras De Goiás	76190000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2322	Palmelo	75210000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2323	Palminópolis	75990000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2324	Panamá	75580000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2325	Paranaiguara	75880000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2326	Paraúna	75980000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2327	Pau-Terra	76412000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2328	Pedra Branca	75714200	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2329	Perolândia	75823000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2330	Petrolina De Goiás	75480000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2331	Pilar De Goiás	76370000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2332	Piloândia	76208000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2333	Piracanjuba	75640000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2334	Piranhas	76230000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2335	Pirenópolis	72980000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2336	Pires Belo	75714300	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2337	Pires Do Rio	75200000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2338	Planaltina De Goiás	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2339	Pontalina	75620000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2340	Porangatu	76550000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2341	Porteirão	75603000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2342	Portelândia	75835000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2343	Posse	73900000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2344	Posse D`abadia	72944000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2345	Professor Jamil	75645000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2346	Quirinópolis	75860000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2347	Registro Do Araguaia	76258000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2348	Rianápolis	76315000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2350	Rio Quente	75695000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2351	Rio Verde	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2352	Riverlândia	75914000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2353	Campo Limpo De Goiás	75160000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2354	Rosalândia	76103000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2355	Rubiataba	76350000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2356	Sanclerlândia	76160000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2357	Santa Bárbara De Goiás	75390000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2358	Santa Cruz Das Lajes	75913000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2359	Santa Cruz De Goiás	75220000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2360	Santa Fé De Goiás	76265000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2361	Santa Helena De Goiás	75920000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2362	Santa Isabel	76320000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2363	Santa Rita Do Araguaia	75840000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2364	Santa Rita Do Novo Destino	76395000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2365	Santa Rosa	73819000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2366	Santa Rosa De Goiás	75455000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2367	Santa Tereza De Goiás	76480000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2368	Santa Terezinha De Goiás	76500000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2369	Santo Antônio Da Barra	75935000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2370	Santo Antônio De Goiás	75375000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2371	Santo Antônio Do Descoberto	72900000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2372	Santo Antônio Do Rio Verde	75714000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2373	São Domingos	73860000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2374	São Francisco De Goiás	75490000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2375	São Gabriel De Goiás	73758000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2376	São João	76610000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2377	São João D`aliança	73760000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2378	São João Da Paraúna	75985000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2379	São Luís De Montes Belos	76100000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2380	São Luiz Do Norte	76365000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2381	São Luiz Do Tocantins	76422000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2382	São Miguel Do Araguaia	76590000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2383	São Miguel Do Passa Quatro	75185000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2384	São Patrício	76343000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2385	São Sebastião Do Rio Claro	76278000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2386	São Simão	75890000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2387	São Vicente	75159000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2388	Sarandi	75549000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2389	Senador Canedo	75250000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2390	Serra Dourada	76224000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2391	Serranópolis	75820000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2392	Silvânia	75180000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2393	Simolândia	73930000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2394	Sítio D`abadia	73990000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2395	Sousânia	75154000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2396	Taquaral De Goiás	76640000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2397	Taveira	76423000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2398	Teresina De Goiás	73795000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2399	Terezópolis De Goiás	75175000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2400	Lagoa Santa	75819000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2401	Três Ranchos	75720000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2402	Trindade	75380000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2403	Trombas	76460000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2404	Tupiracaba	76424000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2405	Turvânia	76110000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2406	Turvelândia	75970000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2407	Uirapuru	76525000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2408	Uruaçu	76400000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2409	Uruana	76335000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2410	Uruita	76338000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2411	Urutaí	75790000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2412	Uvá	76608000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2413	Valdelândia	76352000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2414	Valparaíso De Goiás	00000000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2415	Varjão	75355000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2416	Vianópolis	75260000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2417	Vicentinópolis	75555000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2418	Vila Boa	73825000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2420	Vila Propício	76393000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2421	Vila Sertaneja	76528000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10143	Ipiranga De Goiás	76304000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10197	Rialma	76310000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10259	Jk	73818000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10260	Bezerra	73817000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10290	São Jorge	73778000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10291	Campo Lindo	73858000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10522	Girassol	72979000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10523	Edilândia	72978000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10644	Juscelândia	76384000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10744	Jardim Abc De Goiás	72889000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9716	São Luiz Do Paraitinga	12140000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	11032	Planalmira	72950000	GO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2422	Açailândia	65930000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2423	Afonso Cunha	65505000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2424	Água Doce Do Maranhão	65578000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2425	Alcântara	65250000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2426	Aldeias Altas	65610000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2427	Altamira Do Maranhão	65310000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2428	Alto Alegre Do Maranhão	65413000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2429	Alto Alegre Do Pindaré	65398000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2430	Alto Parnaíba	65810000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2431	Amapá Do Maranhão	65293000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2432	Amarante Do Maranhão	65923000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2434	Anapurus	65525000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2435	Anil	00000000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2436	Apicum-Açu	65275000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2437	Araguanã	65368000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2438	Araióses	65570000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2439	Arame	65945000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2440	Arari	65480000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2441	Aurizona	65287000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2442	Axixá	65108000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2443	Bacabal	65700000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2444	Bacabeira	65103000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2445	Bacatuba	65688000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2446	Bacuri	65270000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2447	Bacurituba	65233000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2449	Barão De Grajaú	65660000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2450	Barão De Tromai	65281000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2451	Barra Do Corda	65950000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2452	Barreirinhas	65590000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2453	Barro Duro	65582000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2454	Bela Vista Do Maranhão	65335000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2455	Belágua	65535000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2456	Benedito Leite	65885000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2457	Bequimão	65248000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2458	Bernardo Do Mearim	65723000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2459	Boa Vista Do Gurupi	65292000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2460	Boa Vista Do Pindaré	65211000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2461	Bom Jardim	65380000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2462	Bom Jesus Das Selvas	65395000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2463	Bom Lugar	65704000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2464	Bonfim Do Arari	65483000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2465	Brejo	65520000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2466	Brejo De Areia	65315000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2467	Brejo De São Félix	65643000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2468	Buriti	65515000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2469	Buriti Bravo	65685000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2470	Buriti Cortado	65639000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2471	Buriticupu	65393000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2472	Buritirama	65935500	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2473	Cachoeira Grande	65165000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2474	Cajapió	65230000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2475	Cajari	65210000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2476	Campestre Do Maranhão	65968000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2477	Cândido Mendes	65280000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2478	Cantanhede	65465000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2479	Capinzal Do Norte	65735000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2480	Caraíba Do Norte	65655000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2481	Carolina	65980000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2482	Carutapera	65295000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2483	Caxias	00000000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2484	Cedral	65260000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2485	Central Do Maranhão	65267000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2486	Centro Do Guilherme	65288000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2487	Centro Novo Do Maranhão	65299000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2488	Chapadinha	65500000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2489	Cidelândia	65921000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2490	Codó	65400000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2491	Codozinho	65405000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2492	Coelho Neto	65620000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2493	Colinas	65690000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2494	Conceição Do Lago-Açu	65340000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2495	Coroatá	65415000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2496	Curupa	65815000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2497	Cururupu	65268000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2498	Curva Grande	65209000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2499	Custódio Lima	65565000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2500	Davinópolis	65927000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2501	Dom Pedro	65765000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2502	Duque Bacelar	65625000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2503	Esperantinópolis	65750000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2504	Estandarte	65282000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2505	Estreito	65975000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2506	Feira Nova Do Maranhão	65995000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2507	Fernando Falcão	65964000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2508	Formosa Da Serra Negra	65943000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2509	Fortaleza Dos Nogueiras	65805000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2510	Fortuna	65695000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2511	Frecheiras	65575000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2512	Godofredo Viana	65285000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2513	Gonçalves Dias	65775000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2514	Governador Archer	65770000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2515	Governador Edson Lobão	65928000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2516	Governador Eugênio Barros	65780000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2517	Governador Luiz Rocha	65795000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2518	Governador Newton Bello	65363000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2519	Governador Nunes Freire	65284000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2520	Graça Aranha	65785000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2521	Grajaú	65940000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2522	Guimarães	65255000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2523	Humberto De Campos	65180000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2524	Ibipira	65855000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2525	Icatu	65170000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2526	Igarapé Do Meio	65345000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2527	Igarapé Grande	65720000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2528	Imperatriz	00000000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2529	Itaipava Do Grajaú	65948000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2530	Itamataré	65298000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2531	Itapecuru Mirim	65485000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2532	Itapera	65175000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2533	Itinga Do Maranhão	65939000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2534	Jatobá	65693000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2535	Jenipapo Dos Vieiras	65962000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2536	João Lisboa	65922000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2537	Joselândia	65755000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2538	Junco Do Maranhão	65294000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2539	Lago Da Pedra	65715000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2540	Lago Do Junco	65710000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2541	Lago Dos Rodrigues	65712000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2542	Lago Verde	65705000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2543	Lagoa Do Mato	65683000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2544	Lagoa Grande Do Maranhão	65718000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2545	Lajeado Novo	65937000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2546	Lapela	65355000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2547	Leandro	65957000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2548	Lima Campos	65728000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2549	Loreto	65895000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2550	Luís Domingues	65290000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2551	Magalhães De Almeida	65560000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2552	Maioba	65137000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2553	Maracaçumé	65289000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2554	Marajá Do Sena	65714000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2555	Maranhãozinho	65283000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2556	Marianópolis	65726000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2557	Mata	65115000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2558	Mata Roma	65510000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2559	Matinha	65218000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2560	Matões	65645000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2561	Matões Do Norte	65468000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2562	Milagres Do Maranhão	65545000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2563	Mirador	65850000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2564	Miranda Do Norte	65495000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2565	Mirinzal	65265000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2566	Monção	65360000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2567	Montes Altos	65936000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2568	Morros	65160000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2569	Nina Rodrigues	65450000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2570	Nova Colinas	65808000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2571	Nova Iorque	65880000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2572	Nova Olinda Do Maranhão	65274000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2573	Olho D`água Das Cunhãs	65706000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2574	Olinda Nova Do Maranhão	65223000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2575	Paço Do Lumiar	65130000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2576	Palmeirândia	65238000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2577	Papagaio	65955000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2578	Paraibano	65670000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2579	Parnarama	65640000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2580	Passagem Franca	65680000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2581	Pastos Bons	65870000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2582	Paulino Neves	65585000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2583	Paulo Ramos	65716000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2584	Pedreiras	65725000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2585	Pedro Do Rosário	65206000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2586	Penalva	65213000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2587	Peri Mirim	65245000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2588	Peritoró	65418000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2589	Pimentel	65375000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2590	Pindaré Mirim	65370000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2591	Pinheiro	65200000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2592	Pio Xii	65707000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2593	Pirapemas	65460000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2594	Poção De Pedras	65740000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2595	Porto Das Gabarras	65493000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2596	Porto Franco	65970000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2597	Porto Rico Do Maranhão	65263000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2598	Presidente Dutra	65760000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2599	Presidente Juscelino	65140000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2600	Presidente Médici	65279000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2601	Presidente Sarney	65204000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2602	Presidente Vargas	65455000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2603	Primeira Cruz	65190000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2604	Raposa	65138000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2605	Resplandes	65959000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2606	Riachão	65990000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2607	Ribamar Fiquene	65938000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2608	Ribeirão Azul	65658000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2609	Rocado	65875000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2610	Roque	65202000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2611	Rosário	65100000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2612	Sambaíba	65830000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2613	Santa Filomena Do Maranhão	65768000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2614	Santa Helena	65208000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2615	Santa Inês	65300000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2616	Santa Luzia	65390000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2617	Santa Luzia Do Paruá	65272000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2618	Santa Quitéria Do Maranhão	65540000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2619	Santa Rita	65105000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2620	Santana Do Maranhão	65555000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2621	Santo Amaro	65195000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2622	Santo Antônio Dos Lopes	65730000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2623	São Benedito Do Rio Preto	65440000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2624	São Bento	65235000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2625	São Bernardo	65550000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2626	São Domingos Do Azeitão	65888000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2627	São Domingos Do Maranhão	65790000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2628	São Félix De Balsas	65890000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2629	São Francisco Do Brejão	65929000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2630	São Francisco Do Maranhão	65650000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2631	São João Batista	65225000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2632	São João De Cortes	65253000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2633	São João Do Carú	65385000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2634	São João Do Paraíso	65973000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2635	São João Do Sóter	65615000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2636	São João Dos Patos	65665000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2637	São Joaquim Dos Melos	65764000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2638	São José De Ribamar	65110000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2639	São José Dos Basílios	65762000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2640	São Luís	00000000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2641	São Luís Gonzaga Do Maranhão	65708000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2642	São Mateus Do Maranhão	65470000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2643	São Pedro Da Água Branca	65920000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2644	São Pedro Dos Crentes	65978000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2645	São Raimundo Das Mangabeiras	65840000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2646	São Raimundo De Codó	65410000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2647	São Raimundo Do Doca Bezerra	65753000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2648	São Roberto	65758000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2649	São Vicente Ferrer	65220000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2650	Satubinha	65709000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2651	Senador Alexandre Costa	65783000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2652	Senador La Roque	65935000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2653	Serrano Do Maranhão	65269000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2654	Sítio Novo	65925000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2655	Sucupira Do Norte	65860000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2656	Sucupira Do Riachão	65668000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2657	Tasso Fragoso	65820000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2658	Timbiras	65420000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2659	Timon	00000000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2660	Trizidela Do Vale	65727000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2661	Tufilândia	65378000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2662	Tuntum	65763000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2663	Turiaçu	65278000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2664	Turilândia	65276000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2665	Tutóia	65580000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2666	Urbano Santos	65530000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2667	Vargem Grande	65430000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2668	Viana	65215000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2669	Vila Nova Dos Martírios	65924000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2670	Vitória Do Mearim	65350000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2671	Vitorino Freire	65320000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2672	Zé Doca	65365000	MA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4325	Acorizal	78480000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4326	Água Boa	78635000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4327	Água Fria	78197000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4328	Aguaçu	78108000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4329	Aguapeí	78248000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4330	Águas Claras	78572000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4331	Ainhumas	78751000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4332	Alcantilado	78762000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4333	Alta Floresta	78580000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4334	Alto Araguaia	78780000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4335	Alto Boa Vista	78665000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4336	Alto Coité	78803000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4337	Alto Garças	78770000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4338	Alto Juruena	78318000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4339	Alto Paraguai	78410000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4340	Alto Paraíso	78584000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4341	Alto Taquari	78785000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4342	Analândia Do Norte	78534000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4343	Apiacás	78595000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4344	Araguaiana	78685000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4345	Araguainha	78615000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4346	Araputanga	78260000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4347	Arenápolis	78420000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4348	Aripuanã	78325000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4349	Arruda	78473000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4350	Assari	78394000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4351	Barão De Melgaço	78190000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4352	Barra Do Bugres	78390000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4353	Barra Do Garças	78600000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4354	Batovi	78776000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4355	Baús	78481000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4356	Bauxi	78474000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4357	Bel Rios	78401000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4358	Bezerro Branco	78234000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4359	Boa Esperança	78896000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4360	Boa União	78277000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4361	Boa Vista	78752000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4362	Bom Sucesso	78166000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4363	Brasnorte	78350000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4364	Buriti	78782000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9717	São Luiz Do Guaricanga	16675000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4366	Cáceres	78200000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4367	Caite	78186000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4368	Campinápolis	78630000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4369	Campo Novo Do Parecis	78360000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4370	Campo Verde	78840000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4371	Campos De Júlio	78307000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4372	Campos Novos	78411000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4373	Canabrava Do Norte	78658000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4374	Canarana	78640000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4375	Cangas	78178000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4376	Capão Grande	78164000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4377	Capão Verde	78413000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4378	Caramujo	78236000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4379	Caravagio	78894000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4380	Carlinda	78587000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4381	Cassununga	78778000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4382	Castanheira	78345000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4383	Catuai	78437000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4384	Chapada Dos Guimarães	78195000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4385	Cidade Morena	78326000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4386	Cláudia	78540000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4387	Cocalinho	78680000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4388	Colíder	78500000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4389	Colorado Do Norte	78518000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4390	Comodoro	78310000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4391	Confresa	78652000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4392	Coronel Ponce	78843000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4393	Cotrel	78522000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4394	Cotriguaçu	78330000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4395	Coxipó Açu	78101000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4396	Coxipó Da Ponte	00000000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4397	Coxipó Do Ouro	78102000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4398	Cristinópolis	78272000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4399	Cristo Rei	00000000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4400	Cuiabá	00000000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4401	Curvelândia	78237000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4402	Del Rios	78405000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4403	Denise	78380000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4404	Diamantino	78400000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4405	Dom Aquino	78830000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4406	Engenho	78483000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4407	Engenho Velho	78182000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4408	Entre Rios	78833000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4409	Estrela Do Leste	78768000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4410	Faval	78171000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4411	Fazenda De Cima	78176000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4412	Feliz Natal	78885000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4413	Figueirópolis D`oeste	78290000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4414	Filadélfia	78321000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4415	Flor Da Serra	78524000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4416	Fontanilhas	78348000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4417	Gaúcha Do Norte	78875000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4418	General Carneiro	78620000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4419	Glória D`oeste	78293000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4420	Guarantã Do Norte	78520000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4421	Guarita	78169000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4422	Guiratinga	78760000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4423	Horizonte Do Oeste	78235000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4424	Indianápolis	78603000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4425	Indiavaí	78295000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4426	Irenópolis	78813000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4427	Itamarati Norte	78361000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4428	Itaúba	78510000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4429	Itiquira	78790000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4430	Jaciara	78820000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4431	Jangada	78490000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4432	Jarudore	78806000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4433	Jatobá	78823000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4434	Jauru	78255000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4435	Joselândia	78192000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4436	Juara	78575000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4437	Juína	78320000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4438	Juruena	78340000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4439	Juscimeira	78810000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4440	Lambari D`oeste	78278000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4441	Lavouras	78414000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4442	Lucas Do Rio Verde	78455000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4443	Lucialva	78258000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4444	Luciara	78660000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4445	Machado	78103000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4446	Marcelândia	78535000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4447	Marzagão	78478000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4448	Mata Dentro	78107000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4449	Matupá	78525000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4450	Mimoso	78188000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4451	Mirassol D`oeste	78280000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4452	Nobres	78460000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4453	Nonoai Do Norte	78502000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4454	Nortelândia	78430000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4455	Nossa Senhora Da Guia	78104000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4538	São José Do Xingu	78663000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4456	Nossa Senhora Do Livramento	78170000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4457	Nova Alvorada	78314000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4458	Nova Bandeirantes	78565000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4459	Nova Brasilândia	78860000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4460	Nova Brasília	78691000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4461	Nova Canãa Do Norte	78515000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4462	Nova Catanduva	78755000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4463	Nova Galileia	78754000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4464	Nova Guarita	78508000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4465	Nova Lacerda	78243000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4466	Nova Marilândia	78415000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4467	Nova Maringá	78445000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4468	Nova Monte Verde	78593000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4469	Nova Mutum	78450000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4470	Nova Olímpia	78370000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4471	Nova Ubiratã	78888000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4472	Nova Xavantina	78690000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4473	Novo Diamantino	78402000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4474	Novo Eldorado	78574000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4475	Novo Horizonte Do Norte	78570000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4476	Novo Mundo	78528000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4477	Novo Paraná	78562000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4478	Novo São Joaquim	78625000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4479	Padronal	78316000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4480	Pai André	78167000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4481	Paraíso Do Leste	78808000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4482	Paranaitá	78590000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4483	Paranatinga	78870000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4484	Passagem Da Conceição	78168000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4485	Pedra Preta	78795000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4486	Peixoto De Azevedo	78530000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4487	Pirizal	78172000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4488	Placa De Santo Antônio	78811000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4489	Planalto Da Serra	78855000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4490	Poconé	78175000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4491	Pombas	78834000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4492	Pontal Do Araguaia	78698000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4493	Ponte Branca	78610000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4494	Ponte De Pedra	78759000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4495	Pontes E Lacerda	78250000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4496	Pontinópolis	78672000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4497	Porto Alegre Do Norte	78655000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4498	Porto Dos Gaúchos	78560000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4499	Porto Esperidião	78240000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4500	Porto Estrela	78398000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4501	Poxoréo	78800000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4502	Praia Rica	78198000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4503	Primavera	78898000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4504	Primavera Do Leste	78850000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4505	Progresso	78305000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4506	Querência	78643000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4507	Rancharia	78868000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4508	Reserva Do Cabaçal	78265000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4509	Ribeirão Cascalheira	78675000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4510	Ribeirão Dos Cocais	78173000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4511	Ribeirãozinho	78613000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4512	Rio Branco	78275000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4513	Rio Manso	78863000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4514	Riolândia	78866000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4515	Rondonópolis	00000000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4516	Rosário Oeste	78470000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4517	Salto Do Céu	78270000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4518	Sangradouro	78623000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4519	Santa Carmem	78545000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4520	Santa Elvira	78816000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4521	Santa Fé	78288000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4522	Santa Rita	78463000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4523	Santa Terezinha	78650000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4524	Santaninha	78648000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4525	Santo Afonso	78425000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4526	Santo Antônio Do Leverger	78180000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4527	Santo Antônio Do Rio Bonito	78891000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4528	São Cristovão	78551000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4529	Vale De São Domingos	78253000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4530	São Félix Do Araguaia	78670000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4531	São Joaquim	78306000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4532	São Jorge	78311000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4533	São José	78313000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4534	São José Do Apuí	78583000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4535	São José Do Planalto	78798000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4536	São José Do Povo	78773000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4537	São José Do Rio Claro	78435000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4539	São José Dos Quatro Marcos	78285000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4540	São Lourenço De Fátima	78818000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4541	São Pedro Da Cipa	78835000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4542	São Vicente	78106000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4543	Sapezal	78365000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4544	Selma	78828000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4545	Serra Nova Dourada	78668000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4546	Sinop	78550000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4547	Sonho Azul	78284000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4548	Sorriso	78890000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4549	Sumidouro	78404000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4550	Tabaporã	78563000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4551	Tangará Da Serra	78300000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4552	Tapirapua	78396000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4553	Tapurah	78573000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4554	Terra Nova Do Norte	78505000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4555	Terra Roxa	78322000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4556	Tesouro	78775000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4557	Toricueyje	78606000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4558	Torixoréu	78695000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4559	Três Pontes	78756000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4560	União Do Sul	78543000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4561	Vale Dos Sonhos	78608000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4562	Vale Rico	78766000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4563	Varginha	78184000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4564	Várzea Grande	00000000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4565	Vera	78880000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4566	Vila Atlântica	78536000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4567	Vila Bela Da Santíssima Trindade	78245000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4568	Vila Bueno	78757000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4569	Vila Mutum	78585000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4570	Vila Operária	78758000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4571	Vila Paulista	78753000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4572	Vila Progresso	78274000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4573	Vila Rica	78645000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4574	Novo Santo Antônio	78674000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10144	Conquista D`oeste	78254000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10145	Colniza	78335000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10146	Rondolândia	78338000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10147	Santa Rita Do Trivelato	78453000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10148	Nova Santa Helena	78548000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10149	Santo Antônio Do Leste	78628000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10150	Nova Nazaré	78638000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10151	Santa Cruz Do Xingu	78664000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10152	Bom Jesus Do Araguaia	78678000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	11073	Ipiranga Do Norte	78578000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	11074	Itanhangá	78579000	MT	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4155	Água Boa	79452000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4156	Água Clara	79680000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4157	Albuquerque	79362000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4158	Alcinópolis	79530000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4159	Alto Sucuriú	79682000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4160	Amambaí	79990000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4161	Amandina	79742000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4162	Amolar	79357000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4163	Anastácio	79210000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4164	Anaurilândia	79770000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4165	Angélica	79785000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4166	Anhandui	79125000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4167	Antônio João	79910000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4168	Aparecida Do Taboado	79570000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4169	Aquidauana	79200000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4170	Aral Moreira	79930000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4171	Arapuã	79654000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4172	Areado	79492000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4173	Árvore Grande	79502000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4174	Baianópolis	79462000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4175	Bálsamo	79182000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4176	Bandeirantes	79430000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4177	Bataguassu	79780000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4178	Bataiporã	79760000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4179	Baús	79554000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4180	Bela Vista	79260000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4181	Bocajá	79886000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9718	São Manuel	18650000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4183	Bodoquena	79390000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4184	Bom Fim	79442000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4185	Bonito	79290000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4186	Boqueirão	79242000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4187	Brasilândia	79670000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4188	Caarapó	79940000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4189	Cabeceira Do Apá	79908000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4190	Cachoeira	79504000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4191	Camapuã	79420000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4192	Camisão	79202000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4193	Campestre	79912000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4194	Campo Grande	00000000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4195	Capão Seco	79174000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4196	Caracol	79270000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4197	Carumbé	79892000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4198	Cassilândia	79540000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4199	Chapadão Do Sul	79560000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4200	Cipolândia	79208000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4201	Coimbra	79368000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4202	Congonhas	79432000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4203	Corguinho	79460000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4204	Coronel Sapucaia	79995000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4205	Corumbá	00000000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4206	Costa Rica	79550000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4207	Coxim	79400000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4208	Cristalina	79944000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4209	Cruzaltina	79883000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4210	Culturama	79702000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4211	Cupins	79573000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4212	Debrasa	79677000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4213	Deodápolis	79790000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4214	Dois Irmãos Do Buriti	79215000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4215	Douradina	79880000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4216	Dourados	00000000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4217	Eldorado	79970000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4218	Fátima Do Sul	79700000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4219	Figueirão	79428000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4220	Garcias	79656000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4221	Glória De Dourados	79730000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4222	Guaçu	79874000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4223	Guaçulândia	79734000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4224	Guadalupe Do Alto Paraná	79658000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4225	Guia Lopes Da Laguna	79230000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4226	Iguatemi	79960000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4227	Ilha Comprida	79652000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4228	Ilha Grande	79578000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4229	Indaiá Do Sul	79542000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4230	Indaiá Grande	79506000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4231	Indápolis	79868000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4232	Inocência	79580000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4233	Ipezal	79787000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4234	Itahum	79864000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4235	Itaporã	79890000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4236	Itaquiraí	79965000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4237	Ivinhema	79740000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4238	Jabuti	79292000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4239	Jacareí	79988000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4240	Japorã	79985000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4241	Jaraguari	79440000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4242	Jardim	79240000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4243	Jateí	79720000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4244	Jauru	79406000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4245	Juscelândia	79482000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4246	Jutí	79955000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4247	Ladário	79370000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4248	Lagoa Bonita	79792000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4249	Laguna Carapã	79920000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4250	Maracaju	79150000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4251	Miranda	79380000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4252	Montese	79896000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4253	Morangas	79584000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4254	Morraria Do Sul	79392000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4255	Morumbi	79972000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4256	Mundo Novo	79980000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4257	Naviraí	79950000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4258	Nhecolândia	79364000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4259	Nioaque	79220000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4260	Nossa Senhora De Fátima	79262000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4261	Nova Alvorada Do Sul	79140000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4262	Nova América	79942000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4263	Nova Andradina	79750000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4264	Nova Esperança	79722000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9719	São Martinho D`oeste	16320000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4266	Nova Jales	79508000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4267	Novo Horizonte Do Sul	79745000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4268	Oriente	79576000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4269	Paiaguás	79359000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4270	Palmeiras	79217000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4271	Panambi	79876000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4272	Paraíso	79552000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4273	Paranaíba	79500000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4274	Paranhos	79925000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4275	Pedro Gomes	79410000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4276	Picadinha	79866000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4277	Pirapora	79894000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4278	Piraputanga	79204000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4279	Ponta Porã	79900000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4280	Ponte Vermelha	79494000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4281	Pontinha Do Cocho	79424000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4282	Porto Esperança	79366000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4283	Porto Murtinho	79280000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4284	Porto Vilma	79794000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4285	Porto Xv De Novembro	79782000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4286	Presidente Castelo	79798000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4287	Prudêncio Thomaz	79134000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4288	Quebra Côco	79173000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4289	Quebracho	79774000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4290	Ribas Do Rio Pardo	79180000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4291	Rio Brilhante	79130000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4292	Rio Negro	79470000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4293	Rio Verde De Mato Grosso	79480000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4294	Rochedinho	79127000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4295	Rochedo	79450000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4296	Sanga Puitã	79902000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4297	Santa Rita Do Pardo	79690000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4298	Santa Terezinha	79898000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4299	São Gabriel Do Oeste	79490000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4300	São João Do Apore	79512000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4301	São José	79712000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4302	São José Do Sucuriú	79586000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4303	São Pedro	79862000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4305	São Romão	79402000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4306	Selvíria	79590000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4307	Sete Quedas	79935000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4308	Sidrolândia	79170000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4309	Sonora	79415000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4310	Tacuru	79975000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4311	Tamandaré	79514000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4312	Taquari	79405000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4313	Taquarussu	79765000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4314	Taunay	79206000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4315	Terenos	79190000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4316	Três Lagoas	00000000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4317	Velhacaria	79516000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4318	Vicentina	79710000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4319	Vila Formosa	79872000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4320	Vila Marques	79932000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4321	Vila Rica	79714000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4322	Vila União	79796000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4323	Vila Vargas	79878000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4324	Vista Alegre	79152000	MS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2673	Abadia Dos Dourados	38540000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2674	Abaeté	35620000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2675	Abaeté Dos Mendes	38812000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2676	Abaíba	36704000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2677	Abre Campo	35365000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2678	Abreus	36263000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2679	Acaiaca	35438000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2680	Açucena	35150000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2681	Acuruí	35451000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2682	Adão Colares	39597000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2683	Água Boa	39790000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2684	Água Branca De Minas	39629000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2685	Água Comprida	38110000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2686	Água Viva	36728000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2687	Aguanil	37273000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2688	Águas De Araxá	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2689	Águas De Contendas	37435000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2690	Águas Férreas	35362000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2691	Águas Formosas	39880000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2692	Águas Vermelhas	39990000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2693	Aimorés	35200000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2694	Aiuruoca	37450000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2695	Alagoa	37458000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2696	Albertina	37596000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2697	Alberto Isaacson	35608000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2698	Albertos	35576000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2699	Aldeia	35245000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2700	Alegre	38560000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2701	Alegria	36935000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2702	Além Paraíba	36660000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2703	Alexandrita	38282000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2704	Alfenas	37130000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2705	Alfredo Vasconcelos	36272000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2706	Almeida	35835000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2707	Almenara	39900000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2708	Alpercata	35138000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2709	Alpinópolis	37940000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2710	Alterosa	37145000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2711	Alto Caparaó	36979000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2712	Alto Capim	35210000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2713	Alto De Santa Helena	35102000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2714	Alto Jequitibá	36976000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2715	Alto Maranhão	36417000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2716	Alto Rio Doce	36260000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2717	Altolândia	38985000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2718	Alvação	39347000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2719	Alvarenga	35249000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2720	Alvinópolis	35950000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2721	Alvorada	36803000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2722	Alvorada De Minas	39140000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2723	Amanda	35708000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2724	Amanhece	38455000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2725	Amarantina	35412000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2726	Amparo Da Serra	35444000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2727	Andiroba	35745000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2728	Andradas	37795000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2729	Andrelândia	37300000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2730	Andrequicé	39207000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2731	Angaturama	36746000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2732	Angelândia	39685000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2733	Angicos De Minas	39332000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2734	Angueretá	35793000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2735	Angustura	36664000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2736	Antônio Carlos	36220000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2737	Antônio Dias	35177000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2738	Antônio Dos Santos	34960000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2739	Antônio Ferreira	39697000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2740	Antônio Pereira	35411000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2741	Antônio Prado De Minas	36850000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2742	Antunes	35698000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2743	Aparecida De Minas	38205000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2744	Araçaí	35777000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2745	Aracati De Minas	36776000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2746	Aracitaba	36255000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2747	Araçuaí	39600000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2748	Araguari	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2749	Aramirim	35151000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2750	Aranha	35462000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2751	Arantina	37360000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2752	Araponga	36594000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2753	Araporã	38435000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2754	Arapuá	38860000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2755	Araújos	35603000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2756	Araúna	37180000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2757	Araxá	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2758	Arcângelo	36318000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2759	Arceburgo	37820000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2760	Arcos	35588000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2761	Areado	37140000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2762	Argenita	38955000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2763	Argirita	36710000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2764	Aricanduva	39678000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2765	Arinos	38680000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2766	Aristides Batista	39341000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2767	Ascenção	35665000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2768	Assaraí	36966000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2769	Astolfo Dutra	36780000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2770	Ataléia	39850000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2771	Augusto De Lima	39220000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2772	Avaí Do Jacinto	39931000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2773	Azurita	35672000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2774	Babilônia	37915000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2775	Bação	35453000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2776	Baependi	37443000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2777	Baguari	35105000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2778	Baiões	35575000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2779	Baixa	38101000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2780	Balbinópolis	39877000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2781	Baldim	35706000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2782	Bambuí	38900000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2783	Bandeira	39917000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2784	Bandeira Do Sul	37740000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2785	Bandeirantes	35423000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2786	Barão De Cocais	35970000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2787	Barão De Monte Alto	36870000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2788	Barbacena	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2789	Barra Alegre	35165000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2790	Barra Da Figueira	36963000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2791	Barra Do Ariranha	35295000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2792	Barra Do Cuieté	35243000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2793	Barra Feliz	35963000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2794	Barra Longa	35447000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2795	Barranco Alto	37131000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2796	Barreiro	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2797	Barreiro Branco	39526700	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2798	Barreiro Da Raiz	39442000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2799	Barreiro Do Rio Verde	39441000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2800	Barretos De Alvinópolis	35952000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2801	Barrocão	39572000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2802	Barroso	36212000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2804	Bela Vista De Minas	35938000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2805	Belisário	36888000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2806	Belmiro Braga	36126000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2807	Belo Horizonte	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2808	Belo Oriente	35195000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9720	São Miguel Arcanjo	18230000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2810	Belo Vale	35473000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2811	Bentópolis De Minas	39325000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2812	Berilo	39640000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2813	Berizal	39555000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2814	Bertópolis	39875000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2815	Betim	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2816	Bias Fortes	36230000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2817	Bicas	36600000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2818	Bicuíba	35352000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2819	Biquinhas	35621000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2820	Bituri	35497000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2821	Boa Esperança	37170000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2822	Boa Família	36891000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2823	Boa União De Itabirinha	35285000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2824	Boa Vista De Minas	35517000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2825	Bocaina De Minas	37340000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2826	Bocaiúva	39390000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2827	Bom Despacho	35600000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2828	Bom Jardim De Minas	37310000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2829	Bom Jesus Da Cachoeira	36892000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2830	Bom Jesus Da Penha	37948000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2831	Bom Jesus De Cardosos	35381000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2832	Bom Jesus Do Amparo	35908000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2833	Bom Jesus Do Divino	36825000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2834	Bom Jesus Do Galho	35340000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2835	Bom Jesus Do Madeira	36817000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2836	Bom Pastor	35233000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2837	Bom Repouso	37610000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2838	Bom Retiro	36218000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2839	Bom Sucesso	37220000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2840	Bom Sucesso De Patos	38712000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2841	Bonança	39456000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2842	Bonfim	35521000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2843	Bonfinópolis De Minas	38650000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2844	Bonito De Minas	39490000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2845	Borba Gato	35803000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2846	Borda Da Mata	37564000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2847	Botelhos	37720000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2848	Botumirim	39596000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2849	Brás Pires	36542000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2850	Brasilândia De Minas	38779000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2851	Brasília De Minas	39330000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2852	Brasópolis	37530000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2853	Braúnas	35169000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2854	Brejaúba	35858000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2855	Brejaubinha	35106000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2856	Brejo Bonito	38738000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2857	Brejo Do Amparo	39482000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2858	Brumadinho	35460000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2859	Brumal	35966000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2860	Buarque De Macedo	36413000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2861	Bueno	35244000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2862	Bueno Brandão	37578000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2863	Buenópolis	39230000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2864	Bugre	35193000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2865	Buritis	38660000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2866	Buritizeiro	39280000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2867	Caatinga	38778000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2868	Cabeceira Grande	38625000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2869	Cabo Verde	37880000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2870	Caburu	36317000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2871	Caçaratiba	39662000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2872	Caçarema	39448000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2873	Cachoeira Alegre	36876000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2874	Cachoeira Da Prata	35765000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2875	Cachoeira De Minas	37545000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2876	Cachoeira De Pajeú	39980000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2877	Cachoeira De Santa Cruz	36574000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2878	Cachoeira Do Brumado	35424000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2879	Cachoeira Do Campo	35410000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2880	Cachoeira Do Manteiga	39288000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2881	Cachoeira Do Vale	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2967	Catuji	39816000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2882	Cachoeira Dos Antunes	35523000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2883	Cachoeira Dourada	38370000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2884	Cachoeirinha	38995000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2885	Caetano Lopes	35499000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2886	Caetanópolis	35770000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2887	Caeté	34800000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9721	São Paulo	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2889	Caiana	36832000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2890	Caiapó	36735000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2891	Cajuri	36560000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2892	Caldas	37780000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2893	Calixto	35232000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2894	Camacho	35555000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2895	Camanducaia	37650000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2896	Camargos	35427000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2897	Cambuí	37600000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2898	Cambuquira	37420000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2899	Campanário	39835000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2900	Campanha	37400000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2901	Campestre	37730000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2902	Campestrinho	37797000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2903	Campina Verde	38270000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2904	Campo Alegre De Minas	39457000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9722	São Pedro	13520000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2906	Campo Azul	39338000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2907	Campo Belo	37270000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2908	Campo Do Meio	37165000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2909	Campo Florido	38130000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2910	Campo Redondo	39452000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2911	Campolide	36237000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2912	Campos Altos	38970000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2913	Campos Gerais	37160000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2914	Cana Verde	37267000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2915	Canaã	36592000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2916	Canabrava	39581000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9723	São Pedro Do Turvo	18940000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2918	Canápolis	38380000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2919	Canastrão	38890000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2920	Candeias	37280000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2921	Canoeiros	38792000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2922	Cantagalo	39703000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2923	Caparaó	36834000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2924	Capela Nova	36290000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2925	Capelinha	39680000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2926	Capetinga	37993000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2927	Capim Branco	35730000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2928	Capinópolis	38360000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2929	Capitânia	39499000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2930	Capitão Andrade	35123000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2931	Capitão Enéas	39445000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2932	Capitólio	37930000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2933	Caputira	36925000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2934	Caraí	39810000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2935	Caranaíba	36428000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2936	Carandaí	36280000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2937	Carangola	36800000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2938	Caratinga	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2939	Carbonita	39665000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2940	Cardeal Mota	35847000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2941	Careaçu	37556000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2942	Carioca	35665300	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2943	Carlos Alves	36686000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2944	Carlos Chagas	39864000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2945	Carmésia	35878000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2946	Carmo Da Cachoeira	37225000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2947	Carmo Da Mata	35547000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2948	Carmo De Minas	37472000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2949	Carmo Do Cajuru	35510000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2950	Carmo Do Paranaíba	38840000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2951	Carmo Do Rio Claro	37150000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2952	Carmópolis De Minas	35534000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2953	Carneirinho	38290000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2954	Carrancas	37245000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2955	Carvalho De Brito	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2956	Carvalhópolis	37760000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2957	Carvalhos	37456000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2958	Casa Grande	36422000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2959	Cascalho Rico	38460000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2960	Cássia	37980000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2961	Cataguarino	36779000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2962	Cataguases	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2963	Catajás	39937000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2964	Catas Altas	35969000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2965	Catas Altas Da Noruega	36450000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2966	Catiara	38762000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2968	Catuné	36846000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2969	Catuni	39585000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2970	Catuti	39526000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2971	Caxambu	37440000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2972	Cedro Do Abaeté	35624000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2973	Centenário	36957000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2974	Central De Minas	35260000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2975	Central De Santa Helena	35267000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2976	Centralina	38390000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2977	Cervo	37565000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2978	Chácara	36110000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2979	Chalé	36985000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2980	Chapada De Minas	38528000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2981	Chapada Do Norte	39648000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2982	Chapada Gaúcha	39314000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2983	Chaveslândia	38325000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2984	Chiador	36630000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2985	Chonim	35109000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2986	Chumbo	38713000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2987	Cipotânea	36265000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2988	Cisneiros	36753000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2989	Citrolândia	32800000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2990	Claraval	37997000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2991	Claro De Minas	38782000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2992	Claro Dos Poções	39380000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2993	Cláudio	35530000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2994	Cláudio Manuel	35429000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2995	Cocais	35975000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2996	Coco	35472000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2997	Coimbra	36550000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2998	Coluna	39770000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	2999	Comendador Gomes	38250000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3000	Comercinho	39628000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3001	Conceição Da Aparecida	37148000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3002	Conceição Da Barra De Minas	36360000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9724	São Roque	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3003	Conceição Da Boa Vista	36743000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3004	Conceição Da Brejaúba	39721000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3005	Conceição Da Ibitipoca	36144000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3006	Conceição Das Alagoas	38120000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3007	Conceição Das Pedras	37527000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3008	Conceição De Ipanema	36947000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3009	Conceição De Itaguá	35466000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3010	Conceição De Minas	35985000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3011	Conceição De Piracicaba	35943000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3012	Conceição De Tronqueiras	39711000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3013	Conceição Do Capim	35202000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3014	Conceição Do Formoso	36248000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3015	Conceição Do Mato Dentro	35860000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3016	Conceição Do Pará	35668000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3017	Conceição Do Rio Acima	35968000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3018	Conceição Do Rio Verde	37430000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3019	Conceição Dos Ouros	37548000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3020	Concórdia De Mucuri	39826000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3021	Condado Do Norte	39435000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3022	Cônego João Pio	35993000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3023	Cônego Marinho	39489000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3024	Confins	33500000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3025	Congonhal	37557000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3026	Congonhas	36415000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3027	Congonhas Do Norte	35850000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3028	Conquista	38195000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3029	Conselheiro Lafaiete	36400000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3030	Conselheiro Mata	39106000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3031	Conselheiro Pena	35240000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3032	Consolação	37670000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3033	Contagem	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3034	Contrato	39676000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3035	Contria	39202000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3036	Coqueiral	37235000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3037	Coração De Jesus	39340000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3038	Cordisburgo	35780000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3039	Cordislândia	37498000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3040	Corinto	39200000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3041	Coroaci	39710000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3042	Coromandel	38550000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3043	Coronel Fabriciano	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3044	Coronel Murta	39635000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3045	Coronel Pacheco	36155000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3046	Coronel Xavier Chaves	36330000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3047	Córrego Danta	38990000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3048	Córrego Do Barro	35665200	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3049	Córrego Do Bom Jesus	37605000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3050	Córrego Do Ouro	37163000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3051	Córrego Fundo	35578000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3052	Córrego Novo	35345000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3053	Córregos	35864000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3054	Correia De Almeida	36208000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3055	Correntinho	39741000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3056	Costa Sena	35859000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3057	Costas	37665000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3058	Costas Da Mantiqueira	36206000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3059	Couto De Magalhães De Minas	39188000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3060	Crisólia	37572000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3061	Crisólita	39885000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3062	Crispim Jaques	39809000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3063	Cristais	37275000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3064	Cristália	39598000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3065	Cristiano Otoni	36426000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3066	Cristina	37476000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3067	Crucilândia	35520000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3068	Cruzeiro Da Fortaleza	38735000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3069	Cruzeiro Dos Peixotos	38416000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3070	Cruzília	37445000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3071	Cubas	35806000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3072	Cuité Velho	35242000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3073	Cuparaque	35246000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3074	Curimataí	39235000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3075	Curral De Dentro	39998000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3076	Curvelo	35790000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3077	Datas	39130000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3078	Delfim Moreira	37514000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3079	Delfinópolis	37910000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3080	Delta	38108000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3081	Deputado Augusto Clementino	39152000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3082	Derribadinha	35103000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3083	Descoberto	36690000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9730	São Simão	14200000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3084	Desembargador Otoni	39113000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3085	Desemboque	38193000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3086	Desterro De Entre Rios	35494000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3087	Desterro Do Melo	36210000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3088	Diamante De Ubá	36506000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3089	Diamantina	39100000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3090	Dias	37532000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3091	Dias Tavares/Siderúrgica	36105000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3092	Diogo De Vasconcelos	35437000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3093	Dionísio	35984000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3094	Divinésia	36546000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3095	Divino	36820000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3096	Divino Das Laranjeiras	35265000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3097	Divino De Virgolândia	39716000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3098	Divino Espírito Santo	37147000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3099	Divinolândia De Minas	39735000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3100	Divinópolis	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3101	Divisa Alegre	39995000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3102	Divisa Nova	37134000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3103	Divisópolis	39912000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3104	Dois De Abril	39948000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3105	Dom Bosco	38654000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3106	Dom Cavati	35148000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3107	Dom Joaquim	35865000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3108	Dom Lara	35314000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3109	Dom Modesto	35313000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3110	Dom Silvério	35440000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3111	Dom Viçoso	37474000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3112	Dona Euzébia	36784000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3113	Dores Da Vitória	36792000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3114	Dores De Campos	36213000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3115	Dores De Guanhães	35894000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3116	Dores Do Indaiá	35610000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3117	Dores Do Paraibuna	36243000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3118	Dores Do Turvo	36513000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3119	Doresópolis	37926000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3120	Douradinho	37755000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3121	Douradoquara	38530000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3122	Doutor Campolina	35768000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3123	Doutor Lund	33650000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3124	Durandé	36974000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3125	Edgard Melo	35122000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3126	Elói Mendes	37110000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3127	Emboabas	36319000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3128	Engenheiro Caldas	35130000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3129	Engenheiro Correia	35416000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3130	Engenheiro Navarro	39417000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3131	Engenheiro Schnoor	39602000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3132	Engenho Do Ribeiro	35602000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3133	Engenho Novo	36643000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3134	Entre Folhas	35324000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3135	Entre Rios De Minas	35490000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3136	Epaminondas Otoni	39866000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3137	Ermidinha	39410000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3138	Ervália	36555000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3139	Esmeraldas	35740000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3140	Esmeraldas De Ferros	35804000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3141	Espera Feliz	36830000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3142	Espinosa	39510000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3143	Espírito Santo Do Dourado	37566000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3144	Esteios	35596000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3145	Estevão De Araújo	36596000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3146	Estiva	37542000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3147	Estrela Da Barra	38294000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3148	Estrela Dalva	36725000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3149	Estrela De Jordânia	39923000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3150	Estrela Do Indaiá	35613000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3151	Estrela Do Sul	38525000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3152	Eugenópolis	36855000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3153	Euxenita	39751000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3154	Ewbank Da Câmara	36108000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3155	Expedicionário Alício	35204000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3156	Extração	39105000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3157	Extrema	37640000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3158	Fama	37138000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3159	Faria Lemos	36840000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3160	Farias	39744000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3161	Fechados	35788000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3162	Felicina	35152000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3163	Felício Dos Santos	39180000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3164	Felisburgo	39895000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3165	Felixlândia	35794000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3166	Fernandes Tourinho	35135000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3167	Fernão Dias	39334000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3168	Ferreiras	37493000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3169	Ferreirópolis	39562000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3170	Ferros	35800000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3171	Ferruginha	35245500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3172	Fervedouro	36815000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3173	Fidalgo	33620000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3174	Fidelândia	39851000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3175	Flor De Minas	38315000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3176	Florália	35961000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3177	Floresta	35263000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3178	Florestal	35690000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3179	Florestina	38450000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3180	Fonseca	35955000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3181	Formiga	35570000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3182	Formoso	38690000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3183	Fortaleza De Minas	37905000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3184	Fortuna De Minas	35760000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3185	Francisco Badaró	39644000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3186	Francisco Dumont	39387000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3187	Francisco Sá	39580000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3188	Franciscópolis	39695000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3189	Frei Eustáquio	37237000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3190	Frei Gaspar	39840000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3191	Frei Inocêncio	35112000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3192	Frei Lagonegro	39708000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3193	Frei Orlando	35629000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3194	Frei Serafim	39832000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3195	Freire Cardoso	39637000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3196	Fronteira	38230000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3197	Fronteira Dos Vales	39870000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3198	Fruta De Leite	39558000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3199	Frutal	38200000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3200	Funchal	38802000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3201	Funilândia	35709000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3202	Furnas	37943000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3203	Furquim	35426000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3204	Galego	36206100	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3205	Galena	38753000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3206	Galiléia	35250000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3207	Gama	35153000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3208	Gameleiras	39505000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3209	Garapuava	38615000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3210	Gavião	36858000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3211	Glaucilândia	39592000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3212	Glaura	35408000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3213	Glucínio	39782000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3214	Goiabeira	35248000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3215	Goianá	36152000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3216	Goianases	37994000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3217	Gonçalves	37680000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3218	Gonzaga	39720000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3219	Gororós	35868000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3220	Gorutuba	39522500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3221	Gouvea	39120000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3222	Governador Valadares	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3223	Gramínea	37796000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3224	Granada	35365700	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3225	Grão Mogol	39570000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3226	Grota	35395000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3227	Grupiara	38470000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3228	Guaçuí	39265000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3229	Guaipava	37125000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3230	Guanhães	39740000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3231	Guapé	37177000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3232	Guaraciaba	35436000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3233	Guaraciama	39397000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3234	Guaranésia	37810000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3235	Guarani	36160000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3236	Guaranilândia	39965000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3237	Guarará	36606000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3238	Guarataia	39833000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3239	Guarda Dos Ferreiros	38803000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3240	Guarda-Mor	38570000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3241	Guardinha	37952000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3242	Guaxima	38198000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3243	Guaxupé	37800000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3244	Guidoval	36515000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3245	Guimarânia	38730000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3246	Guinda	39103000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3247	Guiricema	36525000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3248	Gurinhatã	38310000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3249	Heliodora	37484000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3250	Hematita	35178000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3251	Hermilo Alves	36285000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3252	Honorópolis	38272000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3253	Iapu	35190000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3254	Ibertioga	36225000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3255	Ibiá	38950000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3256	Ibiaí	39350000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3257	Ibiracatu	39455000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3258	Ibiraci	37990000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3259	Ibirité	32400000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3260	Ibitira	35607000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3261	Ibitiúra De Minas	37790000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3262	Ibituruna	37223000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3263	Icaraí De Minas	39318000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3264	Igarapé	32900000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3265	Igaratinga	35695000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3266	Iguatama	38910000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3267	Ijaci	37205000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3268	Ilhéus Do Prata	35994000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3269	Ilicínea	37175000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3270	Imbé De Minas	35323000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3271	Inconfidentes	37576000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3272	Indaiabira	39536000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3273	Independência	35236000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3274	Indianópolis	38490000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3275	Ingaí	37215000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3276	Inhaí	39111000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3277	Inhapim	35330000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3278	Inhaúma	35710000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3279	Inimutaba	35796000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3280	Ipaba	35198000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3281	Ipanema	36950000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3282	Ipatinga	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3283	Ipiaçu	38350000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3284	Ipoema	35905000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3285	Ipuiúna	37559000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3286	Iraí De Minas	38510000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3287	Itabira	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3288	Itabirinha	35280000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3289	Itabirito	35450000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3290	Itaboca	36138000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3291	Itacambira	39594000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3292	Itacarambi	39470000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3293	Itaci	37155000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3294	Itacolomi	35861000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3295	Itaguara	35514000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3296	Itaim	37546000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3297	Itaipé	39815000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3298	Itajubá	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3299	Itajutiba	35331000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3300	Itamarandiba	39670000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3301	Itamarati	39993000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3302	Itamarati De Minas	36788000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3303	Itambacuri	39830000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3304	Itambé Do Mato Dentro	35820000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3305	Itamirim	39515000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3306	Itamogi	37955000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3307	Itamonte	37466000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3308	Itamuri	36886000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3309	Itanhandu	37464000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3310	Itanhomi	35120000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3311	Itaobim	39625000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3312	Itapagipe	38240000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3313	Itapanhoacanga	39145000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3314	Itapecerica	35550000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3315	Itapeva	37655000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3316	Itapiru	39955000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3317	Itapirucu	36756000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3318	Itatiaiuçu	35685000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3319	Itaú De Minas	37975000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3320	Itaúna	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3321	Itauninha	35915000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3322	Itaverava	36440000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3323	Itererê	37513000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3324	Itinga	39610000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3325	Itira	39605000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3326	Itueta	35220000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3327	Ituí	36684000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3328	Ituiutaba	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3329	Itumirim	37210000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3330	Iturama	38280000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3331	Itutinga	36390000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3332	Jaboticatubas	35830000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3333	Jacarandira	36342000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3334	Jacaré	39613000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3335	Jacinto	39930000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3336	Jacuí	37965000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3337	Jacutinga	37590000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3338	Jaguaraçu	35188000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3339	Jaguarão	39933000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3340	Jaguaritira	39692000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3341	Jaíba	39508000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3342	Jampruca	39837000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3343	Janaúba	39440000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3344	Januária	39480000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3345	Japaraíba	35580000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3346	Japonvar	39335000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3347	Jardinésia	38142000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3348	Jeceaba	35498000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3349	Jenipapo De Minas	39645000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3350	Jequeri	35390000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3351	Jequitaí	39370000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3352	Jequitibá	35767000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3353	Jequitinhonha	39960000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3354	Jesuânia	37485000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3355	Joaíma	39890000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3356	Joanésia	35168000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3357	João Monlevade	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3358	João Pinheiro	38770000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3359	Joaquim Felício	39240000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3360	Jordânia	39920000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3361	José Gonçalves De Minas	39642000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3362	José Raydan	39775000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3363	Joselândia	36435000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3364	Josenópolis	39575000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3365	Juatuba	35675000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3366	Jubaí	38196000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3367	Juiraçu	35996000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3368	Juiz De Fora	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3369	Junco De Minas	39693500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3370	Juramento	39590000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3371	Juréia	37117000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3372	Juruaia	37805000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3373	Jurumirim	35375000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3374	Justinópolis	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3375	Juvenília	39467000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3376	Lacerdinha	36802000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3377	Ladainha	39825000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3378	Lagamar	38785000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3379	Lagoa Bonita	35782000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3380	Lagoa Da Prata	35590000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3381	Lagoa Dos Patos	39360000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3382	Lagoa Dourada	36345000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3383	Lagoa Formosa	38720000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3384	Lagoa Grande	38755000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3385	Lagoa Santa	33400000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3386	Lajinha	36980000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3387	Lambari	37480000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3388	Lamim	36455000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3389	Lamounier	35551000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3390	Lapinha	33450000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3391	Laranjal	36760000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3392	Laranjeiras De Caldas	37782000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3393	Lassance	39250000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3394	Lavras	37200000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3395	Leandro Ferreira	35657000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3396	Leme Do Prado	39655000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3397	Leopoldina	36700000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3398	Levinópolis	39485000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3399	Liberdade	37350000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3400	Lima Duarte	36140000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3401	Limeira Do Oeste	38295000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3402	Limeira De Mantena	35296000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3403	Lobo Leite	36419000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3404	Lontra	39437000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3405	Lourenço Velho	37507000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3406	Lufa	39824000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3407	Luisburgo	36923000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3408	Luislândia	39336000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3409	Luiz Pires De Minas	39344000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3410	Luizlândia Do Oeste	38776000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3411	Luminárias	37240000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3412	Luminosa	37535000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3414	Macaia	37221000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3415	Machacalis	39873000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3416	Machado	37750000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3417	Macuco	36891500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3418	Macuco De Minas	37212000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3419	Madre De Deus De Minas	37305000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3420	Mãe Dos Homens	39797000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3421	Major Ezequiel	35953000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3422	Major Porto	38710000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3423	Malacacheta	39690000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3424	Mamonas	39516000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3425	Manga	39460000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3426	Manhuaçu	36900000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3427	Manhumirim	36970000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3428	Mantena	35290000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3429	Mantiqueira	36242000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3430	Mantiqueira Do Palmital	36206300	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3431	Mar De Espanha	36640000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3432	Marambainha	39813000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3433	Maravilhas	35666000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3434	Maria Da Fé	37517000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3435	Mariana	35420000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3436	Marilac	35115000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3437	Marilândia	35553000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3438	Mário Campos	32470000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3439	Maripá De Minas	36608000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3440	Marliéria	35185000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3441	Marmelópolis	37516000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3442	Martinésia	38419000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3443	Martinho Campos	35606000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3444	Martins Guimarães	35593000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3445	Martins Soares	36972000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3446	Mata Verde	39915000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3447	Materlândia	39755000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3448	Mateus Leme	35670000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3449	Mathias Lobato	35110000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3450	Matias Barbosa	36120000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3451	Matias Cardoso	39478000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3452	Matipó	35367000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3453	Mato Verde	39527000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3454	Matozinhos	35720000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3455	Matutina	38870000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3456	Medeiros	38930000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3457	Medina	39620000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3458	Melo Viana	35750000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3459	Mendanha	39101000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3460	Mendes Pimentel	35270000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3461	Mendonça	39664000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3462	Mercês	36190000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3463	Mercês De Água Limpa	36352000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3464	Mesquita	35166000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3465	Mestre Caetano	34750000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3466	Miguel Burnier	35414000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3467	Milagre	37959000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3468	Milho Verde	39155000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3469	Minas Novas	39650000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3470	Minduri	37447000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3471	Mirabela	39420000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3472	Miradouro	36893000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3473	Miragaia	36507000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3474	Miraí	36790000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3475	Miralta	39415000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3476	Mirantão	37345000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3477	Miraporanga	38418000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3478	Miravânia	39465000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3479	Missionário	36262000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3480	Mocambeiro	35725000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3481	Mocambinho	39524000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3482	Moeda	35470000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3483	Moema	35604000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3484	Monjolinho De Minas	38722000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3485	Monjolos	39215000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3486	Monsenhor Horta	35425000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3487	Monsenhor Isidro	36445000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3488	Monsenhor João Alexandre	35532000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3489	Monsenhor Paulo	37405000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3490	Montalvânia	39495000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3491	Monte Alegre De Minas	38420000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3492	Monte Azul	39500000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3493	Monte Belo	37115000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3494	Monte Carmelo	38500000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3495	Monte Celeste	36532000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3496	Monte Formoso	39893000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3497	Monte Rei	39468000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3498	Monte Santo De Minas	37958000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3499	Monte Sião	37580000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3500	Monte Verde	37653000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3501	Montes Claros	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3502	Montezuma	39547000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3503	Morada Nova De Minas	35628000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3504	Morro	39313000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3505	Morro Da Garça	35798000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3506	Morro Do Ferro	35541000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3507	Morro Do Pilar	35875000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3508	Morro Vermelho	34940000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3509	Mucuri	39809800	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3510	Mundo Novo De Minas	35208000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3511	Munhoz	37620000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3512	Muquém	39423000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3513	Muriaé	36880000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3514	Mutum	36955000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3515	Muzambinho	37890000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3516	Nacip Raydan	39718000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3517	Nanuque	39860000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3518	Naque	35157000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3519	Naque-Nanuque	35149000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3520	Natalândia	38658000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3521	Natércia	37524000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3522	Nazaré De Minas	37253000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3523	Nazareno	36370000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3524	Nelson De Sena	39706000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3525	Neolândia	35552000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3526	Nepomuceno	37250000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3527	Nhandutiba	39463000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3528	Nicolândia	35235000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3529	Ninheira	39553000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3530	Nova Belém	35298000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3531	Nova Era	35920000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3532	Nova Esperança	39414000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3533	Nova Lima	34000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3534	Nova Minda	39335700	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3535	Nova Módica	35113000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3536	Nova Ponte	38160000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3537	Nova Porteirinha	39525000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3538	Nova Resende	37860000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3539	Nova Serrana	35519000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3540	Nova União	34990000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3541	Novilhona	39821000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3542	Novo Cruzeiro	39820000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3543	Novo Horizonte	39853000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3544	Novo Oriente De Minas	39817000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3545	Novorizonte	39568000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3546	Ocidente	36959000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3547	Olaria	36145000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3548	Olegário Maciel	37509000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3549	Olhos D`água Do Oeste	38772000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3550	Olhos D`água	39398000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3551	Olímpio Campos	39433000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3552	Olímpio Noronha	37488000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3553	Oliveira	35540000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3554	Oliveira Fortes	36250000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3555	Onça De Pitangui	35655000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3556	Oratórios	35439000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3557	Orizânia	36828000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3558	Ouro Branco	36420000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3559	Ouro Fino	37570000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3560	Ouro Preto	35400000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3561	Ouro Verde De Minas	39855000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3562	Paciência	39524500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3563	Padre Brito	36209000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3564	Padre Carvalho	39573000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3565	Padre Felisberto	35445000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3566	Padre Fialho	35367700	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3567	Padre João Afonso	39672000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3568	Padre Júlio Maria	36978000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3569	Padre Paraíso	39818000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3570	Padre Pinto	35945000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3571	Padre Viegas	35422000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3572	Pai Pedro	39517000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3573	Paineiras	35622000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3574	Pains	35582000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3575	Paiolinho	37758000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3576	Paiva	36195000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3577	Palma	36750000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3578	Palmeiral	37725000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3579	Palmeirinha	38613000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3580	Palmital Dos Carvalhos	36278000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3581	Palmópolis	39945000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3582	Pântano	37543000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3583	Papagaios	35669000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3584	Pará De Minas	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3585	Paracatu	38600000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3586	Paraguaçu	37120000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3587	Paraguai	36565000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3588	Paraíso Garcia	36236000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3589	Paraisópolis	37660000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3590	Paraopeba	35774000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3591	Paredão De Minas	39285000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3592	Parque Durval De Barros	32440000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3593	Parque Industrial	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3594	Passa Dez	35343000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3595	Passa Quatro	37460000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3596	Passa Tempo	35537000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3597	Passa Vinte	37330000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3598	Passabém	35810000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3599	Passagem De Mariana	35421000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3600	Passos	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3601	Patis	39425000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3602	Patos De Minas	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3603	Patrimônio	38145000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3604	Patrocínio	38740000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3605	Patrocínio Do Muriaé	36860000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3606	Paula Cândido	36544000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3607	Paula Lima	36103000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3608	Paulistas	39765000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3609	Pavão	39814000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3610	Pé Do Morro	37462000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3611	Peçanha	39700000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3612	Pedra Azul	39970000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3613	Pedra Bonita	35364000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3614	Pedra Corrida	35155000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3615	Pedra Do Anta	36585000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3616	Pedra Do Indaiá	35565000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3617	Pedra Do Sino	36282000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3618	Pedra Dourada	36847000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3619	Pedra Grande	39910000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3620	Pedra Menina	39175000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3621	Pedralva	37520000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3622	Pedras De Maria Da Cruz	39492000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3623	Pedrinópolis	38178000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3624	Pedro Leopoldo	33600000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3625	Pedro Lessa	39158000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3626	Pedro Teixeira	36148000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3627	Pedro Versiani	39809300	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3628	Penédia	34930000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3629	Penha De França	39675000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3630	Penha Do Capim	35212000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3631	Penha Do Cassiano	35107000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3632	Penha Do Norte	35241000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3633	Penha Longa	36635000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3634	Pequeri	36610000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3635	Pequi	35667000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3636	Perdigão	35515000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3637	Perdilândia	38328000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3638	Perdizes	38170000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3639	Perdões	37260000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3640	Pereirinhas	35492000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3641	Periquito	35156000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3642	Perpétuo Socorro	35196000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3643	Pescador	35114000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3644	Petúnia	37865000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3645	Piacatuba	36708000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3646	Pião	37776000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3647	Piau	36157000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3648	Pic Sagarana	38686000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3649	Piedade De Caratinga	35325000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3650	Piedade De Ponte Nova	35382000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3651	Piedade Do Paraopeba	35464000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3652	Piedade Do Rio Grande	36227000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3653	Piedade Dos Gerais	35526000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3654	Pilar	38717000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3655	Pimenta	35585000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3656	Pindaíbas	38715000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3657	Pingo-D`água	35348000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3658	Pinheirinhos	37461000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3659	Pinheiros Altos	36490000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3660	Pinhotiba	36857000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3661	Pintópolis	39317000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3662	Pintos Negreiros	37518000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3663	Piracaiba	38452000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3664	Piracema	35536000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3665	Pirajuba	38210000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3666	Piranga	36480000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3667	Piranguçu	37511000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3668	Piranguinho	37508000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3669	Piranguita	36462000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3670	Pirapanema	36889000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3671	Pirapetinga	36730000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3672	Pirapora	39270000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3673	Piraúba	36170000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3674	Pires E Albuquerque	39394000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3675	Piscamba	35393000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3676	Pitangui	35650000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3677	Pitarana	39498000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3678	Piumhi	37925000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3679	Planalto De Minas	39114000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3680	Planura	38220000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3681	Plautino Soares	35144000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3682	Poaia	39783000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3683	Poço Fundo	37757000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3684	Poções De Paineiras	35623000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3685	Poços De Caldas	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3686	Pocrane	36960000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3687	Pompéu	35640000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3688	Poncianos	38126000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3689	Pontalete	37192000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3690	Ponte Alta	38106000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3691	Ponte Alta De Minas	36805000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3692	Ponte Dos Ciganos	39343000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3693	Ponte Firme	38754000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3694	Ponte Nova	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3695	Ponte Segura	37618000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3696	Pontevila	35577000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3697	Ponto Chique	39328000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3698	Ponto Chique Do Martelo	36206500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3699	Ponto Do Marambaia	39812000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3700	Ponto Dos Volantes	39615000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3701	Porteirinha	39520000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3702	Porto Agrário	39469000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3703	Porto Das Flores	36128000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3704	Porto Dos Mendes	37271000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3705	Porto Firme	36576000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3706	Poté	39827000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3707	Pouso Alegre	37550000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3708	Pouso Alto	37468000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3709	Prados	36320000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3710	Prata	38140000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3711	Pratápolis	37970000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3712	Pratinha	38960000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3713	Presidente Bernardes	36475000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3714	Presidente Juscelino	35797000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3715	Presidente Kubitschek	39135000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3716	Presidente Olegário	38750000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3717	Presidente Pena	39865000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3718	Professor Sperber	36988000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3719	Providência	36706000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3720	Prudente De Morais	35715000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3721	Quartel De São João	35626000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3722	Quartel Do Sacramento	35342000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3723	Quartel Geral	35625000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3724	Quatituba	35222000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3725	Queixada	39823000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3726	Queluzita	36424000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3727	Quem-Quem	39443000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3728	Quilombo	39753000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3729	Quintinos	38845000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3730	Raposos	34400000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3731	Raul Soares	35350000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3732	Ravena	34740000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3733	Realeza	36905000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3734	Recreio	36740000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3735	Reduto	36920000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3736	Resende Costa	36340000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3737	Resplendor	35230000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3738	Ressaquinha	36270000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3739	Riachinho	38640000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3740	Riacho Da Cruz	39483000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3741	Riacho Dos Machados	39529000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3742	Ribeirão Das Neves	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3743	Ribeirão De São Domingos	36915000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3744	Ribeirão Vermelho	37264000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3745	Ribeiro Junqueira	36707000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3746	Ribeiros	37492000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3747	Rio Acima	34300000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3748	Rio Casca	35370000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3749	Rio Das Mortes	36315000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3750	Rio Do Prado	39940000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3751	Rio Doce	35442000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3752	Rio Espera	36460000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3753	Rio Manso	35525000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3754	Rio Melo	36465000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3755	Rio Novo	36150000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3756	Rio Paranaíba	38810000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3757	Rio Pardo De Minas	39530000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3758	Rio Piracicaba	35940000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3759	Rio Pomba	36180000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3760	Rio Pretinho	39808000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3761	Rio Preto	36130000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3762	Rio Vermelho	39170000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3763	Ritápolis	36335000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3764	Roça Grande	36682000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3765	Roças Novas	34950000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3766	Rochedo De Minas	36604000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3767	Rodeador	39218000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3768	Rodeiro	36510000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3769	Rodrigo Silva	35407000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3770	Romaria	38520000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3771	Rosário Da Limeira	36878000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3772	Rosário De Minas	36106000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3773	Rosário Do Pontal	35435500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3774	Roseiral	36958000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3775	Rubelita	39565000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3776	Rubim	39950000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3777	Sabará	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3778	Sabinópolis	39750000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3779	Sacramento	38190000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3780	Salinas	39560000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3781	Salitre De Minas	38743000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3782	Salto Da Divisa	39925000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3783	Sanatório Santa Fé	37412000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3784	Santa Bárbara	35960000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3785	Santa Bárbara Do Leste	35328000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3786	Santa Bárbara Do Monte Verde	36132000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3787	Santa Bárbara Do Tugúrio	36215000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3788	Santa Cruz Da Aparecida	37119000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3789	Santa Cruz De Botumirim	39595000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3790	Santa Cruz De Minas	36328000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3791	Santa Cruz De Salinas	39563000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3792	Santa Cruz Do Escalvado	35384000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3793	Santa Cruz Do Prata	37815000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3794	Santa Da Pedra	39368000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3795	Santa Efigênia	35319000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3796	Santa Efigênia De Minas	39725000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3797	Santa Fé De Minas	39295000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3798	Santa Filomena	36945000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3799	Santa Helena De Minas	39874000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3801	Santa Juliana	38175000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3802	Santa Luzia	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3803	Santa Luzia Da Serra	38774000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3804	Santa Margarida	36910000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3805	Santa Maria De Itabira	35910000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3806	Santa Maria Do Salto	39928000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3807	Santa Maria Do Suaçuí	39780000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3808	Santa Rita Da Estrela	38526000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3809	Santa Rita De Caldas	37775000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3810	Santa Rita De Jacutinga	36135000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3811	Santa Rita De Minas	35326000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3812	Santa Rita De Ouro Preto	35409000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3813	Santa Rita Do Cedro	35791000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3814	Santa Rita Do Ibitipoca	36235000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3815	Santa Rita Do Itueto	35225000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3816	Santa Rita Do Rio Do Peixe	35807000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3817	Santa Rita Do Sapucaí	37540000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3818	Santa Rita Durão	35428000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3819	Santa Rosa Da Serra	38805000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3820	Santa Rosa De Lima	39412000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3821	Santa Rosa Dos Dourados	38555000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3822	Santa Teresa Do Bonito	39702000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3823	Santa Terezinha De Minas	35688000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3824	Santa Vitória	38320000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3825	Santana Da Vargem	37195000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3826	Santana De Caldas	37785000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3827	Santana De Cataguases	36795000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3828	Santana De Patos	38711000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3829	Santana De Pirapama	35785000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3830	Santana Do Alfié	35997000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3831	Santana Do Araçuaí	39618000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3832	Santana Do Campestre	36783000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3833	Santana Do Capivari	37469000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3834	Santana Do Deserto	36620000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3835	Santana Do Garambéu	36146000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3836	Santana Do Jacaré	37278000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3837	Santana Do Manhuaçu	36940000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3838	Santana Do Paraíso	35167000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3839	Santana Do Paraopeba	35475000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3840	Santana Do Riacho	35845000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3841	Santana Do Tabuleiro	35358000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3842	Santana Dos Montes	36430000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3843	Santo Antônio Da Boa Vista	39434000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3844	Santo Antônio Da Fortaleza	35801000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3845	Santo Antônio Da Vargem Alegre	35522000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3846	Santo Antônio Do Amparo	37262000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3847	Santo Antônio Do Aventureiro	36670000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3848	Santo Antônio Do Boqueirão	38620000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3849	Santo Antônio Do Cruzeiro	37255000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3850	Santo Antônio Do Glória	36897000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3851	Santo Antônio Do Grama	35388000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3852	Santo Antônio Do Itambé	39160000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3853	Santo Antônio Do Jacinto	39935000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3854	Santo Antônio Do Leite	35413000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3855	Santo Antônio Do Manhuaçu	35321000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3856	Santo Antônio Do Monte	35560000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3857	Santo Antônio Do Mucuri	39691000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3858	Santo Antônio Do Norte	35863000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3859	Santo Antônio Do Pirapetinga	36485000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3860	Santo Antônio Do Retiro	39538000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3861	Santo Antônio Do Rio Abaixo	35880000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3862	Santo Antônio Dos Araújos	39796000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3863	Santo Antônio Dos Campos	35505000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3864	Santo Hilário	35586000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3865	Santo Hipólito	39210000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3866	Santos Dumont	36240000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3867	São Bartolomeu	35406000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3868	São Benedito	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3869	São Bento Abade	37414000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3870	São Bento De Caldas	37778000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3871	São Brás Do Suaçuí	35495000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3872	São Braz	38788000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3873	São Cândido	35320000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3874	São Domingos	36675000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3875	São Domingos Da Bocaina	36142000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3876	São Domingos Das Dores	35335000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3877	São Domingos Do Prata	35995000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3878	São Félix De Minas	35275000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3879	São Francisco	39300000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3880	São Francisco De Paula	35543000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3881	São Francisco De Sales	38260000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3882	São Francisco Do Glória	36810000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3883	São Francisco Do Humaitá	36956000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3884	São Geraldo	36530000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9725	São Roque Da Fartura	13895000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3886	São Geraldo Da Piedade	39723000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3887	São Geraldo De Tumiritinga	35126000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3888	São Geraldo Do Baguari	39704000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3889	São Geraldo Do Baixio	35258000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3890	São Gonçalo De Botelhos	37723000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3891	São Gonçalo Do Abaeté	38790000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3892	São Gonçalo Do Monte	35455000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3893	São Gonçalo Do Pará	35516000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3894	São Gonçalo Do Rio Abaixo	35935000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3895	São Gonçalo Do Rio Das Pedras	39153000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3896	São Gonçalo Do Rio Preto	39185000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3897	São Gonçalo Do Sapucaí	37490000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3898	São Gotardo	38800000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3899	São Jerônimo Dos Poções	38975000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3900	São João Batista Do Glória	37920000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3901	São João Da Chapada	39110000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3902	São João Da Lagoa	39355000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3903	São João Da Mata	37568000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3904	São João Da Ponte	39430000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3905	São João Da Sapucaia	36765000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3906	São João Da Serra	36245000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3907	São João Da Serra Negra	38748000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3908	São João Da Vereda	39413000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3909	São João Das Missões	39475000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3910	São João Del Rei	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3911	São João Do Bonito	39528000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3912	São João Do Jacutinga	35322000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3913	São João Do Manhuaçu	36918000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3914	São João Do Manteninha	35277000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3915	São João Do Oriente	35146000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3916	São João Do Pacuí	39365000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3917	São João Do Paraíso	39540000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3918	São João Evangelista	39705000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3919	São João Nepomuceno	36680000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3920	São Joaquim	39348000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9726	São Sebastião	11600000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3922	São Joaquim De Bicas	32920000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3923	São José Da Barra	37945000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3924	São José Da Bela Vista	38804000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3925	São José Da Lapa	33350000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3926	São José Da Pedra Menina	36831000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3927	São José Da Safira	39785000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3928	São José Da Varginha	35694000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3929	São José Das Tronqueiras	35108000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3930	São José Do Acácio	35133000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3931	São José Do Alegre	37510000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3932	São José Do Barreiro	37927000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3933	São José Do Batatal	35339000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3934	São José Do Buriti	35795000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3935	São José Do Divino	39848000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3936	São José Do Goiabal	35986000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3937	São José Do Itueto	35228000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3938	São José Do Jacuri	39707000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3939	São José Do Mantimento	36990000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3940	São José Do Mato Dentro	37574000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3941	São José Do Pântano	37549000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3942	São José Do Paraopeba	35468000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3943	São José Dos Lopes	36141000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3944	São José Dos Salgados	35512000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3945	São Lourenço	37470000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3946	São Manoel Do Guaiaçu	36787000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3947	São Mateus De Minas	37652000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3948	São Miguel Do Anta	36590000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3949	São Pedro Da Garça	39411000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3950	São Pedro Da União	37855000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3951	São Pedro Das Tabocas	39494000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3952	São Pedro De Caldas	37787000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3953	São Pedro Do Avaí	36906000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3954	São Pedro Do Glória	36819000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3955	São Pedro Do Jequitinhonha	39961000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3956	São Pedro Do Suaçuí	39784000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3957	São Pedro Dos Ferros	35360000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3958	São Roberto	39358000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3959	São Romão	39290000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3960	São Roque De Minas	37928000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3961	São Sebastião Da Barra	35192000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3962	São Sebastião Da Bela Vista	37567000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3963	São Sebastião Da Vala	35215000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3964	São Sebastião Da Vargem Alegre	36793000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3965	São Sebastião Da Vitória	36316000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3966	São Sebastião De Braúnas	35197000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3967	São Sebastião Do Anta	35334000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3968	São Sebastião Do Baixio	35154000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3969	São Sebastião Do Barreado	36131000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3970	São Sebastião Do Barreiro	39839000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3971	São Sebastião Do Bonsucesso	35862000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3972	São Sebastião Do Bugre	39712000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3973	São Sebastião Do Gil	35493000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3974	São Sebastião Do Maranhão	39795000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3975	São Sebastião Do Óculo	35356000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3976	São Sebastião Do Oeste	35506000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3977	São Sebastião Do Paraíso	37950000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3978	São Sebastião Do Pontal	38292000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3979	São Sebastião Do Rio Preto	35815000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3980	São Sebastião Do Rio Verde	37467000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3981	São Sebastião Do Sacramento	36908000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3982	São Sebastião Do Soberbo	35387000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3983	São Sebastião Dos Poções	39497000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3984	São Sebastião Dos Robertos	37592000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3985	São Sebastião Dos Torres	36206700	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3986	São Tiago	36350000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3987	São Tomás De Aquino	37960000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3988	São Thomé Das Letras	37418000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3989	São Vicente	35707000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3990	São Vicente Da Estrela	35355000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3991	São Vicente De Minas	37370000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3992	São Vicente Do Grama	35398000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3993	São Vicente Do Rio Doce	35143000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3994	São Vítor	35104000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3995	Sapucaí	37594000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3996	Sapucaí-Mirim	37690000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3997	Sapucaia	35311000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3998	Sapucaia De Guanhães	39742000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	3999	Sapucaia Do Norte	35255000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4000	Sarandira	36104000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4001	Sardoá	39728000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4002	Sarzedo	32450000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4003	Saudade	36645000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4004	Sem Peixe	35441000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4005	Senador Amaral	37615000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4006	Senador Cortes	36650000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4007	Senador Firmino	36540000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4008	Senador José Bento	37558000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4009	Senador Melo Viana	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4010	Senador Modestino Gonçalves	39190000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4011	Senador Mourão	39112000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4012	Senhora Da Glória	39212000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4013	Senhora Da Penha	35136000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4014	Senhora Das Dores	36207000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4015	Senhora De Oliveira	36470000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4016	Senhora Do Carmo	35907000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4017	Senhora Do Porto	39745000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4018	Senhora Dos Remédios	36275000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4019	Sereno	36777000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4020	Sericita	35368000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4021	Seritinga	37454000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4022	Serra Azul	35674000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4023	Serra Azul De Minas	39165000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4024	Serra Bonita	38665000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4025	Serra Da Canastra	37929000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4026	Serra Da Saudade	35617000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4027	Serra Das Araras	39310000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4028	Serra Do Camapuã	35491000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4029	Serra Do Salitre	38760000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4030	Serra Dos Aimorés	39868000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4031	Serra Dos Lemes	37885000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4032	Serra Nova	39532000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4033	Serrania	37136000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4034	Serranópolis De Minas	39518000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4035	Serranos	37452000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4036	Serro	39150000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4037	Sertãozinho	37565500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4038	Sete Cachoeiras	35802000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4039	Sete Lagoas	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4040	Setubinha	39688000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4041	Silva Campos	35645000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4042	Silva Xavier	35705000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4043	Silvano	38744000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4044	Silveira Carvalho	36873000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4045	Silveirânia	36185000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4046	Silvestre	36572000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4047	Silvianópolis	37560000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4048	Simão Campos	39432000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4049	Simão Pereira	36123000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4050	Simonésia	36930000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4051	Sobral Pinto	36782000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4052	Sobrália	35145000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4053	Soledade De Minas	37478000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4054	Sopa	39102000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4055	Tabajara	35333000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4056	Tabaúna	35206000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4057	Tabuão	37315000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4058	Tabuleiro	36165000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4059	Taiobeiras	39550000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4060	Taparuba	36953000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4061	Tapira	38185000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4062	Tapiraí	38980000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4063	Tapuirama	38417000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4064	Taquaraçu De Minas	33980000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4065	Taruaçu	36688000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4066	Tarumirim	35140000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4067	Tebas	36702000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4068	Teixeiras	36580000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4069	Tejuco	39484000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4070	Teófilo Otoni	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4071	Terra Branca	39393000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4072	Timóteo	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4073	Tiradentes	36325000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4074	Tiros	38880000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4075	Tobati	38953000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4076	Tocandira	39523000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4077	Tocantins	36512000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4078	Tocos Do Moji	37563000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4079	Toledo	37630000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4080	Tomás Gonzaga	35789000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4081	Tombos	36844000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4082	Topázio	39807000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4083	Torneiros	35665100	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4084	Torreões	36107000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4085	Três Corações	37410000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4086	Três Ilhas	36127000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4087	Três Marias	39205000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4088	Três Pontas	37190000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4089	Trimonte	36723000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4090	Tuiutinga	36528000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4091	Tumiritinga	35125000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4092	Tupaciguara	38430000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4093	Tuparecê	39623000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4094	Turmalina	39660000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4095	Turvolândia	37496000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4096	Ubá	36500000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4097	Ubaí	39320000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4098	Ubaporanga	35338000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4099	Ubari	36508000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4100	Uberaba	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4101	Uberlândia	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4102	Umburatiba	39878000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4103	Umbuzeiro	39439000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4104	Unaí	38610000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4105	União De Minas	38288000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4106	Uruana De Minas	38630000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4107	Urucânia	35380000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4108	Urucuia	39315000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4109	Usina Monte Alegre	37118000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4110	Vai-Volta	35142000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4111	Valadares	36101000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4112	Valão	39829000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4113	Vale Verde De Minas	35198500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4114	Valo Fundo	39213000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4115	Vargem Alegre	35199000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4116	Vargem Bonita	37922000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4117	Vargem Grande Do Rio Pardo	39535000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4118	Vargem Linda	35998000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4119	Varginha	00000000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4120	Varjão De Minas	38794000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4121	Várzea Da Palma	39260000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4122	Varzelândia	39450000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4123	Vau-Açu	35435000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4124	Vazante	38780000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4125	Vera Cruz De Minas	33680000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4126	Verdelândia	39458000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4127	Vereda Do Paraíso	39545000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4128	Veredas	38775000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4129	Veredinha	39663000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4130	Veríssimo	38150000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4131	Vermelho	36890000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4132	Vermelho Novo	35359000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4133	Vermelho Velho	35354000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4134	Vespasiano	33200000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4135	Viçosa	36570000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4136	Vieiras	36895000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4137	Vila Bom Jesus	38688000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4138	Vila Costina	35583000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4139	Vila Nova De Minas	39416000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4140	Vila Nova Dos Poções	39444000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4141	Vila Pereira	39862000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4142	Vilas Boas	36526000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4143	Virgem Da Lapa	39630000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4144	Virgínia	37465000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4145	Virginópolis	39730000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4146	Virgolândia	39715000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4147	Visconde Do Rio Branco	36520000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4148	Vista Alegre	36778000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9727	São Sebastião Da Grama	13790000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4150	Vitorinos	36264000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4151	Volta Grande	36720000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4152	Wenceslau Braz	37512000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4153	Zelândia	38176000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4154	Zito Soares	35383000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10170	Sucanga	39828000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10258	Chonin De Baixo	35109500	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10289	Taquaral De Guanhães	39743000	MG	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4575	Abaetetuba	68440000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4576	Abel Figueiredo	68527000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4577	Acará	68690000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4578	Afuá	68890000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4579	Agrópolis Bela Vista	68111000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4580	Água Azul Do Norte	68533000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4581	Água Fria	68559300	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4582	Alenquer	68200000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4583	Algodoal	68712000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4584	Almeirim	68230000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4585	Almoço	68608000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4586	Alta Pará	68112000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4587	Altamira	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4588	Alter Do Chão	68109000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4589	Alvorada	68191700	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4590	Americano	68792000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4591	Anajás	68810000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4592	Ananindeua	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4593	Anapu	68365000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4594	Antônio Lemos	68803000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4595	Apeú	68747000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4597	Apinagés	68519000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4598	Arapixuna	68128000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4599	Araquaim	68752000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4600	Arco-Íris	68631200	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4601	Areias	68495000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4602	Arumanduba	68235000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4603	Aruri	68191500	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4604	Aturiaí	68612000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4605	Augusto Corrêa	68610000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4606	Aurora Do Pará	68658000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4607	Aveiro	68150000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4608	Bagre	68475000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4609	Baião	68465000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4610	Bannach	68388000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4611	Barcarena	68445000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4612	Barreira Branca	68568000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4613	Barreira Dos Campos	68562000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4614	Barreiras	68192000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4615	Baturité	68892000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4616	Beja	68444000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4617	Bela Vista Do Caracol	68191600	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4618	Belém	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4619	Belterra	68143000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4620	Benevides	68795000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4621	Benfica	68797000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4622	Boa Esperança	68718000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9731	São Vicente	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4624	Boa Fé	68114000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4625	Boa Sorte	68549100	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4626	Boa Vista Do Iririteua	68751000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4627	Boim	68115000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4628	Bom Jardim	68713000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4629	Bom Jesus Do Tocantins	68525000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4630	Bonito	68645000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4631	Bragança	68600000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4632	Brasil Novo	68148000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4633	Brasília Legal	68160000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4634	Brejo Do Meio	68514200	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4635	Brejo Grande Do Araguaia	68521000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4636	Breu Branco	68488000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4637	Breves	68800000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4638	Bujaru	68670000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4639	Cachoeira Do Piriá	68617000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4640	Cachoeira Do Arari	68840000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4641	Cafezal	68723000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4642	Cairari	68453000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4643	Caju	68661000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4644	Câmara Do Marajó	68845000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4645	Cambuquira	68116000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4646	Cametá	68400000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4647	Camiranga	68624000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4648	Canaã Dos Carajás	68537000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4649	Capanema	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4650	Capitão Poço	68650000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4651	Caracará Do Arari	68848000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4652	Carajás	68516000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4653	Carapajó	68404000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4654	Caraparu	68791000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4655	Caratateua	68609000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4656	Caripi	68726000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4657	Carrazedo	68310000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4658	Castanhal	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4659	Castelo Dos Sonhos	68379200	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4660	Chaves	68880000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4661	Colares	68785000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4662	Conceição	68631400	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4663	Conceição Do Araguaia	68540000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4664	Concórdia Do Pará	68685000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4665	Condeixa	68862000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4666	Coqueiro	67000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4667	Cripurizão	68192200	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4668	Cripurizinho	68192300	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4669	Cuiú-Cuiú	68192400	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4670	Cumaru Do Norte	68398000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4671	Curionópolis	68523000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4672	Curralinho	68815000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4673	Curuá	68210000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4674	Curuaí	68125000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4675	Curuçá	68750000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4676	Curuçambaba	68406000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4677	Curumu	68805000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4678	Dom Eliseu	68633000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4679	Eldorado Dos Carajás	68524000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4680	Emboraí	68614000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4681	Espírito Santo Do Tauá	68787000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4682	Faro	68280000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4683	Fernandes Belo	68622000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4684	Flexal	68260000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4685	Floresta	68192500	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4686	Floresta Do Araguaia	68543000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4687	Garrafão Do Norte	68665000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4688	Goianésia Do Pará	68639000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4689	Gradaus	68394000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4690	Guajará-Açú	68672000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4691	Guajará-Miri	68692000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4692	Gurupá	68300000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4693	Gurupizinho	68631000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4694	Hidrelétrica Tucuruí	68464000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4695	Iataí	68379100	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4696	Icoaraci	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4697	Igarapé Da Lama	68117000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4698	Igarapé-Açu	68725000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4699	Igarapé-Miri	68430000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4700	Inanu	68118000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4701	Inhangapi	68770000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4702	Ipixuna Do Pará	68637000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4703	Irituia	68655000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4704	Itaituba	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4705	Itapixuna	68615000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4706	Itatupã	68320000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4707	Itupiranga	68580000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4708	Jacareacanga	68195000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4709	Jacundá	68590000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4710	Jaguarari	68693000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4711	Jamanxinzinho	68192600	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4712	Jambuaçu	68749000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4713	Jandiaí	68772000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4714	Japerica	68708000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4715	Joana Coeli	68412000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4716	Joana Peres	68468000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4717	Joanes	68864000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4718	Juabá	68402000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4719	Jubim	68866000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4720	Juruti	68170000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4721	Km 19	68714000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4722	Km 26	68715000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4723	Lauro Sodré	68753000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4724	Ligação Do Pará	68631600	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4725	Limoeiro Do Ajuru	68415000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4726	Mãe Do Rio	68675000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4727	Magalhães Barata	68722000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4728	Maiauata	68435000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4729	Manjeiro	68425000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4730	Marabá	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4731	Maracanã	68710000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4732	Marajoara	68549300	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4733	Marapanim	68760000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4734	Marituba	67200000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4735	Marudá	68768000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4736	Mata Geral	68549200	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4737	Matapiquara	68762000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4738	Medicilândia	68145000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4739	Melgaço	68490000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4740	Menino Deus Do Anapu	68433000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4741	Meruú	68438000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4742	Mirasselvas	68706000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4743	Miritituba	68191400	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4744	Mocajuba	68420000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4745	Moiraba	68408000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4746	Moju	68450000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4747	Monsaras	68868000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4748	Monte Alegre	68220000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4749	Monte Alegre Do Mau	68764000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4750	Monte Dourado	68240000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4751	Morada Nova	68514300	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4752	Mosqueiro	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4753	Muaná	68825000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4754	Mujuí Dos Campos	68120000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4755	Murajá	68754000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4756	Murucupi	68448000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4757	Murumuru	68514400	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4758	Muta	68835000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4759	Mutucal	68755000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4760	Nazaré De Mocajuba	68756000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4761	Nazaré Dos Patos	68462000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4762	Nova Esperança Do Piriá	68618000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4763	Nova Ipixuna	68585000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4764	Nova Mocajuba	68604000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4765	Nova Timboteua	68730000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4766	Novo Planalto	68549400	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4767	Novo Progresso	68193000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4768	Novo Repartimento	68473000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4769	Núcleo Urbano Quilômetro 30	68192700	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4770	Óbidos	68250000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4771	Oeiras Do Pará	68470000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4772	Oriximiná	68270000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4773	Osvaldilândia	68549500	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4774	Otelo	66000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4775	Ourém	68640000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4776	Ourilândia Do Norte	68390000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4777	Outeiro	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4778	Pacajá	68485000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4779	Pacoval	68135000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4780	Palestina Do Pará	68535000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4781	Paragominas	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4782	Paratins	68514500	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4783	Parauapebas	68515000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4784	Pau D`arco	68545000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4785	Pedreira	68478000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4786	Peixe-Boi	68734000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4787	Penhalonga	68781000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4788	Perseverança	68776000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4789	Pesqueiro	68875000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4790	Piabas	68607000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4791	Piçarra	68575000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9728	São Sebastião Da Serra	17390000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4793	Pinhal	68155000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4794	Piraquara	68119000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4795	Piriá	68818000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4796	Placas	68138000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4797	Ponta De Pedras	68830000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4798	Ponta De Ramos	68758000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4799	Portel	68480000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4800	Porto De Moz	68330000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4801	Porto Salvo	68782000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4802	Porto Trombetas	68275000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4803	Prainha	68130000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4804	Primavera	68707000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4805	Quatipuru	68709000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4806	Quatro Bocas	68682000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4807	Redenção	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4808	Remansão	68461000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4809	Repartimento	68463000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4810	Rio Maria	68530000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4811	Rio Vermelho	68559500	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4812	Riozinho	68191300	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4813	Rondon Do Pará	68638000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4814	Rurópolis	68165000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4815	Salinópolis	68721000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4816	Salvaterra	68860000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4817	Santa Bárbara Do Pará	68798000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4818	Santa Cruz Do Arari	68850000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4819	Santa Isabel Do Pará	68790000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4820	Santa Luzia Do Pará	68644000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4821	Santa Maria	68716000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4822	Santa Maria Das Barreiras	68565000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4823	Santa Maria Do Pará	68738000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4824	Santa Rosa Da Vigia	68783000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4825	Santa Terezinha	68747500	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4826	Santana Do Araguaia	68560000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4827	Santarém	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4828	Santarém Novo	68720000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4829	Santo Antônio	68549000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4830	Santo Antônio Do Tauá	68786000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4831	São Caetano De Odivelas	68775000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4832	São Domingos Do Araguaia	68520000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4833	São Domingos Do Capim	68635000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4834	São Félix Do Xingu	68380000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4835	São Francisco	68559600	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4836	São Francisco Da Jararaca	68828000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4837	São Francisco Do Pará	68748000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4838	São Geraldo Do Araguaia	68570000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4839	São João Da Ponta	68774000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4840	São João De Pirabas	68719000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4841	São João Do Acangata	68482000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4842	São João Do Araguaia	68518000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4843	São João Do Piriá	68631800	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4844	São João Dos Ramos	68778000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4845	São Joaquim Do Tapará	68124000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4846	São Jorge	68126000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4847	São José Do Gurupi	68623000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4848	São José Do Piriá	68621000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4849	São Luiz Do Tapajós	68190000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4850	São Miguel Do Guamá	68660000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4851	São Miguel Dos Macacos	68808000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4852	São Pedro De Viseu	68428000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4853	São Pedro Do Capim	68636000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4854	São Raimundo De Borralhos	68788000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4855	São Raimundo Do Araguaia	68522000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4856	São Raimundo Dos Furtados	68410000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4857	São Roberto	68711000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4858	São Sebastião Da Boa Vista	68820000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4859	São Sebastião De Viçosa	68885000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4860	Sapucaia	68548000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4861	Senador José Porfírio	68360000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4862	Serra Pelada	68514000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4863	Soure	68870000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4864	Tailândia	68695000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4865	Tatuteua	68717000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4866	Tauari	68705000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4867	Tauarizinho	68735000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4868	Tentugal	68642000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4869	Terra Alta	68773000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4870	Terra Santa	68285000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4871	Tijoca	68606000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4872	Timboteua	68732000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4873	Tomé-Açú	68680000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4874	Tracuateua	68647000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4875	Trairão	68198000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4876	Tucumã	68385000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4877	Tucuruí	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4878	Ulianópolis	68632000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4879	Uruará	68140000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4880	Urucuri	68663000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4881	Urucuriteua	68662000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4882	Val-De-Cães	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4883	Veiros	68350000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4884	Vigia	68780000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4885	Vila Do Carmo Do Tocantins	68409000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4886	Vila Dos Cabanos	68447000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4887	Vila França	68121000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4888	Vila Goreth	68122000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4889	Vila Isol	68191200	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4890	Vila Nova	68779000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4891	Vila Planalto	68191000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4892	Vila Santa Fé	68514100	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4893	Vila Socorro	68123000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4894	Vilarinho Do Monte	68340000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4895	Viseu	68620000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4896	Vista Alegre	68759000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4897	Vista Alegre Do Pará	68765000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4898	Vitória Do Xingu	68383000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4899	Xinguara	00000000	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4900	Xinguarinha	68559200	PA	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4901	Água Branca	58748000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4902	Aguiar	58778000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4903	Alagoa Grande	58388000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4904	Alagoa Nova	58125000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4905	Alagoinha	58390000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4906	Alcantil	58460000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4907	Algodão De Jandaíra	58399000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4908	Alhandra	58320000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4909	Amparo	58548000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4910	Aparecida	58823000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4911	Araçagi	58270000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4912	Arara	58396000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4913	Araruna	58233000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4914	Areia	58397000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4915	Areia De Baraúnas	58732000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4916	Areial	58140000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4917	Areias	58916000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4918	Aroeiras	58400000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4919	Riachão Do Bacamarte	58382000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4920	Assunção	58685000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4921	Baía Da Traição	58295000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4922	Balanços	58937000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4923	Bananeiras	58220000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4924	Baraúna	58188000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4925	Barra De Santa Rosa	58170000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4926	Barra De Santana	58458000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4927	Barra De São Miguel	58470000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4928	Barra Do Camaratuba	58293000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4929	Bayeux	00000000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4930	Belém	58255000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4931	Belém Do Brejo Do Cruz	58895000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4932	Bernardino Batista	58922000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4933	Boa Ventura	58993000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4934	Boa Vista	58123000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4935	Bom Jesus	58930000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4936	Bom Sucesso	58887000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9729	São Silvestre De Jacareí	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4938	Bonito De Santa Fé	58960000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4939	Boqueirão	58450000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4940	Borborema	58394000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4941	Brejo Do Cruz	58890000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4942	Brejo Dos Santos	58880000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4943	Caaporã	58326000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4944	Cabaceiras	58480000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4945	Cabedelo	58310000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4946	Cachoeira	58205000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4947	Cachoeira Dos Índios	58935000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4948	Cachoeirinha	58983000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4949	Cacimba De Areia	58730000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4950	Cacimba De Dentro	58230000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4951	Cacimbas	58698000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4952	Caiçara	58253000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4953	Cajazeiras	58900000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4954	Cajazeirinhas	58855000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4955	Caldas Brandão	58350000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4956	Camalaú	58530000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4957	Campina Grande	00000000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4958	Campo Alegre	58813000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4959	Campo Grande	58362000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4960	Camurupim	58299000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4961	Capim	58287000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4962	Caraúbas	58595000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4963	Cardoso	58973000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4964	Carrapateira	58945000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4965	Casinha Do Homem	58826000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4966	Casserengue	58238000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4967	Catingueira	58715000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4968	Catolé	58114000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4969	Catolé Do Rocha	58884000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4970	Caturité	58455000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4971	Cepilho	58397500	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4972	Conceição	58970000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4973	Condado	58714000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4974	Conde	58322000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4975	Congo	58535000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4976	Coremas	58770000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4977	Coronel Maia	58885000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4978	Coxixola	58588000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4979	Cruz Do Espírito Santo	58337000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4980	Cubati	58167000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4981	Cuité	58175000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4982	Cuité De Mamanguape	58289000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4983	Cuitegi	58208000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4984	Cupissura	58327000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4985	Curral De Cima	58291000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4986	Curral Velho	58990000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4987	Damião	58173000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4988	Desterro	58695000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4989	Diamante	58994000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4990	Dona Inês	58228000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4991	Duas Estradas	58265000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4992	Emas	58763000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4993	Engenheiro Ávidos	58905000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4994	Esperança	58135000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4995	Fagundes	58430000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4996	Fátima	58936000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4997	Fazenda Nova	58918000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4998	Forte Velho	58304300	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	4999	Frei Martinho	58195000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5000	Gado Bravo	58405000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5001	Galante	58110000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5002	Guarabira	58200000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5003	Guarita	58364000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5004	Gurinhém	58356000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5005	Gurjão	58670000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5006	Ibiara	58980000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5007	Igaracy	58775000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5008	Imaculada	58745000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5009	Ingá	58380000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5010	Itabaiana	58360000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5011	Itajubatiba	58718000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5012	Itaporanga	58780000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5013	Itapororoca	58275000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5014	Itatuba	58378000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5015	Jacaraú	58278000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5016	Jericó	58830000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5017	João Pessoa	00000000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5018	Juarez Távora	58387000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5019	Juazeirinho	58660000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5020	Junco Do Seridó	58640000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5021	Juripiranga	58330000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5022	Juru	58750000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5023	Lagoa	58835000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5024	Lagoa De Dentro	58250000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9732	Sapezal	19720000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5026	Lagoa Seca	58117000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5027	Lastro	58820000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5028	Lerolândia	58304400	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5029	Livramento	58690000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5030	Logradouro	58254000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5031	Lucena	58315000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5032	Mãe D`água	58740000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5033	Maia	58222000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5034	Malta	58713000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5035	Mamanguape	58280000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5036	Manaíra	58995000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5037	Marcação	58294000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5038	Mari	58345000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5039	Marizópolis	58819000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5040	Massaranduba	58120000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5041	Mata Limpa	58397600	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5042	Mata Virgem	58425000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5043	Mataraca	58292000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5044	Matinhas	58128000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5045	Mato Grosso	58832000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5046	Maturéia	58737000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5047	Melo	58176000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5048	Mogeiro	58375000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5049	Montadas	58145000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5050	Monte Horebe	58950000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5051	Monteiro	58500000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5052	Montevidéu	58975000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5053	Mulungu	58354000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5054	Muquém	58397700	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5055	Natuba	58410000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5056	Nazaré	58152000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5057	Nazarezinho	58817000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5058	Nossa Senhora Do Livramento	58304000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5059	Nova Floresta	58178000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5060	Nova Olinda	58798000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5061	Nova Palmeira	58184000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5062	Núcleo N 2	58814500	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5063	Núcleo N 3	58814600	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5064	Odilândia	58304600	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5065	Olho D`água	58760000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5066	Olivedos	58160000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5067	Ouro Velho	58560000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5068	Parari	58575000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5069	Passagem	58734000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5070	Patos	00000000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5071	Paulista	58860000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5072	Pedra Branca	58790000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5073	Pedra Lavrada	58180000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5074	Pedras De Fogo	58328000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5075	Pedro Régis	58273000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5076	Pelo Sinal	58996000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5077	Pereiros	58814700	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5078	Piancó	58765000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5079	Picuí	58187000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5080	Pilar	58338000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5081	Pilões	58393000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5082	Pilõezinhos	58210000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5083	Pindurão	58533000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5084	Pio X	58545000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5085	Pirauá	58415000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5086	Pirpirituba	58213000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5087	Pitanga De Estrada	58286000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5088	Pitimbu	58324000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5089	Pocinhos	58150000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5090	Poço Dantas	58933000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5091	Poço De José De Moura	58908000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5092	Pombal	58840000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5093	Porteirinha De Pedra	58114400	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5094	Prata	58550000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5095	Princesa Isabel	58755000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5096	Puxinanã	58115000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5097	Queimadas	58440000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5098	Quixabá	58733000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5099	Quixadá	58917000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5100	Remígio	58398000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5101	Riachão	58235000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5102	Riachão Do Poço	58348000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5103	Riacho De Santo Antônio	58465000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5104	Riacho Dos Cavalos	58870000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5105	Ribeira	58304700	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5106	Rio Tinto	58297000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5107	Rua Nova	58257000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5108	Salema	58298000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5109	Salgadinho	58650000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5110	Salgado De São Félix	58370000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5111	Santa Cecília De Umbuzeiro	58428000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5112	Santa Cruz	58824000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5113	Santa Gertrudes	58709000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5114	Santa Helena	58925000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5115	Santa Inês	58978000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5116	Santa Luzia	58600000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5117	Santa Luzia Do Cariri	58582000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5118	Santa Maria	58525000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5119	Santa Rita	00000000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9733	Sarapuí	18225000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5121	Santa Teresinha	58720000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5122	Santa Terezinha	58114600	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5123	Santana De Mangueira	58985000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5124	Santana Dos Garrotes	58795000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5125	Santarém	58928000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5126	Santo André	58675000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5127	São Bento	58865000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5128	São Bentinho	58857000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5129	São Domingos De Pombal	58853000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5130	São Domingos Do Cariri	58485000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5131	São Francisco	58818000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5132	São Gonçalo	58814000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5133	São João Bosco	58916500	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5134	São João Do Cariri	58590000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5135	São João Do Rio Do Peixe	58910000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5136	São João Do Tigre	58520000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5137	São José Da Lagoa Tapada	58815000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5138	São José Da Mata	58113000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5139	São José De Caiana	58784000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5140	São José De Espinharas	58723000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5141	São José De Marimbas	58938000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5142	São José De Piranhas	58940000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5143	São José De Princesa	58758000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5144	São José Do Bonfim	58725000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5145	São José Do Brejo Do Cruz	58893000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5146	São José Do Sabugi	58610000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5147	São José Dos Cordeiros	58570000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5148	São José Dos Ramos	58339000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5149	São Mamede	58625000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5150	São Miguel De Taipu	58334000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5151	São Pedro	58828000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5152	São Sebastião De Lagoa De Roça	58119000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5153	São Sebastião Do Umbuzeiro	58510000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5154	Sapé	58340000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5155	Seridó	58159000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5156	São Vicente Do Seridó	58158000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5157	Serra Branca	58580000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5158	Serra Da Raiz	58260000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5159	Serra Grande	58955000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5160	Serra Redonda	58385000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5161	Serraria	58395000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5162	Sertãozinho	58268000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5163	Sobrado	58342000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5164	Solânea	58225000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5165	Soledade	58155000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5166	Sossego	58177000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5167	Sousa	00000000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5168	Sucuru	58586000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5169	Sumé	58540000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5170	Campo De Santana	58240000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5172	Tambauzinho	58304800	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5173	Taperoá	58680000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5174	Tavares	58753000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5175	Teixeira	58735000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5176	Tenório	58665000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5177	Triunfo	58920000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5178	Uiraúna	58915000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5179	Umari	58913000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5180	Umbuzeiro	58420000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5181	Várzea	58620000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5182	Várzea Comprida	58850000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5183	Várzea Nova	58304500	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5184	Vazante	58997000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5185	Vieirópolis	58822000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5186	Vista Serrana	58710000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5187	Zabelê	58515000	PB	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5783	Abapã	84185000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5784	Abatiá	86460000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5785	Acampamento Das Minas	84277500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5786	Açungui	83550000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5787	Adhemar De Barros	87895000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5788	Adrianópolis	83490000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5789	Agostinho	84194200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5790	Água Azul	83770000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5791	Água Boa	87145000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5792	Água Branca	85139500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5794	Água Mineral	85126000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5795	Água Vermelha	84197700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5796	Agudos Do Sul	83850000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5797	Alecrim	84284000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5798	Alexandra	83250000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5799	Almirante Tamandaré	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5800	Altamira Do Paraná	85280000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5801	Altaneira	87108000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5802	Alto Alegre	86695000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9734	Sarutaiá	18840000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5804	Alto Alegre Do Iguaçu	85794000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5805	Alto Amparo	84277700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5806	Alto Do Amparo	84305000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5807	Alto Pará	85823950	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5808	Alto Paraná	87750000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5809	Alto Piquiri	87580000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5810	Alto Porã	86875000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5811	Alto Sabiá	85138400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5812	Alto Santa Fé	85931000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5813	Alto São João	87323000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5814	Altônia	87550000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5815	Alvorada Do Iguaçu	85872000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5816	Alvorada Do Sul	86150000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5817	Amaporã	87850000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5818	Amorinha	84910000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5819	Ampére	85640000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5820	Anahy	85425000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5821	Andirá	86380000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5822	Andorinhas	84194500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5823	Angai	84538000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5824	Ângulo	86755000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5825	Antas	85322000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9735	Sebastianópolis Do Sul	15180000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5827	Antonina	83370000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5828	Antônio Brandão De Oliveira	86213000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5829	Antônio Olinto	83980000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5830	Anunciação	85654000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5831	Aparecida Do Oeste	87455000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5832	Apiaba	84433000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5833	Apucarana	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5834	Aquidaban	86995000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5835	Aranha	83419000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5836	Arapongas	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5837	Arapoti	84990000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5838	Arapuã	86884000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5839	Arapuan	87385000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5840	Ararapira	83393000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5841	Araruna	87260000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5842	Araucária	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5843	Areia Branca Dos Assis	83810000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5844	Areias	84198400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5845	Aricanduva	86719000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5846	Ariranha Do Ivaí	86880000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5847	Aroeira	85822800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5848	Arquimedes	85824750	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5849	Assaí	86220000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5850	Assis Chateaubriand	85935000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5851	Astorga	86730000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5852	Atalaia	87630000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5853	Aurora Do Iguaçu	85878000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5854	Bairro Cachoeira	85137600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5855	Bairro Do Felisberto	84277300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5856	Bairro Limoeiro	86102000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5857	Balsa Nova	83650000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5858	Bandeirantes	86360000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5859	Bandeirantes D`oeste	87368000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5860	Banhado	85138700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5861	Barão De Lucena	87610000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5862	Barbosa Ferraz	86960000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5863	Barra Bonita	85609100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9736	Serra Azul	14230000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5865	Barra Do Jacaré	86385000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5866	Barra Grande	85584000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9737	Serra Negra	13930000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9738	Serrana	14150000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5871	Barra Santa Salete	85265000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5872	Barracão	85700000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5873	Barras	87316600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5874	Barreiro	85822950	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9739	Sertãozinho	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9740	Sete Barras	11910000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5877	Barreiro Das Frutas	87315600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5878	Barreiros	86817500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5879	Barrinha	84197200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5880	Barro Preto	85822700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9741	Severínia	14735000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9742	Silvânia	15999500	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5883	Bateias	83648000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5884	Baulândia	85613000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5885	Bela Vista	85406000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9743	Silveiras	12690000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5887	Bela Vista Do Caroba	85745000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5888	Bela Vista Do Ivaí	86953000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5889	Bela Vista Do Paraíso	86130000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5890	Bela Vista Do Piquiri	87347000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5891	Bela Vista Do Tapiracui	87440000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5892	Bentópolis	86625000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5893	Bernardelli	87805000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5894	Betaras	83531000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5895	Bituruna	84640000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5896	Boa Esperança	87390000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9744	Simões	16510000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5898	Boa Esperança Do Iguaçu	85680000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5899	Boa Ventura De São Roque	85225000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5900	Boa Vista	83649000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9745	Simonsen	15515000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9746	Socorro	13960000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9747	Sodrélia	18910000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9748	Solemar	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5905	Boa Vista Da Aparecida	85780000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5906	Bocaina	84125200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5907	Bocaiúva Do Sul	83450000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5908	Bom Jardim Do Sul	84465000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5909	Bom Jesus Do Sul	85708000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5910	Bom Progresso	86728000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5911	Bom Retiro	85823700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9749	Sorocaba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9750	Sousas	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9751	Sud Mennucci	15360000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5915	Bom Sucesso	86940000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9752	Suinana	15437000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5917	Bom Sucesso Do Sul	85515000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5918	Borda Do Campo	83425000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5920	Borman	85405000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5921	Borrazópolis	86925000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5922	Botuquara	84126600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5923	Bourbonia	86963000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5924	Braganey	85430000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5925	Bragantina	85937000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5926	Brasilândia Do Sul	87595000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5927	Bugre	83660000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5928	Bulcão	84193800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5929	Cabrito	87729800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5930	Cacatu	83375000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5932	Cachoeira De Cima	83380000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5933	Cachoeira De São José	83181000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5934	Cachoeira Do Espírito Santo	86415000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5935	Cachoeirinha	85139300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9753	Sumaré	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5937	Cadeadinho	84518000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9754	Sussui	19975000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5938	Caetano Mendes	84315000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5939	Cafeara	86640000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5940	Cafeeiros	87405000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5941	Cafelândia	85415000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5942	Cafezal Do Sul	87565000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5943	Caitá	83920000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5945	Califórnia	86820000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5946	Calógeras	84995000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5947	Cambará	86390000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5948	Cambé	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5949	Cambiju	84127700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5950	Cambira	86890000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5951	Campestrinho	83729900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5952	Campina	83649350	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9755	Suzanápolis	15380000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9756	Suzano	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5955	Campina Da Lagoa	87345000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5956	Campina Do Miranguava	83154000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5957	Campina Do Simão	85148000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5958	Campina Dos Furtados	83161000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5959	Campina Grande Do Sul	83430000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5960	Campinas	83649900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5961	Campo Bonito	85450000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5962	Campo Do Meio	84128400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5963	Campo Do Tenente	83870000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5964	Campo Largo	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5965	Campo Largo Da Roseira	83183000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5966	Campo Magro	83535000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5967	Campo Mourão	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5968	Cândido De Abreu	84470000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5969	Candói	85140000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5970	Canela	85612000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5971	Cantagalo	85160000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5972	Canzianópolis	85735000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5973	Capanema	85760000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5974	Capão Alto	84196000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9757	Tabajara	16855000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5976	Capão Bonito	85138500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5977	Capão Da Lagoa	85120000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5978	Capão Grande	84127500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5979	Capão Rico	85121000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5980	Capitão Leônidas Marques	85790000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5981	Capivara	83534000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5982	Capoeirinha	84199400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5983	Cara Pintado	85106000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5984	Cará-Cará	84126900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5985	Carajá	85837000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5986	Carambeí	84145000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5987	Caramuru	86199600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5988	Caratuva	84998000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5989	Carazinho	84127200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5990	Carbonera	87483000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5991	Carlópolis	86420000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5992	Casa Nova	84194400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5993	Cascatinha	86199400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5994	Cascavel	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5995	Castro	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5996	Catanduvas	85470000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9758	Tabapuã	15880000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5998	Catanduvas Do Sul	83740000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5999	Catarinenses	87724000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6000	Caxambu	84194300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6001	Centenário	84126200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6002	Centenário Do Sul	86630000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6003	Central Lupion	85823600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6004	Centralito	85823500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6005	Centro Novo	85754000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6006	Cerne	83649450	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6007	Cerrado Grande	84126400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6008	Cerro Azul	83570000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6009	Cerro Velho	84127300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6010	Céu Azul	85840000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6011	Chopinzinho	85560000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6012	Cianorte	87200000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6013	Cidade Gaúcha	87820000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6014	Cintra Pimentel	87975000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6015	Clevelândia	85530000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6016	Coitinho	85137500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6017	Colombo	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6018	Colônia Acioli	83151000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6019	Colônia Castelhanos	83165000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6020	Colônia Castrolânda	84196200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6021	Colônia Centenário	85822550	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6022	Colônia Cristina	83729000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6023	Colônia Dom Carlos	85514100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6024	Colônia Esperança	85822900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6025	Colônia General Carneiro	84662000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6026	Colônia Iapó	84193500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6027	Colônia Melissa	85822650	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6028	Colônia Murici	83185000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6029	Colônia Padre Paulo	83855000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6030	Colônia Pereira	83251850	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6031	Colônia Santos Andrade	83162000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6032	Colônia São José	85823650	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6033	Colônia Sapucaí	85822750	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6034	Colônia Saúde	86118000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6035	Colônia Tapera	84127100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6036	Colorado	86690000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6037	Comur	87870000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6039	Conceição	84196500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6040	Conchas Velhas	84126000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6041	Conciolândia	85743000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6042	Congonhas	86305000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6043	Congonhinhas	86320000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6044	Conselheiro Mairinck	86480000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6045	Conselheiro Zacarias	86440000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6046	Contenda	83730000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6047	Copacabana Do Norte	87195000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6048	Corbélia	85420000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6049	Cornélio Procópio	86300000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6050	Coronel Domingos Soares	85557000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6051	Coronel Firmino Martins	85536000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6052	Coronel Vivida	85550000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6053	Correia De Freitas	86816000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6054	Corumbataí Do Sul	86970000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6055	Corvo	85111000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6056	Costeira	83729700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6057	Covó	85545000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6058	Coxilha Rica	85582000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6059	Cristo Rei	85763000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9759	Tabatinga	14910000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6061	Cruz Machado	84620000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6062	Cruzeiro Do Iguaçu	85598000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6063	Cruzeiro Do Norte	86285000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6064	Cruzeiro Do Oeste	87400000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6065	Cruzeiro Do Sul	87650000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6066	Cruzmaltina	86855000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6067	Cunhaporanga	84193900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6068	Curitiba	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6069	Curiúva	84280000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6070	Curucaca	85138200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6071	Deputado José Afonso	87726000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6072	Despique	83158000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6074	Dez De Maio	85920000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6076	Diamante D`oeste	85896000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6077	Diamante Do Norte	87990000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6078	Diamante Do Sul	85408000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6079	Doce Grande	83843000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6080	Dois Irmãos	85571000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9760	Taboão Da Serra	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6082	Dois Marcos	85926550	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6083	Dois Vizinhos	85660000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6084	Dom Rodrigo	83649650	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6085	Dorizon	84574000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6086	Douradina	87485000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6087	Doutor Antônio Paranhos	85579000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6088	Doutor Camargo	87155000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6089	Doutor Ernesto	85926500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6090	Doutor Oliveira Castro	85985000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6091	Doutor Ulysses	83590000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6092	Eduardo Xavier Da Silva	84210000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6093	Emboguaçu	83251250	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6094	Emboque	83319600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9761	Taciba	19590000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6096	Encantado D`oeste	85936000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6097	Encruzilhada	85138900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9762	Taguaí	18890000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6099	Enéas Marques	85630000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6100	Engenheiro Beltrão	87270000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6101	Entre Rios	85108000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6102	Entre Rios Do Oeste	85988000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6103	Esperança Do Norte	86155000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6104	Esperança Nova	87545000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6105	Espigão Alto Do Iguaçu	85465000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6106	Espírito Santo	86106000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6107	Estação General Lúcio	83729500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6108	Estação Roça Nova	83319000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6109	Europa	83251400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6110	Euzébio De Oliveira	84912000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6111	Faisqueira	84279800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6112	Farol	87325000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6113	Faxina	83163000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6114	Faxinal	86840000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6115	Faxinal Do Céu	85180000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6116	Faxinal Dos Elias	85124000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6117	Faxinal Santa Cruz	84128600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6118	Fazenda Do Brigadeiro	85824850	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6119	Fazenda Dos Barbosas	85137200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6120	Fazenda Jangada	85824800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6121	Fazenda Rio Grande	83820000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6122	Fazenda Salmo 23	87523700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6123	Fazendinha	85609700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6124	Felpudo	83649700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6125	Fênix	86950000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6126	Fernandes Pinheiro	84535000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6127	Fernão Dias	86765000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6128	Ferraria	83644000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6129	Ferreiras	84125700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6130	Figueira	84285000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6131	Figueira Do Oeste	87277000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6132	Fiusas	85123000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6133	Flor Da Serra	85886000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6134	Flor Da Serra Do Sul	85618000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6135	Floraí	87185000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6136	Floresta	87120000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6137	Florestópolis	86165000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6138	Floriano	87105000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6139	Flórida	86780000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6140	Florópolis	87668000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6141	Fluviópolis	83930000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6142	Formigone	87523300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6143	Formosa Do Oeste	85830000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6144	Foz Do Iguaçu	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6145	Foz Do Jordão	85145000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6146	Francisco Alves	87570000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6147	Francisco Beltrão	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6148	Francisco Frederico Teixeira Guimarães	85556000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6149	Frei Timóteo	86215000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6150	Fueros	85116000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6151	Fundão	84194900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6152	Gamadinho	85824600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6153	Gamela	83156000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6154	Gaúcha	85609500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6155	Gavião	85325000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6157	General Carneiro	84660000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6158	General Osório	85927550	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6159	Geremia Lunardelli	87333000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6160	Godoy Moreira	86938000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6161	Goioerê	87360000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6162	Goioxim	85162000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6163	Góis	85103000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6164	Gonçalves Júnior	84507000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6165	Graciosa	87722000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6166	Grandes Rios	86845000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6167	Guaiporã	87567000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6168	Guaíra	85980000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6169	Guairaçá	87880000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9763	Taiaçu	14725000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9764	Taiacupeba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6172	Guajuvira	83725000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6173	Guamiranga	84435000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6174	Guamirim	84510000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6175	Guapirama	86465000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6176	Guaporé	85407000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6177	Guaporema	87810000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6178	Guará	85110000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6179	Guaraci	86620000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6180	Guaragi	84120000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6181	Guaraituba	83418000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6182	Guarani	85380000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6183	Guaraniaçu	85400000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6184	Guarapuava	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6185	Guarapuavinha	85609150	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6186	Guaraqueçaba	83390000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6187	Guararema	84193300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6188	Guaratuba	83280000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6189	Guaraúna	84534000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6190	Guaravera	86120000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6191	Guardamoria	84277800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6192	Harmonia	84275000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6193	Herculândia	87527000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6194	Herval Grande	85326000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6195	Herveira	87348000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9765	Taiúva	14720000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6197	Hidrelétrica Itaipu	85873000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6198	Honório Serpa	85548000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6199	Iarama	87523600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6200	Ibaiti	84900000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6201	Ibema	85478000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6202	Ibiaci	86143000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6203	Ibiporã	86200000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6204	Içara	86744000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6205	Icaraíma	87530000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6206	Icatu	87935000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6207	Igrejinha	85127000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6208	Iguaraçu	86750000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6209	Iguatemi	87103000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6210	Iguatu	85423000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6211	Iguiporã	85972000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6212	Ilha Do Mel	83251000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6213	Ilha Dos Valadares	83252000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6214	Imbaú	84250000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6215	Imbauzinho	84279300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6216	Imbituva	84430000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6217	Inácio Martins	85155000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6218	Inajá	87670000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6219	Independência	85514600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6220	Indianópolis	87210000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6221	Inspetor Carvalho	83155000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6222	Invernada	84197900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6223	Invernadinha	85129000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6224	Iolópolis	85578000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6225	Ipiranga	84450000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9766	Talhado	15102000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9767	Tambaú	13710000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6228	Iporã	87560000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6229	Iracema Do Oeste	85833000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6230	Irapuan	87267000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6231	Irati	84500000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6232	Irerê	86115000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6233	Iretama	87280000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6234	Itaguajé	86670000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6235	Itaiacoca	84110000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6236	Itaipulândia	85880000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6237	Itambaracá	86375000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6238	Itambé	87175000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9768	Tanabi	15170000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6240	Itapanhacanga	84196900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6241	Itapara	84515000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6242	Itapejara D`oeste	85580000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6243	Itaperuçu	83560000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6244	Itaqui	83649800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6245	Itaúna Do Sul	87980000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6246	Itinga	83251350	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6247	Ivaí	84460000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6248	Ivailândia	87275000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6249	Ivaiporã	86870000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6250	Ivaitinga	87620000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6251	Ivaté	87525000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6252	Ivatuba	87130000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6253	Jaborandi	87523400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6254	Jaboti	84930000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6255	Jaboticabal	84128000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6256	Jaburu	84126500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6257	Jacaré	85609450	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6258	Jacarezinho	86400000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6259	Jaciaba	84420000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6260	Jacutinga	85607000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9769	Tapinas	14907000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9770	Tapiraí	18180000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9771	Tapiratiba	13760000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6264	Jaguapitã	86610000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6265	Jaguariaíva	84200000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6266	Jandaia Do Sul	86900000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6267	Jangada	87569000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6268	Jangada Do Sul	84664000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6269	Janiópolis	87380000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6270	Japira	84920000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6271	Japurá	87225000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6272	Jaracatiá	87364000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6273	Jardim	86107000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6274	Jardim Alegre	86860000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6275	Jardim Olinda	87690000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6276	Jardim Paredão	87552000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6278	Jardinópolis	86335000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6279	Jataizinho	86210000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6280	Javacaé	83649400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6281	Jesuítas	85835000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6283	Joaquim Távora	86455000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6284	Jordãozinho	85138600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6285	José Lacerda	84330000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6286	Juciara	86923000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6287	Jundiaí Do Sul	86470000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6288	Juranda	87355000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6289	Jussara	87230000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6290	Juvinópolis	85821000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6291	Kaloré	86920000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6292	Km 30	84279100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6293	Lagoa	84193100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9772	Taquaral	14765000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6295	Lagoa Bonita	84196400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6296	Lagoa Dos Ribas	84197300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6297	Lagoa Dourada	84127800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6298	Lagoa Seca	85137400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6299	Lagoa Verde	83848000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6300	Lagoinha	84279200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6301	Lajeado	84198700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9773	Taquaritinga	15900000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9774	Taquarituba	18740000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6304	Lajeado Bonito	84360000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6305	Lajeado Grande	85132000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6306	Lambari	84295000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6307	Lapa	83750000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6308	Laranja Azeda	84277400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6309	Laranjal	85275000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6310	Laranjeiras Do Sul	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6311	Lavra	83649300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6312	Lavrinha	85102000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9775	Taquarivaí	18425000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6314	Leópolis	86330000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6315	Lerroville	86123000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6316	Lidianópolis	86865000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6317	Lindoeste	85826000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6318	Linha Giacomini	85926650	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6319	Loanda	87900000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6320	Lobato	86790000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6321	Londrina	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6322	Lopei	85927800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6323	Lovat	87520000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6324	Luar	86931000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6325	Luiziana	87290000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6326	Lunardelli	86935000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6327	Lupionópolis	86635000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6328	Macaco	84198600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6329	Macucos	85134000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6330	Mairá	86638000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6331	Maitá	85137100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6332	Mallet	84570000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6333	Malu	87245000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6334	Mamborê	87340000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6335	Mandaçaia	85138000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6336	Mandaguaçu	87160000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6337	Mandaguari	86975000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6338	Mandiocaba	87729400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6339	Mandirituba	83800000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6340	Manfrinópolis	85628000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6341	Mangueirinha	85540000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6342	Manoel Ribas	85260000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6343	Marabá	87458000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6344	Maracanã	84197500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6345	Marajó	85412000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6346	Maravilha	86110000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9776	Tarabai	19210000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6348	Marcelino	83168000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6349	Marcionópolis	85720000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6350	Marechal Cândido Rondon	85960000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6351	Margarida	85974000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6352	Maria Helena	87480000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6353	Maria Luiza	83251750	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6354	Marialva	86990000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6355	Mariental	83760000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6356	Marilândia Do Sul	86825000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6357	Marilena	87960000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6358	Marilu	87282000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6359	Mariluz	87470000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6360	Marimbondo	84943000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6361	Maringá	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6362	Mariópolis	85525000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6363	Maripá	85955000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6364	Maristela	87753000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6365	Mariza	86947000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6366	Marmelândia	85778000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6367	Marmeleiro	85615000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6368	Marquês De Abrantes	83485000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6369	Marquinho	85168000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6370	Marrecas	85112000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6371	Martins	83729800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6372	Marumbi	86910000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6373	Matelândia	85887000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6374	Matinhos	83260000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9777	Tarumã	19820000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6376	Mato Queimado	84127400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6377	Mato Rico	85240000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6378	Mauá Da Serra	86828000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6379	Medianeira	85884000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6380	Meia-Lua	83533000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6381	Memória	85927700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6382	Mendeslândia	86685000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6383	Mercedes	85998000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6384	Mirador	87840000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6385	Miranda	84279600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6386	Mirante Do Piquiri	87590000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6387	Miraselva	86615000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6388	Missal	85890000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6389	Monjolinho	84370000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6390	Monte Real	86435000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6391	Moreira Sales	87370000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6392	Morretes	83350000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6393	Morro Alto	83157000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6394	Morro Inglês	83251650	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6395	Munhoz De Melo	86760000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6396	Natingui	84390000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6397	Nilza	87562000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6398	Nordestina	87855000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6399	Nossa Senhora Aparecida	86383000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6400	Nossa Senhora Da Aparecida	86607000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6401	Nossa Senhora Da Candelária	86365000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6402	Nossa Senhora Das Graças	86680000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6403	Nossa Senhora De Lourdes	85824650	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6404	Nossa Senhora Do Carmo	85514550	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6405	Nova Aliança Do Ivaí	87790000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6406	Nova Altamira	86842000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6407	Nova América Da Colina	86230000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6408	Nova Amoreira	86826000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6409	Nova Aurora	85410000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6410	Nova Bilac	87188000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6411	Nova Brasília	87262000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9778	Tatuí	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6413	Nova Brasília Do Itararé	86425000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6414	Nova Cantu	87330000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6415	Nova Concórdia	85609000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9779	Taubaté	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6417	Nova Esperança	87600000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9785	Terra Roxa	14745000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6418	Nova Esperança Do Sudoeste	85635000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6419	Nova Fátima	86310000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6420	Nova Laranjeiras	85350000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6421	Nova Londrina	87970000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6422	Nova Lourdes	85572000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6423	Nova Olímpia	87490000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6424	Nova Prata Do Iguaçu	85685000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6425	Nova Riqueza	85729000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6426	Nova Santa Bárbara	86250000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6427	Nova Santa Rosa	85930000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6428	Nova Tebas	85250000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6429	Nova Tirol	83319300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6430	Nova Videira	85926950	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6431	Novo Horizonte	85822600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9780	Tecainda	19505000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6433	Novo Itacolomi	86895000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6434	Novo Jardim	84923000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6435	Novo Sarandi	85927000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6436	Novo Sobradinho	85925000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6437	Novo Três Passos	85975000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6438	Olaria	85824500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9781	Tejupá	18830000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6440	Olho Agudo	83160000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6441	Olho D`água	84198300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6442	Oroité	87564000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6443	Ortigueira	84350000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6444	Ourilândia	86968000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6445	Ourizona	87170000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6446	Ouro Verde Do Oeste	85933000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6447	Ouro Verde Do Piquiri	85422000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6448	Padre Ponciano	85559000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6449	Paiçandu	87140000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6450	Paiol De Baixo	83440000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6451	Paiol Queimado	84197000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6453	Paiquerê	86112000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6454	Palmas	85555000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6455	Palmeira	84130000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6456	Palmeirinha	84196800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9782	Teodoro Sampaio	19280000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6458	Palmira	84155000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6459	Palmital	85270000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9783	Termas De Ibirá	15868000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6461	Palmital De São Silvestre	83646000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6462	Palmitópolis	85413000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6463	Palotina	85950000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6464	Panema	86358000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6465	Pangaré	83845000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6466	Papagaios Novos	84135000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6467	Paraíso Do Norte	87780000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6468	Paraná D`oeste	87375000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6469	Paranacity	87660000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6470	Paranagi	86345000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6471	Paranaguá	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6472	Paranapoema	87680000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6473	Paranavaí	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6474	Passa Una	83729200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6475	Passo Da Ilha	85514700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6476	Passo Dos Pupos	84126300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6477	Passo Fundo	83649600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6478	Passo Liso	85330000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6479	Pato Bragado	85948000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6480	Pato Branco	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6481	Patos Velhos	84410000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6482	Pau D`alho Do Sul	86224000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6483	Paula Freitas	84630000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6484	Paulistânia	87588000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6485	Paulo Frontin	84635000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6486	Peabiru	87250000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6487	Pedra Branca Do Araraquara	83290000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6488	Pedras	84193700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6489	Pedro Lustosa	85198000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6490	Pelado	85128000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6491	Perobal	87538000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6492	Pérola	87540000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6493	Pérola D`oeste	85740000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6494	Pérola Independente	85958000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6495	Piassuguera	83251500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6496	Piên	83860000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6497	Pinaré	84625000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6498	Pinhais	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6499	Pinhal De São Bento	85727000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6501	Pinhalão	84925000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6502	Pinhalzinho	86818500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9784	Terra Nova D`oeste	17945000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9786	Tibiriçá	17110000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9787	Tibiriçá Do Paranapanema	18810000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6507	Pinhão	85170000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6508	Pinheiro	85767000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6509	Piquirivaí	87318000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6510	Piracema	87729200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6511	Piraí Do Sul	84240000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6512	Pirapó	86818000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6513	Piraquara	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6514	Piriquitos	84105000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6515	Pitanga	85200000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6516	Pitangueiras	86613000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6517	Pitangui	84125500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6518	Planaltina Do Paraná	87860000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6519	Planalto	85750000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6520	Pocinho	86962000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9788	Tietê	18530000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6522	Poema	85255000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6523	Ponta Do Pasto	83251300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6524	Ponta Grossa	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6525	Pontal Do Paraná	83255000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6526	Porecatu	86160000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6527	Portão	85824900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6528	Porteira Preta	86955000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6529	Porto Amazonas	84140000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6530	Porto Barreiro	85345000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6531	Porto Belo	85874000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6532	Porto Brasílio	87940000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6533	Porto Camargo	87532000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6534	Porto De Cima	83360000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6535	Porto Meira	85874400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6536	Porto Mendes	85976000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6537	Porto Rico	87950000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6538	Porto San Juan	85874700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6539	Porto Santana	85348000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6540	Porto São Carlos	87775000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6541	Porto São José	87957000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6542	Porto Vitória	84610000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6543	Prado Ferreira	86618000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6545	Prata	86198000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6546	Prata Um	84277200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6547	Presidente Castelo Branco	87180000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6548	Presidente Kennedy	85587000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6549	Primeiro De Maio	86140000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6550	Progresso	85609400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6551	Prudentópolis	84400000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6552	Pulinópolis	87165000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6553	Quatiguá	86450000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6554	Quatro Barras	83420000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6555	Quatro Pontes	85940000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6556	Quebra Freio	85514000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6557	Quedas Do Iguaçu	85460000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6558	Queimados	85137900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6559	Querência Do Norte	87930000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6560	Quinta Do Sol	87265000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6561	Quinzópolis	86355000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6562	Quitandinha	83840000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6563	Ramilândia	85888000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6564	Rancho Alegre	86290000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6565	Rancho Alegre D`oeste	87395000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6566	Realeza	85770000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6567	Rebouças	84550000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6568	Região Dos Valos	84279500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6569	Reianópolis	84230000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6570	Renascença	85610000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6571	Reserva	84320000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6572	Reserva Do Iguaçu	85195000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6573	Retiro	84197800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6574	Retiro Grande	83649500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6575	Ribeirão Bonito	86847000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6576	Ribeirão Claro	86410000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6577	Ribeirão Do Pinhal	86490000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6578	Ribeirão Do Pinheiro	84194700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6579	Rio Abaixo	84193600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6580	Rio Azul	84560000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6581	Rio Bom	86830000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6582	Rio Bonito	87575000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6583	Rio Bonito Do Iguaçu	85340000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6584	Rio Branco Do Ivaí	86848000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6585	Rio Branco Do Sul	83540000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6586	Rio Claro Do Sul	84577000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6587	Rio Da Prata	85655000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9789	Timburi	18860000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6589	Rio Das Antas	85823550	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6590	Rio Das Mortes	85130000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6591	Rio Das Pedras	85131000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9790	Toledo	17627000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6593	Rio Das Pombas	83251800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6594	Rio Do Mato	85609200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6595	Rio Do Salto	85824000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6596	Rio Negro	83880000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6597	Rio Novo	85822850	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9791	Torre De Pedra	18265000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6599	Rio Pinheiro	85526000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6600	Rio Quatorze	85609600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6601	Rio Saltinho	85823900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6602	Rio Saudade	85609800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6603	Rio Verde	87357000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6604	Roberto Silveira	87524000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6605	Roça Velha	84126700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9792	Torrinha	17360000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6607	Rolândia	86600000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6608	Romeópolis	86887000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6609	Roncador	87320000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6610	Rondinha	85119000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6611	Rondon	87800000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6612	Rosário Do Ivaí	86850000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6613	Sabáudia	86720000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6614	Sagrada Família	85756000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6615	Salgado Filho	85620000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6616	Salles De Oliveira	87349000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6617	Saltinho Do Oeste	87585000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6618	Salto Do Itararé	84945000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6619	Salto Do Lontra	85670000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6620	Salto Portão	85823800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6621	Samambaia	85138300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6622	Santa Amélia	86370000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6623	Santa Cecília Do Pavão	86225000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6624	Santa Clara	84194600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6625	Santa Cruz De Monte Castelo	87920000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6626	Santa Eliza	87521000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6627	Santa Esmeralda	87925000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6628	Santa Fé	86770000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6629	Santa Fé Do Pirapó	86994000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6630	Santa Helena	85892000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6631	Santa Inês	86660000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6632	Santa Isabel Do Ivaí	87910000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6633	Santa Izabel Do Oeste	85650000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6634	Santa Lúcia	85795000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6635	Santa Lurdes	86199200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6636	Santa Luzia Da Alvorada	86934000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6637	Santa Margarida	86135000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9793	Trabiju	14935000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6639	Santa Maria	87755000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6640	Santa Maria Do Oeste	85230000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6641	Santa Maria Do Rio Do Peixe	86323000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6642	Santa Mariana	86350000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6643	Santa Mônica	87915000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6644	Santa Quitéria	83649100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9794	Tremembé	12120000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6646	Santa Rita	84197600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9795	Três Alianças	16830000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6648	Santa Rita Do Oeste	85995000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6649	Santa Rosa	85609300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6650	Santa Tereza Do Oeste	85825000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6651	Santa Terezinha De Itaipu	85875000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6652	Santa Zélia	86742000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6653	Santana	84623000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6654	Santana Do Itararé	84970000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6655	Santo Antônio	84194800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9796	Três Fronteiras	15770000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6657	Santo Antônio Da Platina	86430000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6658	Santo Antônio Do Caiuá	87730000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6659	Santo Antônio Do Iratim	84650000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6660	Santo Antônio Do Palmital	86835000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6661	Santo Antônio Do Paraíso	86315000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6662	Santo Antônio Do Sudoeste	85710000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6663	Santo Inácio	86650000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6664	Santo Rei	87335000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6665	São Bento	87316000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6666	São Braz	85823850	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9797	Três Pontes	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6668	São Camilo	85952000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6669	São Carlos Do Ivaí	87770000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6670	São Cirilo	84193200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6671	São Clemente	85894000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6672	São Cristovão	87729600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9798	Três Vendas	17621000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6674	São Domingos	86819500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9636	Sales Oliveira	14660000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9637	Salesópolis	08970000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6677	São Francisco	85562000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9638	Salmourão	17720000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9639	Saltinho	13440000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6680	São Francisco De Imbaú	86325000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6681	São Francisco De Sales	85534000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6682	São Gabriel	86199000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9640	Salto	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6684	São Gotardo	85514150	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6685	São Jerônimo Da Serra	86270000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6686	São João	85570000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9641	Salto De Pirapora	18160000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9642	Salto Do Avanhandava	15208000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9643	Salto Grande	19920000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6690	São João D`oeste	85823000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6691	São João Da Boa Vista	87523100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6692	São João Do Caiuá	87740000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6693	São João Do Ivaí	86930000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6694	São João Do Pinhal	86273000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6695	São João Do Triunfo	84150000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6696	São Joaquim	86718000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9689	Santos	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6698	São Joaquim Do Pontal	86378000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6699	São Jorge D`oeste	85575000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6700	São Jorge Do Ivaí	87190000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6701	São Jorge Do Patrocínio	87555000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6702	São José	86905000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9644	Sandovalina	19250000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6704	São José Da Boa Vista	84980000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6705	São José Das Palmeiras	85898000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6706	São José Do Iguaçu	85879000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6707	São José Do Itavo	85883000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6708	São José Do Ivaí	87913000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6709	São José Dos Pinhais	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6710	São Judas Tadeu	86318000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6711	São Leonardo	86103000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6712	São Lourenço	84196600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9645	Santa Adélia	15950000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6714	São Luiz	87317300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9646	Santa Albertina	15750000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9647	Santa América	16455000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9648	Santa Bárbara D`oeste	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9649	Santa Branca	12380000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9650	Santa Clara D`oeste	15785000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9651	Santa Cruz Da Conceição	13625000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9652	Santa Cruz Da Esperança	14250000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6722	São Luiz Do Purunã	83670000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6723	São Manoel Do Paraná	87215000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6724	São Marcos	86101000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9653	Santa Cruz Da Estrela	13675000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6726	São Martinho	86609000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6727	São Mateus Do Sul	83900000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6728	São Miguel	83729100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9654	Santa Cruz Das Palmeiras	13650000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9655	Santa Cruz Do Rio Pardo	18900000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6731	São Miguel Do Cambui	86996000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6732	São Miguel Do Iguaçu	85877000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6733	São Paulo	85926800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6734	São Pedro	85645000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9656	Santa Cruz Dos Lopes	18468000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9657	Santa Ernestina	15970000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9658	Santa Eudóxia	13579000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9659	Santa Fé Do Sul	15775000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6739	São Pedro Do Florido	85725000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6740	São Pedro Do Iguaçu	85929000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6741	São Pedro Do Ivaí	86945000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6742	São Pedro Do Paraná	87955000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6743	São Pedro Lopei	85822500	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6744	São Pio X	85608000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9660	Santa Gertrudes	13510000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9661	Santa Isabel	07500000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6748	São Roque Do Pinhal	86458000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6749	São Salvador	85643000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6750	São Sebastião	84198200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9662	Santa Isabel Do Marinheiro	15635000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9663	Santa Lúcia	14825000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9664	Santa Margarida Paulista	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9665	Santa Maria Da Serra	17370000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6755	São Sebastião Da Amoreira	86240000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6756	São Silvestre	87408000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6757	São Tomé	87220000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6758	São Valentim	85668000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6759	São Vicente	87263000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6760	Sapé	84938000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6761	Sapopema	84290000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6762	Sarandi	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9666	Santa Maria Do Gurupá	16380000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6764	Saudade Do Iguaçu	85568000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6765	Sede Alvorada	85822000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6766	Sede Chaparral	85927900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6767	Sede Nova Sant`ana	85577000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6768	Sede Progresso	85609250	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6770	Selva	86108000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6771	Sengés	84220000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6772	Senhor Bom Jesus Dos Gramados	85528000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6773	Serra Dos Dourados	87518000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6774	Serra Negra	83395000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6775	Serranópolis Do Iguaçu	85885000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6776	Serraria Klas	84128800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6777	Serrinha	86199800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6780	Sertaneja	86340000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6781	Sertanópolis	86170000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6782	Sertãozinho	87272000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6784	Sete Saltos De Cima	84127600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6785	Silvolândia	87315000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6786	Siqueira Belo	85705000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6787	Siqueira Campos	84940000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6788	Socavão	84190000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6789	Socorro	85139000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6790	Sulina	85565000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6791	Sumaré	87720000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6792	Sussui	87274000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6793	Sutis	86122000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6794	Taipa	85115000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6795	Tamarana	86125000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6796	Tambarutaca	83251450	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6797	Tamboara	87760000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6798	Tanque Grande	84196100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6799	Tapejara	87430000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6800	Tapira	87830000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6801	Tapui	85927850	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6802	Taquara	84193000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6803	Taquari Dos Polacos	84126100	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6804	Taquari Dos Russos	84126800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6805	Taquaruna	86113000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6806	Teixeira Soares	84530000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6807	Telêmaco Borba	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6808	Teolândia	85514350	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6809	Tereza Breda	86964000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6810	Tereza Cristina	84490000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6811	Terra Boa	87240000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6812	Terra Nova	86275000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6813	Terra Rica	87890000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6814	Terra Roxa	85990000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6815	Tibagi	84300000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6816	Tijucas Do Sul	83190000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6817	Tijuco Preto	83532000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9667	Santa Mercedes	17940000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6819	Timbu Velho	83419700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6820	Tindiquera	83729600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6821	Tiradentes	85514200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9668	Santa Rita D`oeste	15780000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6823	Toledo	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6824	Tomaz Coelho	83729400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6825	Tomazina	84935000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6827	Três Barras Do Paraná	85485000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6828	Três Bicos	84480000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6829	Três Bocas	85926900	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6830	Três Capões	85137000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6831	Três Córregos	83642000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6832	Três Lagoas	85874200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6833	Três Pinheiros	85137300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6834	Três Placas	87523000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6835	Triângulo	87276000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6836	Trindade	84125600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6837	Triolândia	86495000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6838	Tronco	84197400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6839	Tunas Do Paraná	83480000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6840	Tuneiras Do Oeste	87450000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6841	Tupãssi	85945000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6842	Tupinambá	86746000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6843	Turvo	85150000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6844	Ubaldino Taques	85558000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6845	Ubauna	86932000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6846	Ubiratã	85440000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6847	Umuarama	00000000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6848	União	85321000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6849	União Da Vitória	84600000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6850	União Do Oeste	85656000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6851	Uniflor	87640000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6852	Uraí	86280000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6853	Usina	87316300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6854	Uvaia	84115000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6855	Valentins	84127000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6856	Valério	85758000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6857	Vargeado	84198000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6858	Vassoural	84916000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6859	Ventania	84345000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6860	Vera Cruz Do Oeste	85845000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6861	Vera Guarani	84638000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6862	Verê	85585000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6863	Vida Nova	84293000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6864	Vidigal	87208000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6865	Alto Paraíso	87528000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6866	Vila Diniz	86857000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6867	Vila Dos Roldos	85514800	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6868	Vila Flórida	85926700	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6869	Vila Gandhi	86142000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6870	Vila Guay	84914000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6871	Vila Nova	85218000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9669	Santa Rita Do Passa Quatro	13670000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6873	Vila Nova De Florença	86278000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6874	Vila Paraíso	85573000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6875	Vila Reis	86819000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6876	Vila Rica Do Ivaí	87534000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6877	Vila Roberto Brzezinski	87315300	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6878	Vila Silva Jardim	87665000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6879	Vila Velha	84128200	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6880	Virmond	85390000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6881	Vista Alegre	85554000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9670	Santa Rita Do Ribeira	11870000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6883	Vista Bonita	83649250	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6884	Vitória	85139400	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6885	Vitorino	85520000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6886	Warta	86105000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6887	Wenceslau Braz	84950000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6888	Xambrê	87535000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6889	Xaxim	85927600	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6890	Yolanda	85445000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6891	4º Centenário	87365000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10442	Jordão	85100000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10443	Biscaia	84106000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10444	Campo Do Bugre	85320000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10482	Santa Cruz	83643000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10483	Caiva	83645000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10484	Itambezinho	83647000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10784	Bananas	85385000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10785	Candeia	85957000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10786	Guaraí	85365000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10787	Ouro Verde	84235000	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10788	São Roque Do Chopim	85514650	PR	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5188	Abreu E Lima	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5189	Afogados Da Ingazeira	56800000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5190	Afrânio	56360000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5191	Agrestina	55495000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5192	Água Fria	55168000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5193	Água Preta	55550000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5194	Águas Belas	55340000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5195	Airi	56410000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5196	Alagoinha	55260000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5197	Albuquerque Né	56610000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5198	Algodões	56625000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5199	Aliança	55890000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5200	Altinho	55490000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5201	Amaraji	55515000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5202	Ameixas	55658000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5203	Angelim	55430000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5204	Apoti	55625000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5205	Araçoiaba	53690000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5206	Araripina	56280000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5207	Arcoverde	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5208	Aripibu	55524000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5209	Arizona	56365000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5210	Barra De Farias	55172000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5211	Barra De Guabiraba	55690000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5212	Barra De São Pedro	56205000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5213	Barra Do Brejo	55332000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5214	Barra Do Chata	55498000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5215	Barra Do Jardim	55496000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5216	Barra Do Riachão	55672000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5217	Barra Do Sirinhaém	55585000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5218	Barreiros	55560000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5219	Batateira	55445000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5220	Belém De Maria	55440000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5221	Belém De São Francisco	56440000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5222	Belo Jardim	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5223	Bengalas	55652000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5224	Bentivi	55685000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5225	Bernardo Vieira	56922000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5226	Betânia	56670000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5227	Bezerros	55660000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5228	Bizarra	55735000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5229	Boas Novas	55662000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5230	Bodocó	56220000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5231	Bom Conselho	55330000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5232	Bom Jardim	55730000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5233	Bom Nome	56970000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5234	Bonfim	56710000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5235	Bonito	55680000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5236	Brejão	55325000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5237	Brejinho	56740000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5238	Brejo Da Madre De Deus	55170000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5239	Buenos Aires	55845000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5240	Buíque	56520000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5241	Cabanas	55383000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5242	Cabo De Santo Agostinho	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5243	Cabrobó	56180000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5244	Cachoeira Do Roberto	56370000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5245	Cachoeirinha	55380000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5246	Caetés	55360000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5247	Caiçarinha Da Penha	56916000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5248	Calçado	55375000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5249	Caldeirões	55338000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5250	Calumbi	56930000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5251	Camaragibe	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5252	Camela	55595000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5253	Camocim De São Félix	55665000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5254	Camutanga	55930000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5255	Canaã	56880000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5256	Canhotinho	55420000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5257	Capoeiras	55365000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5258	Caraíba	56393000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5259	Caraibeiras	56485000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5260	Carapotos	55110000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5261	Carice	55928000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5262	Carima	55564000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5263	Caririmirim	56155000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5264	Carnaíba	56820000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5265	Carnaubeira Da Penha	56420000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5266	Carneiro	56533000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5267	Carpina	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5268	Carqueja	56415000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5269	Caruaru	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5270	Casinhas	55755000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5271	Catende	55400000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5272	Catimbaú	56537000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5273	Catolé	55759000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5275	Cedro	56130000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5276	Chã De Alegria	55835000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5277	Chã Do Rocha	55748000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5278	Chã Grande	55636000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5279	Cimbres	55205000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5280	Clarana	56227000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5281	Cocau	56223000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9671	Santa Rosa De Viterbo	14270000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5283	Conceição Das Crioulas	56115000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5284	Condado	55940000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5285	Correntes	55315000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5286	Cortês	55525000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5287	Couro D`antas	55121000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5288	Cristália	56340000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5289	Cruanji	55875000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5290	Cruzes	55473000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5291	Cuiambuca	55533000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5292	Cumaru	55655000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5293	Cupira	55460000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5294	Curral Queimado	56335000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5295	Custódia	56640000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5296	Dois Leões	55633000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5297	Dormentes	56355000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5298	Entroncamento	55453000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5299	Escada	55500000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5300	Espírito Santo	55374000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5301	Exu	56230000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5302	Fazenda Nova	55175000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5303	Feira Nova	55715000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5304	Feitoria	56228000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5305	Fernando De Noronha	53990000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5306	Ferreiros	55880000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5307	Flores	56850000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5308	Floresta	56400000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5309	Frei Miguelinho	55780000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5310	Frexeiras	55505000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5311	Gameleira	55530000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5312	Garanhuns	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5313	Glória Do Goitá	55620000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5314	Goiana	55900000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5315	Gonçalves Ferreira	55105000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5316	Granito	56160000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5317	Gravatá	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5318	Gravatá Do Ibiapina	55795000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5319	Grotão	55275000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5320	Guanumbi	56535000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5321	Henrique Dias	56620000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5322	Iateca	55353000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5323	Iati	55345000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5324	Ibimirim	56580000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5325	Ibirajuba	55390000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5326	Ibiranga	55929000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5327	Ibiratinga	55588000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5328	Ibitiranga	56825000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5329	Ibó	56450000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5330	Icaiçara	56165000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5331	Igapó	55322000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5332	Igarapeassu	55455000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5333	Igarapeba	55412000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5334	Igarassu	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5335	Iguaraci	56840000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5336	Inajá	56560000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5337	Ingazeira	56830000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5338	Ipojuca	55590000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5339	Ipubi	56260000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5340	Ipuera	56145000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5341	Iraguaçu	56890000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5342	Irajaí	56845000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5343	Iratama	55304000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5344	Itacuruba	56430000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5345	Itaíba	56550000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5346	Ilha De Itamaracá	53900000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5347	Itambé	55920000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5348	Itapetim	56720000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5349	Itapissuma	53700000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5350	Itaquitinga	55950000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5351	Ituguaçu	55493000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5352	Iuiteporã	55682000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5353	Jabitaca	56848000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5355	Jaboatão Dos Guararapes	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5356	Japecanga	55287000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5357	Jaqueira	55409000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5358	Jataúba	55180000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5359	Jatiúca	56885000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5360	Jatobá	56470000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5361	Jenipapo	55258000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5362	João Alfredo	55720000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5363	Joaquim Nabuco	55535000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5364	José Da Costa	55534000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5365	José Mariano	55522000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5366	Juçaral	54570000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5367	Jucati	55398000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5368	Jupi	55395000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5369	Jurema	55480000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5370	Jutaí	56390000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5371	Lagoa	56350000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5372	Lagoa De São José	55336000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5373	Lagoa Do Barro	56284000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5374	Lagoa Do Carro	55820000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5375	Lagoa Do Itaenga	55840000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5376	Lagoa Do Ouro	55320000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5377	Lagoa Do Souza	55458000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5378	Lagoa Dos Gatos	55450000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5379	Lagoa Grande	56395000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5380	Laje De São José	55465000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5381	Laje Grande	55402000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5382	Lajedo	55385000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5383	Lajedo Do Cedro	55108000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5384	Limoeiro	55700000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5385	Livramento Do Tiúma	55878000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5386	Luanda	56918000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5387	Macaparana	55865000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5388	Machados	55740000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5389	Macujé	55898000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5390	Manari	56565000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5391	Mandacaia	55174000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5392	Mandacaru	55646000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5393	Maniçoba	55135000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5394	Maraial	55405000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5395	Maravilha	56650000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5396	Mimoso	55225000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5397	Miracica	55303000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5398	Mirandiba	56980000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5399	Morais	56287000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5400	Moreilândia	56150000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5401	Moreno	54800000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5402	Moxotó	56585000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5403	Mulungu	55255000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5404	Murupé	55855000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5405	Mutuca	55210000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5406	Nascente	56285000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5408	Nazaré Da Mata	55800000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5409	Negras	56555000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5410	Nossa Senhora Da Luz	54749000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5411	Nossa Senhora Do Carmo	55634000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5412	Nossa Senhora Do Ó	55592000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5413	Nova Cruz	53660000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5414	Olho D`água De Dentro	55423000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5415	Olinda	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5416	Oratório	55758000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5417	Ori	56148000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5418	Orobó	55745000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5419	Orocó	56170000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5420	Ouricuri	56200000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5421	Pajeú	56920000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5422	Palmares	55540000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5423	Palmeirina	55310000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5424	Panelas	55470000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5425	Pão De Açúcar	55798000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5426	Pão De Açúcar Do Poção	55245000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5427	Papagaio	55215000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5428	Paquevira	55425000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5429	Pará	55198000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5430	Paranatama	55355000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5432	Parnamirim	56163000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5433	Passagem Do Tó	55185000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5434	Passira	55650000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5435	Pau Ferro	55418000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5436	Paudalho	55825000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5437	Paulista	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5438	Pedra	55280000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5439	Perpétuo Socorro	55265000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5440	Pesqueira	55200000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5441	Petrolândia	56460000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5442	Petrolina	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5443	Pirituba	55618000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5444	Poção	55240000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5445	Poção De Afrânio	56375000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5446	Poço Comprido	55317000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5447	Poço Fundo	55195000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5448	Pombos	55630000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5449	Pontas De Pedra	55908000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5450	Ponte Dos Carvalhos	54580000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5452	Primavera	55510000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5453	Quipapá	55415000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5454	Quitimbu	56660000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5455	Quixabá	56828000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5456	Rainha Isabel	55334000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5457	Rajada	56345000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5458	Rancharia	56282000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5459	Recife	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5460	Riacho Das Almas	55120000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5461	Riacho Do Meio	56705000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5462	Riacho Fechado	55145000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5463	Riacho Pequeno	56445000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5464	Ribeirão	55520000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5465	Rio Da Barra	56615000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5466	Rio Formoso	55570000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5467	Sairé	55695000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5468	Salgadinho	55675000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5469	Salgueiro	56000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5470	Saloá	55350000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5471	Salobro	55220000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5473	Santa Cruz	56215000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5474	Santa Cruz Da Baixa Verde	56895000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5475	Santa Cruz Do Capibaribe	55190000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5476	Santa Filomena	56210000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5477	Santa Maria Da Boa Vista	56380000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5478	Santa Maria Do Cambucá	55765000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5479	Santa Rita	56770000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5480	Santa Terezinha	56750000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9672	Santa Salete	15768000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5482	Santana De São Joaquim	55674000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5483	Santo Agostinho	54590000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5484	Santo Antônio Das Queimadas	55485000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5485	Santo Antônio Dos Palmares	55548000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5486	São Benedito Do Sul	55410000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5487	São Bento Do Una	55370000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5488	São Caetano Do Navio	56680000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5489	São Caitano	55130000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5490	São Domingos	55178000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5491	São João	55435000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5492	São Joaquim Do Monte	55670000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5493	São José	55475000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5494	São José Da Coroa Grande	55565000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5495	São José Do Belmonte	56950000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5496	São José Do Egito	56700000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5497	São Lázaro	55478000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5498	São Lourenço Da Mata	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5499	São Pedro	55302000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5500	São Vicente	56730000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5501	São Vicente Ferrer	55860000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5502	Sapucarana	55661000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5503	Saué	55572000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5504	Serra Branca	56265000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5505	Serra Do Vento	55160000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5506	Serra Talhada	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5507	Serrita	56140000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5508	Serrolândia	56270000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5509	Sertânia	56600000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5510	Sertãozinho De Baixo	55408000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5511	Siriji	55863000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5512	Sirinhaém	55580000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5513	Sítio Dos Nunes	56860000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5514	Solidão	56795000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5515	Surubim	55750000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5516	Tabira	56780000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5517	Tabocas	56240000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5518	Tacaimbó	55140000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5519	Tacaratu	56480000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5520	Tamandaré	55578000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5521	Tamboatá	55733000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5522	Tapiraim	55138000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5523	Taquaritinga Do Norte	55790000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5524	Tara	55285000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5525	Tauapiranga	56925000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5526	Tejucupapo	55905000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5527	Terezinha	55305000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5528	Terra Nova	56190000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5529	Timbaúba	55870000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5530	Timorante	56234000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5531	Toritama	55125000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5532	Tracunhaém	55805000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5533	Trapiá	55122000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5534	Três Ladeiras	53670000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5535	Trindade	56250000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5536	Triunfo	56870000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5537	Tupanaci	56990000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5538	Tupanatinga	56540000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5539	Tupaóca	55895000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5540	Tuparetama	56760000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5541	Umãs	56105000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5542	Umburetama	55746000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5543	Upatininga	55896000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5544	Urimama	56386000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5545	Uruçu-Mirim	55648000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5546	Urucubá	55705000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5547	Vasques	56110000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5548	Veneza	56168000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5549	Venturosa	55270000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5550	Verdejante	56120000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5551	Vertente Do Lério	55760000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5552	Vertentes	55770000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5553	Vicência	55850000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5554	Vila Nova	55757000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5555	Viração	56236000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5556	Vitória De Santo Antão	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5557	Volta Do Moxotó	56475000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5558	Xexéu	55555000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5559	Xucuru	55165000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5560	Zé Gomes	56245000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10217	Jaboatão	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10237	Navarro	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10238	Cavaleiro	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10239	Praia Da Conceição	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10240	Paratibe	00000000	PE	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5561	Acauã	64748000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5562	Agricolândia	64440000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5563	Água Branca	64460000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5564	Alagoinha Do Piauí	64655000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5565	Alegrete Do Piauí	64675000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5566	Alto Longá	64360000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5567	Altos	64290000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5568	Alvorada Do Gurguéia	64923000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5569	Amarante	64400000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5570	Angical Do Piauí	64410000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5571	Anísio De Abreu	64780000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5572	Antônio Almeida	64855000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5573	Aroazes	64310000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5574	Arraial	64480000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5575	Assunção Do Piauí	64333000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5576	Avelino Lopes	64965000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5577	Baixa Grande Do Ribeiro	64868000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5578	Barra D`alcântara	64528000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5579	Barras	64100000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5580	Barreiras Do Piauí	64990000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5581	Barro Duro	64455000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5582	Batalha	64190000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5583	Bela Vista Do Piauí	64705000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5584	Belém Do Piauí	64678000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5585	Beneditinos	64380000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5586	Bertolínia	64870000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5587	Betânia Do Piauí	64753000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5588	Boa Hora	64108000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5589	Bocaina	64630000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5590	Bom Jesus	64900000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5591	Bom Princípio Do Piauí	64225000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5592	Bonfim Do Piauí	64775000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5593	Boqueirão Do Piauí	64283000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5594	Brasileira	64265000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5595	Brejo Do Piauí	64895000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5596	Buriti Dos Lopes	64230000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5597	Buriti Dos Montes	64345000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5598	Cabeceiras Do Piauí	64105000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5599	Cajazeiras Do Piauí	64514000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5600	Cajueiro Da Praia	64222000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5601	Caldeirão Grande Do Piauí	64695000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5602	Campinas Do Piauí	64730000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5603	Campo Alegre Do Fidalgo	64767000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5604	Campo Grande Do Piauí	64578000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5605	Campo Largo Do Piauí	64148000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5606	Campo Maior	64280000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5607	Canavieira	64833000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5608	Canto Do Buriti	64890000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5609	Capitão De Campos	64270000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5610	Capitão Gervásio Oliveira	64763000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5611	Caracol	64795000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5612	Caraúbas Do Piauí	64233000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5613	Caridade Do Piauí	64590000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5614	Castelo Do Piauí	64340000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5615	Caxingó	64228000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5616	Cocal	64235000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5617	Cocal De Telha	64278000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5618	Cocal Dos Alves	64238000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5619	Coivaras	64335000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5620	Colônia Do Gurguéia	64885000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5621	Colônia Do Piauí	64516000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5622	Conceição Do Canindé	64740000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5623	Coronel José Dias	64793000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5624	Corrente	64980000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5625	Cristalândia Do Piauí	64995000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5626	Cristino Castro	64920000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5627	Curimatá	64960000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5628	Currais	64905000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5629	Curral Novo Do Piauí	64595000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5630	Curralinhos	64453000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5631	Demerval Lobão	64390000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5632	Dirceu Arcoverde	64785000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5633	Dom Expedito Lopes	64620000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5634	Dom Inocêncio	64790000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5635	Domingos Mourão	64250000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5636	Elesbão Veloso	64325000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5637	Eliseu Martins	64880000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5638	Esperantina	64180000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5639	Fartura Do Piauí	64788000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5640	Flores Do Piauí	64815000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5641	Floresta Do Piauí	64563000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5642	Floriano	64800000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5643	Francinópolis	64520000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5644	Francisco Ayres	64475000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5645	Francisco Macedo	64683000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5646	Francisco Santos	64645000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5647	Fronteiras	64690000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5648	Geminiano	64613000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5649	Gilbués	64930000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5650	Guadalupe	64840000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5651	Guaribas	64798000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5652	Hugo Napoleão	64470000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5653	Ilha Grande	64224000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5654	Inhuma	64535000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5655	Ipiranga Do Piauí	64540000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5656	Isaías Coelho	64570000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5657	Itainópolis	64565000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5658	Itaueira	64820000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5659	Jacobina Do Piauí	64755000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5660	Jaicós	64575000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5661	Jardim Do Mulato	64495000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5662	Jatobá Do Piauí	64275000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5663	Jerumenha	64830000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5664	João Costa	64765000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5665	Joaquim Pires	64170000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5666	Joca Marques	64165000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5667	José De Freitas	64110000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5668	Juazeiro Do Piauí	64343000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5669	Júlio Borges	64963000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5670	Jurema	64782000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5671	Lagoa Alegre	64138000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5672	Lagoa De São Francisco	64258000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5673	Lagoa Do Barro Do Piauí	64768000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5674	Lagoa Do Piauí	64388000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5675	Lagoa Do Sítio	64308000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5676	Lagoinha Do Piauí	64465000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5677	Landri Sales	64850000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5678	Luís Correia	64220000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5679	Luzilândia	64160000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5680	Madeiro	64168000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5681	Manoel Emídio	64875000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5682	Marcolândia	64685000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5683	Marcos Parente	64845000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5684	Massapê Do Piauí	64573000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5685	Matias Olímpio	64150000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5686	Miguel Alves	64130000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5687	Miguel Leão	64445000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5688	Milton Brandão	64253000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5689	Monsenhor Gil	64450000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5690	Monsenhor Hipólito	64650000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5691	Monte Alegre Do Piauí	64940000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5692	Morro Cabeça No Tempo	64968000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5693	Morro Do Chapéu Do Piauí	64178000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5694	Murici Dos Portelas	64175000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5695	Nazaré Do Piauí	64825000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5696	Nossa Senhora De Nazaré	64288000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5697	Nossa Senhora Dos Remédios	64140000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5698	Nova Santa Rita	64764000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5699	Novo Nilo	64125000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5700	Novo Oriente Do Piauí	64530000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5701	Novo Santo Antônio	64365000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5702	Oeiras	64500000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5703	Olho D`água Do Piauí	64468000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5704	Padre Marcos	64680000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5705	Paes Landim	64710000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5706	Pajeú Do Piauí	64898000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5707	Palmeira Do Piauí	64925000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5708	Palmeirais	64420000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5709	Paquetá	64618000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5710	Parnaguá	64970000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5711	Parnaíba	00000000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5712	Passagem Franca Do Piauí	64395000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5713	Patos Do Piauí	64580000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5714	Paulistana	64750000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5715	Pavussu	64838000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5716	Pedro Ii	64255000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5717	Pedro Laurentino	64728000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5718	Picos	64600000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5719	Pimenteiras	64320000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5720	Pio Ix	64660000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5721	Piracuruca	64240000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5722	Piripiri	64260000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5723	Porto	64145000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5724	Porto Alegre Do Piauí	64858000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5725	Prata Do Piauí	64370000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5726	Queimada Nova	64758000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5727	Redenção Do Gurguéia	64915000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5728	Regeneração	64490000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5729	Riacho Frio	64975000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5730	Ribeira Do Piauí	64725000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5731	Ribeiro Gonçalves	64865000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5732	Rio Grande Do Piauí	64835000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5733	Santa Cruz Do Piauí	64545000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5734	Santa Cruz Dos Milagres	64315000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5735	Santa Filomena	64945000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5736	Santa Luz	64910000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5737	Santa Rosa Do Piauí	64518000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5738	Santana Do Piauí	64615000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5739	Santo Antônio De Lisboa	64640000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5740	Santo Antônio Dos Milagres	64438000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5741	Santo Inácio Do Piauí	64560000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5742	São Braz Do Piauí	64783000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5743	São Félix Do Piauí	64375000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5744	São Francisco De Assis Do Piauí	64745000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5745	São Francisco Do Piauí	64550000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5746	São Gonçalo Do Gurguéia	64993000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5747	São Gonçalo Do Piauí	64435000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5748	São João Da Canabrava	64635000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5749	São João Da Fronteira	64243000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5750	São João Da Serra	64350000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5751	São João Da Varjota	64510000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5752	São João Do Arraial	64155000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5753	São João Do Piauí	64760000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5754	São José Do Divino	64245000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5755	São José Do Peixe	64555000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5756	São José Do Piauí	64625000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5757	São Julião	64670000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5758	São Lourenço Do Piauí	64778000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5759	São Luís Do Piauí	64638000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5760	São Miguel Da Baixa Grande	64378000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5761	São Miguel Do Fidalgo	64558000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5762	São Miguel Do Tapuio	64330000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5763	São Pedro Do Piauí	64430000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5764	São Raimundo Nonato	64770000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5765	Sebastião Barros	64985000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5766	Sebastião Leal	64873000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5767	Sigefredo Pacheco	64285000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5768	Simões	64585000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5769	Simplício Mendes	64700000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5770	Socorro Do Piauí	64720000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5771	Sussuapara	64610000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5772	Tamboril Do Piauí	64893000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5773	Tanque Do Piauí	64512000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5774	Teresina	00000000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5775	União	64120000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5776	Uruçuí	64860000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5777	Valença Do Piauí	64300000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5778	Várzea Branca	64773000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5779	Várzea Grande	64525000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5780	Vera Mendes	64568000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5781	Vila Nova Do Piauí	64688000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	5782	Wall Ferraz	64548000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10153	Pau D`arco Do Piauí	64295000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	11072	Aroeiras Do Itaim	64612000	PI	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6892	Abarracamento	27670000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6893	Ilha Grande	23968000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6894	Afonso Arinos	25875000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6895	Agulhas Negras	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6896	Amparo	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6897	Andrade Pinto	27770000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6898	Angra Dos Reis	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6899	Anta	25882000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6900	Aperibé	28495000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6901	Araruama	28970000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6902	Areal	25845000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6903	Armação Dos Búzios	28950000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6904	Arraial Do Cabo	28930000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6905	Arrozal	27185000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6906	Avelar	26980000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6907	Bacaxá	28993000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6908	Baltazar	28473000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6909	Banquete	28662000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6910	Barão De Juparana	27640000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6911	Barcelos	28220000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6912	Barra Alegre	28666000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6913	Barra De Macaé	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6914	Barra De São João	28880000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6915	Barra Do Piraí	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6916	Barra Mansa	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6917	Barra Seca	28240000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6918	Belford Roxo	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6919	Bemposta	25840000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6920	Boa Esperança	28810000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6921	Boa Sorte	28525000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6922	Boa Ventura	28340000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6923	Bom Jardim	28660000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6924	Bom Jesus Do Itabapoana	28360000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6925	Bom Jesus Do Querendo	28388000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6926	Cabo Frio	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6927	Cabuçu	24860000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6928	Cachoeiras De Macacu	28680000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6929	Cachoeiros	27990000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6930	Calheiros	28368000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6931	Cambiasca	28425000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6932	Cambuci	28430000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6933	Campo Do Coelho	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6934	Campos Dos Goytacazes	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6935	Campos Elíseos	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6936	Cantagalo	28500000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6937	Carabuçu	28372000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6938	Carapebus	27998000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6939	Cardoso Moreira	28180000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6940	Carmo	28640000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6941	Cascatinha	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6942	Casimiro De Abreu	28860000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6943	Cava	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6944	Coelho Da Rocha	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6945	Colônia	28420000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6946	Comendador Levy Gasparian	25870000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6947	Comendador Venâncio	28348000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6948	Conceição De Jacareí	23885000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6949	Conceição De Macabu	28740000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6950	Conrado	26920000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6951	Conselheiro Paulino	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6952	Conservatória	27655000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6953	Cordeiro	28540000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6954	Coroa Grande	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6955	Correas	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6956	Córrego Da Prata	28642000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6957	Córrego Do Ouro	27980000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6958	Correntezas	28830000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6959	Cunhambebe	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6960	Dorândia	27160000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6961	Dores De Macabu	28115000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6962	Doutor Elias	28757000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6963	Doutor Loreti	28772000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6964	Duas Barras	28650000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6965	Duque De Caxias	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6966	Engenheiro Passos	27555000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6967	Engenheiro Paulo De Frontin	26650000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6968	Engenheiro Pedreira	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6969	Estrada Nova	28590000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6970	Euclidelândia	28520000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6971	Falcão	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6972	Floriano	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6973	Fumaça	27550000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6974	Funil	28440000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6975	Gaviões	28825000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6976	Getulândia	27465000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6977	Glicério	27985000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6978	Goitacazes	28110000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6979	Governador Portela	26910000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6980	Guapimirim	25940000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6981	Guia De Pacobaíba	25930000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6982	Ibitiguaçu	28485000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6983	Ibitioca	28120000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6984	Ibituporanga	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6985	Iguaba Grande	28960000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6986	Imbariê	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6987	Inconfidência	25865000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6988	Inhomirim	25935000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6989	Inoã	24910000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6990	Ipiabás	27170000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6991	Ipiiba	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6992	Ipuca	28405000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6993	Itabapoana	28245000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6994	Itaboraí	24800000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6995	Itacurussá	23880000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6996	Itaguaí	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6997	Itaipava	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6998	Itaipu	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	6999	Itajara	28345000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7000	Italva	28250000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7001	Itambi	24850000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7002	Itaocara	28570000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7003	Itaperuna	28300000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7004	Itatiaia	27580000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7006	Jaguarembé	28575000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7007	Jamapará	25887000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7008	Japeri	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7009	Japuíba	28685000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7010	Laje Do Muriaé	28350000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7011	Laranjais	28580000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7012	Lídice	27475000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7013	Lumiar	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7014	Macabuzinho	28745000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7015	Macaé	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7016	Macuco	28545000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7017	Magé	25900000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7018	Mambucaba	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7019	Mangaratiba	23860000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7020	Maniva	28235000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7021	Manoel Ribeiro	24920000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7022	Manuel Duarte	27690000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7023	Marangatu	28476000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7024	Maricá	24900000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7025	Mendes	26700000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7026	Mesquita	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7027	Miguel Pereira	26900000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7028	Miracema	28460000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7029	Monnerat	28655000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7030	Monjolo	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7031	Monte Alegre	28490000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7032	Monte Verde	28445000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7033	Monumento	27190000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7034	Morangaba	28125000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7035	Morro Do Côco	28178000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7036	Morro Grande	28975000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7037	Mussurepe	28143000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7038	Natividade	28380000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7039	Neves	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7040	Nhunguaçu	25998000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7041	Nilópolis	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7042	Niterói	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7043	Nossa Senhora Da Aparecida	25886000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7044	Nossa Senhora Da Penha	28335000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7045	Nossa Senhora Do Amparo	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7046	Nova Friburgo	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7047	Nova Iguaçu	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7048	Olinda	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7049	Ourânia	28383000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7050	Papucaia	28695000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7051	Paquequer Pequeno	25996000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7052	Paracambi	26600000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7053	Paraíba Do Sul	25850000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7054	Paraíso Do Tobias	28463000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7055	Paraoquena	28483000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7056	Parapeúna	27650000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7057	Parati	23970000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7058	Parati Mirim	23972000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7059	Passa Três	27470000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7060	Paty Do Alferes	26950000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7061	Pedra Selada	27560000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7062	Pedro Do Rio	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7063	Penedo	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7064	Pentagna	27645000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7065	Petrópolis	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7066	Piabetá	25915000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7067	Pião	25884000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7068	Pinheiral	27197000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7069	Pipeiras	28225000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7070	Piraí	27175000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7071	Pirangaí	27565000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7072	Pirapetinga De Bom Jesus	28365000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7073	Porciúncula	28390000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7074	Portela	28595000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7075	Porto Das Caixas	24870000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7076	Porto Real	27570000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7077	Porto Velho Do Cunha	28644000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7078	Posse	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7080	Pureza	28415000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7081	Purilândia	28396000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7082	Quartéis	28835000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7083	Quatis	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7084	Queimados	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7085	Quissamã	28735000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7086	Raposo	28333000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7087	Renascença	28774000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7088	Resende	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7089	Retiro Do Muriaé	28330000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7090	Rialto	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7091	Ribeirão De São Joaquim	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7092	Rio Bonito	28800000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7093	Rio Claro	27460000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7094	Rio Das Flores	27660000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7095	Rio Das Ostras	28890000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7096	Rio De Janeiro	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7097	Riograndina	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7098	Rosal	28370000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7099	Sacra Família Do Tinguá	26660000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7100	Salutaris	25855000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7101	Sambaetiba	24880000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7102	Sampaio Correia	28997000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7103	Sana	27995000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7104	Santa Clara	28398000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7105	Santa Cruz	28480000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7106	Santa Cruz Da Serra	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7107	Santa Isabel	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7108	Santa Isabel Do Rio Preto	27657000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7109	Santa Maria	28155000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7110	Santa Maria Madalena	28770000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7111	Santa Rita Da Floresta	28510000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7112	Santanésia	27195000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7113	Santo Aleixo	25920000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7114	Santo Amaro De Campos	28140000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7115	Santo Antônio De Pádua	28470000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7116	Santo Antônio Do Imbé	28778000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7117	Santo Eduardo	28160000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7118	São Fidélis	28400000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7119	São Francisco De Itabapoana	28230000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7120	São Gonçalo	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7121	São João Da Barra	28200000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7122	São João De Meriti	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7123	São João Do Paraíso	28450000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7124	São João Marcos	27472000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7125	São Joaquim	28195000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7126	São José De Ubá	28455000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7127	São José Do Ribeirão	28664000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7128	São José Do Turvo	27165000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7129	São José Do Vale Do Rio Preto	25780000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7130	São Mateus	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7131	São Pedro Da Aldeia	28940000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7132	São Sebastião De Campos	28145000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7133	São Sebastião Do Alto	28550000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7134	São Sebastião Do Paraíba	28530000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7135	São Sebastião Dos Ferreiros	27705000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7136	São Vicente De Paula	28980000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7137	Sapucaia	25880000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7138	Saquarema	28990000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7139	Saracuruna	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7140	Sebastião De Lacerda	27720000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7141	Seropédica	23890000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7142	Serrinha	28118000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7143	Sete Pontes	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7144	Silva Jardim	28820000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7145	Sodrelândia	28760000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7146	Sossego	28777000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7147	Subaio	28690000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7148	Sumidouro	28637000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7149	Suruí	25925000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7150	Taboas	27665000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7151	Tamoios	28927000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7152	Tanguá	24890000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7153	Tapera	28767000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7154	Tarituba	23975000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7155	Teresópolis	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7156	Tocos	28148000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7157	Trajano De Morais	28750000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7158	Travessão	28175000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7159	Três Irmãos	28435000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7160	Três Rios	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7161	Triunfo	28779000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7162	Valão Do Barro	28555000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7163	Valença	27600000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7164	Vargem Alegre	27155000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7165	Varre-Sai	28375000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7166	Vassouras	27700000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7167	Venda Das Flores	28466000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7168	Venda Das Pedras	24885000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7169	Vila Da Grama	28765000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7171	Vila Muriqui	23870000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7172	Vila Nova De Campos	28165000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7173	Visconde De Imbé	28755000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7174	Volta Redonda	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7175	Werneck	25860000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7176	Xerém	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10261	São Pedro Da Serra	00000000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10422	Batatal	28585000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9673	Santa Teresinha De Piracicaba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10544	Ipituna	28557000	RJ	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7177	Acari	59370000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7178	Açu	59650000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7179	Afonso Bezerra	59510000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7180	Água Nova	59995000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7181	Alexandria	59965000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7182	Almino Afonso	59760000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7183	Alto Do Rodrigues	59507000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7184	Angicos	59515000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7185	Antônio Martins	59870000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7186	Apodi	59700000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7187	Areia Branca	59655000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7188	Arez	59170000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7189	Baía Formosa	59194000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7190	Barão De Serra Branca	59522000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7191	Baraúna	59695000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7192	Barcelona	59410000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7193	Belo Horizonte	59558000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7194	Bento Fernandes	59555000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7195	Boa Saúde	59260000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7196	Bodó	59528000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7197	Bom Jesus	59270000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7198	Brejinho	59219000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7199	Caiçara Do Norte	59592000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7200	Caiçara Do Rio Do Vento	59540000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7201	Caicó	59300000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7202	Campo Grande	59680000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7203	Campo Redondo	59230000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7204	Canguaretama	59190000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7205	Caraúbas	59780000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7206	Carnaúba Dos Dantas	59374000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7207	Carnaubais	59665000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7208	Ceará-Mirim	59570000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7209	Cerro Corá	59395000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7210	Coronel Ezequiel	59220000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7211	Coronel João Pessoa	59930000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7212	Córrego De São Mateus	59265000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7213	Cruzeta	59375000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7214	Currais Novos	59380000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7215	Doutor Severiano	59910000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7216	Encanto	59905000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7217	Equador	59355000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7218	Espírito Santo	59180000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7219	Espírito Santo Do Oeste	59660000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7220	Extremoz	59575000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7221	Felipe Guerra	59795000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7222	Fernando Pedroza	59517000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7223	Firmamento	59538000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7224	Florânia	59335000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7225	Francisco Dantas	59902000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7226	Frutuoso Gomes	59890000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7227	Galinhos	59596000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7228	Gameleira	59568000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7229	Goianinha	59173000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7230	Governador Dix-Sept Rosado	59790000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7231	Grossos	59675000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7232	Guamaré	59598000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7233	Ielmo Marinho	59490000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7234	Igreja Nova	59299000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7235	Ipanguaçu	59508000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7236	Ipiranga	59275500	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7237	Ipueira	59315000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7238	Itajá	59513000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7239	Itaú	59855000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7240	Jaçanã	59225000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7241	Jandaíra	59594000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7242	Janduís	59690000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7243	Japi	59213000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7244	Jardim De Angicos	59544000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7245	Jardim De Piranhas	59324000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7246	Jardim Do Seridó	59343000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7247	João Câmara	59550000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7248	João Dias	59880000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7249	José Da Penha	59980000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7250	Jucurutu	59330000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7251	Jundiá	59188000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7252	Lagoa D`anta	59227000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7253	Lagoa De Pedras	59244000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7254	Lagoa De Velhos	59430000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7255	Lagoa Nova	59390000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7256	Lagoa Salgada	59247000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7257	Lajes	59535000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7258	Lajes Pintadas	59235000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7259	Lucrécia	59805000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7260	Luís Gomes	59940000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7261	Macaíba	59280000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7262	Macau	59500000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7263	Major Felipe	59985000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7264	Major Sales	59945000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7265	Marcelino Vieira	59970000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7266	Martins	59800000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7267	Mata De São Braz	59958000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7268	Maxaranguape	59580000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7269	Messias Targino	59775000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7270	Montanhas	59198000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7271	Monte Alegre	59182000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7272	Monte Das Gameleiras	59217000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7273	Mossoró	00000000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7274	Natal	00000000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7275	Nísia Floresta	59164000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7276	Nova Cruz	59215000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7277	Olho-D`água Do Borges	59730000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7278	Ouro Branco	59347000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7279	Paraná	59950000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7280	Parazinho	59586000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7281	Parelhas	59360000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7282	Parnamirim	00000000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7283	Passa E Fica	59218000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7284	Passagem	59259000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7285	Patu	59770000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7286	Pau Dos Ferros	59900000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7287	Pedra Grande	59588000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7288	Pedra Preta	59547000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7289	Pedro Avelino	59530000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7290	Pedro Velho	59196000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7291	Pendências	59504000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7292	Pilões	59960000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7293	Poço Branco	59560000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7294	Portalegre	59810000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7295	Porto Do Mangue	59668000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7296	Pureza	59582000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7297	Rafael Fernandes	59990000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7298	Rafael Godeiro	59740000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7299	Riacho Da Cruz	59820000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7300	Riacho De Santana	59987000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7301	Riachuelo	59470000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7302	Rio Do Fogo	59578000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7303	Rodolfo Fernandes	59830000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7304	Rosário	59885000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7305	Ruy Barbosa	59420000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7306	Salva Vida	59803000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7307	Santa Cruz	59200000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7308	Santa Fé	59189000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7309	Santa Maria	59464000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7310	Santa Teresa	59526000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7311	Santana Do Matos	59520000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7312	Santana Do Seridó	59350000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7313	Santo Antônio	59255000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7314	Santo Antônio Do Potengi	59298000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7315	São Bento Do Norte	59590000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7316	São Bento Do Trairi	59210000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7317	São Bernardo	59943000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7318	São Fernando	59327000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7319	São Francisco Do Oeste	59908000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7320	São Geraldo	59785000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7321	São Gonçalo Do Amarante	59290000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7322	São João Do Sabugi	59310000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7323	São José Da Passagem	59524000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7324	São José De Mipibu	59162000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7486	Atiaçu	99565000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7325	São José Do Campestre	59275000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7326	São José Do Seridó	59378000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7327	São Miguel	59920000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7328	São Miguel De Touros	59585000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7329	São Paulo Do Potengi	59460000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7330	São Pedro	59480000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7331	São Rafael	59518000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7332	São Tomé	59400000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7333	São Vicente	59340000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7334	Senador Elói De Souza	59250000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7335	Senador Georgino Avelino	59168000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7336	Serra Caiada	59245000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7337	Serra Da Tapuia	59445000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7338	Serra De São Bento	59214000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7339	Serra Do Mel	59663000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7340	Serra Negra Do Norte	59318000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7341	Serrinha	59258000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7342	Serrinha Dos Pintos	59808000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7343	Severiano Melo	59856000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7344	Sítio Novo	59440000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7345	Taboleiro Grande	59840000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7346	Taipu	59565000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7347	Tangará	59240000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7348	Tenente Ananias	59955000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7349	Tenente Laurentino Cruz	59338000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7350	Tibau	59678000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7351	Tibau Do Sul	59178000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7352	Timbaúba Dos Batistas	59320000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7353	Touros	59584000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7354	Trairi	59242000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7355	Triunfo Potiguar	59685000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7356	Umarizal	59865000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7357	Upanema	59670000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7358	Várzea	59185000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7359	Venha-Ver	59925000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7360	Vera Cruz	59184000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7361	Viçosa	59815000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7362	Vila Flor	59192000	RN	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9674	Santana Da Ponte Pensa	15765000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7442	Afonso Rodrigues	97825000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7443	Água Santa	99965000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7444	Águas Claras	94760000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9675	Santana De Parnaíba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7446	Ajuricaba	98750000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7447	Albardão	96670000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7448	Alecrim	98950000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7449	Alegrete	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7450	Alegria	98905000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7451	Alfredo Brenner	98210000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7452	Almirante Tamandaré Do Sul	99523000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7453	Alpestre	98480000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7454	Alto Alegre	99430000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9676	Santelmo	17288000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7456	Alto Da União	98713000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7457	Alto Feliz	95773000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7458	Alto Paredão	96853000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7459	Alto Recreio	99673000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7460	Alto Uruguai	98630000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7461	Alvorada	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7462	Amaral Ferrador	96635000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7463	Ametista Do Sul	98465000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7464	André Da Rocha	95310000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7465	Anta Gorda	95980000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7466	Antônio Kerpel	98583000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7467	Antônio Prado	95250000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7468	Arambaré	96178000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7469	Araricá	93880000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7470	Aratiba	99770000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7471	Arco Verde	95186000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7472	Arco-Íris	98393000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7473	Arroio Canoas	95733000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7474	Arroio Do Meio	95940000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7475	Arroio Do Padre	96155000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7476	Arroio Do Sal	95585000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7477	Arroio Do Só	97165000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7478	Arroio Do Tigre	96950000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7479	Arroio Dos Ratos	96740000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7480	Arroio Grande	96330000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9677	Santo Anastácio	19360000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9678	Santo André	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7483	Árvore Só	96240000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7484	Arvorezinha	95995000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7485	Atafona	98830000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7487	Augusto Pestana	98740000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7488	Áurea	99835000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7489	Avelino Paranhos	99425000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7490	Azevedo Sodré	97330000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7491	Bacupari	95549000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7492	Bagé	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7493	Baliza	99833000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7494	Balneário Pinhal	95599000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7495	Banhado Do Colégio	96188000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7496	Barão	95730000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7497	Barão De Cotegipe	99740000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7498	Barão Do Triunfo	96735000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7499	Barra Do Guarita	98530000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7500	Barra Do Ouro	95532000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7501	Barra Do Quaraí	97538000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7502	Barra Do Ribeiro	96790000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7503	Barra Do Rio Azul	99795000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7504	Barra Funda	99585000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7505	Barracão	95370000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7506	Barreirinho	99575000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7507	Barreiro	98712000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7508	Barro Preto	98753000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7509	Barro Vermelho	96526000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9679	Santo Antônio Da Alegria	14390000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7511	Barros Cassal	99360000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7512	Basílio	96320000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7513	Bela Vista	99885000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9680	Santo Antônio Da Estiva	16603000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9681	Santo Antônio De Posse	13830000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9682	Santo Antônio Do Aracanguá	16130000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7517	Beluno	97620000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7518	Benjamin Constant Do Sul	99650000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7519	Bento Gonçalves	95700000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7520	Bexiga	96680000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7521	Boa Esperança	95693000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7522	Boa Vista	95751000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9683	Santo Antônio Do Jardim	13995000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9684	Santo Antônio Do Paranapanema	19890000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7525	Boa Vista Das Missões	98335000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7526	Boa Vista Do Buricá	98918000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7527	Boa Vista Do Cadeado	98118000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7528	Boa Vista Do Incra	98120000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7529	Boa Vista Do Sul	95727000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7530	Boca Do Monte	97170000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7531	Boi Preto	99555000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7532	Bojuru	96228000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7533	Bom Jardim	96578000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7534	Bom Jesus	95290000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7535	Bom Princípio	95765000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7536	Bom Progresso	98575000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7537	Bom Retiro	95495000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7538	Bom Retiro Do Guaíba	92800000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7539	Bom Retiro Do Sul	95870000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7540	Bonito	96181000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7541	Boqueirão	95830000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9685	Santo Antônio Do Pinhal	12450000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7543	Boqueirão Do Leão	95920000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7544	Bororé	97653000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9686	Santo Antônio Paulista	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7546	Botucaraí	96935000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7547	Braga	98560000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7548	Brochier	95790000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7549	Buriti	98825000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7550	Butiá	96750000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7551	Butiás	96293000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9687	Santo Expedito	19190000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7553	Cacequi	97450000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7554	Cachoeira Do Sul	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7555	Cachoeirinha	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7556	Cacique Doble	99860000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7557	Cadorna	95987000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7558	Caibaté	97930000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7559	Caiçara	98440000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7560	Camaquã	96180000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7561	Camargo	99165000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7562	Cambará Do Sul	95480000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7563	Camobi	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7564	Campestre Baixo	95752000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7565	Campestre Da Serra	95255000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7566	Campina Das Missões	98975000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7567	Campina Redonda	99405000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7568	Campinas	98255000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7569	Campinas Do Sul	99660000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7570	Campo Bom	93700000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7571	Campo Branco	95926000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7572	Campo Do Meio	99185000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7573	Campo Novo	98570000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9688	Santópolis Do Aguapeí	16240000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7575	Campo Santo	98585000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7576	Campo Seco	97592000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7577	Campo Vicente	93893000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7578	Campos Borges	99435000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7580	Cândido Freire	98880000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7581	Cândido Godói	98970000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7582	Candiota	96495000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7583	Canela	95680000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7584	Canguçu	96600000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7585	Canhembora	97270000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7586	Canoas	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7587	Canudos Do Vale	95933000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7588	Capané	96524000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7589	Capão Bonito Do Sul	95308000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7590	Capão Bonito	99447000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7591	Capão Comprido	96295000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7592	Capão Da Canoa	95555000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7593	Capão Da Porteira	94770000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7594	Capão Do Cedro	95304500	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7595	Capão Do Cipó	97753000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7596	Capão Do Leão	96160000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7597	Capela De Santana	95745000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7598	Capela Velha	96183000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7599	Capinzal	99686000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7600	Capitão	95935000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7601	Capivari Do Sul	95552000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7602	Capivarita	96695000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7603	Capo-Erê	99717000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7604	Capoeira Grande	98525000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7605	Caraá	95515000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7606	Carajá Seival	96580000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7607	Carazinho	99500000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7608	Carlos Barbosa	95185000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7609	Carlos Gomes	99825000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7610	Carovi	97733000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7611	Casca	99260000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7612	Cascata	98922000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9690	São Benedito Da Cachoeirinha	14505000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7614	Caseiros	95315000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7615	Castelinho	98405000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7616	Catuípe	98770000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7617	Cavajureta	97440000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7618	Caverá	97594000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7619	Caxias Do Sul	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7620	Cazuza Ferreira	95450000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7621	Cedro Marcado	98520000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7622	Centenário	99838000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9691	São Benedito Das Areias	13755000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7624	Centro Linha Brasil	95808000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7625	Cerrito	96395000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7626	Cerrito Alegre	96105000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7627	Cerrito Do Ouro Ou Vila Do Cerrito	97370000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7628	Cerro Alto	98943000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7629	Cerro Branco	96535000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7630	Cerro Claro	97403000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7631	Cerro Do Martins	96575000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7632	Cerro Do Roque	96753000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7633	Cerro Grande	98340000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7634	Cerro Grande Do Sul	96770000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7635	Cerro Largo	97900000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7636	Chapada	99530000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7638	Charqueadas	96745000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7639	Charrua	99960000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7640	Chiapetta	98760000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7641	Chicolomã	95508000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7642	Chimarrão	95312000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7643	Chorão	98720000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7644	Chuí	96255000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7645	Chuvisca	96193000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7646	Cidreira	95595000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7647	Cinqüentenário	98946000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7648	Ciríaco	99970000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7649	Clara	97415000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7650	Clemente Argolo	95302000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7651	Coimbra	98868000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7652	Colinas	95895000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7653	Colônia Das Almas	98775000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7654	Colônia Medeiros	98916000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7655	Colônia Municipal	98844000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7656	Colônia Nova	96439000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7657	Colônia São João	98122000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7658	Colônia Z-3	96130000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7659	Coloninha	96980000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7660	Colorado	99460000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7661	Comandai	98841000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7662	Condor	98290000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7663	Consolata	98914000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7664	Constantina	99680000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7665	Coqueiro Baixo	95955000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7666	Coqueiros Do Sul	99528000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7667	Cordilheira	96528000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7668	Coroados	98598000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7669	Coronel Barros	98735000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7670	Coronel Bicaco	98580000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7671	Coronel Finzito	98395000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7672	Coronel Pilar	95726000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7673	Coronel Teixeira	99805000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7674	Cortado	96550000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7675	Costa Da Cadeia	95855000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7676	Costão	95882000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7677	Cotiporã	95335000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7678	Coxilha	99145000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7679	Coxilha Grande	95223000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7680	Cr-1	95547000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7681	Crissiumal	98640000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7682	Cristal	96195000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7683	Cristal Do Sul	98368000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7684	Criúva	95143000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7685	Cruz Alta	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7686	Cruzaltense	99665000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7687	Cruzeiro	98478000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7688	Cruzeiro Do Sul	95930000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7689	Curral Alto	96245000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7690	Curumim	95558000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7691	Daltro Filho	95888000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9692	São Bento Do Sapucaí	12490000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9693	São Bernardo Do Campo	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7694	Dário Lassance	96444000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7695	David Canabarro	99980000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7696	Delfina	95884000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7697	Deodoro	95810000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7698	Depósito	99420000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7699	Derrubadas	98528000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7700	Dezesseis De Novembro	97845000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7701	Dilermando De Aguiar	97180000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7702	Divino	98474000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9694	São Berto	18785000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7704	Dois Irmãos Das Missões	98385000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7705	Dois Lajeados	99220000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7706	São José Do Sul	95748000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7707	Dom Feliciano	96190000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9695	São Caetano Do Sul	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7709	Dom Pedrito	96450000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7710	Dom Pedro De Alcântara	95568000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7711	Dona Francisca	97280000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7712	Dona Otília	97973000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7713	Dourado	99775000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7714	Bozano	98733000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7715	Doutor Edgardo Pereira Velho	96280000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7716	Doutor Maurício Cardoso	98925000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7717	Doutor Ricardo	95967000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7718	Eldorado Do Sul	92990000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7719	Eletra	95435000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9696	São Carlos	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7721	Encruzilhada	97665000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7722	Encruzilhada Do Sul	96610000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7723	Engenho Velho	99698000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7724	Entre Rios Do Sul	99645000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7725	Entre-Ijuís	98855000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7726	Entrepelado	95605000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7727	Erebango	99920000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9697	São Francisco	15710000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7729	Ernestina	99140000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7730	Ernesto Alves	97750000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7731	Erval Grande	99750000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7732	Erval Seco	98390000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7733	Erveiras	96868000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7734	Esmeralda	95380000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7735	Esperança Do Sul	98635000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7736	Espigão	94740000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7737	Espigão Alto	95375000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7738	Espinilho Grande	98173000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7739	Espírito Santo	98907000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7740	Espumoso	99400000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7741	Esquina Araújo	98917000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7742	Esquina Bom Sucesso	98777000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7743	Esquina Gaúcha	98655000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9698	São Francisco Da Praia	11610000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7745	Esquina Ipiranga	98885000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7746	Esquina Piratini	97865000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7747	Estação	99930000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7748	Estância Grande	94890000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7749	Estância Velha	93600000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7750	Esteio	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7751	Esteira	95218000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7752	Estreito	96227000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7753	Estrela	95880000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9699	São Francisco Xavier	12249000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7755	Estrela Velha	96990000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7756	Eugênio De Castro	98860000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7757	Evangelista	99262000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7758	Fagundes Varela	95333000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7759	Fão	95914000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7760	Faria Lemos	95713000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7761	Farinhas	98490000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7762	Farrapos	99872000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7763	Farroupilha	95180000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7764	Faxinal	99357000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7765	Faxinal Do Soturno	97220000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7766	Faxinalzinho	99655000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7767	Fazenda Fialho	95608000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7768	Fazenda Souza	95125000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7769	Fazenda Vilanova	95875000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7770	Feliz	95770000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7771	Ferreira	96521000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7772	Flores Da Cunha	95270000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7773	Floresta	98710000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9700	São João Da Boa Vista	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7775	Floriano Peixoto	99910000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7776	Flórida	97725000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9701	São João Das Duas Pontes	15640000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7778	Formigueiro	97210000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7779	Formosa	96871000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7780	Forninho	96583000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7781	Forquetinha	95937000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7782	Fortaleza Dos Valos	98125000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7783	Frederico Westphalen	98400000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7784	Frei Sebastião	95551000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7785	Freire	96390000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7786	Garibaldi	95720000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7787	Garibaldina	95723000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7788	Garruchos	97690000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7789	Gaurama	99830000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7790	General Câmara	95820000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7791	Gentil	99160000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7792	Getúlio Vargas	99900000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7793	Giruá	98870000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7794	Glória	95565000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7795	Glorinha	94380000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7796	Goio-En	99752000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7797	Gramado	95670000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7798	Gramado Dos Loureiros	99605000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7799	Gramado São Pedro	99375000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7800	Gramado Xavier	96875000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7801	Gravataí	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7802	Guabiju	95355000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7803	Guaíba	92500000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7804	Guajuviras	92455000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7805	Guaporé	99200000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7806	Guarani Das Missões	97950000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7807	Guassupi	97408000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7808	Harmonia	95785000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7809	Herval	96310000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7810	Herveiras	96888000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7811	Hidráulica	96163000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7812	Horizontina	98920000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7813	Hulha Negra	96460000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7814	Humaitá	98670000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7815	Ibarama	96925000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7816	Ibaré	97395000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7817	Ibiaçá	99940000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7818	Ibiraiaras	95305000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7819	Ibirapuitã	99320000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7820	Ibirubá	98200000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9702	São João De Iracema	15315000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9703	São João De Itaguaçu	15855000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7823	Ijucapirama	97763000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7824	Ijuí	98700000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7825	Ilha Dos Marinheiros	96223000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7826	Ilópolis	95990000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7827	Imbé	95625000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7828	Imigrante	95885000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7829	Independência	98915000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7830	Inhacorá	98765000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7831	Ipê	95240000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7832	Ipiranga	94370000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7833	Ipiranga Do Sul	99925000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7834	Ipuaçu	98445000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7835	Iraí	98460000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7837	Itaara	97185000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7838	Itacolomi	94330000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7839	Itacurubi	97685000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9704	São João Do Marinheiro	15575000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7841	Itaí	98717000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7842	Itaimbezinho	95296000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7843	Itão	97660000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7844	Itapuã	94750000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7845	Itapucá	95997000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7847	Itaqui	97650000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7848	Itati	95538000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7849	Itatiba Do Sul	99760000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7850	Itaúba	96960000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7851	Ituim	95225000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7852	Ivaí	97855000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7853	Ivorá	98160000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9705	São João Do Pau D`alho	17970000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7855	Jaboticaba	98350000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7856	Jacuizinho	99457000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7857	Jacutinga	99730000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7858	Jaguarão	96300000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7859	Jaguarete	99715000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7860	Jaguari	97760000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7861	Jansen	95181000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7862	Jaquirana	95420000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7863	Jari	98175000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7864	Jazidas Ou Capela São Vicente	97380000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7865	João Arregui	97530000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7866	João Rodrigues	96665000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7867	Joça Tavares	96435000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7868	Jóia	98180000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7869	José Otávio	96431000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7870	Juá	95430000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7871	Júlio De Castilhos	98130000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7872	Lagoa Bonita Do Sul	96920000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7873	Lagoa Dos Três Cantos	99495000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7874	Lagoa Vermelha	95300000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7875	Lagoão	99340000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7876	Lajeado	95900000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7877	Lajeado Bonito	95338000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9706	São João Novo	18140000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7879	Lajeado Cerne	98845000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7880	Lajeado Do Bugre	98320000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7881	Lajeado Grande	98650000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9707	São Joaquim Da Barra	14600000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7883	Lara	98603000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7884	Laranjeira	98455000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7885	Lava-Pés	97735000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7886	Lavras Do Sul	97390000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7887	Leonel Rocha	98333000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7888	Liberato Salzano	99690000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7889	Lindolfo Collor	93940000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7890	Linha Comprida	95754000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7891	Linha Nova	95768000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7892	Linha Vitória	99513000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7893	Loreto	97430000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7894	Maçambará	97645000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7895	Machadinho	99880000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7896	Magistério	95597000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7897	Mampituba	95572000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7898	Manchinha	98912000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7899	Mangueiras	97596000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7900	Manoel Viana	97640000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7901	Maquiné	95530000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9708	São José Da Bela Vista	14440000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7903	Marau	99150000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9709	São José Das Laranjeiras	19845000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7905	Marcorama	95725000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7906	Mariana Pimentel	92900000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7907	Mariano Moro	99790000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7908	Mariante	95815000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7909	Mariápolis	95527000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7910	Marques De Souza	95923000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7911	Mata	97410000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7912	Matarazzo	96370000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7913	Mato Castelhano	99180000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7914	Mato Grande	98890000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7915	Mato Leitão	95835000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7916	Mato Queimado	97935000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7917	Mauá	96335000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9710	São José Do Barreiro	12830000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7919	Maximiliano De Almeida	99890000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7920	Medianeira	98755000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7921	Minas Do Leão	96755000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7922	Miraguaí	98540000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7923	Miraguaia	95510000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7924	Mirim	96250000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9711	São José Do Rio Pardo	13720000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7926	Montauri	99255000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7927	Monte Alegre	95828000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9712	São José Do Rio Preto	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7929	Monte Alegre Dos Campos	95236000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7930	Monte Alverne	96859000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7931	Monte Belo Do Sul	95718000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7932	Monte Bonito	96115000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7934	Mormaço	99315000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7935	Morrinhos	96720000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7936	Morrinhos Do Sul	95577000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7937	Morro Alto	95534000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7938	Morro Azul	95583000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7939	Morro Redondo	96150000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7940	Morro Reuter	93990000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7941	Morungava	94360000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9713	São José Dos Campos	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7943	Muçum	95970000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7944	Muitos Capões	95230000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7945	Muliterno	99990000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7946	Não-Me-Toque	99470000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7947	Nazaré	97745000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7948	Nicolau Vergueiro	99175000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7949	Nonoai	99600000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7950	Nossa Senhora Aparecida	98260000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7951	Nossa Senhora Da Conceição	95763000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7952	Nova Alvorada	95985000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7953	Nova Araçá	95350000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7954	Nova Bassano	95340000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7955	Nova Boa Vista	99580000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7956	Nova Bréscia	95950000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7957	Nova Candelária	98919000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7958	Nova Esperança Do Sul	97770000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7959	Nova Hartz	93890000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7960	Nova Milano	95182000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7961	Nova Pádua	95275000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7962	Nova Palma	97250000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7963	Nova Petrópolis	95150000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7964	Nova Prata	95320000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7965	Nova Ramada	98758000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7966	Nova Roma Do Sul	95260000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7967	Nova Santa Rita	92480000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7968	Nova Sardenha	95183000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7969	Novo Barreiro	98338000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7970	Novo Cabrais	96545000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7971	Novo Hamburgo	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7972	Novo Horizonte	99448000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7973	Novo Machado	98955000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7974	Novo Planalto	98688000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7975	Novo Tiradentes	98370000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7976	Vila Oliva	95135000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7977	Oralina	99449000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7978	Osório	95520000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7979	Osvaldo Cruz	98403000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7980	Osvaldo Kroeff	95485000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7981	Otávio Rocha	95272000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7982	Pacheca	96185000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7983	Padilha	95610000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7984	Padre Gonzales	98620000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7985	Paim Filho	99850000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7986	Palmares Do Sul	95540000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7987	Palmas	96437000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7988	Palmeira Das Missões	98300000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7989	Palmitinho	98430000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7990	Pampeiro	97585000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7991	Panambi	98280000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7992	Pântano Grande	96690000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7993	Paraí	95360000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7994	Paraíso Do Sul	96530000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7995	Pareci Novo	95783000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7996	Parobé	95630000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7997	Passa Sete	96908000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7998	Passinhos	95525000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7999	Passo Burmann	98776000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8000	Passo Da Areia	94780000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8001	Passo Da Caveira	94335000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8002	Passo Das Pedras	96165000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8003	Passo Do Adão	96675000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8004	Passo Do Sabão	94730000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8005	Passo Do Sobrado	96685000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8006	Passo Fundo	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8007	Passo Novo	97555000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8008	Passo Raso	95850000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8009	Paulo Bento	99718000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8010	Pavão	96168000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8011	Paverama	95865000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8012	Pedras Altas	96487000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8013	Pedreiras	96340000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8014	Pedro Garcia	98565000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8015	Pedro Osório	96360000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8016	Pedro Paiva	98593000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8017	Pejuçara	98270000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8018	Pelotas	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8019	Picada Café	95175000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8020	Pinhal	98345000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9551	Pirapitingui	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9552	Pirapora Do Bom Jesus	06550000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9553	Pirapozinho	19200000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8024	Pinhal Alto	95160000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8025	Pinhal Da Serra	95390000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8026	Pinhal Grande	98150000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8027	Pinhalzinho	99754000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9554	Pirassununga	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8029	Pinheirinho Do Vale	98435000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8030	Pinheiro Machado	96470000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9555	Piratininga	17490000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8032	Pinheiro Marcado	99520000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8033	Pinto Bandeira	95712000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8034	Piraí	96443000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8035	Pirapó	97885000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8036	Piratini	96490000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8037	Pitanga	98926000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8038	Planalto	98470000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9556	Pitangueiras	14750000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8040	Plano Alto	97515000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8041	Poço Das Antas	95740000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8042	Polígono Do Erval	99353000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8043	Pólo Petroquímico De Triunfo	95853000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8044	Pontão	99190000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8045	Ponte Preta	99735000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8046	Portão	93180000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9557	Planalto	15260000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8048	Porto Batista	95845000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8049	Porto Lucena	98980000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8050	Porto Mauá	98947000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8051	Porto Vera Cruz	98985000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8052	Porto Xavier	98995000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8053	Pouso Novo	95945000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8054	Povo Novo	96224000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8055	Povoado Tozzo	99763000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8056	Pranchada	98928000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8057	Pratos	98936000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8058	Presidente Lucena	93945000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8059	Progresso	95925000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9559	Planalto Do Sul	19295000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9560	Platina	19990000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9561	Poá	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8063	Protásio Alves	95345000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8064	Pulador	99130000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8065	Putinga	95975000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8066	Quaraí	97560000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8067	Quaraim	98913000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8068	Quatro Irmãos	99720000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8069	Quevedos	98140000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8070	Quilombo	96145000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8071	Quinta	96222000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8072	Quintão	95548000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8073	Quinze De Novembro	98230000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8074	Quitéria	96730000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8075	Rancho Velho	95543000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8076	Redentora	98550000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8077	Refugiado	95215000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8078	Relvado	95965000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8079	Restinga Seca	97200000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9562	Poloni	15160000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8081	Rincão De São Pedro	97815000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8082	Rincão Del Rei	96660000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8083	Rincão Do Cristóvão Pereira	96275000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8084	Rincão Do Meio	97680000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8085	Rincão Do Segredo	99510000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8086	Rincão Doce	99475000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8087	Rincão Dos Kroeff	95410000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8088	Rincão Dos Mendes	98832000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8089	Rincão Vermelho	97975000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8090	Rio Azul	99773000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8091	Rio Branco	95322000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8092	Rio Da Ilha	95614000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8093	Rio Dos Índios	99610000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8094	Rio Grande	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8095	Rio Pardinho	96856000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8096	Rio Pardo	96640000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8097	Rio Telha	99943000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8098	Rio Tigre	99845000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8099	Rio Toldo	99904000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8100	Riozinho	95695000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8101	Roca Sales	95735000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8102	Rodeio Bonito	98360000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8103	Rolador	97843000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8104	Rolante	95690000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8105	Rolantinho Da Figueira	95692000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8106	Ronda Alta	99670000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8107	Rondinha	99590000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8108	Roque Gonzales	97970000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8109	Rosário	98745000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8110	Rosário Do Sul	97590000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8111	Sagrada Família	98330000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8112	Saicã	97455000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8113	Saldanha Marinho	98250000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8114	Saltinho	99765000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9563	Polvilho	07770000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8116	Salto	98725000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8117	Salto Do Jacuí	99440000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8118	Salvador Das Missões	97940000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8119	Salvador Do Sul	95750000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8120	Sananduva	99840000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8121	Sant`auta	96186000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8122	Santa Bárbara	96585000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9564	Pompéia	17580000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8124	Santa Bárbara Do Sul	98240000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8125	Santa Catarina	97945000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8126	Santa Cecília Do Sul	99952000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8127	Santa Clara Do Ingaí	98234000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8128	Santa Clara Do Sul	95915000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8129	Santa Cristina	95640000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8130	Santa Cruz	98476000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8131	Santa Cruz Da Concórdia	95620000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8132	Santa Cruz Do Sul	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8133	Santa Flora	97160000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8134	Santa Inês	97820000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8135	Santa Izabel Do Sul	96350000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8136	Santa Lúcia	98722000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8137	Santa Lúcia Do Piaí	95130000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8138	Santa Luíza	95187000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8139	Santa Luzia	95301000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8140	Santa Maria	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8141	Santa Maria Do Herval	93995000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8142	Santa Rita Do Sul	96187000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8143	Santa Rosa	98900000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9565	Pongaí	16660000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8145	Santa Silvana	96110000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8146	Santa Teresinha	98319000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8147	Santa Tereza	95715000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9566	Pontal	14180000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8149	Santa Vitória Do Palmar	96230000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8150	Santana	99550000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9567	Pontalinda	15718000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9568	Pontes Gestal	15560000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8153	Santana Da Boa Vista	96590000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8154	Santana Do Livramento	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8155	Santiago	97700000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8156	Santo Amaro Do Sul	95823000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8157	Santo Ângelo	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8158	Santo Antônio	97915000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9569	Populina	15670000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9570	Porangaba	18260000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8161	Santo Antônio Da Patrulha	95500000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8162	Santo Antônio Das Missões	97870000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8163	Santo Antônio De Castro	95188000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8164	Santo Antônio Do Bom Retiro	98220000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8165	Santo Antônio Do Palma	99265000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8166	Santo Antônio Do Planalto	99525000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8167	Santo Augusto	98590000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8168	Santo Cristo	98960000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8169	Santo Expedito Do Sul	99895000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8170	Santo Inácio	95298000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8172	São Bom Jesus	98394000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8173	São Borja	97670000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8174	São Carlos	97598000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8175	São Domingos Do Sul	99270000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8176	São Francisco	97913000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9571	Porto Feliz	18540000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8178	São Francisco De Paula	95400000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8179	São Gabriel	97300000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9572	Porto Ferreira	13660000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8181	São João	98555000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8182	São João Batista	98853000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8183	São João Bosco	99975000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8184	São João Da Urtiga	99855000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8185	São João Do Polesine	97230000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8186	São Jorge	95365000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8187	São José	98477000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9573	Porto Novo	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8189	São José Da Glória	99355000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8190	São José Das Missões	98325000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8191	São José De Castro	95722000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8192	São José Do Centro	99480000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8193	São José Do Herval	99380000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8194	São José Do Hortêncio	95755000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8195	São José Do Inhacorá	98958000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8196	São José Do Norte	96225000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8197	São José Do Ouro	99870000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8198	São José Dos Ausentes	95280000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8199	São Leopoldo	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8200	São Lourenço Das Missões	97840000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8201	São Lourenço Do Sul	96170000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8202	São Luís Rei	99865000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8203	São Luiz	98472000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8204	São Luiz Gonzaga	97800000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8205	São Manuel	95220000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8206	São Marcos	95190000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9574	Potim	12525000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8208	São Martinho	98690000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8209	São Martinho Da Serra	97190000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8210	São Miguel	99540000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8211	São Miguel Das Missões	98865000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8212	São Nicolau	97880000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8213	São Paulo	95244000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8214	São Paulo Das Missões	97980000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8215	São Pedro	95714000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8216	São Pedro Das Missões	98323000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8217	São Pedro Da Serra	95758000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8218	São Pedro Do Butiá	97920000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8219	São Pedro Do Iraxim	99875000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8220	São Pedro Do Sul	97400000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8221	São Roque	99125000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8222	São Sebastião	95385000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9575	Potirendaba	15105000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8224	São Sebastião Do Caí	95760000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8225	São Sepé	97340000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8226	São Simão	96285000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8227	São Valentim	99640000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9576	Potunduva	17220000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8229	São Valentim Do Sul	99240000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8230	São Valério Do Sul	98595000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8231	São Vendelino	95795000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8232	São Vicente Do Sul	97420000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8233	Sapiranga	93800000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8234	Sapucaia Do Sul	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8235	Sarandi	99560000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8236	Scharlau	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8237	Seberi	98380000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8238	Vila Seca	95140000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8239	Sede Aurora	98232000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8240	Sede Nova	98675000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8241	Segredo	96910000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9577	Pracinha	17790000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8243	Seival	96441000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8244	Selbach	99450000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8245	Senador Salgado Filho	98895000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8246	Sentinela Do Sul	96765000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8247	Serafim Schmidt	96894000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8248	Serafina Corrêa	99250000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8249	Sério	95918000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8250	Serra Dos Gregórios	95388000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8251	Serrinha	97810000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8252	Sertão	99170000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8253	Sertão Santana	92850000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8254	Sertãozinho	98485000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8255	Sete De Setembro	97960000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9578	Pradínia	16606000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9579	Pradópolis	14850000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8258	Sete Lagoas	99768000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8259	Severiano De Almeida	99810000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8260	Silva Jardim	99253000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8261	Silveira	95285000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8262	Silveira Martins	97195000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8263	Sinimbu	96890000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8264	Sírio	98962000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8265	Sítio Gabriel	98543000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9580	Praia Grande	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9581	Pratânia	18660000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8268	Souza Ramos	99908000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9587	Primavera	19274000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8269	Suspiro	97320000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8270	Tabaí	95863000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8271	Tabajara	99445000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8272	Taim	96221000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8273	Tainhas	95405000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8274	Tamanduá	96915000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8275	Tanque	99876000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8276	Tapejara	99950000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8277	Tapera	99490000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9582	Presidente Alves	16670000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8279	Tapes	96760000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8280	Taquara	95600000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8281	Taquari	95860000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8282	Taquarichim	97765000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8283	Taquaruçu Do Sul	98410000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8284	Tavares	96290000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8285	Tenente Portela	98500000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8286	Terra De Areia	95535000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8287	Tesouras	99535000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8288	Teutônia	95890000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8289	Tiaraju	97310000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8290	Timbaúva	97860000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8291	Tiradentes Do Sul	98680000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8292	Toropi	97418000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8293	Toroquá	97630000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8294	Torquato Severo	96455000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8295	Torres	95560000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8296	Torrinhas	96485000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8297	Touro Passo	97595000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8298	Tramandaí	95590000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8299	Travesseiro	95948000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8300	Trentin	98355000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8301	Três Arroios	99725000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8302	Três Barras	99778000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8303	Três Cachoeiras	95580000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8304	Três Coroas	95660000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8305	Três De Maio	98910000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8306	Três Forquilhas	95575000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8307	Três Palmeiras	99675000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8308	Três Passos	98600000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8309	Três Vendas	96511000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8310	Trindade Do Sul	99615000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8311	Triunfo	95840000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8312	Tronqueiras	98545000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9583	Presidente Bernardes	19300000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8314	Tuiuti	95710000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8315	Tunas	99330000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8316	Túnel Verde	95598000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8317	Tupanci Do Sul	99878000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8318	Tupanciretã	98170000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8319	Tupancy Ou Vila Block	97350000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8320	Tupandi	95775000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8321	Tupantuba	97743000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8322	Tuparendi	98940000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8323	Tupi Silveira	96465000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8324	Tupinambá	95304000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8325	Turuçu	96148000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8326	Turvinho	98588000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8327	Ubiretama	98898000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8328	Umbu	97460000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8329	União Da Serra	99215000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8330	Unistalda	97755000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8331	Uruguaiana	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8332	Vacacai	97305000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8333	Vacaria	95200000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8334	Valdástico	95964000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8335	Vale Do Rio Cai	95170000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8336	Vale Do Sol	96878000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8337	Vale Real	95778000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8338	Vale Veneto	97235000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8339	Vale Verde	95833000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8340	Vanini	99290000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8341	Venâncio Aires	95800000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8342	Vera Cruz	96880000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8343	Veranópolis	95330000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8344	Vertentes	97520000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8345	Vespasiano Correa	95972000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8346	Viadutos	99820000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8347	Viamão	00000000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8348	Vicente Dutra	98450000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8349	Victor Graeff	99350000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8350	Vila Bender	98660000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8351	Vila Cruz	97260000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8352	Vila Flores	95334000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8353	Vila Langaro	99955000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8354	Vila Laranjeira	98968000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8355	Vila Maria	99155000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8356	Vila Nova Do Sul	97385000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8357	Vila Rica	99545000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9584	Presidente Epitácio	19470000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8359	Vila Turvo	98573000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8360	Vista Alegre	98415000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9585	Presidente Prudente	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8362	Vista Alegre Do Prata	95325000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8363	Vista Gaúcha	98535000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8364	Vitória	99945000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8365	Vitória Das Missões	98850000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8366	Volta Alegre	99410000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8367	Volta Fechada	99785000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8368	Volta Grande	98495000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8369	Xadrez	99522000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8370	Xangri-Lá	95588000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8371	Novo Xingu	99687000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10154	Westfália	95893000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10155	Santa Margarida Do Sul	97335000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10156	Tio Hugo	99345000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10705	Passo Do Verde	97150000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10892	Mato Perso	95274000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7363	Abunã	78929000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7364	Alto Alegre Dos Parecis	78994800	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7365	Alta Floresta Do Oeste	78994000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7366	Alto Paraíso	78956000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7367	Alvorada D`oeste	78969000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7368	Ariquemes	00000000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7369	Buritis	78967800	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7370	Cabixi	78999000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7371	Cacaulândia	78944000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7372	Cacoal	00000000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7373	Calama	78925000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7374	Campo Novo De Rondônia	78967000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7375	Candeias Do Jamari	78938000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7376	Castanheiras	78992000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7377	Cerejeiras	78997000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7378	Chupinguaia	78995800	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7379	Colorado Do Oeste	78996000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7380	Corumbiara	78966000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7381	Costa Marques	78971000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7382	Cujubim	78945800	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7383	Espigão D`oeste	78983000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7384	Governador Jorge Teixeira	78946000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7385	Guajará-Mirim	78957000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7386	Jaci Paraná	78927000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7387	Itapuã Do Oeste	78937000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7388	Jaru	78940000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7389	Ji-Paraná	00000000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7390	Machadinho D`oeste	78948000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7391	Marco Rondon	78985000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7392	Ministro Andreazza	78981000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7393	Mirante Da Serra	78949000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7394	Monte Negro	78965000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7395	Nova Brasilândia D`oeste	78974000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7396	Nova Mamoré	78939000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7397	Nova União	78953000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7398	Nova Vida	78935000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7399	Novo Horizonte Do Oeste	78991000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7400	Ouro Preto Do Oeste	78950000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7401	Parecis	78989000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7402	Pedras Negras	78972500	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7403	Pimenta Bueno	78984000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7404	Pimenteiras Do Oeste	78998000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7405	Porto Velho	00000000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7406	Presidente Médici	78968000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7407	Primavera De Rondônia	78988000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7408	Príncipe Da Beira	78972000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7409	Rio Crespo	78945000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7410	Riozinho	78980000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7411	Rolim De Moura	78987000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7412	Santa Luzia D`oeste	78993000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7413	São Felipe D`oeste	78986000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7414	São Francisco Do Guaporé	78973000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7415	São Miguel Do Guaporé	78970000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7416	Seringueiras	78990000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7417	Tabajara	78936000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7418	Teixeirópolis	78954000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7419	Theobroma	78947000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7420	Urupá	78955000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7421	Vale Do Anari	78948800	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7422	Vale Do Paraíso	78959000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7423	Vila Extrema	78928000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7424	Vilhena	78995000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	7425	Vista Alegre Do Abunã	78926000	RO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9844	Abreulândia	77693000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9845	Aguiarnópolis	77908000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9846	Aliança Do Tocantins	77455000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9847	Almas	77310000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9848	Alvorada	77480000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9849	Anajanópolis	77712000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9850	Ananás	77890000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9851	Angico	77905000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9852	Aparecida Do Rio Negro	77620000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9853	Apinajé	77393000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9854	Aragaçuí	77683000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9855	Aragominas	77845000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9856	Araguacema	77690000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9857	Araguaçu	77475000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9858	Araguaína	00000000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9859	Araguanã	77855000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9860	Araguatins	77950000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9861	Arapoema	77780000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9862	Arraias	77330000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9863	Augustinópolis	77960000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9864	Aurora Do Tocantins	77325000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9865	Axixá Do Tocantins	77930000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9866	Babaçulândia	77870000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9867	Bandeirantes Do Tocantins	77783000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9868	Barra Do Grota	77835600	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9869	Barra Do Ouro	77765000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9870	Barrolândia	77665000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9871	Bernardo Sayão	77755000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9872	Bom Jesus Do Tocantins	77714000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9873	Brasilândia	77837400	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9874	Brasilândia Do Tocantins	77735000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9875	Brejinho De Nazaré	77560000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9876	Buriti Do Tocantins	77995000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9877	Cachoeirinha	77915000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9878	Campos Lindos	77777000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9879	Cana Brava	77333000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9880	Cariri Do Tocantins	77453000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9881	Carmolândia	77840000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9882	Carrasco Bonito	77985000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9883	Cartucho	77772000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9884	Caseara	77680000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9885	Centenário	77723000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9886	Chapada De Areia	77575000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9887	Chapada Da Natividade	77378000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9888	Cocalândia	77836000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9889	Cocalinho	77839000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9890	Colinas Do Tocantins	77760000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9891	Colméia	77725000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9892	Combinado	77350000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9893	Conceição Do Tocantins	77305000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9894	Correinha	77836200	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9895	Couto De Magalhães	77750000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9896	Craolândia	77774000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9897	Cristalândia	77490000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9898	Crixás	77449000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9899	Crixás Do Tocantins	77463000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9900	Darcinópolis	77910000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9901	Dianópolis	77300000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9902	Divinópolis Do Tocantins	77670000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9903	Dois Irmãos Do Tocantins	77685000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9904	Duerê	77485000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9905	Escondido	77836600	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9906	Esperantina	77993000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9907	Fátima	77555000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9908	Figueirópolis	77465000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9909	Filadélfia	77795000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9910	Formoso Do Araguaia	77470000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9911	Fortaleza Do Tabocão	77708000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9912	Goianorte	77695000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9913	Goiatins	77770000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9914	Guaraí	77700000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9915	Gurupi	00000000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9916	Ilha Barreira Branca	77837000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9917	Ipueiras	77553000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9918	Itacajá	77720000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9919	Itaguatins	77920000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9920	Itapiratins	77718000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9921	Itaporã Do Tocantins	77740000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9922	Jaú Do Tocantins	77450000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9923	Juarina	77753000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9924	Jussara	77837100	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9925	Lagoa Da Confusão	77493000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9926	Lagoa Do Tocantins	77613000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9927	Lajeado	77645000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9928	Lavandeira	77328000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9929	Lizarda	77630000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9930	Luzinópolis	77903000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9931	Marianópolis Do Tocantins	77675000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9932	Mateiros	77593000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9933	Maurilândia Do Tocantins	77918000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9934	Miracema Do Tocantins	77650000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9935	Mirandópolis	77702000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9936	Miranorte	77660000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9937	Monte Do Carmo	77585000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9938	Monte Lindo	77776000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9939	Monte Santo Do Tocantins	77673000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9940	Palmeiras Do Tocantins	77913000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9941	Muricilândia	77850000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9942	Natal	77953000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9943	Natividade	77370000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9944	Nazaré	77895000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9945	Nova Olinda	77790000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9946	Nova Rosalândia	77495000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9947	Novo Acordo	77610000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9948	Novo Alegre	77353000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9949	Novo Horizonte	77839200	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9950	Novo Jardim	77318000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9951	Oliveira De Fátima	77558000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9952	Palmas	00000000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9953	Palmeirante	77798000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9954	Palmeirópolis	77365000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9955	Paraíso Do Tocantins	77600000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9956	Paranã	77360000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9957	Pau D`arco	77785000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9958	Pé Da Serra	77839400	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9959	Pedro Afonso	77710000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9960	Pedro Ludovico	77835400	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9961	Peixe	77460000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9588	Promissão	16370000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9963	Pequizeiro	77730000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9964	Pilões	77836400	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9965	Pindorama Do Tocantins	77380000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9966	Piraquê	77888000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9967	Pium	77570000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9968	Ponte Alta Do Bom Jesus	77315000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9969	Ponte Alta Do Tocantins	77590000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9970	Pontes	77838200	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9971	Porãozinho	77837200	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9972	Porto Alegre Do Tocantins	77395000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9973	Porto Lemos	77837600	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9974	Porto Nacional	77500000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9975	Praia Norte	77970000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9976	Presidente Kennedy	77745000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9977	Príncipe	77373000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9978	Pugmil	77603000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9979	Recursolândia	77733000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9980	Riachinho	77893000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9981	Rio Da Conceição	77303000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9982	Rio Dos Bois	77655000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9983	Rio Sono	77635000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9984	Sampaio	77980000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9985	Sandolândia	77478000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9986	Santa Fé Do Araguaia	77848000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9987	Santa Maria Do Tocantins	77716000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9988	Santa Rita Do Tocantins	77565000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9989	Santa Rosa Do Tocantins	77375000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9990	Santa Tereza Do Tocantins	77615000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9991	Santa Terezinha Do Tocantins	77885000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9992	São Bento Do Tocantins	77958000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9993	São Félix Do Tocantins	77605000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9994	São Miguel Do Tocantins	77925000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9995	São Salvador Do Tocantins	77368000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9996	São Sebastião Do Tocantins	77990000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9997	São Valério Da Natividade	77390000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9998	Silvanópolis	77580000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9999	Sítio Novo Do Tocantins	77940000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10000	Sucupira	77458000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10001	Taguatinga	77320000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10002	Taipas Do Tocantins	77308000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10003	Talismã	77483000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10004	Tamboril	77898000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10005	Taquaralto	77270000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10006	Taquarussu Do Tocantins	77260000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10007	Tocantínia	77640000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10008	Tocantinópolis	77900000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10009	Tupirama	77704000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10010	Tupiratã	77748000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10011	Tupiratins	77743000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10012	Vênus	77838600	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10013	Wanderlândia	77860000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10014	Xambioá	77880000	TO	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8372	Abdon Batista	89636000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8373	Abelardo Luz	89830000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8374	Agrolândia	88420000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8375	Agronômica	89188000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8376	Água Doce	89654000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8377	Águas Brancas	88655000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8378	Águas Claras	89320000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8379	Águas De Chapecó	89883000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8380	Águas Frias	89843000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8381	Águas Mornas	88150000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8382	Aguti	88280000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8383	Aiurê	88892000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8384	Alfredo Wagner	88450000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8385	Alto Alegre	89666000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8386	Alto Bela Vista	89730000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8387	Alto Da Serra	89816300	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8388	Anchieta	89970000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8389	Angelina	88460000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8390	Anita Garibaldi	88590000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8391	Anitápolis	88475000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8392	Anta Gorda	89564000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8393	Antônio Carlos	88180000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8394	Apiúna	89135000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8395	Arabutã	89740000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8396	Araquari	89245000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8397	Araranguá	88900000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8398	Armazém	88740000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8399	Arnópolis	88452000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8400	Arroio Trinta	89590000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8401	Arvoredo	89778000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8402	Ascurra	89138000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8403	Atalanta	88410000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8404	Aterrado Torto	89173000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8405	Aurora	89186000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8406	Azambuja	88725000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8407	Baia Alta	89685000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8408	Balneário Arroio Do Silva	88914000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8409	Balneário Barra Do Sul	89247000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8410	Balneário Camboriú	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8411	Balneário Gaivota	88955000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8412	Balneário Morro Dos Conventos	88911000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8413	Bandeirante	89905000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8414	Barra Bonita	89909000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8415	Barra Clara	88465000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8416	Barra Da Lagoa	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8417	Barra Da Prata	89149000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8418	Barra Fria	89615000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8419	Barra Grande	89696000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8420	Barra Velha	88390000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8421	Barreiros	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8422	Barro Branco	88882000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8423	Bateias De Baixo	89294600	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8424	Bela Vista	89628000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8425	Bela Vista Do Sul	89310000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8426	Bela Vista Do Toldo	89478000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8427	Belmonte	89925000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8428	Benedito Novo	89124000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8429	Biguaçu	88160000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8430	Blumenau	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8431	Bocaína Do Sul	88538000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8432	Boiteuxburgo	88265000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8433	Bom Jardim Da Serra	88640000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8434	Bom Jesus	89824000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8435	Bom Jesus Do Oeste	89873000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8436	Bom Retiro	88680000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8437	Bom Sucesso	89566000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8438	Bombinhas	88215000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8439	Botuverá	88370000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8440	Braço Do Norte	88750000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8441	Braço Do Trombudo	89178000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8442	Brunópolis	89634000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8443	Brusque	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8444	Caçador	89500000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8445	Cachoeira De Fátima	88993000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8446	Cachoeira Do Bom Jesus	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8447	Caibi	89888000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8448	Calmon	89430000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8449	Camboriú	88340000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8450	Cambuinzal	89822000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8451	Campeche	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8452	Campinas	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8453	Campo Alegre	89294000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8454	Campo Belo Do Sul	88580000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8455	Campo Erê	89980000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8456	Campos Novos	89620000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8457	Canasvieiras	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8458	Canelinha	88230000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8459	Canoas	88688000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8460	Canoinhas	89460000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8461	Capão Alto	88548000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8462	Capinzal	89665000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8463	Capivari De Baixo	88745000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8464	Caraíba	89772000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8465	Catanduvas	89670000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8466	Catuíra	88453000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8467	Caxambu Do Sul	89880000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8468	Cedro Alto	89122000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8469	Celso Ramos	88598000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8470	Cerro Negro	88585000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8471	Chapadão Do Lageado	88407000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8472	Chapecó	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8473	Claraíba	88275000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8474	Cocal Do Sul	88845000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8475	Colônia Santa Tereza	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8477	Concórdia	89700000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8478	Cordilheira Alta	89819000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8479	Coronel Freitas	89840000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8480	Coronel Martins	89837000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8481	Correia Pinto	88535000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8482	Corupá	89278000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8483	Criciúma	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8484	Cunha Porã	89890000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8485	Cunhataí	89886000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8486	Curitibanos	89520000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8487	Dal Pai	89626000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8488	Dalbérgia	89143000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8489	Descanso	89910000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8490	Dionísio Cerqueira	89950000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8491	Dona Emma	89155000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8492	Doutor Pedrinho	89126000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8493	Engenho Velho	89720000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8494	Enseada De Brito	88139000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8495	Entre Rios	89862000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8496	Ermo	88935000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8497	Erval Velho	89613000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8498	Espinilho	89622000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8499	Estação Cocal	88835000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8500	Faxinal Dos Guedes	89694000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8501	Fazenda Zandavalli	89817500	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8502	Felipe Schmidt	89473000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8503	Figueira	89816400	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8504	Flor Do Sertão	89878000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8505	Florianópolis	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8506	Formosa Do Sul	89859000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8507	Forquilhinha	88850000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8508	Fragosos	89294800	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8509	Fraiburgo	89580000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8510	Frederico Wastner	89994000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8511	Frei Rogério	89530000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8512	Galvão	89838000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8513	Garcia	88463000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8514	Garopaba	88495000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8515	Garuva	89248000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8516	Gaspar	89110000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8517	Goio-En	89816200	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8518	Governador Celso Ramos	88190000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8519	Grão Pará	88890000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8520	Grápia	89907000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8521	Gravatal	88735000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8522	Guabiruba	88360000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8523	Guaporanga	88165000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8524	Guaraciaba	89920000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8525	Guaramirim	89270000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8526	Guarujá Do Sul	89940000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8527	Guatá	88884000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8528	Guatambú	89817000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8529	Hercílio Luz	88913000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8530	Herciliópolis	89657000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8531	Herval D`oeste	89610000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8532	Ibiam	89652000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8533	Ibicaré	89640000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8534	Ibicuí	89631000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8535	Ibirama	89140000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8536	Içara	88820000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8537	Ilhota	88320000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8538	Imaruí	88770000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8539	Imbituba	88780000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8540	Imbuia	88440000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8541	Indaial	89130000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8542	Índios	88533000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8543	Ingleses Do Rio Vermelho	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8544	Invernada	88895000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8545	Iomerê	89558000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8546	Ipira	89669000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8547	Ipoméia	89555000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8548	Iporã Do Oeste	89899000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8549	Ipuaçu	89832000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8550	Ipumirim	89790000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8551	Iraceminha	89891000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8552	Irakitan	89646000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8553	Irani	89680000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8554	Iraputã	89344000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8555	Irati	89856000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8556	Irineópolis	89440000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8557	Itá	89760000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8558	Itaió	89348000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8559	Itaiópolis	89340000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8560	Itajaí	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8561	Itajubá	89913000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8562	Itapema	88220000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8563	Itapiranga	89896000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8564	Itapoá	89249000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8565	Itapocu	89246000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8566	Itoupava	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8567	Ituporanga	88400000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8568	Jaborá	89677000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8569	Jacinto Machado	88950000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8570	Jaguaruna	88715000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8571	Jaraguá Do Sul	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8572	Jardinópolis	89848000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8573	Joaçaba	89600000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8574	Joinville	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8575	José Boiteux	89145000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8576	Jupiá	89839000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8577	Lacerdópolis	89660000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8578	Lages	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8579	Lagoa	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8580	Lagoa Da Estiva	88595000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8581	Laguna	88790000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8582	Lajeado Grande	89828000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8583	Laurentino	89170000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8584	Lauro Müller	88880000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8585	Leão	89632000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8586	Lebon Régis	89515000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8587	Leoberto Leal	88445000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8588	Lindóia Do Sul	89735000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8589	Linha Das Palmeiras	89785000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8590	Lontras	89182000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8591	Lourdes	89568000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8592	Luiz Alves	89115000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8593	Luzerna	89609000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8594	Machados	88378000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8595	Macieira	89518000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8596	Mafra	89300000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8597	Major Gercino	88260000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8598	Major Vieira	89480000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8599	Maracajá	88915000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8600	Marari	89648000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8601	Maratá	89836000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8602	Maravilha	89874000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8603	Marcílio Dias	89465000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8604	Marechal Bormann	89816100	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8605	Marema	89860000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8606	Mariflor	89933000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8607	Marombas	89635000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8608	Marombas Bossardi	89528000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8609	Massaranduba	89108000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8610	Matos Costa	89420000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8611	Meleiro	88920000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8612	Mirador	89153000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8613	Mirim	88787000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8614	Mirim Doce	89194000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8615	Modelo	89872000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8616	Mondaí	89893000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8617	Monte Alegre	88348000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8618	Monte Carlo	89618000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8619	Monte Castelo	89380000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8620	Morro Chato	88934000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8621	Morro Da Fumaça	88830000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8623	Morro Grande	88925000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8624	Navegantes	88375000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8625	Nossa Senhora De Caravaggio	88868000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8626	Nova Cultura	89375000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8627	Nova Erechim	89865000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8628	Nova Guarita	88964000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8629	Nova Itaberaba	89818000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8630	Nova Petrópolis	89607000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8631	Nova Teutônia	89775000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8632	Nova Trento	88270000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8633	Nova Veneza	88865000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8634	Novo Horizonte	89998000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8635	Orleans	88870000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8636	Otacílio Costa	88540000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8638	Ouro Verde	89834000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9586	Presidente Venceslau	19400000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8640	Paial	89765000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8641	Painel	88543000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8642	Palhoça	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8643	Palma Sola	89985000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8644	Palmeira	88545000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8645	Palmitos	89887000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8646	Pântano Do Sul	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8647	Papanduva	89370000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8648	Paraíso	89906000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8649	Passo De Torres	88980000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8650	Passo Manso	89192000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8651	Passos Maia	89687000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8652	Paula Pereira	89470000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8653	Paulo Lopes	88490000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8654	Pedras Grandes	88720000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8655	Penha	88385000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8656	Pericó	88615000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8657	Peritiba	89750000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8658	Pescaria Brava	88798000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8659	Petrolândia	88430000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8660	Balneário Piçarras	88380000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8661	Pindotiba	88873000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8662	Pinhalzinho	89870000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8663	Pinheiral	88268000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8664	Pinheiro Preto	89570000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8665	Pinheiros	89476000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8666	Pirabeiraba	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8667	Piratuba	89667000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8668	Planalto	89728000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8669	Planalto Alegre	89882000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8670	Poço Preto	89450000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8671	Pomerode	89107000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8672	Ponte Alta	88550000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8673	Ponte Alta Do Norte	89535000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8674	Ponte Serrada	89683000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8675	Porto Belo	88210000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8676	Porto União	89400000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8677	Pouso Redondo	89172000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8678	Praia Grande	88990000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8679	Prata	89904000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8680	Presidente Castelo Branco	89745000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8681	Presidente Getúlio	89150000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8682	Presidente Juscelino	89992000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8683	Presidente Kennedy	89725000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8684	Presidente Nereu	89184000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8685	Princesa	89935000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8686	Quarta Linha	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8687	Quilombo	89850000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8688	Quilômetro Doze	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8689	Rancho Queimado	88470000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8690	Ratones	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8691	Residência Fuck	89384000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8692	Ribeirão Da Ilha	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8693	Ribeirão Pequeno	88794000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8694	Rio Antinha	88435000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8695	Rio Bonito	88405000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8696	Rio D`una	88775000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8697	Rio Da Anta	89346000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8698	Rio Da Luz	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8699	Rio Das Antas	89550000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8700	Rio Das Furnas	88872000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8701	Rio Do Campo	89198000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8702	Rio Do Oeste	89180000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8703	Rio Do Sul	89160000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8704	Rio Dos Bugres	88403000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8705	Rio Dos Cedros	89121000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8706	Rio Fortuna	88760000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8707	Rio Maina	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8708	Rio Negrinho	89295000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8709	Rio Preto Do Sul	89315000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8710	Rio Rufino	88658000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8711	Riqueza	89895000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8712	Rodeio	89136000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8713	Romelândia	89908000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8714	Sai	89243000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8715	Salete	89196000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8716	Saltinho	89981000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8717	Salto Veloso	89595000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8718	Sanga Da Toca	88912000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8719	Sangão	88717000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8720	Santa Cecília	89540000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8721	Santa Cruz Do Timbó	89410000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8722	Santa Helena	89915000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9589	Prudêncio E Moraes	15307000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8724	Santa Izabel	88620000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8725	Santa Lúcia	89664000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9590	Quadra	18255000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8727	Santa Maria	89125000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8728	Santa Rosa De Lima	88763000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8729	Santa Rosa Do Sul	88965000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8730	Santa Terezinha	89199000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8731	Santa Terezinha Do Progresso	89983000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8732	Santa Terezinha Do Salto	88531000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8733	Santiago Do Sul	89854000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8734	Santo Amaro Da Imperatriz	88140000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8735	Santo Antônio De Lisboa	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8736	São Bento Baixo	88867000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8737	São Bento Do Sul	89290000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8738	São Bernardino	89982000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8739	São Bonifácio	88485000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8740	São Carlos	89885000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8741	São Cristóvão	89495000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8742	São Cristóvão Do Sul	89533000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8743	São Defende	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8744	São Domingos	89835000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8745	São Francisco Do Sul	89240000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8746	São Gabriel	88712000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8747	São João Batista	88240000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8748	São João Do Itaperiú	88395000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8749	São João Do Oeste	89897000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8750	São João Do Rio Vermelho	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8751	São João Do Sul	88970000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8752	São Joaquim	88600000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8753	São José	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8754	São José Do Cedro	89930000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8755	São José Do Cerrito	88570000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8756	São José Do Laranjal	89892000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8757	São Leonardo	88455000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8758	São Lourenço Do Oeste	89990000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8759	São Ludgero	88730000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8760	São Martinho	88765000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8761	São Miguel Do Oeste	89900000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8762	São Miguel Da Boa Vista	89879000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8763	São Miguel Da Serra	89415000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8764	São Pedro De Alcântara	88125000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8765	São Pedro Tobias	89960000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8766	São Roque	89996000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8767	São Sebastião Do Arvoredo	88610000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8768	São Sebastião Do Sul	89517000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8769	Sapiranga	88923000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8770	Saudades	89868000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8771	Schroeder	89275000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8772	Seara	89770000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8773	Sede Oldemburg	89887700	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8774	Serra Alta	89871000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8776	Siderópolis	88860000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8777	Sombrio	88960000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8778	Sorocaba Do Sul	88170000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8779	Sul Brasil	89855000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8780	Taió	89190000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8781	Tangará	89642000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8782	Taquara Verde	89513000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8783	Taquaras	88474000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8784	Tigipió	88245000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8785	Tigrinhos	89875000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8786	Tijucas	88200000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8787	Timbé Do Sul	88940000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8788	Timbó	89120000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8789	Timbó Grande	89545000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8790	Três Barras	89490000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8791	Treviso	88862000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8792	Treze De Maio	88710000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8793	Treze Tílias	89650000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8794	Trombudo Central	89176000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8795	Tubarão	00000000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8796	Tunápolis	89898000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8797	Tupitinga	89630000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8798	Turvo	88930000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8799	União Do Oeste	89845000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8800	Urubici	88650000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8801	Uruguai	89668000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8802	Urupema	88625000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8803	Urussanga	88840000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8804	Vargeão	89690000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8805	Vargem	89638000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8806	Vargem Bonita	89675000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8807	Vargem Do Cedro	88766000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8808	Vidal Ramos	88443000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8809	Videira	89560000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8810	Vila Conceição	88975000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8811	Vila De Volta Grande	89298000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8812	Vila Milani	89836500	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8813	Vila Nova	88782000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8814	Vítor Meireles	89148000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8815	Witmarsum	89157000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8816	Xanxerê	89820000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8817	Xavantina	89780000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8818	Xaxim	89825000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8819	Zortéa	89633000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10804	Jorge Lacerda	89968000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	10805	Idamar	89969000	SC	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8906	Adamantina	17800000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8907	Adolfo	15230000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8908	Agisse	19610000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8909	Água Vermelha	13578000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8910	Aguaí	13860000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8911	Águas Da Prata	13890000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8912	Águas De Lindóia	13940000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8913	Águas De Santa Bárbara	18770000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8914	Águas De São Pedro	13525000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8915	Agudos	17120000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8916	Agulha	15945000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8917	Ajapi	13508000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8918	Alambari	18220000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8919	Alberto Moreira	14788000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8920	Aldeia	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8921	Aldeia De Carapicuíba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8922	Alfredo Guedes	18688000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8923	Alfredo Marcondes	19180000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8924	Altair	15430000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8925	Altinópolis	14350000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8926	Alto Alegre	16310000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8927	Alto Porã	14480000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8928	Alumínio	18125000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8929	Álvares Florence	15540000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8930	Álvares Machado	19160000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8931	Álvaro De Carvalho	17410000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8932	Alvinlândia	17430000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8933	Amadeu Amaral	17530000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8934	Amandaba	16820000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8935	Ameliópolis	19140000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8936	Americana	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8937	Américo Brasiliense	14820000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8938	Américo De Campos	15550000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8939	Amparo	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8940	Ana Dias	11770000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8941	Analândia	13550000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8942	Anápolis	17685000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8943	Andes	14715000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8944	Andradina	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8945	Angatuba	18240000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8946	Anhembi	18620000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8947	Anhumas	19580000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9591	Quatá	19780000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8949	Aparecida	12570000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8950	Aparecida D`oeste	15735000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8951	Aparecida De Monte Alto	15915000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8952	Aparecida De São Manuel	18655000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9592	Queiroz	17590000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8953	Aparecida Do Bonito	15783000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8954	Apiaí	18320000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8955	Apiaí-Mirim	18309000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8956	Arabela	17925000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8957	Aracaçu	18295000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8958	Araçaíba	18323000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8959	Araçariguama	18147000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8960	Araçatuba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8961	Araçoiaba Da Serra	18190000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8962	Aramina	14550000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8963	Arandu	18710000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8964	Arapeí	12870000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8965	Araraquara	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8966	Araras	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8967	Araxás	19310000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8968	Arcadas	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8969	Arco-Íris	17630000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8970	Arealva	17160000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8971	Areias	12820000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8972	Areiópolis	18670000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8973	Ariranha	15960000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8974	Ariri	11995000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8975	Artemis	13432000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8976	Artur Nogueira	13160000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8977	Arujá	07400000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8978	Aspásia	15763000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8979	Assis	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8980	Assistência	13509000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8981	Atibaia	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8982	Atlântida	17840000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8983	Auriflama	15350000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8984	Avaí	16680000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8985	Avanhandava	16360000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8986	Avaré	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8987	Avencas	17532000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8988	Bacaetava	18565000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8989	Bacuriti	16520000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8990	Bady Bassitt	15115000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8991	Baguaçu	15405000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8992	Bairro Alto	12190000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8993	Balbinos	16640000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8994	Bálsamo	15140000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8995	Bananal	12850000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8996	Bandeirantes D`oeste	15367000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8997	Barão Ataliba Nogueira	13986000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8998	Barão De Antonina	18490000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	8999	Barão De Geraldo	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9000	Barbosa	16350000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9001	Bariri	17250000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9002	Barra Bonita	17340000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9003	Barra Do Chapéu	18325000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9004	Barra Do Turvo	11955000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9005	Barra Dourada	15125000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9006	Barrânia	13775000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9007	Barretos	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9008	Barrinha	14860000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9009	Barueri	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9010	Bastos	17690000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9011	Batatais	14300000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9012	Batatuba	12975000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9013	Batista Botelho	18794000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9014	Bauru	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9015	Bebedouro	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9016	Bela Floresta	15374000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9017	Bela Vista São-Carlense	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9018	Bento De Abreu	16790000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9019	Bernardino De Campos	18960000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9020	Bertioga	11250000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9021	Bilac	16210000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9022	Birigüi	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9023	Biritiba-Mirim	08940000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9024	Biritiba-Ussu	08890000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9025	Boa Esperança Do Sul	14930000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9026	Boa Vista Dos Andradas	15545000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9027	Boa Vista Paulista	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9028	Bocaina	17240000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9029	Bofete	18590000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9030	Boituva	18550000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9031	Bom Fim Do Bom Jesus	13319000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9032	Bom Jesus Dos Perdões	12955000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9033	Bom Retiro Da Esperança	18243000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9034	Bom Sucesso De Itararé	18475000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9035	Bonfim Paulista	14110000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9036	Borá	19740000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9037	Boracéia	17270000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9038	Borborema	14955000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9039	Borebi	18675000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9040	Botafogo	14718000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9041	Botelho	15953000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9042	Botucatu	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9043	Botujuru	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9044	Braço	11980000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9045	Bragança Paulista	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9046	Brás Cubas	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9047	Brasitânia	15617000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9048	Braúna	16290000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9049	Brejo Alegre	16265000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9050	Brodowski	14340000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9051	Brotas	17380000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9052	Bueno De Andrada	14812000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9053	Buri	18290000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9054	Buritama	15290000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9055	Buritizal	14570000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9056	Cabrália Paulista	17480000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9057	Cabreúva	13315000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9058	Caçapava	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9059	Cachoeira De Emas	13645000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9060	Cachoeira Paulista	12630000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9061	Caconde	13770000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9062	Cafelândia	16500000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9063	Cafesópolis	16530000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9064	Caiabu	19530000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9065	Caibura	11210000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9066	Caieiras	07700000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9067	Caiuá	19450000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9068	Cajamar	07750000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9069	Cajati	11950000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9070	Cajobi	15410000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9071	Cajuru	14240000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9072	Cambaquara	11640000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9073	Cambaratiba	14945000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9074	Campestrinho	13785000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9075	Campina De Fora	18434000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9076	Campina Do Monte Alegre	18245000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9077	Campinal	19490000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9078	Campinas	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9079	Campo Limpo Paulista	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9080	Campos De Cunha	12540000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9081	Campos Do Jordão	12460000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9082	Campos Novos Paulista	19960000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9083	Cananéia	11990000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9084	Canas	12615000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9085	Candia	14185000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9086	Cândido Mota	19880000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9087	Cândido Rodrigues	15930000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9088	Canguera	18145000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9089	Canitar	18990000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9090	Capão Bonito	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9091	Capela Do Alto	18195000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9092	Capivari	13360000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9093	Capivari Da Mata	14508000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9094	Caporanga	18915000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9095	Capuava	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9096	Caraguatatuba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9097	Carapicuíba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9098	Cardeal	13355000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9099	Cardoso	15570000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9593	Queluz	12800000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9101	Caruara	11200000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9102	Casa Branca	13700000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9103	Cássia Dos Coqueiros	14260000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9104	Castilho	16920000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9105	Catanduva	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9106	Catiguá	15870000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9107	Catucaba	12150000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9108	Caucaia Do Alto	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9109	Cedral	15895000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9110	Cerqueira César	18760000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9111	Cerquilho	18520000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9112	Cesário Lange	18285000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9113	Cezar De Souza	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9114	Charqueada	13515000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9115	Chavantes	18970000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9116	Cipó-Guaçu	06930000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9117	Clarinia	18905000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9118	Clementina	16250000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9119	Cocaes	18227000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9120	Colina	14770000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9121	Colômbia	14795000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9122	Conceição De Monte Alegre	19710000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9123	Conchal	13835000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9124	Conchas	18570000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9125	Cordeirópolis	13490000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9126	Coroados	16260000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9127	Coronel Goulart	19165000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9128	Coronel Macedo	18745000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9129	Corredeira	16610000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9130	Córrego Rico	14896000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9131	Corumbataí	13540000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9132	Cosmópolis	13150000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9133	Cosmorama	15530000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9134	Costa Machado	19265000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9135	Cotia	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9136	Cravinhos	14140000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9137	Cristais Paulista	14460000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9138	Cruz Das Posses	14179000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9139	Cruzália	19860000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9140	Cruzeiro	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9141	Cubatão	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9142	Cuiabá Paulista	19270000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9143	Cunha	12530000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9144	Curupá	14915000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9145	Dalas	15725000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9146	Descalvado	13690000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9147	Diadema	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9148	Dirce Reis	15715000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9149	Dirceu	17537000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9150	Divinolândia	13780000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9151	Dobrada	15980000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9152	Dois Córregos	17300000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9153	Dolcinópolis	15740000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9154	Domélia	17123000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9155	Dourado	13590000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9156	Dracena	17900000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9157	Duartina	17470000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9158	Dumont	14120000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9159	Duplo Céu	15472000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9160	Echaporã	19830000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9161	Eldorado	11960000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9162	Eleutério	13988000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9163	Elias Fausto	13350000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9164	Elisiário	15823000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9165	Embaúba	15425000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9166	Embu	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9167	Embu-Guaçu	06900000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9168	Emilianópolis	19350000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9169	Eneida	19130000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9170	Engenheiro Balduíno	15154000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9171	Engenheiro Coelho	13165000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9172	Engenheiro Maia	18445000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9173	Engenheiro Schmidt	15104000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9174	Esmeralda	15795000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9175	Esperança D`oeste	19535000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9176	Espigão	19575000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9177	Espírito Santo Do Pinhal	13990000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9178	Espírito Santo Do Turvo	18935000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9179	Estiva Gerbi	13857000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9180	Estrela D`oeste	15650000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9181	Estrela Do Norte	19230000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9182	Euclides Da Cunha Paulista	19275000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9183	Eugênio De Melo	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9184	Fartura	18870000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9185	Fátima	16490000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9186	Fátima Paulista	15757000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9187	Fazenda Velha	18288000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9188	Fernando Prestes	15940000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9189	Fernandópolis	15600000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9190	Fernão	17455000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9191	Ferraz De Vasconcelos	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9192	Flora Rica	17870000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9193	Floreal	15320000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9194	Floresta Do Sul	19120000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9195	Flórida Paulista	17830000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9196	Florínia	19870000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9197	Franca	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9198	Francisco Morato	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9199	Franco Da Rocha	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9200	Frutal Do Campo	19885000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9201	Gabriel Monteiro	16220000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9202	Gália	17450000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9203	Garça	17400000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9204	Gardênia	19620000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9205	Gastão Vidigal	15330000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9206	Gavião Peixoto	14813000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9594	Quintana	17670000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9207	General Salgado	15300000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9208	Getulina	16450000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9209	Glicério	16270000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9210	Gramadinho	18218000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9211	Guachos	19510000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9212	Guaianas	17285000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9213	Guaiçara	16430000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9214	Guaimbê	16480000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9215	Guaíra	14790000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9216	Guamium	13431000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9217	Guapiaçu	15110000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9218	Guapiara	18310000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9219	Guapiranga	16420000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9220	Guará	14580000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9221	Guaraçaí	16980000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9222	Guaraci	15420000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9223	Guaraciaba D`oeste	17935000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9224	Guarani D`oeste	15680000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9225	Guarantã	16570000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9226	Guarapiranga	13585000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9227	Guarapuá	17310000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9228	Guararapes	16700000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9229	Guararema	08900000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9230	Guaratinguetá	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9231	Guareí	18250000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9232	Guariba	14840000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9233	Guariroba	15903000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9234	Guarizinho	18420000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9235	Guarujá	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9236	Guarulhos	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9237	Guatapará	14115000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9238	Guzolândia	15355000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9239	Herculândia	17650000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9240	Holambra	13825000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9241	Holambra Ii	18725000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9242	Hortolândia	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9243	Iacanga	17180000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9244	Iacri	17680000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9245	Iaras	18775000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9246	Ibaté	14815000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9247	Ibiporanga	15175000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9248	Ibirá	15860000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9249	Ibirarema	19940000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9250	Ibitinga	14940000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9251	Ibitiruna	13434000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9252	Ibitiúva	14760000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9253	Ibitu	14789000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9254	Ibiúna	18150000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9255	Icém	15460000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9256	Ida Iolanda	15195000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9257	Iepê	19640000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9258	Igaçaba	14475000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9259	Igaraçu Do Tietê	17350000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9260	Igaraí	13750000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9261	Igarapava	14540000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9262	Igaratá	12350000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9263	Iguape	11920000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9264	Ilha Comprida	11925000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9265	Ilha Diana	11230000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9266	Ilha Solteira	15385000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9267	Ilhabela	11630000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9268	Indaiá Do Aguapeí	17835000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9269	Indaiatuba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9270	Indiana	19560000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9271	Indiaporã	15690000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9272	Ingás	15448000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9273	Inúbia Paulista	17760000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9274	Ipaussu	18950000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9275	Iperó	18560000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9276	Ipeúna	13537000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9277	Ipiguá	15108000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9278	Iporanga	18330000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9279	Ipuã	14610000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9280	Iracemápolis	13495000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9281	Irapé	18980000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9282	Irapuã	14990000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9283	Irapuru	17880000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9284	Itaberá	18440000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9285	Itaboa	18433000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9286	Itaí	18730000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9287	Itaiuba	15153000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9288	Itajobi	15840000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9289	Itaju	17260000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9290	Itanhaém	11740000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9291	Itaóca	18360000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9292	Itapecerica Da Serra	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9293	Itapetininga	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9294	Itapeuna	11970000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9295	Itapeva	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9296	Itapevi	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9297	Itapira	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9298	Itapirapuã Paulista	18385000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9299	Itápolis	14900000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9300	Itaporanga	18480000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9301	Itapuí	17230000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9302	Itapura	15390000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9303	Itaquaquecetuba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9304	Itaqueri Da Serra	13535000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9305	Itararé	18460000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9306	Itariri	11760000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9307	Itatiba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9308	Itatinga	18690000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9309	Itirapina	13530000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9310	Itirapuã	14420000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9311	Itobi	13715000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9312	Itororó Do Paranapanema	19208000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9314	Itupeva	13295000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9315	Ituverava	14500000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9316	Iubatinga	19540000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9317	Jaborandi	14775000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9318	Jaboticabal	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9319	Jacaré	13318000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9320	Jacareí	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9321	Jaci	15155000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9322	Jaciporã	17910000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9323	Jacuba	17170000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9324	Jacupiranga	11940000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9325	Jafa	17405000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9326	Jaguariúna	13820000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9327	Jales	15700000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9328	Jamaica	17905000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9329	Jambeiro	12270000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9330	Jandira	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9331	Jardim Belval	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9332	Jardim Presidente Dutra	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9333	Jardim Santa Luzia	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9334	Jardim Silveira	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9335	Jardinópolis	14680000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9336	Jarinu	13240000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9337	Jatobá	16330000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9338	Jaú	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9339	Jeriquara	14450000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9340	Joanópolis	12980000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9341	João Ramalho	19680000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9342	Joaquim Egídio	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9343	Jordanésia	07760000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9344	José Bonifácio	15200000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9345	Juliânia	17660000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9346	Júlio Mesquita	17550000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9347	Jumirim	18535000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9348	Jundiaí	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9349	Jundiapeba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9350	Junqueira	15152000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9351	Junqueirópolis	17890000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9352	Juquiá	11800000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9353	Juquiratiba	18575000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9354	Juquitiba	06950000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9355	Juritis	16280000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9356	Jurucê	14690000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9357	Jurupeba	15475000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9358	Jurupema	15905000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9359	Lácio	17539000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9360	Lagoa Azul	17705000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9361	Lagoa Branca	13705000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9362	Lagoinha	12130000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9363	Laranjal Paulista	18500000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9364	Laras	18505000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9365	Lauro Penteado	16255000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9366	Lavínia	16850000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9367	Lavrinhas	12760000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9368	Leme	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9369	Lençóis Paulista	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9370	Limeira	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9372	Lins	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9373	Lobo	18695000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9374	Lorena	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9375	Lourdes	15285000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9376	Louveira	13290000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9377	Lucélia	17780000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9378	Lucianópolis	17475000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9379	Luís Antônio	14210000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9380	Luiziânia	16340000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9381	Lupércio	17420000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9382	Lusitânia	14898000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9383	Lutécia	19750000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9384	Macatuba	17290000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9385	Macaubal	15270000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9386	Macedônia	15620000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9387	Macucos	16460000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9388	Mágda	15310000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9389	Mailasqui	18143000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9390	Mairinque	18120000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9391	Mairiporã	07600000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9392	Major Prado	16150000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9393	Manduri	18780000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9394	Mangaratu	15442000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9395	Marabá Paulista	19430000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9396	Maracaí	19840000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9397	Marapoama	15845000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9398	Marcondésia	14733000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9399	Maresias	11620000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9400	Mariápolis	17810000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9401	Marília	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9402	Marinópolis	15730000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9403	Maristela	18510000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9404	Martim Francisco	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9405	Martinho Prado Júnior	13855000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9406	Martinópolis	19500000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9407	Matão	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9408	Mauá	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9409	Mendonça	15220000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9410	Meridiano	15625000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9411	Mesópolis	15748000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9412	Miguelópolis	14530000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9413	Mineiros Do Tietê	17320000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9414	Mira Estrela	15580000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9415	Miracatu	11850000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9416	Miraluz	15128000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9417	Mirandópolis	16800000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9418	Mirante Do Paranapanema	19260000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9419	Mirassol	15130000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9420	Mirassolândia	15145000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9421	Mococa	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9422	Mogi Das Cruzes	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9423	Mogi Guaçu	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9424	Mogi Mirim	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9425	Mombuca	13380000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9426	Monções	15275000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9427	Mongaguá	11730000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9428	Montalvão	19110000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9429	Monte Alegre Do Sul	13910000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9430	Monte Alto	15910000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9431	Monte Aprazível	15150000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9432	Monte Azul Paulista	14730000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9433	Monte Cabrão	11220000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9434	Monte Castelo	17960000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9435	Monte Mor	13190000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9436	Monte Verde Paulista	15417000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9437	Monteiro Lobato	12250000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9438	Moreira César	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9439	Morro Agudo	14640000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9440	Morro Do Alto	18219000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9441	Morungaba	13260000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9442	Mostardas	13915000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9443	Motuca	14835000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9444	Mourão	17815000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9445	Murutinga Do Sul	16950000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9446	Nantes	19645000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9447	Narandiba	19220000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9448	Natividade Da Serra	12180000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9449	Nazaré Paulista	12960000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9450	Neves Paulista	15120000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9451	Nhandeara	15190000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9452	Nipoã	15240000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9453	Nogueira	16690000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9454	Nossa Senhora Do Remédio	08980000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9455	Nova Alexandria	19882000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9456	Nova Aliança	15210000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9457	Nova América	14904000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9458	Nova Aparecida	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9459	Nova Campina	18435000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9460	Nova Canaã Paulista	15773000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9461	Nova Castilho	15313000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9462	Nova Europa	14920000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9463	Nova Granada	15440000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9464	Nova Guataporanga	17950000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9465	Nova Independência	16940000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9466	Nova Itapirema	15215000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9467	Nova Luzitânia	15340000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9468	Nova Odessa	13460000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9469	Nova Pátria	19330000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9470	Nova Veneza	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9471	Novais	15885000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9472	Novo Cravinhos	17585000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9473	Novo Horizonte	14960000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9474	Nuporanga	14670000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9475	Oásis	17932000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9476	Ocauçu	17540000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9477	Óleo	18790000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9478	Olímpia	15400000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9479	Oliveira Barros	11860000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9480	Onda Branca	15445000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9481	Onda Verde	15450000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9482	Oriente	17570000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9483	Orindiúva	15480000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9484	Orlândia	14620000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9485	Osasco	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9486	Oscar Bressane	19770000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9487	Osvaldo Cruz	17700000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9488	Ourinhos	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9489	Ouro Fino Paulista	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9490	Ouro Verde	17920000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9491	Ouroeste	15685000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9492	Pacaembu	17860000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9493	Padre Nóbrega	17533000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9494	Palestina	15470000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9495	Palmares Paulista	15828000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9496	Palmeira D`oeste	15720000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9497	Palmeiras De São Paulo	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9498	Palmital	19970000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9499	Panorama	17980000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9500	Paraguaçu Paulista	19700000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9501	Paraibuna	12260000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9502	Paraíso	15825000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9503	Paraisolândia	13517000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9504	Paranabi	11650000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9505	Paranapanema	18720000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9506	Paranapiacaba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9507	Paranapuã	15745000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9508	Parapuã	17730000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9509	Pardinho	18640000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9510	Pariquera-Açu	11930000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9511	Parisi	15525000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9512	Parnaso	17620000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9513	Parque Meia Lua	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9514	Paruru	18155000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9515	Patrocínio Paulista	14415000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9516	Paulicéia	17990000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9517	Paulínia	13140000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9518	Paulistânia	17150000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9519	Paulo De Faria	15490000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9520	Paulópolis	17583000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9521	Pederneiras	17280000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9522	Pedra Bela	12990000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9523	Pedra Branca De Itararé	18465000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9524	Pedranópolis	15630000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9525	Pedregulho	14470000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9526	Pedreira	13920000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9527	Pedrinhas Paulista	19865000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9528	Pedro Barros	11855000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9529	Pedro De Toledo	11790000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9530	Penápolis	16300000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9531	Pereira Barreto	15370000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9532	Pereiras	18580000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9533	Peruíbe	11750000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9534	Piacatu	16230000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9535	Picinguaba	11690000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9536	Piedade	18170000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9537	Pilar Do Sul	18185000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9538	Pindamonhangaba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9539	Pindorama	15830000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9540	Pinhalzinho	12995000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9541	Pinheiros	12770000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9542	Pioneiros	14590000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9543	Piquerobi	19410000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9544	Piquete	12620000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9545	Piracaia	12970000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9546	Piracicaba	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9547	Piraju	18800000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9548	Pirajuí	16600000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9549	Pirambóia	18630000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9550	Pirangi	15820000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9595	Quiririm	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9596	Rafard	13370000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9597	Rancharia	19600000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9598	Rechan	18217000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9599	Redenção Da Serra	12170000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9600	Regente Feijó	19570000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9601	Reginópolis	17190000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9602	Registro	11900000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9603	Restinga	14430000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9604	Riacho Grande	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9605	Ribeira	18380000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9606	Ribeirão Bonito	13580000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9607	Ribeirão Branco	18430000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9608	Ribeirão Corrente	14445000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9609	Ribeirão Do Sul	19930000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9610	Ribeirão Dos Índios	19380000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9611	Ribeirão Grande	18315000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9612	Ribeirão Pires	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9613	Ribeirão Preto	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9614	Ribeiro Do Vale	16710000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9615	Ribeiro Dos Santos	15408000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9616	Rifaina	14490000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9617	Rincão	14830000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9618	Rinópolis	17740000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9619	Rio Claro	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9620	Rio Das Pedras	13390000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9621	Rio Grande Da Serra	09450000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9622	Riolândia	15495000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9623	Riversul	18470000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9624	Roberto	15835000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9625	Rosália	17535000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9626	Rosana	19273000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9627	Roseira	12580000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9628	Rubiácea	16750000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9629	Rubião Júnior	18618000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9630	Rubinéia	15790000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9631	Ruilândia	15135000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9632	Sabaúna	00000000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9633	Sabino	16440000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9634	Sagres	17710000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	9635	Sales	14980000	SP	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	11113	Porto Alegre	90240581	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	11114	Candelaria	96930000	RS	BRA	\N
postgres	2013-06-07 08:49:37.390904-03	\N	11115	Mostardas	96270000	RS	BRA	12500
postgres	2013-06-07 08:49:37.390904-03	\N	11116	Acegua	96445000	RS	BRA	12500
postgres	2013-06-07 08:49:37.390904-03	\N	11117	Erechim	99700000	RS	BRA	\N
\.


--
-- Data for Name: basconfig; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY basconfig (username, datetime, ipaddress, moduleconfig, parameter, value, description, type, groupby, orderby, label) FROM stdin;
\N	\N	\N	GNUTECA3	CLASS_USER_ACCESS_IN_THE_LIBRARY	BusNotPersonLibraryUnit	Nome da classe que fará a checagem se o usuário terá permissão de retirar materiais na biblioteca. Não será executada esta verificação se o valor estiver em branco ou incorreto. Opções válidas: BusPersonLibraryUnit	CHAR	ADMIN	10	Controle de acesso por usuário
\N	\N	\N	GNUTECA3	HELP_FIELD_SPREADSHEET_DEFAULT_VALUES	Para adicionar valores padrão para tag 008,<br>insira um linha semelhante a esta:<br>008=campo1,campo2,campo 3,campo 4<br><br>Para campos de datas, você pode usar a função date para setar o dia atual.<br>Exemplo:008=&lt;date d/m/y&gt;&lt;/&gt;	Define o texto de ajuda para o campo Default Value do form Spreadsheet.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	HELP_FIELD_SPREADSHEET_WORK_VALIDATOR	Exemplo:<br>245.a=required<br>650.a=required<br>901.a=required<br>949.a=unique<br>950.a=required,unique,readonly	Define o texto de ajuda para o campo Work validator do form Spreadsheet.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	HELP_FIELD_SPREADSHEET_REPEAT_FIELD_VALIDATOR	Exemplo:<br>650.a=required,unique,readonly<br>949.a=required,unique<br>949.b=required<br>949.c=required<br>949.d=required<br>949.g=required<br>949.i=required<br>949.y=required,date	Define o texto de ajuda para o campo Repeat field validator do form Spreadsheet.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	ISO2709_MAX_POST_SIZE	16M	Seta o tamanho maximo do POST.	integer	\N	\N	\N
\N	\N	\N	GNUTECA3	INTERCHANGE_TYPE_SEND	1	Código do tipo de permuta para envio.	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_SUBJECT_TAG	650.a	Informa a tag de assunto.	VARCHAR	\N	\N	Etiqueta de Assunto
\N	\N	\N	GNUTECA3	MATERIAL_TYPE_ID_PERIODIC_COLLECTION	23	Define materialTypeId para coleção de periódico	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	SHOW_TIPS	YES	Define na abertura do Gnuteca a exibição ou não das dicas do sistema.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MATERIAL_GENDER_CONTROL	2	Tipo de controle de material. 1 - Gênero de material para obra. 2 - Gênero do material por exemplar	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	MATERIAL_TYPE_CONTROL	2	Tipo de controle de material. 1 - Tipo de material para obra. 2 - Tipo do material por exemplar	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	MATERIAL_TYPE_FORCE_BY_MATERIAL	BA\nSA\nSE,#	Quando a configuração MATERIAL_TYPE_CONTROL for igual a 2 esta força o controle do tipo de material por obra.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MATERIAL_TYPE_FORCE_BY_EXEMPLARY	BK\nCF\nMU\nMX\nVM\nAM\nMP\nSE,12345678uz	Quando a configuração MATERIAL_TYPE_CONTROL for igual a 2 esta força o controle do tipo de material por exemplar.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	USE_LOAN_DATE_FOR_RENEW	t	Utiliza a data de empréstimo definida nas políticas para a renovação. Caso não utilize o sistema irá utilizar os dias de empréstimo para a renovação.	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	ISO2709_MAX_EXECUTION_TIME	15000	Seta o tempo maximo de execução na importação de arquivos ISO2709	integer	\N	\N	\N
\N	\N	\N	GNUTECA3	DAYS_BEFORE_DATE_OF_RETURN_CAN_INCREASE	2	Em uma renovação, quantos dias antes da data prevista, pode incrementar a data prevista de devolução;	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	TABLE_RAW_DESCRIPTION_CELL_SIZE	150	Define o Tamanho celula de descrição de uma table raw	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	DB_TRUE	t	Caracter que o banco retorna dos campos do tipo boolean, que vem com o valor true	CHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	DB_FALSE	f	Caracter que o banco retorna dos campos do tipo boolean, que vem com o valor false	CHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	DB_NAME	gnuteca3	Nome da base de dados a ser utilizada pelo gnuteca3.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	WEB_SERVICE_MATERIAL_DEFAULT_SEARCH_FORMAT_ID	1	Tipo de formato padrão a ser retornado no webservice de material (informação do material)	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVESTATUS_REQUESTED	1	Define o código para o estado de reserva solicitada	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVESTATUS_ANSWERED	2	Define o código para o estado de reserva atendida	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVESTATUS_REPORTED	3	Define o código para o estado de reserva comunicada	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVESTATUS_CONFIRMED	4	Define o código para o estado de reserva confirmada	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVESTATUS_UNSUCCESSFUL	5	Define o código para o estado de reserva vencida	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVESTATUS_CANCELLED	6	Define o código para o estado de reserva cancelada	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANTYPE_DEFAULT	1	Define o código para o tipo de empréstimo padrão	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANTYPE_FORCED	2	Define o código para o tipo de empréstimo forçado	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANTYPE_MOMENTARY	3	Define o código para o tipo de empréstimo momentâneo	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_LOAN	1	Define o código para a operação de empréstimo	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_LOAN_PENALTY	21	Define o código para a operação de empréstimo com penalidade	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_LOAN_FINE	22	Define o código para a operação de empréstimo com multa	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_RETURN	2	Define o código para a operação de devolução	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_LOAN_BETWEEN_UNITS	3	Define o código para a operação de empréstimo entre unidades	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_LOAN_BETWEEN_UNITS_CONFIRM_RECEIPT	5	Define o código para a operação de empréstimo entre unidades - Confirmação de recebimento	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_RETURN_BETWEEN_UNITS	4	Define o código para a operação de devolução entre unidades	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_MEET_RESERVE	14	Define o código para a operação de atender reserva	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_LOCAL_RESERVE	10	Define o código para a operação de reserva local	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_CANCEL_RESERVE	15	Define o código para a operação de cancelamento de reserva local	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	LISTING_NREGS	20	Número máximo de registros por página nas listagens	INT	ADM_INTERFACE	31	Registro por página
\N	\N	\N	GNUTECA3	OPERATION_PROCESS_TIME	5	Tempo, em minutos, de limite da operação de empréstimo.	INT	LOAN	30	Tempo para bloqueio do usuário (m)
\N	\N	\N	GNUTECA3	FIELD_ID_SIZE	8	Tamanho padrão para campos ID	INT	ADM_INTERFACE	6	Tamanho do campo código
\N	\N	\N	GNUTECA3	FIELD_DATE_SIZE	12	Tamanho padrão para campos do tipo DATE	INT	ADM_INTERFACE	8	Tamanho do campo data
\N	\N	\N	GNUTECA3	FIELD_TIME_SIZE	7	Tamanho padrão para campos TIME	INT	ADM_INTERFACE	9	Tamanho do campo hora
\N	\N	\N	GNUTECA3	FIELD_MULTILINE_ROWS_SIZE	10	Quantidade de linhas padrão para um campo Multiline.	INT	ADM_INTERFACE	11	Altura do campo texto
\N	\N	\N	GNUTECA3	FIELD_MNEMONIC_SIZE	5	Tamanho padrão para campos com Mnemônicos	INT	ADM_INTERFACE	12	Tamanho do campo mnemonico
\N	\N	\N	GNUTECA3	FIELD_MONETARY_SIZE	16	Tamanho padrão para campos MONETARY	INT	ADM_INTERFACE	13	Tamanho do campo monetário
\N	\N	\N	GNUTECA3	FIELD_DESCRIPTION_LOOKUP_SIZE	20	Tamanho padrão para campos DESCRIPTION nos lookups	INT	ADM_INTERFACE	15	Tamanho do campo descrição do lookup
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_STATUS_SCHEDULED_MSG	ATENÇÃO: Alguns exemplares poderão ser agendados.	Mensagem que aviso sobre agendamento no congelamento	VARCHAR	NOTIFICATION_REQUEST	50	Aviso de agendamento
\N	\N	\N	GNUTECA3	RESERVE_QUEUE_DAYS	2	Define a quantidade de dias (data atual - dias definidos) no formulario de processo Reorganizar fila de reserva.	INTEGER	RESERVE	9	Dias antes para reorganizar a fila de reserva
\N	\N	\N	GNUTECA3	CSV_MYLIBRARY	f	Mostrar botão Obter CSV nas grids da Minha Biblioteca	BOOLEAN	MY_LIBRARY	6	Ativar exportação para CSV e PDF
\N	\N	\N	GNUTECA3	ID_OPERATION_LOAN_DELAY_LOAN	20	Define o código para a operação de empréstimo com material em atraso	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	FIELD_LABEL_SIZE	200px	Tamanho padrão (em pixel ou em percentual) para LABELS;\n    Ex:\n    180px\n    18%	char	\N	5	Tamanho do rótulo
\N	\N	\N	GNUTECA3	ID_OPERATION_LOCAL_RESERVE_IN_INITIAL_STATUS	11	Define o código para a operação de reserva local no estado inicial	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_WEB_RESERVE	12	Define o código para a operação de reserva web	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_OPERATION_WEB_RESERVE_IN_INITIAL_STATUS	13	Define o código para a operação de reserva web no estado inicial	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RENEWTYPE_LOCAL	1	Código de Renovação Local.	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RENEWTYPE_WEB	2	Código de Renovação Web.	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_EXEMPLARYSTATUS_INITIAL	1	Código de estado inicial do exemplar	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_EXEMPLARYSTATUS_PREVIOUS	2	Código de estado anterior do exemplar	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANBETWEENLIBRARYSTATUS_REQUESTED	1	Código do estado de emprestimo entre unidades - SOLICITADO	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANBETWEENLIBRARYSTATUS_CANCELED	2	Código do estado de emprestimo entre unidades - CANCELADO	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANBETWEENLIBRARYSTATUS_APPROVED	3	Código do estado de emprestimo entre unidades - APPROVED	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANBETWEENLIBRARYSTATUS_DISAPPROVED	4	Código do estado de emprestimo entre unidades - REPROVADO	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANBETWEENLIBRARYSTATUS_CONFIRMED	5	Código do estado de emprestimo entre unidades - CONFIRMADO	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANBETWEENLIBRARYSTATUS_DEVOLUTION	6	Código do estado de emprestimo entre unidades - DEVOLUCAO	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_LOANBETWEENLIBRARYSTATUS_FINALIZED	7	Código do estado de emprestimo entre unidades - FINALIZADO	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_CONTROL_NUMBER_TAG	001.a	Definição do campo Marc para o número de controle	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_FIXED_DATA_TAG	008.a	Definição do campo Marc para os campos fixos	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_FIXED_DATA_FIELD	008	Definição do campo Marc para os campos fixos	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_LEADER_TAG	000.a	Definição do campo Marc para o leader	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_MATERIAL_TYPE_TAG	901.a	Definição do campo Marc para o tipo do material	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_MATERIAL_PHYSICAL_TYPE_TAG	901.c	Definição do campo Marc para o tipo do material	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_MATERIAL_GENDER_TAG	902.a	Definição do campo Marc para o gênero do material	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_TITLE_TAG	245.a	Definição do campo Marc para o título.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_SECUNDARY_TITLE_TAG	440.a	Definição do campo Marc para o título.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_AUTHOR_TAG	100.a	Definição do campo Marc para o autor.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_CLASSIFICATION_TAG	090.a,080.a	Definição do campo Marc para a classificação.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_CUTTER_TAG	090.b	Definição do campo Marc para o cutter.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_WORK_NUMBER_TAG	950.a	Definição do campo Marc para o número da obra.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_SPACE	#	Definicao do MARC para caracteres vazios	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_SUPPLIER_TAG	947.a	Definicao do campo MARC marc para fornecedor	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_ANALITIC_ENTRACE_TAG	773.w	Definicao do campo MARC marc para fornecedor	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_PERIODIC_INFORMATIONS	362.a	Definicao do campo MARC marc para informações de volume, etc	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	KARDEX_PERIOD	310.a	Definicao do campo MARC marc para informações de volume, etc	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EDITION_TAG	250.a	Definicao do campo MARC marc para informações de edição	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_PUBLICATION_DATE_TAG	260.c	Definicao do campo MARC marc para informações de edição	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_FIELD	949	Definição do campo Marc para os exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_ITEM_NUMBER_TAG	949.a	Definição do campo Marc para numero de tombo dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_LIBRARY_UNIT_ID_TAG	949.b	Definição do campo Marc para a unidade dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_ORIGINAL_LIBRARY_UNIT_ID_TAG	949.9	Definição do campo Marc para a unidade original dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_ACQUISITION_TYPE_TAG	949.c	Definição do campo Marc para o tipo de aquisição dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_MATERIAL_GENDER_TAG	949.d	Definição do campo Marc para o gênero do Material dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_MATERIAL_TYPE_TAG	949.1	Definição do campo Marc para o gênero do Material dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_MATERIAL_PHYSICAL_TYPE_TAG	949.3	Definição do campo Marc para o gênero do Material dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_EXEMPLARY_TAG	949.e	Definição do campo Marc para o exemplar dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_EXEMPLARY_STATUS_TAG	949.g	Definição do campo Marc para o estado dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_EXEMPLARY_STATUS_FUTURE_TAG	949.i	Definição do campo Marc para o estado dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_PATRIMONY_TAG	949.n	Definição do campo Marc para o patrimonio dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_VOLUME_TAG	949.v	Definição do campo Marc para o volume dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_OBSERVATION_TAG	949.w	Definição do campo Marc para a observação dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_EXEMPLARY_ID_TAG	949.x	Definição do campo Marc para o número dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_ENTRACE_DATE_TAG	949.y	Definição do campo Marc para a data de entrada dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_LOW_DATE_TAG	949.z	Definição do campo Marc para a data de baixa dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_TOMO_TAG	949.t	Definição do campo Marc para a tomo dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_COST_CENTER_TAG	949.q	Definição do campo Marc para o centro de custo dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_ITEM_NUMBER_SUBFIELD	a	Definição do subcampo Marc para numero de tombo dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_LIBRARY_UNIT_ID_SUBFIELD	b	Definição do subcampo Marc para unidade dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_ORIGINAL_LIBRARY_UNIT_ID_SUBFIELD	9	Definição do subcampo Marc para unidade original dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_ACQUISITION_TYPE_SUBFIELD	c	Definição do subcampo Marc para tipo de aquisição dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_MATERIAL_GENDER_SUBFIELD	d	Definição do subcampo Marc para gênero do material dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_NAME_SERVER	856.u	Definicao do campo MARC marc para nome do servidor (endereço da página Web)	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_MATERIAL_TYPE_SUBFIELD	1	Definição do subcampo Marc para gênero do material dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_MATERIAL_PHYSICAL_TYPE_SUBFIELD	3	Definição do subcampo Marc para gênero do material dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_EXEMPLARY_SUBFIELD	e	Definição do subcampo Marc para o exemplar dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_EXEMPLARY_STATUS_SUBFIELD	g	Definição do subcampo Marc para o status dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_EXEMPLARY_STATUS_FUTURE_SUBFIELD	i	Definição do subcampo Marc para o status futuro dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_PATRIMONY_SUBFIELD	n	Definição do subcampo Marc para o patrimonio dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_VOLUME_SUBFIELD	v	Definição do subcampo Marc para o volume dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_OBSERVATION_SUBFIELD	w	Definição do subcampo Marc para a observação dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_EXEMPLARY_ID_SUBFIELD	x	Definição do subcampo Marc para o número dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_ENTRACE_DATE_SUBFIELD	y	Definição do subcampo Marc para a data de entrada dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_LOW_DATE_SUBFIELD	z	Definição do subcampo Marc para a data de baixa dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_EXEMPLARY_TOMO_SUBFIELD	t	Definição do subcampo Marc para a tomo dos exemplares	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_FIELD	960	Definição do campo Marc para o kardex	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_SUBSCRIBER_ID_TAG	960.a	Definição do campo Marc para codigo do assinante	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_LIBRARY_UNIT_ID_TAG	960.b	Definição do campo Marc para codigo da unidade	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_ACQUISITION_TYPE_TAG	960.c	Definição do campo Marc para tipo de aquisição	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_SIGNATURE_END_TAG	960.d	Definição do campo Marc para vencimento da assinatura	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_SIGNATURE_DATE_TAG	960.h	Definição do campo Marc para data da assinatura	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_ENTRACE_DATE_TAG	960.y	Definição do campo Marc para data da entrada	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_PUBLICATION_TAG	960.j	Definição do campo Marc para publicação	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_SUBSCRIBER_ID_SUBFIELD	a	Definição do subcampo Marc para codigo do assinante	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_LIBRARY_UNIT_ID_SUBFIELD	b	Definição do subcampo Marc para codigo da unidade	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_ACQUISITION_TYPE_SUBFIELD	c	Definição do subcampo Marc para tipo de aquisição	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_SIGNATURE_END_SUBFIELD	d	Definição do subcampo Marc para vencimento da assinatura	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_FISCAL_NOTE_SUBFIELD	f	Definição do subcampo Marc para nota fiscal	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_SIGNATURE_DATE_SUBFIELD	h	Definição do subcampo Marc para data da assinatura	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_KARDEX_ENTRACE_DATE_SUBFIELD	y	Definição do subcampo Marc para data da entrada	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	DEFAULT_EXEMPLARY_STATUS_DISPONIVEL	1	Determina o id do status Disponivel do exemplar	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	DEFAULT_EXEMPLARY_STATUS_PROCESSANDO	15	Determina o id do status em Processamento do exemplar 	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	FORM_CONTENT_TYPE_ADMINISTRATOR	1	Valor padrao de formularios do tipo Administrador	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	FORM_CONTENT_TYPE_OPERATOR	2	Valor padrao de formularios do tipo Operator	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	FORM_CONTENT_TYPE_SEARCH	3	Valor padrao de formularios do tipo Busca	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	FORM_CONTENT_SEARCH_ADVANCED_ID	2	Codigo do valor padrão de formularios para busca Avançada	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	FORM_CONTENT_SEARCH_ACQUISITION_ID	1	Codigo do valor padrão de formularios para busca Aquisição	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	DEFAULT_VALUE_PRIVILEGEGROUP_LOAN	1	Valor padrao do grupo de privilégio para empréstimo	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_FINESTATUS_OPEN	1	Codigo do estado da multa em aberto	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	MASK_DATE_DB	yyyy-mm-dd	Define a mascara da data para o banco.\n\n    dd   = Dia\n    mm   = Mês\n    yyyy = Ano	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MASK_TIME_DB	hh:ii:ss	Define a mascara da hora para o banco.\n\n    hh = Hora\n    ii = Minuto\n    ss = Segundo	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MASK_DATE_USER	dd/mm/yyyy	Define a mascara da data para o usuário.\n\n    dd   = Dia\n    mm   = Mês\n    yyyy = Ano	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	LABEL_CONGELADO	<CENTER><B>Lista de materiais congelados pelos professores</CENTER></B><BR>	Mensagem a ser mostrada no topo da tela dos congelados da Minha Biblioteca	VARCHAR	MY_LIBRARY	33	Mensagem para os congelados
\N	\N	\N	GNUTECA3	LABEL_MY_RESERVES	<CENTER><B>Lista reservas em aberto do usuário.</CENTER></B><BR>	Mensagem a ser mostrada no topo da tela das Minhas reservas da Minha Biblioteca	VARCHAR	MY_LIBRARY	34	Mensagem para as reservas
\N	\N	\N	GNUTECA3	LABEL_RENEW	<CENTER><B>Por aqui usuário pode renovar seus empréstimos.</CENTER></B><BR>	Mensagem na tela Renovar da Minha biblioteca	VARCHAR	MY_LIBRARY	36	Mensagem para renovação
\N	\N	\N	GNUTECA3	CHARGE_FINE_IN_THE_HOLIDAY	f	Cobrar multas em feriados	BOOLEAN	FINE	5	Cobrar multa em feriados
\N	\N	\N	GNUTECA3	CHANGE_FINE_WHEN_THE_LIBRARY_UNIT_IS_CLOSED	f	Cobrar multa quando a biblioteca está fechada	BOOLEAN	FINE	6	Cobrar multa quando a biblioteca está fechada
\N	\N	\N	GNUTECA3	FORM_CONTENT	t	Ativa ou desativa o valor padrão de formularios.	BOOLEAN	ADM_INTERFACE	30	Ativar definição de valor padrão
\N	\N	\N	GNUTECA3	DEFAULT_EXEMPLARY_STATUS_EMPRESTADO	2	Determina o id do status Emprestado do exemplar	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	DEFAULT_EXEMPLARY_STATUS_RESERVADO	3	Determina o id do status Reservado do exemplar 	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	DEFAULT_EXEMPLARY_STATUS_DESAPARECIDO	4	Determina o id do status Desaparecido do exemplar	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	DEFAULT_EXEMPLARY_STATUS_DANIFICADO	5	Determina o id do status Danificado do exemplar	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	DEFAULT_EXEMPLARY_STATUS_CONGELADO	7	Determina o id do status Congelado do exemplar 	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	DEFAULT_EXEMPLARY_STATUS_DESCARTADO	8	Determina o id do status Emprestado do exemplar	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	MASK_TIME_USER	hh:ii:ss	Define a mascara da hora para o usuário.\n\n    hh = Hora\n    ii = Minuto\n    ss = Segundo	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	LIMIT_DAYS_BEFORE_EXPIRED	4	Limita o maior valor que o usuário poderá utilizar para o parâmetro USER_DAYS_BEFORE_EXPIRED.	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVETYPE_LOCAL_ANSWERED	3	Código do tipo de reserva local atendida	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVETYPE_LOCAL	1	Código do tipo de reserva local	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVETYPE_WEB	2	Código do tipo de reserva web	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVETYPE_WEB_ANSWERED	4	Código do tipo de reserva web atendida	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_RESERVETYPE_LOCAL_INITIAL_STATUS	5	Código do tipo de reserva local em estado inicial	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	CATALOGUE_DATE_FIELDS	960.d,960.h,960.i,960.y,008.0-SE,949.y,949.z	define os campos que são data	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	CATALOGUE_ARRAY_FIELDS	949.q	define os campos que são arrayField	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	EMAIL_CONTENT_TYPE	html	Define a linguagem do conteudo.	CHAR	ADM_EMAIL	16	Tipo do conteúdo
\N	\N	\N	GNUTECA3	CATALOGUE_FILTER_OPERATOR	TRUE	Constante que define se deve filtrar operadores dentro da catalogação 	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	SPREADSHEET_CATEGORY_COLECTION	SE-#	define a plinilha de coleção	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	SPREADSHEET_CATEGORY_FASCICLE	SE-4	define a plinilha de coleção	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_HIDE_EXEMPLAR	t	Determina se é ou não para esconder/recolher os dados do exemplar na busca simples.	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	MATERIAL_MOVIMENT_SEARCH_FORMAT_ID	3	Define o id do formato de pesquisa (search format) que será utilizado como padrão para a Circulação de Material.	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_EXEMPLAR_DETAIL_FIELD_LIST_OPERATOR	Volume=949.v, Tomo=949.t, Unidade de biblioteca=949.b, Tipo de material=949.1	Relaciona a lista de campos marc que devem aparecer na listagem de exemplares dos detalhes da pesquisa. Para o operador.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_EXEMPLAR_DETAIL_FIELD_LIST_USER	Unidade de bilioteca=949.b, Tipo de material=949.d	Relaciona a lista de campos marc que devem aparecer na listagem de exemplares dos detalhes da pesquisa. Para usuário normal.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_RESERVE_DETAIL_FIELD_LIST	Unidade de bilioteca=949.b	Relaciona a lista de campos marc que devem aparecer na listagem de exemplares na reserva da pesquisa.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	USER_SEND_DELAYED_LOAN	f	Define se é para enviar avisos de materiais em atraso por e-mail.	BOOLEAN	NOTIFICATION_LOAN	20	Ativar aviso de empréstimos atrasados
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_ALL_LIBRARYS_PERSON	f	Define se é permitido a pessoa (usuário) pesquisar em todas unidades na pesquisa simples.	BOOLEAN	SEARCH	7	Ativar busca em todas as biblioteca (usuário)
\N	\N	\N	GNUTECA3	_ID	2	Define o id do formato de pesquisa (search format) que será utilizado como padrão para a pesquisa.	INT	SEARCH	12	Formato para exibição do material
\N	\N	\N	GNUTECA3	INTERCHANGE_SEARCH_FORMAT_ID	5	Define o SearchFormatId para o intercâmbio.	INTEGER	INTERCHANGE	6	Formato para exibição do material
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_SEARCH_FORMAT_ID_DETAIL_ARTICLE	1	Define o id do formato de pesquisa (search format) que será utilizado nos detalhes do artigo.	INTEGER	SEARCH	10	Formato para exibição dos detalhes do artigo
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_LOGIN_STRING	Por favor faça seu login abaixo:	Texto que aparece na tela de login do formulário da busca Simples.	CHAR	SEARCH	25	Mensagem do formulário de login
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_ALL_LIBRARYS_OPERATOR	t	Define se permite ou não pesquisar em todas as bibliotecas para o operador do sistema.	BOOLEAN	SEARCH	6	Ativar busca em todas as biblioteca (operador)
\N	\N	\N	GNUTECA3	FAVORITES_SEARCH_FORMAT_ID	4	Define o SearchFormatId usado no formulário de listagem de favoritos.	INTEGER	MY_LIBRARY	5	Formato para exibição do material nos favoritos
\N	\N	\N	GNUTECA3	ADMINISTRATION_SEARCH_FORMAT_ID	5	Define o SearchFormatId para Administração em geral.	INT	ADMIN	5	Formato para exibição do material
\N	\N	\N	GNUTECA3	MSG_INITIAL_STATUS	O(s) exemplar(es) está(ão) no estado inicial. Realmente deseja fazer a reserva?	Ao tentar reservar material que está no estado inicial, mostra este aviso	VARCHAR	RESERVE	30	Mensagem para material disponível
\N	\N	\N	GNUTECA3	USER_SEND_DAYS_BEFORE_EXPIRED	t	Define se é para enviar avisos por e-mail antes de vencer os materiais.	BOOLEAN	NOTIFICATION_LOAN	10	Ativar aviso de devolução
\N	\N	\N	GNUTECA3	USER_NOTIFY_AQUISITION	15	Valor padrão que indica o intervalo para notificações das novas aquisições	CHAR	NOTIFICATION_AQUISITION	34	Intervalo para notificação (d)
\N	\N	\N	GNUTECA3	CATALOGUE_MULTILINE_FIELDS	949.w,960.w,500.a,502.a,504.a,505.a	define os campos que são texto	CHAR	CATALOG	5	Ativa modo texto para os campos
\N	\N	\N	GNUTECA3	CATALOGUE_LOOKUP_FIELDS	947.a=SupplierType:DescON\n090.b=Cutter:DescOFF\n090.a=Classification:DescOFF\n949.q=CostCenter:DescOFF\n960.q=CostCenter:DescOFF	define os campos que são lookup	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	USER_SEND_NOTIFY_AQUISITION	f	Define se é para enviar notificações de novos materiais por e-mail.	BOOLEAN	NOTIFICATION_AQUISITION	30	Ativar
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_SEARCH_FORMAT_ID_DETAIL_FASCICLE	7	Define o id do formato de pesquisa (search format) que será utilizado nos detalhes do fasciculo.	INT	SEARCH	11	Formato para exibição dos detalhes do fascículo
\N	\N	\N	GNUTECA3	EMAIL_LOANBETWEENLIBRARY_SUBJECT	Empréstimo entre unidades - $STATUS	Assunto do e-mail enviado para as bibliotecas sobre empréstimo entre unidades	CHAR	LOAN_LIBRARY	10	Assunto dos e-mails
\N	\N	\N	GNUTECA3	EMAIL_RETURN_SUBJECT	Prazo de empréstimo	Define o sufixo no assunto do e-mail que será enviado ao usuário para avisá-lo da devolução do material emprestado. Complementa o parâmetro EMAIL_SUBJECT_PREFIX.	CHAR	NOTIFICATION_LOAN	16	Assunto do e-mail da devolução
\N	\N	\N	GNUTECA3	SET_FIRST_OPTION_OF_THE_INDICATOR_AS_DEFAULT	t	Seta a primeira opção dos indicadores como valores padrão caso o mesmo valor não exista.	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_EXCLUDE_SPREEDSHET	SE,4	Relaciona as planilhas a serem excluídas na pesquisa simples, separe por linha nova para mais de um item: Ex.: SE,4	VARCHAR	SEARCH	15	Ignorar planilhas na busca
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_DAYS	10	Número de dias antes e após o final do período, onde será liberado a renovação	VARCHAR	NOTIFICATION_REQUEST	49	Período para renovar
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_SEARCH_FORMAT_ID	1	Define o id do formato de pesquisa (search format) que será utilizado como padrão para a pesquisa.	INT	SEARCH	9	Formato para exibição do material na pesquisa
\N	\N	\N	GNUTECA3	EMAIL_TESTING	f	Define se os envios de email são testes	BOOLEAN	ADM_EMAIL	25	Ativar modo teste
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_SEARCH_FORMAT_STRING	Formato de pesquisa	Texto que aparece no formulário de pesquisa, acima da escolha de formatos de pesquisa	CHAR	SEARCH	14	Rótulo para o formato da pesquisa
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_EXCLUDE_EXEMPLARY_STATUS	0,4,5	Id do estado de exemplares a ignorar na pesquisa.	CHAR	SEARCH	16	Ignorar exemplar nos estados
\N	\N	\N	GNUTECA3	EMAIL_CANCEL_RESERVE_COMUNICA_SOLICITANTE_CONTENT	Prezado(a) $USER_NAME! $LN\nSeu reserva intitulado "$MATERIAL_TITLE" ($ITEM_NUMBER) foi cancelada.$LN\nAtenciosamente,$LN\nbiblioteca de $LIBRARY_UNIT_DESCRIPTION	Define o conteúdo do e-mail que será enviado para o usuário com a data prevista para devolução do empréstimo.\n    Variáveis aceitas:\n    $USER_NAME - Nome do usuário\n    $MATERIAL_TITLE - Descrição do material\n    $ITEM_NUMBER - registro do material\n    $LIBRARY_UNIT_DESCRIPTION - Library unit description	VARCHAR	RESERVE	16	Conteúdo do e-mail de reserva cancelada
\N	\N	\N	GNUTECA3	RELATIONSHIP_OF_FIELDS_WITH_TABLES_FOR_SELECTS	MARC_EXEMPLARY_ORIGINAL_LIBRARY_UNIT_ID_TAG,MARC_KARDEX_LIBRARY_UNIT_ID_TAG,MARC_EXEMPLARY_LIBRARY_UNIT_ID_TAG=LibraryUnit;\nMARC_EXEMPLARY_MATERIAL_GENDER_TAG,MARC_MATERIAL_GENDER_TAG=MaterialGender;\nMARC_MATERIAL_TYPE_TAG,MARC_EXEMPLARY_MATERIAL_TYPE_TAG=MaterialType;\nMARC_EXEMPLARY_EXEMPLARY_STATUS_TAG,MARC_EXEMPLARY_EXEMPLARY_STATUS_FUTURE_TAG=ExemplaryStatus;\nMARC_MATERIAL_PHYSICAL_TYPE_TAG,MARC_EXEMPLARY_MATERIAL_PHYSICAL_TYPE_TAG=MaterialPhysicalType;\nMARC_EXEMPLARY_COST_CENTER_TAG=CostCenter;\n	Relaciona campos da catalogação com business. Não altere o conteúdo desta constante!	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	INTERCHANGE_TYPE_RECEIPT	2	Código do tipo de permuta para recebimento.	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	INTERCHANGE_STATUS_CREATED	1	Código do estado de permuta CRIADO.	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	HASH_KEY	xyzw095fgh	Define uma chave para criação do hash de recibos.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	PRINT_SERVER_HOST	localhost	Endereço IP do servidor de impressão a ser utilizado	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MARK_SEND_RETURN_MAIL_RECEIPT	f	Define se a opção de enviar recibo de devolucao sai marcada.	BOOLEAN	RETURN	6	Selecionar a opção enviar recibo
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	MARK_COMUNICATE_RESERVE	f	Define se a opção comunicar reserva sai marcada.	BOOLEAN	RETURN	\N	\N
\N	\N	\N	GNUTECA3	RECEIPT_COPIES_AMOUNT	1	Define s quatidade de cópias que será impressa dos recibos de empréstimo e devolução	INTEGER	LOAN	17	Quantidade de cópias do recibo
\N	\N	\N	GNUTECA3	MARK_PRINT_RECEIPT_RETURN	t	Define se a opção de imprimir recibo de devolução sai marcada.	BOOLEAN	RETURN	5	Selecionar a opção imprimir recibo
\N	\N	\N	GNUTECA3	PRINT_SERVER_PORT	1515	Porta do servidor de impressao a ser utilizada	INTEGER	PRINT	6	Porta utilizada para comunicação com a impressora
\N	\N	\N	GNUTECA3	EMAIL_RESERVE_ANSWERED_ADMIN_RESULT_CONTENT	Segue abaixo o resultado do comunicado de reservas atendidas.$LN $CONTENT	Conteudo do e-mail que é enviado para o administrado com o resultado do comunicado de reservas atendidas.	VARCHAR	RESERVE	22	Conteúdo do e-mail do administrador
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_NOTIFY_ACQUISITION_RESULT_SUBJECT	Comunicação das notificações de aquisições	Define o titulo de email que envia o resultado das notificações de aquisições para o administrador.	CHAR	NOTIFICATION_AQUISITION	32	Assunto do e-mail do adminstrador
\N	\N	\N	GNUTECA3	Z3950_SEARCH_FORMAT_ID	6	Define o ID do formato de pesquisa que sera exibido na pesquisa z3950	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	INTERCHANGE_STATUS_LETTER_SENT	2	Código do estado de permuta CARTA ENVIADA.	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	INTERCHANGE_STATUS_CONFIRMED	3	Código do estado de permuta CONFIRMADO.	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	INTERCHANGE_STATUS_GRATEFUL	5	Código do estado de permuta AGRADECIDO.	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_EXEMPLARY_STATUS_REQUESTED	1	Código inicial de uma solicitação de alteração de estado de material	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_EXEMPLARY_STATUS_APROVED	2	Código de aprovação de uma solicitação de alteração de estado de material	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_EXEMPLARY_STATUS_REPROVED	3	Código de reprovação de uma solicitação de alteração de estado de material	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_EXEMPLARY_STATUS_CONCLUDE	4	Código de conclusão de uma solicitação de alteração de estado de material	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_EXEMPLARY_STATUS_CANCEL	5	Código de cancelamento de uma solicitação de alteração de estado de material	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_EXEMPLARY_STATUS_CONFIRMED	6	Código de confirmação de uma solicitação de alteração de estado de material	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	MYLIBRARY_REQUEST_TITLE	Congelados	Título do formulário de Requisições da Minha Biblioteca	CHAR	MY_LIBRARY	10	Título para requisição de troca de estado
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_EXEMPLARY_STATUS_BY_SEMESTER	t	Determina que as requisições de troca de estado terão datas pre definidas por semestre	VARCHAR	NOTIFICATION_REQUEST	47	Datas pré-definidas
\N	\N	\N	GNUTECA3	Z3950_SEARCH_OPTIONS	1016 = Todos os Campos;\n7 = ISBN (020);\n14 = CDU (080);\n21 = Assunto;\n1000 = Autor e título;\n1003 = Autor;\n1004 = Autor pessoal;\n//1005 = Autor corporativo;\n//1006 = Autor conferencia;\n//1036 = Autor, título ou assunto;	Define as Opções de pesquisa z3950. Fonte: http://www.loc.gov/z3950/agency/defns/bib1.html	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MAIL_LOG_GENERATE	t	Seta se é para gerar log de envio de emails.	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	MAIL_LOG_FILE_NAME	gnuteca3-mail.log	Seta o nome do arquivo de log.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	EMAIL_RESERVE_ANSWERED_ADMIN_RESULT_SUBJECT	Reserva cancelada	Define o titulo de email que envia um comunicado de reserva cancelada para o usuário.	CHAR	RESERVE	21	Assunto do e-mail do administrador
\N	\N	\N	GNUTECA3	EMAIL_SUBJECT_PREFIX	[Gnuteca]	Prefixo utilizado para a descrição do sistema no assunto dos e-mails.	CHAR	ADM_EMAIL	15	Prefixo do assunto
\N	\N	\N	GNUTECA3	EMAIL_TEST_RECEIVE	\N	Define o email que recebera os testes.	CHAR	ADM_EMAIL	26	Email para testes
\N	\N	\N	GNUTECA3	EMAIL_USER	\N	Define o user SMTP que será utilizado, pelo Gnuteca, para envio de mensagens.	CHAR	ADM_EMAIL	7	Usuário
\N	\N	\N	GNUTECA3	LOAN_RECEIPT_WORK	\n| <pad 44| $SP | RIGHT>CODIGO DO EXEMPLAR: $ITEM_NUMBER</pad> |$LN\n| <pad 44| $SP | RIGHT>TITULO: $MATERIAL_TITLE</pad> |$LN\n| <pad 44| $SP | RIGHT>AUTOR: $MATERIAL_AUTHOR</pad> |$LN\n| <pad 44| $SP | RIGHT>DATA DE DEVOLUCAO: $DEVOLUTION_DATE</pad> |$LN\n| <pad 44| $SP | RIGHT>RENOVAÇÕES WEB: $WEB_RENEW_AMOUNT</pad> |$LN\n| <pad 44| $SP | RIGHT>RENOVAÇÕES LOCAIS: $LOCAL_RENEW_AMOUNT</pad> |$LN\n| <pad 44| $SP | RIGHT>MULTA DIARIA: R$ $DAILY_FINE</pad> |$LN\n+----------------------------------------------+$LN\n	Define o modelo das obras que e anexado ao recibo de empréstimo.\nVariáveis aceita:\n$DEVOLUTION_DATE - Data de devolução\n$WEB_RENEW_AMOUNT - Quantidade de renovações web\n$LOCAL_RENEW_AMOUNT - Quantidade de renovações locais\n$DAILY_FINE - Multa por dia /hora de acordo com preferência.\n$MATERIAL_AUTHOR - Título do material\n$MATERIAL_TITLE - Autor do material\n$ITEM_NUMBER - Número de exemplar do material\n\nVerifique a preferência LOAN_RECEIPT para ver as outras do empréstimo.\n        	VARCHAR	LOAN	16	Recibo - Detalhes
\N	\N	\N	GNUTECA3	LOAN_RECEIPT	\n$LN$LN$LN$LN\n+----------------------------------------------+$LN\n| <pad 44| $SP | RIGHT>Biblioteca: $LIBRARY_UNIT_DESCRIPTION</pad> |$LN\n+----------------------------------------------+$LN\n|         COMPROVANTE DE EMPRESTIMO            |$LN\n|                                              |$LN\n| <pad 44| $SP | RIGHT>CODIGO: $USER_CODE</pad> |$LN\n| <pad 44| $SP | RIGHT>NOME: $USER_NAME</pad> |$LN\n| <pad 44| $SP | RIGHT>DATA DE EMPRESTIMO: $DATE - $TIME</pad> |$LN\n| <pad 44| $SP | RIGHT>OPERADOR: $OPERATOR</pad> |$LN\n+----------------------------------------------+$LN\n|                  OBRAS                       |$LN\n+----------------------------------------------+$LN\n$WORKS\n| <pad 44| $SP | RIGHT>$RECEIPT_FOOTER</pad> |$LN\n+----------------------------------------------+$LN	Define o recibo de empréstimo\nVariáveis possíveis:\n$USER_CODE - código do usuário.\n$USER_NAME - nome do usuário.\n$USER_LOGIN - login do usuário.\n$OPERATOR - nome do operador.\n$OPERATOR_ID - código do operador\n$LIBRARY_UNIT_DESCRIPTION - nome da unidade de biblioteca.\n$DATE - data atual.\n$TIME - hora atual.\n$RECEIPT_FOOTER - rodapé do recibo ( hash ).\n$OPERATION - operação, no caso empréstimo ou renovação.\n        	VARCHAR	LOAN	15	Recibo de empréstimo
\N	\N	\N	GNUTECA3	RETURN_RECEIPT_WORK	\n| <pad 44| $SP | RIGHT>CODIGO DO EXEMPLAR: $ITEM_NUMBER</pad> |$LN\n| <pad 44| $SP | RIGHT>TITULO: $MATERIAL_TITLE</pad> |$LN\n| <pad 44| $SP | RIGHT>AUTOR: $MATERIAL_AUTHOR</pad> |$LN\n| <pad 44| $SP | RIGHT>MULTA: R$ $FINE</pad> |$LN\n| <pad 44| $SP | RIGHT>DATA DE EMPRESTIMO: $LOAN_DATE</pad> |$LN\n+----------------------------------------------+$LN\n	Define o modelo das obras que é anexado ao recibo de devolução	VARCHAR	RETURN	16	Recibo - $WORK
\N	\N	\N	GNUTECA3	EMAIL_LOAN_RENEW_RECEIPT_SUBJECT	Recibo de empréstimo e/ou renovação.	Define o sufixo no assunto do e-mail que será enviado ao usuário anexando o recibo de empréstimo e/ou renovação. Complementa o parâmetro EMAIL_LOAN_RENEW_RECEIPT_CONTENT.	CHAR	LOAN	25	E-mail do recibo - assunto
\N	\N	\N	GNUTECA3	RETURN_RECEIPT	\n$LN$LN$LN$LN\n+----------------------------------------------+$LN\n| <pad 44| $SP | RIGHT>Biblioteca: $LIBRARY_UNIT_DESCRIPTION</pad> |$LN\n+----------------------------------------------+$LN\n|      COMPROVANTE DE DEVOLUÇÃO                |$LN\n|                                              |$LN\n| <pad 44| $SP | RIGHT>CODIGO: $USER_CODE</pad> |$LN\n| <pad 44| $SP | RIGHT>NOME: $USER_NAME</pad> |$LN\n| <pad 44| $SP | RIGHT>DATA DE DEVOLUÇÃO: $DATE - $TIME</pad> |$LN\n| <pad 44| $SP | RIGHT>OPERADOR: $OPERATOR</pad> |$LN\n+----------------------------------------------+$LN\n|                  OBRAS                       |$LN\n+----------------------------------------------+$LN\n$WORKS\n| <pad 44| $SP | RIGHT>VALOR TOTAL DA MULTA: $TOTAL_FINE_VALUE</pad> |$LN\n+----------------------------------------------+$LN\n| <pad 44| $SP | RIGHT>$RECEIPT_FOOTER</pad> |$LN\n+----------------------------------------------+$LN	Define o recibo de devolução	VARCHAR	RETURN	15	Recibo
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_DELAYED_LOAN_RESULT_CONTENT	Segue abaixo o resultado do comunicado de devoluções.$LN $CONTENT	Conteudo do e-mail que é enviado para o administrador com o resultado das devoluções atrasadas.	VARCHAR	NOTIFICATION_LOAN	23	Conteúdo do e-mail do administrador
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_SHOW_EXTRA_ACTIONS	f	Mostra ou esconde ações extras na pesquisa. É importante notar que todas estas ações podem ser acessadas na janela de detalhes.	BOOLEAN	SEARCH	100	Mostra ações extras
\N	\N	\N	GNUTECA3	FINE_RECEIPT	\n$LN$LN$LN$LN\n+----------------------------------------------+$LN\n| <pad 44| $SP | RIGHT>Biblioteca: $LIBRARY_UNIT_DESCRIPTION</pad> |$LN\n+----------------------------------------------+$LN\n|      COMPROVANTE DE ALTERAÇÃO DE MULTA       |$LN\n|                                              |$LN\n| <pad 44| $SP | RIGHT>CODIGO: $USER_CODE</pad> |$LN\n| <pad 44| $SP | RIGHT>NOME: $USER_NAME</pad> |$LN\n| <pad 44| $SP | RIGHT>DATA DE DEVOLUÇÃO: $DATE - $TIME</pad> |$LN\n| <pad 44| $SP | RIGHT>OPERADOR: $OPERATOR</pad> |$LN\n+----------------------------------------------+$LN\n|                  OBRAS                       |$LN\n+----------------------------------------------+$LN\n$WORKS\n| <pad 44| $SP | RIGHT>VALOR TOTAL DA MULTA: $TOTAL_FINE_VALUE</pad> |$LN\n+----------------------------------------------+$LN\n| <pad 44| $SP | RIGHT>$RECEIPT_FOOTER</pad> |$LN\n+----------------------------------------------+$LN	Define o recibo de devolução	VARCHAR	FINE	10	Recibo
\N	\N	\N	GNUTECA3	EMAIL_PORT	\N	Define porta que será utilizadA, pelo Gnuteca, para envio de mensagens	INTEGER	ADM_EMAIL	6	Porta
\N	\N	\N	GNUTECA3	EMAIL_FROM_NAME	Gnuteca	Define o nome do remetende para envio de e-mails.	CHAR	ADM_EMAIL	10	Nome
\N	\N	\N	GNUTECA3	EMAIL_SMTP	\N	Define o servidor SMTP que será utilizado, pelo Gnuteca, para envio de mensagens.	CHAR	ADM_EMAIL	5	Servidor de saída de email
\N	\N	\N	GNUTECA3	EMAIL_LINE_BREAK	<br>	Quebra de linha dos avisos enviados por e-mail	CHAR	ADM_EMAIL	17	Quebra de linha
\N	\N	\N	GNUTECA3	EMAIL_FROM	\N	Define o remetente dos emails.	CHAR	ADM_EMAIL	11	Email
\N	\N	\N	GNUTECA3	EMAIL_SERVER_DELAY	1	Tempo de espera em segundos do servidor de email para envio da próxima mensagem. Esta opção é importante para evitar a sobrecarga do servidor de emails ou a interpretação de um possível ataque.	INT	ADM_EMAIL	24	Intervalo entre o envio (s)
\N	\N	\N	GNUTECA3	EMAIL_AUTHENTICATE	f	Define se o envio de email é authenticado ou não.	BOOLEAN	ADM_EMAIL	8	Usar autenticação
\N	\N	\N	GNUTECA3	EMAIL_CANCEL_SUBJECT_REQUEST_CHANGE_EXEMPLARY_STATUS	Cancelamento de Solicitação de mudança de estado.	Define o assunto do email que sera enviado para o administrador informando o cancelamento de uma solicitação de mudança de estado.	 VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	EMAIL_COMUNICA_SOLICITANTE_TERMINO_REQUISICAO_SUBJECT	Encerrando periodo de congelamento de material	Define o assunto do email que sera enviado para o professor informando o encerramento do prazo de congelamento de material.	CHAR	NOTIFICATION_REQUEST	43	Assunto do e-mail de termino de congelamento
\N	\N	\N	GNUTECA3	EMAIL_CANCEL_RESERVE_COMUNICA_SOLICITANTE_SUBJECT	Reservas comunicadas.	Define o titulo de email que envia o resultado do comunicado de reservas atendidas.	CHAR	RESERVE	15	Assunto do e-mail de reserva cancelada
\N	\N	\N	GNUTECA3	EMAIL_LOAN_RENEW_RECEIPT_CONTENT	Prezado(a) $USER_NAME!$LN Segue em anexo o seu recibo de empréstimo.	Conteudo do email que sera enviado com o recibo em anexo.	VARCHAR	LOAN	26	E-mail do recibo - conteúdo
\N	\N	\N	GNUTECA3	EMAIL_RESERVE_ANSWERED_SUBJECT	Aviso de reserva	Define o assunto do email que será enviado para o usuário quando sua reserva for atendida. 	CHAR	RESERVE	10	Assunto do e-mail de reserva atendida
\N	\N	\N	GNUTECA3	GB_INTEGRATION	t	Define integração com Google Books	BOOLEAN	SEARCH	40	Integração com Google Books
\N	\N	\N	GNUTECA3	EMAIL_NOTIFY_ACQUISITION_SUBJECT	Novas aquisições	Define o sufixo no assunto do e-mail que será enviado ao usuário para avisá-lo de novas aquisições. Complementa o parâmetro EMAIL_SUBJECT_PREFIX.	CHAR	NOTIFICATION_AQUISITION	35	Assunto do e-mail
\N	\N	\N	GNUTECA3	EMAIL_RETURN_RECEIPT_CONTENT	Prezado(a) $USER_NAME! $LN Segue em anexo o seu recibo de devolução	Conteudo do email que sera enviado com o recibo em anexo.	VARCHAR	RETURN	26	E-mail do recibo - conteúdo
\N	\N	\N	GNUTECA3	EMAIL_DELAYED_LOAN_SUBJECT	Empréstimo atrasado	Define o sufixo no assunto do e-mail que será enviado ao usuário para avisá-lo do atraso da devolução do material emprestado. Complementa o parâmetro EMAIL_SUBJECT_PREFIX.	CHAR	NOTIFICATION_LOAN	25	Assunto do e-mail de empréstimos atrasados
\N	\N	\N	GNUTECA3	EMAIL_LOANBETWEENLIBRARY_CANCEL_CONTENT	Informamos que a biblioteca $LIBRARY_UNIT_DESCRIPTION cancelou o pedido de empréstimo para os seguintes materiais:\n$LN $MATERIALS	Conteúdo do e-mail enviado para as bibliotecas sobre empréstimo entre unidades (CANCELAMENTO)	VARCHAR	LOAN_LIBRARY	14	E-mail de cancelamento
\N	\N	\N	GNUTECA3	EMAIL_RETURN_RECEIPT_SUBJECT	Recibo de devolução	Define o sufixo no assunto do e-mail que será enviado ao usuário anexando o recibo de devolução. Complementa o parâmetro EMAIL_RETURN_RECEIPT_CONTENT.	CHAR	RETURN	25	E-mail do recibo - assunto
\N	\N	\N	GNUTECA3	EMAIL_FINE_RECEIPT_CONTENT	Prezado(a) $USER_NAME! $LN Segue em anexo o seu recibo de alteração de multa	Conteudo do email que sera enviado com o recibo de alteração de multa em anexo.	VARCHAR	FINE	16	E-mail do recibo - conteúdo
\N	\N	\N	GNUTECA3	EMAIL_FINE_RECEIPT_SUBJECT	Recibo de Alteração de Multa	Define o sufixo no assunto do e-mail que será enviado ao usuário anexando o recibo de alteração de multa. Complementa o parâmetro EMAIL_FINE_RECEIPT_CONTENT.	CHAR	FINE	15	E-mail do recibo - assunto
\N	\N	\N	GNUTECA3	EMAIL_CANCEL_CONTENT_REQUEST_CHANGE_EXEMPLARY_STATUS	\nA Requisição de troca de estado (Congelamento) de numero $REQUEST_ID, foi cancelada.\n	Conteudo do e-mail enviado para as bibliotecas sobre o cancelamento de uma solicitação de troca de estado;	VARCHAR	NOTIFICATION_REQUEST	46	E-mail para cancelamento da troca de estado
\N	\N	\N	GNUTECA3	EMAIL_LOANBETWEENLIBRARY_REQUEST_CONTENT	\nInformamos que a biblioteca $LIBRARY_UNIT_DESCRIPTION requisitou empréstimo para os seguintes materiais:$LN\n$MATERIALS $LN\nData do empréstimo: $LOAN_DATE $LN\nData prevista de retorno: $RETURN_FORECAST_DATE\n	Conteudo do e-mail enviado para as bibliotecas sobre empréstimo entre unidades (REQUISICAO)	VARCHAR	LOAN_LIBRARY	11	E-mail de requisição
\N	\N	\N	GNUTECA3	EMAIL_DELAYED_LOAN_CONTENT	\nPrezado(a) $USER_NAME! $LN\nSeu empréstimo ($ITEM_NUMBER) intitulado "$MATERIAL_TITLE", cuja data de devolução era $RETURN_DATE, está atrasado.$LN\nCaso já tenha devolvido o material acima citado, desconsidere esta mensagem.$LN\nAtenciosamente,$LN\nbiblioteca $LIBRARY_UNIT_DESCRIPTION.\n	Define o conteudo do e-mail que será enviado para o usuário quando seu empréstimo estiver em atraso.\n    Variáveis aceitas:\n    $USER_NAME - Nome do usuário\n    $ITEM_NUMBER - registro do material\n    $MATERIAL_TITLE - Título do material\n    $RETURN_DATE - Data prevista para devolução\n    $LIBRARY_UNIT_DESCRIPTION - Nome da Biblioteca.\n    	VARCHAR	NOTIFICATION_LOAN	26	Conteúdo do e-mail de empréstimos atrasados
\N	\N	\N	GNUTECA3	MY_LIBRARY_AUTHENTICATE_LDAP	f	Caso verdadeiro, usa LDAP para autenticar na minha biblioteca, usando configuração de conexão de LDAP definida no conf	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	INTERCHANGE_MAIL_RECEIPT_CONTENT	Prezado $CONTACT_NAME! $LN Informamos que recebemos os seguintes materiais:$LN$LN $MATERIALS	Conteúdo do email de recebimento	VARCHAR	INTERCHANGE	11	E-mail de recebimento - conteúdo
\N	\N	\N	GNUTECA3	EMAIL_NOTIFY_ACQUISITION_CONTENT	\nPrezado(a) $USER_NAME $LN\nOs materiais abaixo foram adquiridos desde $DATE_AQUISITIONS pela biblioteca nas suas áreas de interesses.\n$ACQUISITIONS\nCaso não deseje mais receber este aviso, acesse o link "Definir Interesses" do Gnuteca e desabilite as opções.\n	Define o conteúdo do e-mail que será enviado para os usuário quando da notificação de aquisições.\n    $USER_NAME - Nome do usuário\n    $DATE_AQUISITIONS - Data inicial das aquisições\n    $ACQUISITIONS - Aquisições da biblioteca no período	VARCHAR	NOTIFICATION_AQUISITION	36	Conteúdo do e-mail
\N	\N	\N	GNUTECA3	MARK_SEND_LOAN_MAIL_RECEIPT	f	Define se a opção de enviar recibo de emprestimo sai marcada.	BOOLEAN	LOAN	6	Selecionar a opção enviar recibo
\N	\N	\N	GNUTECA3	BAR_CODE_CHARACTERS	0 Não fixos\n6 6\n8 8\n10 10\n12 12\n14 14\n16 16\n18 18	Especifica as opções que fazem parte do campo caracteres na geração do código de barras.\n\n    VALOR<espaço>Descrição	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_FINESTATUS_PAYED	2	Codigo do estado da multa Paga	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_FINESTATUS_BILLET	3	Codigo do estado da multa Paga via boleto	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	ID_FINESTATUS_EXCUSED	4	Codigo do estado da multa Abonada	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	MARC_ISBN_TAG	020.a	Marc tag that represents ISBN identifier.	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	MATERIAL_SEARCH_USE_PREFIX_SUFFIX	t	Define se as buscas de material utilizam ou não prefixo e sufixo automaticamente	BOOLEAN	SEARCH	100	Mostrar prefixo e sufixo
\N	\N	\N	GNUTECA3	EMAIL_SIMPLESEARCH_REPORT_SUBJECT	Relatório exemplares	Assunto do e-mail enviado para usuário na Busca Simples, contendo o relatório PDF gerado em anexo.	CHAR	SEARCH	30	E-mail dos materiais - assunto
\N	\N	\N	GNUTECA3	EMAIL_LOANBETWEENLIBRARY_RETURNMATERIAL_CONTENT	Informamos que a biblioteca $LIBRARY_UNIT_DESCRIPTION encaminhou para devolução os seguintes materiais:\n$MATERIALS	Conteúdo do e-mail enviado para as bibliotecas ao encaminhar materiais para devolução	VARCHAR	LOAN_LIBRARY	13	E-mail de devolução
\N	\N	\N	GNUTECA3	EMAIL_ADMIN	\N	Define o endereço de e-mail geral da biblioteca. Esse endereço é utilizado para envio dos e-mails.\nEste endereço poderá ser sobrescrito nos casos onde alguma área da biblioteca tiver um responsável com e-mail diferente.	CHAR	ADM_EMAIL	20	Email do administrador
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_REQUEST_CHANGE_EXEMPLARY_STATUS	\N	Define o endereço de e-mail da biblioteca. Esse endereço é utilizado para envio dos e-mails de requisição de troca de estado de material.\nSe um valor não for definido o e-mail do administrador geral será utilizado pelo sistema.	CHAR	NOTIFICATION_REQUEST	45	E-mail do administrador para troca de estado
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_LOAN_BETWEEN_LIBRARY	email@aministradorEntreBibliotecas	Define o endereço de e-mail da biblioteca. Esse endereço é utilizado para envio dos e-mails de emprestimo entre bibliotecas. \nSe um valor não for definido o e-mail do administrador geral será utilizado pelo sistema.	CHAR	LOAN_LIBRARY	5	Email do administrador
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_RESERVE	\N	Define o endereço de e-mail da biblioteca. Esse endereço é utilizado para envio dos e-mails de reservas.\nSe um valor não for definido o e-mail do administrador geral será utilizado pelo sistema.	CHAR	RESERVE	20	E-mail do administrador
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_NOTIFY_ACQUISITION	\N	Define o endereço de e-mail da biblioteca. Esse endereço é utilizado para envio dos e-mails de notificação de aquisições.\nSe um valor não for definido o e-mail do administrador geral será utilizado pelo sistema.	CHAR	NOTIFICATION_AQUISITION	31	E-mail do administrador
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_DELAYED_LOAN	\N	Define o endereço de e-mail da biblioteca que receberá o e-mail com a listagem das pessoas que foram avisadas sobre devoluções atrasadas. \nSe um valor não for definido o e-mail do administrador geral será utilizado pelo sistema.	CHAR	NOTIFICATION_LOAN	21	E-mail do administrador do empréstimo atrasado
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_NOTIFY_END_REQUEST	\N	Define o endereço de e-mail da biblioteca. Esse endereço é utilizado para envio dos e-mails de notificação de término de requisição.\nSe um valor não for definido o e-mail do administrador geral será utilizado pelo sistema.	CHAR	NOTIFICATION_REQUEST	40	E-mail do administrador do termino de congelamento
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_DEVOLUTION	\N	Define o endereço de e-mail da biblioteca. Esse endereço é utilizado para envio dos e-mails de devolução.\nSe um valor não for definido o e-mail do administrador geral será utilizado pelo sistema.	CHAR	NOTIFICATION_LOAN	11	E-mail do administrador da devolução
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_PURCHASE_REQUEST	gnutecadevel@gmail.com	Define o endereço de e-mail do administrador de compras.\nSe um valor não for definido o e-mail do administrador geral será utilizado pelo sistema.	VARCHAR	PURCHASE_REQUEST	\N	Email administrativo
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_NOTIFY_END_REQUEST_RESULT_SUBJECT	Comunicação das notificações de término de requisição.	Define o titulo de email que envia o resultado das notificações de término de requisição para administrador.	CHAR	NOTIFICATION_REQUEST	41	Assunto do e-mail do administrador
\N	\N	\N	GNUTECA3	INTERCHANGE_LETTER_SEND_CONTENT	Prezado $CONTACT_NAME! $LN\nEstamos enviando os seguintes materiais:\n$MATERIALS	Conteúdo da carta de envio para o intercambio	VARCHAR	INTERCHANGE	20	Conteúdo do e-mail
\N	\N	\N	GNUTECA3	EMAIL_LOANBETWEENLIBRARY_CONFIRMLOAN_CONTENT	Informamos que a biblioteca $LIBRARY_UNIT_DESCRIPTION $ACTION o empréstimo para os seguintes materiais: $LN\n$MATERIALS	Conteúdo do e-mail enviado para as bibliotecas ao Aprovar ou Reprovar um empréstimo entre unidade	VARCHAR	LOAN_LIBRARY	12	E-mail de confirmação
\N	\N	\N	GNUTECA3	EMAIL_SIMPLESEARCH_REPORT_CONTENT	Prezado usuário(a), $LN\n$LN\nSegue em anexo o relatório contendo informações dos exemplares selecionados.	Conteúdo do e-mail enviado para usuário na Busca Simples, contendo o relatório PDF gerado em anexo.	VARCHAR	SEARCH	31	E-mail dos materiais - conteúdo
\N	\N	\N	GNUTECA3	INTERCHANGE_MAIL_RECEIPT_AUTOSEND	t	Indica se é para enviar e-mail de agradecimento diretamente para fornecedor ou abrir uma tela com conteúdo e destinatário para usuário personalizar a mensagem	BOOLEAN	INTERCHANGE	5	Ativar o envio automátioco para o fornecedor
\N	\N	\N	GNUTECA3	INTERCHANGE_MAIL_RECEIPT_SUBJECT	Recebimento intercâmbio	Assunto do email de recebimento do intercambio	CHAR	INTERCHANGE	10	E-mail de recebimento - assunto
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_DEVOLUTION_RESULT_SUBJECT	Comunicação das devoluções.	Define o titulo de email que envia o resultado das devoluções para o administrador.	CHAR	NOTIFICATION_LOAN	12	Assunto do e-mail do adminstrador
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_DEVOLUTION_RESULT_CONTENT	Segue abaixo o resultado do comunicado de devoluções.$LN $CONTENT	Conteudo do e-mail que é enviado para o administrador com o resultado das devoluções.	VARCHAR	NOTIFICATION_LOAN	13	Conteúdo do e-mail do administrador
\N	\N	\N	GNUTECA3	DEFAULT_BARCODE_LABEL_LAYOUT	3	Define o modelo de etiqueta que será utilizado para imprimir os códigos de barras. O valor utilizado é o código da etiqueta.	INT	ADMIN	6	Modelo de etiqueta padrão
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_SHOW_TERM_CONDITION	f	Define se é para mostrar campo Condição dos Termos da pesquisa.	BOOLEAN	SEARCH	8	Ativar condição dos termos
\N	\N	\N	GNUTECA3	FINE_RECEIPT_WORK	\n| <pad 44| $SP | RIGHT>CODIGO DA MULTA: $FINE_ID</pad> |$LN\n| <pad 44| $SP | RIGHT>CODIGO DO EXEMPLAR: $ITEM_NUMBER</pad> |$LN\n| <pad 44| $SP | RIGHT>TITULO: $MATERIAL_TITLE</pad> |$LN\n| <pad 44| $SP | RIGHT>AUTOR: $MATERIAL_AUTHOR</pad> |$LN\n| <pad 44| $SP | RIGHT>DATA: $DATE - $TIME</pad> |$LN\n| <pad 44| $SP | RIGHT>OPERACAO: $OPERATION</pad> |$LN\n| <pad 44| $SP | RIGHT>VALOR: R$ $VALUE</pad> |$LN\n+----------------------------------------------+$LN\n	Define o modelo das obras que é anexado ao recibo de devolução	VARCHAR	FINE	11	Recibo - $WORK
\N	\N	\N	GNUTECA3	EMAIL_RESERVE_ANSWERED_CONTENT	\nPrezado(a) $USER_NAME!$LN\nSua reserva de código $RESERVE_CODE, intitulada "$MATERIAL_TITLE", já se encontra à sua disposição no balcão de empréstimo da biblioteca.$LN\nSua data limite para retirada é $RESERVE_WITHDRAWAL_DATE. Atente para esta data, pois após este prazo, o material passará automaticamente para o próximo da fila.$LN\nAtenciosamente,\nbiblioteca $LIBRARY_UNIT_DESCRIPTION.\n	Define o conteudo do e-mail que será enviado para o usuário quando sua reserva for atendida. O Gnuteca 2 após o envio desta mensagem, altera, automaticamente, o estado da reserva de Atendida para Comunicada.\n    Variáveis aceitas:\n    $USER_NAME - Nome do usuário\n    $MATERIAL_TITLE - Descrição do material\n    $RESERVE_WITHDRAWAL_DATE - Data limite de retirada	VARCHAR	RESERVE	11	Conteúdo do e-mail de reserva atendida
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_DEFAULT_ORDER	1,ASC	Ordenação padrão para a pesquisa no formulario. A configuracao deve ser: CodigoDoCampoPesquisavel,TipoOrdenacao - Ex: 1,ASC	CHAR	SEARCH	13	Ordem padrão da pesquisa
\N	\N	\N	GNUTECA3	MARK_PRINT_RECEIPT_LOAN	t	Define se a opção de imprimir recibo de empréstimo sai marcada.	BOOLEAN	LOAN	5	Selecionar a opção imprimir recibo
\N	\N	\N	GNUTECA3	USER_DAYS_BEFORE_EXPIRED	2	Valor padrão que indica a quantidade de dias antes em que o usuário deva ser informado da devolução de um material. Este valor não pode ultrapassar o valor definido em LIMIT_DAYS_BEFORE_EXPIRED	INT	NOTIFICATION_LOAN	15	Avisar em X dias antes do vencimento
\N	\N	\N	GNUTECA3	CHANGE_WRITE_PERSON	tabMain=t\ntabAccess=t\ntabPhoto=t\ntabPhone=t\ntabDocument=t\ntabBond=t\ntabPenalty=t	Permite alterações no formulário de pessoas.\n                    Estas permissões são dada por abas, sendo estas respectivamente:\n\n                    Gerais=tabMain\n                    Acesso a biblioteca=tabAccess\n                    Foto=tabPhoto\n                    Telefones=tabPhone\n                    Documentos=tabDocument\n                    Vínculo=tabBond\n                    Penalidade=tabPenalty\n\n                    Deve ser atribuido o valor t para a aba que poderá ser editada e f para a aba que não poderá ser editada.	BOOLEAN	ADMIN	11	Ativar cadastro de pessoas
\N	\N	\N	GNUTECA3	FIELD_DESCRIPTION_SIZE	38	Tamanho padrão para campos DESCRIPTION	INT	ADM_INTERFACE	7	Tamanho do campo descrição
\N	\N	\N	GNUTECA3	FIELD_LOOKUPFIELD_SIZE	8	Tamanho padrão para campos de Lookup	INT	ADM_INTERFACE	14	Tamanho do campo lookup
\N	\N	\N	GNUTECA3	LABEL_PERSON_CONFIG	<CENTER><B>Configurações de avisos.</CENTER></B><BR>	Mensagem a ser mostrada no topo de configurações pessoais da Minha Biblioteca	VARCHAR	MY_LIBRARY	31	Mensagem para as configurações pessoais
\N	\N	\N	GNUTECA3	SEARCH_REQUEST_TITLE	Requisitar congelamento	Título do formulário de Requisições das Pesquisas	CHAR	SEARCH	32	Título para requisição de troca de estado
\N	\N	\N	GNUTECA3	PRINT_SERVER_CUT_COMMAND	27,109	Comando que indica para impressora que o recibo deve ser cortado na impressao (separado por virgula em ASCII code)	CHAR	PRINT	10	Comando para ativar a guilhotinha
\N	\N	\N	GNUTECA3	LABEL_INTEREST_AREA	<CENTER><B>Áreas de interesse para os avisos de novas de aquisições.</CENTER></B><BR>	Mensagem a ser mostrada no topo da tela das áreas de interesse da Minha Biblioteca	VARCHAR	MY_LIBRARY	30	Mensagem para áreas de interesse
\N	\N	\N	GNUTECA3	REQUEST_CHANGE_EXEMPLARY_STATUS_SEMESTER_PERIOD	A=\nStartDate:01/01,\nEndDate:30/06,\nStarting:01/12;\nB=\nStartDate:01/07,\nEndDate:31/12,\nStarting:01/06;\n	Determina os peridos validos das requisições; Pode ser definido N periodos.\n\n    Exemplos:\n\n    A=\n    StartDate:01/01,\n    EndDate:30/06,\n    Starting:01/12;\n    B=\n    StartDate:01/07,\n    EndDate:31/12,\n    Starting:01/06;\n    	VARCHAR	NOTIFICATION_REQUEST	48	Período de requisição
\N	\N	\N	GNUTECA3	USER_DELAYED_LOAN	7;1	Valor padrão que indica a quantidade de emails e o intervalo de dias para comunicar os usuários que estão com empréstimos atrasados. Ex: 5;7 - enviará 5 emails com um intervalo de 7 dias cada. 7;1 - enviará 7 email sem intervalo de dias entre eles.	CHAR	NOTIFICATION_LOAN	24	Quantidade de avisos e intervalo
\N	\N	\N	GNUTECA3	FIELD_MULTILINE_COLS_SIZE	50	Quantidade de colunas padrão para um campo Multiline.	INT	ADM_INTERFACE	10	Largura do campo texto
\N	\N	\N	GNUTECA3	EMAIL_PASSWORD	\N	Define senha do user que será utilizado, pelo Gnuteca, para envio de mensagens.	CHAR	ADM_EMAIL	9	Senha
\N	\N	\N	GNUTECA3	EMAIL_COMUNICA_SOLICITANTE_TERMINO_REQUISICAO_CONTENT	Prezado $REQUESTOR_NAME! $LN\nSua solicitação de congelamento de material esta encerrando.  $LN\nCódigo: $REQUEST_ID $LN\nEncerramento: $FINAL_DATE $LN\nMateriais : $MATERIALS 	Conteúdo do e-mail enviado para o professor sobre o encerramento do prazo de congelamento de material.	VARCHAR	NOTIFICATION_REQUEST	44	Conteúdo do e-mail de termino de congelamento
\N	\N	\N	GNUTECA3	EMAIL_RETURN_CONTENT	Prezado(a) $USER_NAME! $LN\nSeu empréstimo intitulado "$MATERIAL_TITLE" ($ITEM_NUMBER) irá vencer dia $RETURN_FORECAST_DATE.$LN\nAtenciosamente,$LN\nbiblioteca de $LIBRARY_UNIT_DESCRIPTION	Define o conteúdo do e-mail que será enviado para o usuário com a data prevista para devolução do empréstimo.\n    Variáveis aceitas:\n    $USER_NAME - Nome do usuário\n    $MATERIAL_TITLE - Descrição do material\n    $ITEM_NUMBER - registro do material\n    $RETURN_FORECAST_DATE - Data prevista para devolução\n    $LIBRARY_UNIT_DESCRIPTION - Library unit description	VARCHAR	NOTIFICATION_LOAN	17	Conteúdo do e-mail da devolução
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_DELAYED_LOAN_RESULT_SUBJECT	Comunicação das devoluções atrasadas	Define o titulo de email que envia o resultado das devoluções atrasadas para o administrador	CHAR	NOTIFICATION_LOAN	22	Assunto do e-mail do adminstrador
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_NOTIFY_ACQUISITION_RESULT_CONTENT	Segue abaixo o resultado do comunicado de reservas atendidas.$LN $CONTENT	Conteudo do e-mail que é enviado para o administrador com o resultado da notificação de aquisições.	VARCHAR	NOTIFICATION_AQUISITION	33	Conteúdo do e-mail do adminstrador
\N	\N	\N	GNUTECA3	USER_CONFIG	USER_SEND_DELAYED_LOAN=w|Enviar avisos de materiais em atraso por e-mail?\nUSER_DELAYED_LOAN=w|Quantidade de e-mails enviados. Período em dias entre os avisos.\nUSER_SEND_NOTIFY_AQUISITION=r|Enviar notificações de materiais novos por e-mail?\nUSER_NOTIFY_AQUISITION=r|Envio de Lista de materiais adquiridos neste período (em dias).\nUSER_SEND_DAYS_BEFORE_EXPIRED=w|Enviar aviso por e-mail antes de vencer material?\nUSER_DAYS_BEFORE_EXPIRED=w|Período em dias, para envio de aviso antes de vencer.\nCONFIGURE_RECEIPT_LOAN=w|Configura a impressão e envio do comprovante de empréstimo.\nCONFIGURE_RECEIPT_RETURN=w|Configura a impressão e envio do comprovante de devolução.\nUSER_SEND_RECEIPT_RENEW_WEB=w|Enviar comprovantes de renovação via web?	Os campos válidos são: \n    USER_DELAYED_LOAN USER_SEND_DELAYED_LOAN \n    USER_NOTIFY_AQUISITION \n    USER_SEND_NOTIFY_AQUISITION \n    USER_DAYS_BEFORE_EXPIRED \n    USER_SEND_DAYS_BEFORE_EXPIRED \n    CONFIGURE_RECEIPT_LOAN \n    CONFIGURE_RECEIPT_RETURN \n    USER_SEND_RECEIPT_RENEW_WEB \n\n    Legenda: \n    W: Libera o campo para leitura e escrita. \n    R: Libera apenas para leitura. \n    I: Não mostra o campo. \n    O ponto-e-vírgula separa os campos. \n    A vírgula separa a preferência e seu valor da legenda. \n    O igual separa o valor da preferência.	VARCHAR	MY_LIBRARY	15	Configurações do usuário
\N	\N	\N	GNUTECA3	USER_SEND_RECEIPT_RENEW_WEB	t	Define se é enviado comprovante de renovação web.	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	MARK_DONT_PRINT_SEND_RECEIPT	t	Listar a opção Não receber e enviar recibo nos campos Comprovantes de empréstimo e Comprovantes de devolução no formulário Configuração do usuário da Minha biblioteca.	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	Z3950_IGNORAR_TAGS	9**	Exemplos: 24*,856.a,856.u,901.a,902.b,900* \n    901.* = pega todas as tags da etiqueta 901 (901.a,901.b) \n    990* = pega as tags de 901.* a 909.* \n    9** = pega todas as tags da etiqueta 900	INT	\N	\N	\N
\N	\N	\N	GNUTECA3	EMAIL_ADMIN_NOTIFY_END_REQUEST_RESULT_CONTENT	Segue abaixo o resultado do comunicado de término de requisições.$LN $CONTENT	Conteudo do e-mail que é enviado para o administrador com o resultado das notificações de término de requisição.	VARCHAR	NOTIFICATION_REQUEST	42	Conteúdo do e-mail do administrador
\N	\N	\N	GNUTECA3	EMAIL_PURCHASE_REQUEST_FINALIZE_CONTENT	Prezado $username $LN\n$LN\nA solicitação de compra de número $purchaseRequestId foi finalizada:$LN\nO material já se encontra disponível.$LN\n$LN\nDetalhes do material:$LN\n$LN\n$content$LN\n$LN\n$controlNumberLink$LN\n$LN\nAtenciosamente.$LN\n$LN\nBiblioteca.$LN	Conteúdo do email de aviso de finalização de solicitação de material. Variáveis: $username, $purchaseRequestId, $content, $comment,$controlNumberLink	VARCHAR	PURCHASE_REQUEST	\N	Email de finalização - Conteúdo.
\N	\N	\N	GNUTECA3	EMAIL_PURCHASE_REQUEST_INITIALIZE_SUBJECT	Confirmação de solicitação de compra	Define o sufixo do assunto do email de inicio da solicitação de compra	VARCHAR	PURCHASE_REQUEST	\N	Email de inicio - Assunto 
\N	\N	\N	GNUTECA3	INTERCHANGE_LETTER_MODEL	<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">\n<HTML>\n<HEAD>\n\t<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=utf-8">\n\t<TITLE></TITLE>\n\t<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.4  (Unix)">\n\t<META NAME="CREATED" CONTENT="20081009;16441600">\n\t<META NAME="CHANGED" CONTENT="20090513;8525600">\n\t<STYLE TYPE="text/css">\n    p {\n        font-family:"Times New Roman",Georgia,Serif;\n        font-size: 11px;\n    }\n    table {\n        width: 550px;\n        border-bottom: 1px solid #000000;\n    }\n    .col1 {\n        width: 190px;\n    }\n    .col2 {\n    }\n\t</STYLE>\n</HEAD>\n<BODY LANG="pt-BR" DIR="LTR">\n<P ALIGN=CENTER STYLE="margin-bottom: 0cm; font-style: normal; line-height: 100%;">\n<table width="400px" style="border-bottom:none; margin: 0 0 0 25px">\n    <tr>\n    <td>\n    <IMG SRC="$IMG_LOGO" NAME="figura1">\n    </td>\n    <td width="400px">\n    <p align="center" style="font-size:10px"><B>NOME INSTITUIÇÃO<BR>Setor Intercâmbio<BR></B>\nRua<BR>Cidade - Estado<BR>CEP</p>\n    </td>\n    </tr>\n</table>\n\n<table style="margin: 0 0 0 25px">\n    <tr>\n        <td>\n            <p ><b><strong>$SUPPLIER_NAME</strong></b></p>\n            <p align="center"><b>SETOR DE INTERCÂMBIO</b></p>\n        </td>\n    </tr>\n</table>\n<br/>\n<br/>\n\n<table style="margin: 0 0 0 25px">\n    <tr>\n        <td class="col1">\n            <p>\n            <b>Recebemos e agradecemos:</b>\n            <br/>Recibimos y agradecemos\n            <br/>We have received with thanks\n            </p>\n        </td>\n        <td class="col2">\n            <p>\n            </p>\n        </td>\n    </tr>\n</table>\n\n\n<table style="margin: 0 0 0 25px">\n    <tr>\n        <td class="col1">\n            <p>\n            <b>Temos o prazer de enviar:</b>\n            <br/>Nos complace enviarle\n            <br/>We are glad to send\n            </p>\n        </td>\n        <td class="col2">\n            <p>\n            $MATERIALS\n            </p>\n        </td>\n    </tr>\n</table>\n\n\n<table style="margin: 0 0 0 25px">\n    <tr>\n        <td class="col1">\n            <p>\n            <b>Estamos interessados em receber:</b>\n            <br/>Deseamos\n            <br/>We would like to receive\n            </p>\n        </td>\n        <td class="col2">\n            <p>\n            </p>\n        </td>\n    </tr>\n</table>\n\n\n<table style="margin: 0 0 0 25px">\n    <tr>\n        <td class="col1">\n            <p>\n            <b>Informamos</b>\n            <br/>Informamos usted\n            <br/>We inform you\n            </p>\n        </td>\n        <td class="col2">\n            <p>\n            Favor confirmar recebimento através do e-mail\n            <br/>email@intituicao.com.br\n            </p>\n        </td>\n    </tr>\n</table>\n\n<table style="margin: 0 0 0 25px">\n    <tr>\n        <td>\n            <p >Atenciosamente</p>\n            <br/>\n\n            <p align="center">Nome responsável<br>Chefe setor</p>\n        </td>\n    </tr>\n</table>\n</P>\n</BODY>\n</HTML>	Modelo utilizado na geração da carta do intercâmbio	VARCHAR	INTERCHANGE	21	Modelo da carta
\N	\N	\N	GNUTECA3	LABEL_PERSON_DATA		Mensagem a ser mostrada no topo de dados pessoais da Minha Biblioteca.	VARCHAR	MY_LIBRARY	37	Mensagem para configurações pessoais
\N	\N	\N	GNUTECA3	REPORT_ID_DICTIONARY	38	Define o código do relatório de gerencia de dicionários	INTEGER	\N	\N	\N
\N	\N	\N	GNUTECA3	USER_ESPECIFICAR_CODIGO_MANUALMENTE	f	Preferência que ativa/desativa o campo código no cadastro de pessoa. Quando o valor é true, o campo aparece no cadastro, caso contrário, o código é atribuído automáticamente.	BOOLEAN	ADMIN	\N	Especificar manualmente o código da pessoa
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_EVALUATION	t	Ativa/desativa avaliações na pesquisa para usuário.	BOOLEAN	SEARCH	\N	Avaliações
\N	\N	\N	GNUTECA3	MY_LIBRARY_AUTHENTICATE_TYPE	1	1 - autenticação via código da pessoa\n    2 - autenticação via campo login\n    3 - autenticação campo login/base	INT	\N	\N	Tipo de autenticação
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	PERSON_PASSWORD_ENCRYPT	0	Estilo de criptografia utilizada para proteger as senhas dos usuários.\n0 - Sem criptografia\n1 - MD5	INT	\N	\N	Tipo de criptografia aplicada nas senhas
\N	\N	\N	GNUTECA3	MY_LIBRARY_LDAP_INSERT_USER	base_1;nome=<tagDoLdap>;email=<tagDoLdap>;login=<tagDoLdap>;vinculo=1;validade=12/12/2012\nbase_2;nome=<tagDoLdap>;email=<tagDoLdap>;login=<tagDoLdap>;vinculo=2;validade=11/11/2011	Esta preferência definirá como os usuários do LDAP serão inseridos. A configuração se dará com uma base por linha, exemplo:\n    base_1;nome=<tagDoLdap>;email=<tagDoLdap>;login=<tagDoLdap>;vinculo=1;validade=12/12/2012\n    base_2;nome=<tagDoLdap>;email=<tagDoLdap>;login=<tagDoLdap>;vinculo=2;validade=11/11/2011	VARCHAR	MY_LIBRARY	\N	Inclusão de usuários LDAP
\N	\N	\N	GNUTECA3	PRINT_MODE	0	Define o modo de impressão. \n\n    Opções: \n    1 = Socket \n    2 = Browser\n    3 = Popup	INT	PRINT	15	Modo de impressão
\N	\N	\N	GNUTECA3	ROUND_PENALTY_BY_DELAY	t	Arredonda dias de penalidade por atraso para cima caso (true) ou para baixo caso (false).	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	PRINT_SERVER_ENABLED	t	Marque TRUE (t) para ativar o servidor, FALSE (f) para desativar.	BOOLEAN	PRINT	\N	Servidor de impressão habilitado
\N	\N	\N	GNUTECA3	EXECUTE_BACKGROUND_TASK	t	Permite, ou não a execução de tarefas em segundo plano.	BOOLEAN	ADMIN	100	Tarefas em segundo plano
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_MAX_LIMIT	0	Define a quantidade máxima de indices a serem mostrados nas pesquisas	INTEGER	SEARCH	17	Limite máximo de registros
\N	\N	\N	GNUTECA3	ANALYCTS_LOGLEVEL_OUTER	1	Nível de registro de acesso para pesquisa. Valores possíveis são 0-desligado, 1-normal, 2-máximo	integer	ADMIN	100	Nível de log de acesso para pesquisa
\N	\N	\N	GNUTECA3	ANALYCTS_LOGLEVEL_INNER	1	Nível de registro de acesso para todo o sistema. Valores possíveis são 0-desligado, 1-normal, 2-máximo	integer	ADMIN	100	Nível de log de acesso para todo o sistema
\N	\N	\N	GNUTECA3	FIELDS_PURCHASE_REQUEST	245.a|Título|Inserir o título da obra\n100.a|Autor|Inseir o autor da obra\n260.b|Editora|\n250.a|Edição|\n949.v|Volume|	Campos são separados por ""enter"". Etiqueta, rótulo e ajuda docampo são separados por pipe ""|"". Ordem das valores: Etiqueta MARC|Rótulo do campo|Ajuda do campo Exemplo: 100.a|Autor|Inseir o autor da obra	VARCHAR	PURCHASE_REQUEST	33	Campos para o formulário de solicitação de compras
\N	\N	\N	GNUTECA3	EMAIL_PURCHASE_REQUEST_CANCEL_SUBJECT	Aviso de cancelamento de solicitação de compra	Define o sufixo do assunto do email de cancelamento da solicitação de compra	VARCHAR	PURCHASE_REQUEST	\N	Email de cancelamento - Assunto 
\N	\N	\N	GNUTECA3	EMAIL_PURCHASE_REQUEST_CANCEL_CONTENT	Prezado $username $LN\n$LN\nA solicitação de compra de número $purchaseRequestId foi cancelada:$LN\n$LN\nDetalhes do material:$LN\n$LN\n$content$LN\n$LN\nMotivo:$LN\n$comment$LN\n$LN\n$controlNumberLink$LN\n$LN\nAtenciosamente.$LN\n$LN\nBiblioteca.$LN	Conteúdo do email de aviso de cancelamento de solicitação de material. Variáveis: $username, $purchaseRequestId, $content, $comment, $controlNumberLink	VARCHAR	PURCHASE_REQUEST	\N	Email de cancelamento - Conteúdo.
\N	\N	\N	GNUTECA3	EMAIL_PURCHASE_REQUEST_APROVE_SUBJECT	Aviso de aprovação de solicitação de compra	Define o sufixo do assunto do email de aprovação da solicitação de compra	VARCHAR	PURCHASE_REQUEST	\N	Email de aprovação - Assunto 
\N	\N	\N	GNUTECA3	EMAIL_PURCHASE_REQUEST_APROVE_CONTENT	Prezado $username $LN\n$LN\nA solicitação de compra de número $purchaseRequestId foi aprovada:$LN\n$LN\nDetalhes do material:$LN\n$LN\n$content$LN\n$LN\nData de previsão de entrega: $forecastDelivery $LN\n$LN\nAtenciosamente.$LN\n$LN\nBiblioteca.$LN	Conteúdo do email de aviso de aprovação de solicitação de material. Variáveis: $username, $purchaseRequestId, $content, $comment,$forecastDelivery	VARCHAR	PURCHASE_REQUEST	\N	Email de aprovação - Conteúdo.
\N	\N	\N	GNUTECA3	EMAIL_PURCHASE_REQUEST_FINALIZE_SUBJECT	Aviso de aprovação de solicitação de compra	Define o sufixo do assunto do email de finalização da solicitação de compra	VARCHAR	PURCHASE_REQUEST	\N	Email de finalização - Assunto 
\N	\N	\N	GNUTECA3	EMAIL_PURCHASE_REQUEST_INITIALIZE_CONTENT	Prezado $username $LN\n$LN\nRecebemos a solicitação de compra de número $purchaseRequestId:$LN\n$LN\nDetalhes do material:$LN\n$LN\n$content$LN\n$LN\nAtenciosamente.$LN\n$LN\nBiblioteca.$LN	Conteúdo do email de aviso de aprovação de solicitação de material. Variáveis: $username, $purchaseRequestId, $content	VARCHAR	PURCHASE_REQUEST	\N	Email de aprovação - Conteúdo.
\N	\N	\N	GNUTECA3	GNUTECA_USER_MENU_LIST	Renovar; javascript:miolo.doAjax('subForm','MyRenew','__mainForm'); renew-16x16.png \n    Minhas reservas; javascript:miolo.doAjax('subForm','MyReservesSearch','__mainForm'); reserve-16x16.png \n    Congelados; javascript:miolo.doAjax('subForm','Congelado', '__mainForm'); congelado-16x16.png \n    Sugestão de material; javascript:miolo.doAjax('subForm','PurchaseRequestSearch', '__mainForm'); purchaseRequest-16x16.png \n    Favoritos; javascript:miolo.doAjax('subForm','Favorite', '__mainForm'); favorites-16x16.png \n    Área de interesse; javascript:miolo.doAjax('subForm','InterestsArea', '__mainForm'); interestsarea-16x16.png \n    Configurações; javascript:miolo.doAjax('subForm','PersonConfig', '__mainForm');config-16x16.png \n    Dados pessoais; javascript:miolo.doAjax('subForm','MyInformation', '__mainForm'); gnutecaUserMenuDefault.png \n    Hist. Empréstimos; javascript:miolo.doAjax('subForm','MyLoan', '__mainForm'); loan-16x16.png \n    Hist. Penalidades; javascript:miolo.doAjax('subForm','MyPenalty', '__mainForm'); penalty-16x16.png \n    Hist. Multas; javascript:miolo.doAjax('subForm','MyFine', '__mainForm'); fine-16x16.png \n    Hist. Reservas; javascript:miolo.doAjax('subForm','ReservesHistory', '__mainForm'); reserve-16x16.png	Csv que monta os links para o usermenu da persquisa simples. Separado por linha, depois por ;,	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	LABEL_PURCHASE_REQUEST_SEARCH	Esta é a lista de suas sugestões de livros.	Label superior da interface de sugestão de livros.	VARCHAR	PURCHASE_REQUEST	\N	Mensagem para pesquisa de sugestão de compra
\N	\N	\N	GNUTECA3	LABEL_PURCHASE_REQUEST	Adicionar uma nova sugestão de livro.	Label superior da interface de sugestão de livros.	VARCHAR	PURCHASE_REQUEST	\N	Mensagem para inserção de sugestão de compra
\N	\N	\N	GNUTECA3	FBN_INTEGRATION	t	Ativa ou desativa integração com Fundação Biblioteca Nacional	BOOLEAN	SEARCH	40	Integração Biblioteca Nacional
\N	\N	\N	GNUTECA3	MARC_EDITOR_TAG	260.b	Etiqueta de editora 	VARCHAR	\N	\N	Etiqueta Editora
\N	\N	\N	GNUTECA3	MARC_GERAL_NOTE_TAG	500.a	Etiqueta marc de notas gerais	VARCHAR	\N	\N	Etiqueta notas gerais
\N	\N	\N	GNUTECA3	MARC_EXTENSION_TAG	300.a	Etiqueta marc de extensão (normalmente contagem de páginas)	VARCHAR	\N	\N	Etiqueta marc de extensão
\N	\N	\N	GNUTECA3	MARC_LANGUAGE_TAG	041.a	Etiqueta marc de linguagem.	VARCHAR	\N	\N	Etiqueta de linguagem.
\N	\N	\N	GNUTECA3	PERSON_IS_A_OPERATOR	f	Vincula a tela de operadores com as pessoas cadastradas no gnuteca.	BOOLEAN	\N	\N	
\N	\N	\N	GNUTECA3	URL_GNUTECA	http://gnuteca3trunk/	Define a URL do Gnuteca. Esta preferência é utilizada em processos rodados através do MIOLO Console e PHP client.	CHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	SUPRESS_RETURN_MESSAGE	f	Suprime as mensagens "Não há empréstimos em aberto" e "Reserva do exemplar X atendida para o usuário Y" na finalização da circulação de material.	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	ISO2709_EXPORT	9	Tags a serem ignoradas na exportação de ISO 2709. \n    Ex:9,000,040.a Neste exemplo, serão ignoradas todas as tags que começam com 9, como (901.a, 901.b, ...), também serão ignoradas as tags 000 e 040.a. \n    Os valores devem ser separadas por "","".	VARCHAR	CATALOG	\N	Tags a serem ignoradas na exportação de ISO 2709
\N	\N	\N	GNUTECA3	ISO2709_IMPORT	001	Tags a serem ignoradas na importação de ISO 2709. \n    Ex:9,000,040.a Neste exemplo, serão ignoradas todas as tags que começam com 9, como (901.a, 901.b, ...), também serão ignoradas as tags 000 e 040.a.\n    Os valores devem ser separadas por "","".	VARCHAR	CATALOG	\N	Tags a serem ignoradas na importação de ISO 2709
\N	\N	\N	GNUTECA3	SIMPLE_SEARCH_SHOW_RELATED_TERMS	t	Ativa/desativa dica de pesquisa.	BOOLEAN	\N	\N	\N
\N	\N	\N	GNUTECA3	Z3950_SERVER_URL	127.0.0.1:9999	Define a url do servidor Z3950, por padrão o gnuteca somente suporta o servidor Zebra. Deixe vazio ou remova a preferência para desativar a integração. Ex.127.0.0.1:9999	VARCHAR	Z3950	\N	Url do servidor Z3950
\N	\N	\N	GNUTECA3	Z3950_SERVER_USER	admin	Define senha do servidor Z3950.	VARCHAR	Z3950	\N	Usuário do servidor
\N	\N	\N	GNUTECA3	Z3950_SERVER_PASSWORD	123	Define senha para funções extendidas ( insert/update/delete ) do servidor Z3950.	VARCHAR	Z3950	\N	Senha do servidor
\N	\N	\N	GNUTECA3	SOCIAL_CONTENT	\n<script type="text/javascript" src="//platform.twitter.com/widgets.js"></script>\n<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>\n\n<iframe src="//www.facebook.com/plugins/like.php?href="$href"&send=false&layout=button_count&width=80&show_faces=false&action=like&colorscheme=light&font&height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:80px; height:21px;" allowTransparency="true"></iframe>\n\n<a href="https://twitter.com/share?url=$href&text=Gostei do livro $245.a - $100.a" target="_blank" class="twitter-share-button" data-count="horizontal">Tweet</a>\n\n<g:plusone width="55" height="20" href="$href"></g:plusone>\n	Conteúdo de integração com redes sociais. Usado para cada material utilize $href onde quiser colocar o link do material. Conteúdo html.	VARCHAR	SEARCH	\N	Conteúdo de integração com redes sociais.
\N	\N	\N	GNUTECA3	SOCIAL_INTEGRATION	t	Ativa ou desativa integração com redes sociais.	VARCHAR	SEARCH	\N	Integração com redes sociais.
\N	\N	\N	GNUTECA3	LABEL_MYLIBRARY	<CENTER><B>Lista informações relevantes para o usuário</CENTER></B><BR>	Lista informações relevantes para o usuário	VARCHAR	MY_LIBRARY	\N	Mensagem para minha biblioteca
\N	\N	\N	GNUTECA3	MARC21_REPLACE_VALUES	\t= \nLDR=000\nLEADER=000\nLÍDER=000\n#-!@#= 	Substitui valores na importação de Marc 21. \n    Modo de usar: valor original=valor novo\n    Novos valores devem ser separados por quebra de linha.\n    Exemplo: \n            = \n    LDR=000\n    LEADER=000\n    LÍDER=000 	VARCHAR	\N	\N	\N
\N	\N	\N	GNUTECA3	SEARCH_THEME_TOP	<img style="margin-top: 15px; margin-left: 15px; margin-right: 20px; float:left; " src="file.php?folder=images&amp;file=logo.png">\n<div style="font-size: 26px; margin-top: 20px; color: darkBlue; font-weight: bold; ">Gnuteca</div>\n<span style="font-weight: bold;">Sistema de gestão de acervo, empréstimo <br/>e colaboração entre bibliotecas</span>	Conteúdo mostrado no topo da pesquisa.	VARCHAR	SEARCH	\N	Conteúdo do topo da pesquisa.
\N	\N	\N	GNUTECA3	SEARCH_THEME_FOOTER	<div style='text-align:right;font-size:9px;margin-top:8px;'>\n<strong>SOLIS - Cooperativa de Soluções Livres</strong><br/>\nAv. Sete de Setembro, 184 - Sala 401<br/>\nBairro Moinhos - 95900-000 - Lajeado (RS)<br/>\nFone: +55 51 3714-6653<br/>\n<a href='mailto:negocios@solis.coop.br'>negocios@solis.coop.br<a/>\n</div>\n	Conteúdo de rodapé da pesquisa	VARCHAR	SEARCH	\N	Rodapé da pesquisa
\N	\N	\N	GNUTECA3	EXEMPLAR_PLUS_UNIT	f	Ativa adição automática do código da unidade no código do exemplar. Somente para circulação de material	BOOLEAN	LOAN	\N	Adicionar unidade no exemplar
\N	\N	\N	GNUTECA3	NOTHING_RECEIPT	$LN\n+----------------------------------------------+$LN\n| <pad 44| $SP | RIGHT>Biblioteca: $LIBRARY_UNIT_DESCRIPTION</pad> |$LN\n+----------------------------------------------+$LN\n|        CERTIDAO NEGATIVA DE DÉBITOS          |$LN\n|                                              |$LN\n| <pad 44| $SP | RIGHT>TIPO: $TIPO</pad> |$LN\n| <pad 44| $SP | RIGHT>CODIGO: $USER_CODE</pad> |$LN\n| <pad 44| $SP | RIGHT>NOME: $USER_NAME</pad> |$LN\n| <pad 44| $SP | RIGHT>DATA: $DATE - $TIME</pad> |$LN\n| <pad 44| $SP | RIGHT>OPERADOR: $OPERATOR</pad> |$LN\n+----------------------------------------------+$LN\n| Penalidades : Nada Consta                    |$LN\n| Emprestimos em atraso : Nada Consta          |$LN\n| Multas : Nada Consta                         |$LN\n+----------------------------------------------+$LN\n	Define o recibo de nada consta	INT	PRINT	\N	Recibo de nada consta
\N	\N	\N	GNUTECA3	LOAN_MOMENTARY_PERIOD	D	Determina o período de empréstimo momentâneo, D para dia H para hora.	CHAR	LOAN	\N	Período de empréstimo momentâneo
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	SAGU_URL		Determina a url do sagu. Utilizada para integrações.	VARCHAR	SAGU	\N	Url do Sagu
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	SAGU_PHOTO_INTEGRATION	false	Ativa ou não a integração de fotos com o sagu, após a ativação o gnuteca somente utilizará fotos através do sagu. Impedindo o cadastro manual.	BOOLEAN	SAGU	\N	Integração de fotos
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	PHOTO_URL	\N	Ativa através de um padrão a integração de fotos com um serviço externo (URL).\n        Exemplo : www.site.com/foto$personid.jpg\n        Pode ser usado qualquer atributo da tabela basperson não somente personid.	VARCHAR	\N	\N	Integração de fotos genérica a partir de url
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	ID_OPERATION_LOAN_MOMENTARY	23	Define o código para a operação de empréstimo	INT	LOAN	\N	Código da operação de empréstimo
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	MASTER_PASSWORD		Define uma senha mestra para autenticação com qualquer usuário. Use com sabedoria.	VARCHAR	\N	\N	Senha mestra
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	RECEIPT_CHARSET	2	Codificação do recibo:\n1- Sem acentuação\n2- UTF-8\n3- ISO-8859-1\n\nObs: A preferência só serve para impressão via download.\n        	INT	PRINT	\N	Codificação do recibo
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	BACK_OF_BOOK_BARCODE_TEMP	f	Habilita geração de lombadas com códigos de barras juntos.\n Esta preferência é temporária devido a implementação ter sido feita as pressas em caráter experimental, portanto está desabilitada por padrão e só a habilitaremos em casos controlados.\n        	BOOLEAN	\N	\N	\N
curent_user	2013-06-07 08:49:37.390904-03	\N	GNUTECA3	SHOW_RESERVE_BY_ITEMNUMBER	t	Habilita/Desabilita a opção 'Obra por exemplar' na circulação de material [F8] Reservar material.\n        	BOOLEAN	\N	\N	\N
postgres	2013-09-13 14:26:04.957529-03	\N	GNUTECA3	REPORT_MAIL_BODY	Relatório : $REPORT_TITLE Descrição : $REPORT_DESCRIPTION	\nO conteúdo desta preferência será enviado no corpo do e-mail enviado pelos relatórios gerados pela tarefa agendada de \\'Relatórios.\\' Permite a utilização de duas variáveis $REPORT_NAME = nome do relatório configurado na tarefa. $REPORT_DESCRIPTION = descrição do relatório configurado na tarefa.\n        	VARCHAR	\N	\N	\N
postgres	2013-09-13 14:26:04.957529-03	\N	GNUTECA3	HABILITAR_EXPORTAR_ISO_2709	t	Se a preferência estiver habilitada irá permitir que qualquer pessoa que faça uma pesquisa, possa exportar para ISO 2709	BOOLEAN	SEARCH	\N	Permite que qualquer usuário exporte para ISO 2709
postgres	2013-09-13 14:26:04.957529-03	\N	GNUTECA3	DEFAULT_VALUE_FINE_INITIAL_STATUS	3	Valor inicial status da multa	INT	\N	\N	\N
\.


--
-- Data for Name: bascountry; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY bascountry (username, datetime, ipaddress, countryid, name, nationality, currency, pluralcurrency, decimaldescription, pluraldecimaldescription, currencysymbol) FROM stdin;
postgres	2013-06-07 08:49:37.390904-03	\N	DZA	Algéria	Algéria					
postgres	2013-06-07 08:49:37.390904-03	\N	MWI	Malaui	Malaui					
postgres	2013-06-07 08:49:37.390904-03	\N	BRA	Brasil	Brasileiro	Real	Reais	Centavo	Centavos	R$
postgres	2013-06-07 08:49:37.390904-03	\N	AFG	Afeganistão	Afeganistão	Afghani	Afghani			Afn
postgres	2013-06-07 08:49:37.390904-03	\N	ZAF	África Do Sul	África Do Sul	Rand	Rand			Zar
postgres	2013-06-07 08:49:37.390904-03	\N	ALB	Albânia	Albânia	Lek	Lek			All
postgres	2013-06-07 08:49:37.390904-03	\N	DEU	Alemanha	Alemanha	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	AND	Andorra	Andorra					
postgres	2013-06-07 08:49:37.390904-03	\N	AGO	Angola	Angola	Kwanza	Kwanza			Aoa
postgres	2013-06-07 08:49:37.390904-03	\N	AIA	Anguilla	Anguilla					
postgres	2013-06-07 08:49:37.390904-03	\N	ATA	Antártida	Antártida	No Universal Curr	No Universal Curr			
postgres	2013-06-07 08:49:37.390904-03	\N	ATG	Antígua E Barbuda	Antígua E Barbuda					
postgres	2013-06-07 08:49:37.390904-03	\N	ANT	Antilhas Holandesas	Antilhas Holandesas					
postgres	2013-06-07 08:49:37.390904-03	\N	SAU	Arábia Saudita	Arábia Saudita	Saudi Riyal	Saudi Riyal			Sar
postgres	2013-06-07 08:49:37.390904-03	\N	ARG	Argentina	Argentina	Argentine Peso	Argentine Peso			Ars
postgres	2013-06-07 08:49:37.390904-03	\N	ARM	Armênia	Armênia					
postgres	2013-06-07 08:49:37.390904-03	\N	ABW	Aruba	Aruba	Aruban Guilder	Aruban Guilder			Awg
postgres	2013-06-07 08:49:37.390904-03	\N	AUS	Austrália	Austrália					
postgres	2013-06-07 08:49:37.390904-03	\N	AUT	Áustria	Áustria	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	AZE	Azerbaijão	Azerbaijão					
postgres	2013-06-07 08:49:37.390904-03	\N	BHS	Bahamas	Bahamas	Bahamian Dollar	Bahamian Dollar			Bsd
postgres	2013-06-07 08:49:37.390904-03	\N	BHR	Bahrein	Bahrein					
postgres	2013-06-07 08:49:37.390904-03	\N	BGD	Bangladesh	Bangladesh	Taka	Taka			Bdt
postgres	2013-06-07 08:49:37.390904-03	\N	BRB	Barbados	Barbados					
postgres	2013-06-07 08:49:37.390904-03	\N	BLR	Belarus	Belarus	Belarussian Ruble	Belarussian Ruble			Byr
postgres	2013-06-07 08:49:37.390904-03	\N	BEL	Bélgica	Bélgica					
postgres	2013-06-07 08:49:37.390904-03	\N	BLZ	Belize	Belize	Belize Dollar	Belize Dollar			Bzd
postgres	2013-06-07 08:49:37.390904-03	\N	BEN	Benin	Benin					
postgres	2013-06-07 08:49:37.390904-03	\N	BMU	Bermudas	Bermudas	Bermudian Dollar	Bermudian Dollar			Bmd
postgres	2013-06-07 08:49:37.390904-03	\N	BOL	Bolívia	Bolívia					
postgres	2013-06-07 08:49:37.390904-03	\N	BIH	Bósnia-Herzegóvina	Bósnia-Herzegóvina					
postgres	2013-06-07 08:49:37.390904-03	\N	BWA	Botsuana	Botsuana	Pula	Pula			Bwp
postgres	2013-06-07 08:49:37.390904-03	\N	BRN	Brunei	Brunei	Brunei Dollar	Brunei Dollar			Bnd
postgres	2013-06-07 08:49:37.390904-03	\N	BGR	Bulgária	Bulgária					
postgres	2013-06-07 08:49:37.390904-03	\N	BFA	Burkina Fasso	Burkina Fasso	Cfa Franc Bceao	Cfa Franc Bceao			Xof
postgres	2013-06-07 08:49:37.390904-03	\N	BDI	Burundi	Burundi					
postgres	2013-06-07 08:49:37.390904-03	\N	BTN	Butão	Butão					
postgres	2013-06-07 08:49:37.390904-03	\N	CPV	Cabo Verde	Cabo Verde					
postgres	2013-06-07 08:49:37.390904-03	\N	CMR	Camarões	Camarões					
postgres	2013-06-07 08:49:37.390904-03	\N	KHM	Camboja	Camboja	Riel	Riel			Khr
postgres	2013-06-07 08:49:37.390904-03	\N	CAN	Canadá	Canadá	Canadian Dollar	Canadian Dollar			Cad
postgres	2013-06-07 08:49:37.390904-03	\N	KAZ	Cazaquistão	Cazaquistão	Tenge	Tenge			Kzt
postgres	2013-06-07 08:49:37.390904-03	\N	TCD	Chade	Chade	Cfa Franc Beac	Cfa Franc Beac			Xaf
postgres	2013-06-07 08:49:37.390904-03	\N	CHL	Chile	Chile					
postgres	2013-06-07 08:49:37.390904-03	\N	CHN	China	China	Yuan Renminbi	Yuan Renminbi			Cny
postgres	2013-06-07 08:49:37.390904-03	\N	CYP	Chipre	Chipre	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	SGP	Cingapura	Cingapura					
postgres	2013-06-07 08:49:37.390904-03	\N	COL	Colômbia	Colômbia					
postgres	2013-06-07 08:49:37.390904-03	\N	COG	Congo	Congo					
postgres	2013-06-07 08:49:37.390904-03	\N	PRK	Coréia Do Norte	Coréia Do Norte					
postgres	2013-06-07 08:49:37.390904-03	\N	KOR	Coréia Do Sul	Coréia Do Sul	Won	Won			Krw
postgres	2013-06-07 08:49:37.390904-03	\N	CIV	Costa Do Marfim	Costa Do Marfim					
postgres	2013-06-07 08:49:37.390904-03	\N	CRI	Costa Rica	Costa Rica	Costa Rican Colon	Costa Rican Colon			Crc
postgres	2013-06-07 08:49:37.390904-03	\N	HRV	Croácia (Hrvatska)	Croácia (Hrvatska)	Croatian Kuna	Croatian Kuna			Hrk
postgres	2013-06-07 08:49:37.390904-03	\N	CUB	Cuba	Cuba					
postgres	2013-06-07 08:49:37.390904-03	\N	DNK	Dinamarca	Dinamarca	Danish Krone	Danish Krone			Dkk
postgres	2013-06-07 08:49:37.390904-03	\N	DJI	Djibuti	Djibuti					
postgres	2013-06-07 08:49:37.390904-03	\N	DMA	Dominica	Dominica	East Caribbean Dolla	East Caribbean Dolla			Xcd
postgres	2013-06-07 08:49:37.390904-03	\N	EGY	Egito	Egito					
postgres	2013-06-07 08:49:37.390904-03	\N	SLV	El Salvador	El Salvador	El Salvador Colon	El Salvador Colon			Svc
postgres	2013-06-07 08:49:37.390904-03	\N	ARE	Emirados Árabes Unidos	Emirados Árabes Unidos	Uae Dirham	Uae Dirham			Aed
postgres	2013-06-07 08:49:37.390904-03	\N	ECU	Equador	Equador	Us Dollar	Us Dollar			Usd
postgres	2013-06-07 08:49:37.390904-03	\N	ERI	Eritréia	Eritréia	Nakfa	Nakfa			Ern
postgres	2013-06-07 08:49:37.390904-03	\N	SVK	Eslováquia	Eslováquia	Euro 	Euro 			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	SVN	Eslovênia	Eslovênia					
postgres	2013-06-07 08:49:37.390904-03	\N	ESP	Espanha	Espanha					
postgres	2013-06-07 08:49:37.390904-03	\N	USA	Estados Unidos	Estados Unidos	Us Dollar	Us Dollar			Usd
postgres	2013-06-07 08:49:37.390904-03	\N	EST	Estônia	Estônia					
postgres	2013-06-07 08:49:37.390904-03	\N	ETH	Etiópia	Etiópia	Ethiopian Birr	Ethiopian Birr			Etb
postgres	2013-06-07 08:49:37.390904-03	\N	RUS	Federação Russa	Federação Russa	Russian Ruble	Russian Ruble			Rub
postgres	2013-06-07 08:49:37.390904-03	\N	FJI	Fiji	Fiji					
postgres	2013-06-07 08:49:37.390904-03	\N	PHL	Filipinas	Filipinas	Philippine Peso	Philippine Peso			Php
postgres	2013-06-07 08:49:37.390904-03	\N	FIN	Finlândia	Finlândia	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	FRA	França	França					
postgres	2013-06-07 08:49:37.390904-03	\N	FXX	França Metropolitana	França Metropolitana					
postgres	2013-06-07 08:49:37.390904-03	\N	GAB	Gabão	Gabão					
postgres	2013-06-07 08:49:37.390904-03	\N	GMB	Gâmbia	Gâmbia	Dalasi	Dalasi			Gmd
postgres	2013-06-07 08:49:37.390904-03	\N	GHA	Gana	Gana					
postgres	2013-06-07 08:49:37.390904-03	\N	GEO	Geórgia	Geórgia					
postgres	2013-06-07 08:49:37.390904-03	\N	GIB	Gibraltar	Gibraltar	Gibraltar Pound	Gibraltar Pound			Gip
postgres	2013-06-07 08:49:37.390904-03	\N	GBR	Grã-Bretanha (Reino Unido, Uk)	Grã-Bretanha (Reino Unido, Uk)					
postgres	2013-06-07 08:49:37.390904-03	\N	GRD	Granada	Granada					
postgres	2013-06-07 08:49:37.390904-03	\N	GRC	Grécia	Grécia					
postgres	2013-06-07 08:49:37.390904-03	\N	GRL	Groelândia	Groelândia	Danish Krone	Danish Krone			Dkk
postgres	2013-06-07 08:49:37.390904-03	\N	GLP	Guadalupe	Guadalupe	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	GUM	Guam	Guam					
postgres	2013-06-07 08:49:37.390904-03	\N	GTM	Guatemala	Guatemala	Quetzal	Quetzal			Gtq
postgres	2013-06-07 08:49:37.390904-03	\N	GUY	Guiana	Guiana	Guyana Dollar	Guyana Dollar			Gyd
postgres	2013-06-07 08:49:37.390904-03	\N	GUF	Guiana Francesa	Guiana Francesa	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	GIN	Guiné	Guiné	Guinea Franc	Guinea Franc			Gnf
postgres	2013-06-07 08:49:37.390904-03	\N	GNQ	Guiné Equatorial	Guiné Equatorial					
postgres	2013-06-07 08:49:37.390904-03	\N	GNB	Guiné-Bissau	Guiné-Bissau					
postgres	2013-06-07 08:49:37.390904-03	\N	HTI	Haiti	Haiti					
postgres	2013-06-07 08:49:37.390904-03	\N	NLD	Holanda	Holanda	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	HND	Honduras	Honduras	Lempira 	Lempira 			Hnl
postgres	2013-06-07 08:49:37.390904-03	\N	HKG	Hong Kong	Hong Kong					
postgres	2013-06-07 08:49:37.390904-03	\N	HUN	Hungria	Hungria	Forint	Forint			Huf
postgres	2013-06-07 08:49:37.390904-03	\N	YEM	Iêmen	Iêmen	Yemeni Rial	Yemeni Rial			Yer
postgres	2013-06-07 08:49:37.390904-03	\N	BVT	Ilha Bouvet	Ilha Bouvet					
postgres	2013-06-07 08:49:37.390904-03	\N	CXR	Ilha Natal	Ilha Natal					
postgres	2013-06-07 08:49:37.390904-03	\N	PCN	Ilha Pitcairn	Ilha Pitcairn					
postgres	2013-06-07 08:49:37.390904-03	\N	REU	Ilha Reunião	Ilha Reunião					
postgres	2013-06-07 08:49:37.390904-03	\N	CYM	Ilhas Cayman	Ilhas Cayman	Cayman Islands Dolla	Cayman Islands Dolla			Kyd
postgres	2013-06-07 08:49:37.390904-03	\N	CCK	Ilhas Cocos	Ilhas Cocos	Australian Dollar	Australian Dollar			Aud
postgres	2013-06-07 08:49:37.390904-03	\N	COM	Ilhas Comores	Ilhas Comores	Comoro Franc	Comoro Franc			Kmf
postgres	2013-06-07 08:49:37.390904-03	\N	COK	Ilhas Cook	Ilhas Cook					
postgres	2013-06-07 08:49:37.390904-03	\N	FRO	Ilhas Faeroes	Ilhas Faeroes	Danish Krone	Danish Krone			Dkk
postgres	2013-06-07 08:49:37.390904-03	\N	FLK	Ilhas Falkland (Malvinas)	Ilhas Falkland (Malvinas)					
postgres	2013-06-07 08:49:37.390904-03	\N	SGS	Ilhas Geórgia Do Sul E Sandwich Do Sul	Ilhas Geórgia Do Sul					
postgres	2013-06-07 08:49:37.390904-03	\N	HMD	Ilhas Heard E Mcdonald (Território Da Austrália)	Ilhas Heard	Australian Dollar	Australian Dollar			Aud
postgres	2013-06-07 08:49:37.390904-03	\N	MNP	Ilhas Marianas Do Norte	Ilhas Marianas Do Norte					
postgres	2013-06-07 08:49:37.390904-03	\N	MHL	Ilhas Marshall	Ilhas Marshall	Us Dollar	Us Dollar			Usd
postgres	2013-06-07 08:49:37.390904-03	\N	UMI	Ilhas Menores Dos Estados Unidos	Ilhas Menores Dos Eua					
postgres	2013-06-07 08:49:37.390904-03	\N	NFK	Ilhas Norfolk	Ilhas Norfolk	Australian Dollar	Australian Dollar			Aud
postgres	2013-06-07 08:49:37.390904-03	\N	SYC	Ilhas Seychelles	Ilhas Seychelles					
postgres	2013-06-07 08:49:37.390904-03	\N	SLB	Ilhas Solomão	Ilhas Solomão	Solomon Islands Doll	Solomon Islands Doll			Sbd
postgres	2013-06-07 08:49:37.390904-03	\N	SJM	Ilhas Svalbard E Jan Mayen	Ilhas Svalbard E Jan Mayen					
postgres	2013-06-07 08:49:37.390904-03	\N	TKL	Ilhas Tokelau	Ilhas Tokelau	New Zealand Dollar	New Zealand Dollar			Nzd
postgres	2013-06-07 08:49:37.390904-03	\N	TCA	Ilhas Turks E Caicos	Ilhas Turks E Caicos	Us Dollar	Us Dollar			Usd
postgres	2013-06-07 08:49:37.390904-03	\N	VIR	Ilhas Virgens (Estados Unidos)	Ilhas Virgens (Estados Unidos)					
postgres	2013-06-07 08:49:37.390904-03	\N	VGB	Ilhas Virgens (Inglaterra)	Ilhas Virgens (Inglaterra)					
postgres	2013-06-07 08:49:37.390904-03	\N	WLF	Ilhas Wallis E Futuna	Ilhas Wallis E Futuna	Cfp Franc	Cfp Franc			Xpf
postgres	2013-06-07 08:49:37.390904-03	\N	IND	Índia	Índia	Indian Rupee	Indian Rupee			Inr
postgres	2013-06-07 08:49:37.390904-03	\N	IDN	Indonésia	Indonésia					
postgres	2013-06-07 08:49:37.390904-03	\N	IRN	Irã	Irã	Iranian Rial	Iranian Rial			Irr
postgres	2013-06-07 08:49:37.390904-03	\N	IRQ	Iraque	Iraque					
postgres	2013-06-07 08:49:37.390904-03	\N	IRL	Irlanda	Irlanda	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	ISL	Islândia	Islândia					
postgres	2013-06-07 08:49:37.390904-03	\N	ISR	Israel	Israel	New Israeli Sheqel	New Israeli Sheqel			Ils
postgres	2013-06-07 08:49:37.390904-03	\N	ITA	Itália	Itália					
postgres	2013-06-07 08:49:37.390904-03	\N	YUG	Iugoslávia	Iugoslávia					
postgres	2013-06-07 08:49:37.390904-03	\N	JAM	Jamaica	Jamaica	Jamaican Dollar	Jamaican Dollar			Jmd
postgres	2013-06-07 08:49:37.390904-03	\N	JPN	Japão	Japão					
postgres	2013-06-07 08:49:37.390904-03	\N	JOR	Jordânia	Jordânia					
postgres	2013-06-07 08:49:37.390904-03	\N	KEN	Kênia	Kênia					
postgres	2013-06-07 08:49:37.390904-03	\N	KIR	Kiribati	Kiribati	Australian Dollar	Australian Dollar			Aud
postgres	2013-06-07 08:49:37.390904-03	\N	KWT	Kuait	Kuait					
postgres	2013-06-07 08:49:37.390904-03	\N	LAO	Laos	Laos					
postgres	2013-06-07 08:49:37.390904-03	\N	LVA	Látvia	Látvia	Latvian Lats	Latvian Lats			Lvl
postgres	2013-06-07 08:49:37.390904-03	\N	LSO	Lesoto	Lesoto	Rand	Rand			Zar
postgres	2013-06-07 08:49:37.390904-03	\N	LBN	Líbano	Líbano					
postgres	2013-06-07 08:49:37.390904-03	\N	LBR	Libéria	Libéria					
postgres	2013-06-07 08:49:37.390904-03	\N	LBY	Líbia	Líbia	Libyan Dinar	Libyan Dinar			Lyd
postgres	2013-06-07 08:49:37.390904-03	\N	LIE	Liechtenstein	Liechtenstein					
postgres	2013-06-07 08:49:37.390904-03	\N	LTU	Lituânia	Lituânia	Lithuanian Litas	Lithuanian Litas			Ltl
postgres	2013-06-07 08:49:37.390904-03	\N	LUX	Luxemburgo	Luxemburgo					
postgres	2013-06-07 08:49:37.390904-03	\N	MAC	Macau	Macau	Pataca	Pataca			Mop
postgres	2013-06-07 08:49:37.390904-03	\N	MKD	Macedônia	Macedônia					
postgres	2013-06-07 08:49:37.390904-03	\N	MDG	Madagascar	Madagascar	Malagasy Ariary	Malagasy Ariary			Mga
postgres	2013-06-07 08:49:37.390904-03	\N	MYS	Malásia	Malásia	Malaysian Ringgit	Malaysian Ringgit			Myr
postgres	2013-06-07 08:49:37.390904-03	\N	MDV	Maldivas	Maldivas					
postgres	2013-06-07 08:49:37.390904-03	\N	MLI	Mali	Mali	Cfa Franc Bceao	Cfa Franc Bceao			Xof
postgres	2013-06-07 08:49:37.390904-03	\N	MLT	Malta	Malta					
postgres	2013-06-07 08:49:37.390904-03	\N	MAR	Marrocos	Marrocos	Moroccan Dirham	Moroccan Dirham			Mad
postgres	2013-06-07 08:49:37.390904-03	\N	MTQ	Martinica	Martinica					
postgres	2013-06-07 08:49:37.390904-03	\N	MUS	Maurício	Maurício					
postgres	2013-06-07 08:49:37.390904-03	\N	MRT	Mauritânia	Mauritânia	Ouguiya	Ouguiya			Mro
postgres	2013-06-07 08:49:37.390904-03	\N	MYT	Mayotte	Mayotte	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	MEX	México	México					
postgres	2013-06-07 08:49:37.390904-03	\N	FSM	Micronésia	Micronésia	Us Dollar	Us Dollar			Usd
postgres	2013-06-07 08:49:37.390904-03	\N	MOZ	Moçambique	Moçambique					
postgres	2013-06-07 08:49:37.390904-03	\N	MDA	Moldova	Moldova					
postgres	2013-06-07 08:49:37.390904-03	\N	MCO	Mônaco	Mônaco	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	MNG	Mongólia	Mongólia					
postgres	2013-06-07 08:49:37.390904-03	\N	MSR	Montserrat	Montserrat					
postgres	2013-06-07 08:49:37.390904-03	\N	MMR	Myanma	Myanma	Kyat	Kyat			Mmk
postgres	2013-06-07 08:49:37.390904-03	\N	NAM	Namíbia	Namíbia					
postgres	2013-06-07 08:49:37.390904-03	\N	NRU	Nauru	Nauru	Australian Dollar	Australian Dollar			Aud
postgres	2013-06-07 08:49:37.390904-03	\N	NPL	Nepal	Nepal					
postgres	2013-06-07 08:49:37.390904-03	\N	NIC	Nicarágua	Nicarágua	Cordoba Oro	Cordoba Oro			Nio
postgres	2013-06-07 08:49:37.390904-03	\N	NER	Níger	Níger					
postgres	2013-06-07 08:49:37.390904-03	\N	NGA	Nigéria	Nigéria	Naira	Naira			Ngn
postgres	2013-06-07 08:49:37.390904-03	\N	NIU	Niue	Niue					
postgres	2013-06-07 08:49:37.390904-03	\N	NOR	Noruega	Noruega	Norwegian Krone	Norwegian Krone			Nok
postgres	2013-06-07 08:49:37.390904-03	\N	NCL	Nova Caledônia	Nova Caledônia	Cfp Franc	Cfp Franc			Xpf
postgres	2013-06-07 08:49:37.390904-03	\N	NZL	Nova Zelândia	Nova Zelândia					
postgres	2013-06-07 08:49:37.390904-03	\N	OMN	Omã	Omã					
postgres	2013-06-07 08:49:37.390904-03	\N	PLW	Palau	Palau					
postgres	2013-06-07 08:49:37.390904-03	\N	PAN	Panamá	Panamá	Balboa	Balboa			Pab
postgres	2013-06-07 08:49:37.390904-03	\N	PNG	Papua-Nova Guiné	Papua-Nova Guiné					
postgres	2013-06-07 08:49:37.390904-03	\N	PAK	Paquistão	Paquistão	Pakistan Rupee	Pakistan Rupee			Pkr
postgres	2013-06-07 08:49:37.390904-03	\N	PRY	Paraguai	Paraguai	Guarani	Guarani			Pyg
postgres	2013-06-07 08:49:37.390904-03	\N	PER	Peru	Peru					
postgres	2013-06-07 08:49:37.390904-03	\N	PYF	Polinésia Francesa	Polinésia Francesa					
postgres	2013-06-07 08:49:37.390904-03	\N	POL	Polônia	Polônia	Zloty	Zloty			Pln
postgres	2013-06-07 08:49:37.390904-03	\N	PRI	Porto Rico	Porto Rico	Us Dollar	Us Dollar			Usd
postgres	2013-06-07 08:49:37.390904-03	\N	PRT	Portugal	Portugal					
postgres	2013-06-07 08:49:37.390904-03	\N	QAT	Qatar	Qatar					
postgres	2013-06-07 08:49:37.390904-03	\N	KGZ	Quirguistão	Quirguistão	Som	Som			Kgs
postgres	2013-06-07 08:49:37.390904-03	\N	CAF	República Centro-Africana	República Centro-Africana					
postgres	2013-06-07 08:49:37.390904-03	\N	DOM	República Dominicana	República Dominicana					
postgres	2013-06-07 08:49:37.390904-03	\N	CZE	República Tcheca	República Tcheca					
postgres	2013-06-07 08:49:37.390904-03	\N	ROM	Romênia	Romênia					
postgres	2013-06-07 08:49:37.390904-03	\N	RWA	Ruanda	Ruanda					
postgres	2013-06-07 08:49:37.390904-03	\N	ESH	Saara Ocidental	Saara Ocidental					
postgres	2013-06-07 08:49:37.390904-03	\N	VCT	Saint Vincente E Granadinas	Saint Vincente	East Caribbean Dolla	East Caribbean Dolla			Xcd
postgres	2013-06-07 08:49:37.390904-03	\N	ASM	Samoa Ocidental	Samoa Ocidental	Us Dollar	Us Dollar			Usd
postgres	2013-06-07 08:49:37.390904-03	\N	WSM	Samoa Ocidental	Samoa Ocidental					
postgres	2013-06-07 08:49:37.390904-03	\N	SMR	San Marino	San Marino	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	SHN	Santa Helena	Santa Helena					
postgres	2013-06-07 08:49:37.390904-03	\N	LCA	Santa Lúcia	Santa Lúcia					
postgres	2013-06-07 08:49:37.390904-03	\N	KNA	São Cristóvão E Névis	São Cristóvão E Névis	East Caribbean Dolla	East Caribbean Dolla			Xcd
postgres	2013-06-07 08:49:37.390904-03	\N	STP	São Tomé E Príncipe	São Tomé E Príncipe					
postgres	2013-06-07 08:49:37.390904-03	\N	SEN	Senegal	Senegal					
postgres	2013-06-07 08:49:37.390904-03	\N	SLE	Serra Leoa	Serra Leoa	Leone	Leone			Sll
postgres	2013-06-07 08:49:37.390904-03	\N	SYR	Síria	Síria					
postgres	2013-06-07 08:49:37.390904-03	\N	SOM	Somália	Somália					
postgres	2013-06-07 08:49:37.390904-03	\N	LKA	Sri Lanka	Sri Lanka	Sri Lanka Rupee	Sri Lanka Rupee			Lkr
postgres	2013-06-07 08:49:37.390904-03	\N	SPM	St. Pierre And Miquelon	St. Pierre And Miquelon					
postgres	2013-06-07 08:49:37.390904-03	\N	SWZ	Suazilândia	Suazilândia	Lilangeni	Lilangeni			Szl
postgres	2013-06-07 08:49:37.390904-03	\N	SDN	Sudão	Sudão					
postgres	2013-06-07 08:49:37.390904-03	\N	SWE	Suécia	Suécia					
postgres	2013-06-07 08:49:37.390904-03	\N	CHE	Suíça	Suíça	Swiss Franc	Swiss Franc			Chf
postgres	2013-06-07 08:49:37.390904-03	\N	SUR	Suriname	Suriname	Surinam Dollar	Surinam Dollar			Srd
postgres	2013-06-07 08:49:37.390904-03	\N	TJK	Tadjiquistão	Tadjiquistão					
postgres	2013-06-07 08:49:37.390904-03	\N	THA	Tailândia	Tailândia					
postgres	2013-06-07 08:49:37.390904-03	\N	TWN	Taiwan	Taiwan	New Taiwan Dollar	New Taiwan Dollar			Twd
postgres	2013-06-07 08:49:37.390904-03	\N	TZA	Tanzânia	Tanzânia	Tanzanian Shilling	Tanzanian Shilling			Tzs
postgres	2013-06-07 08:49:37.390904-03	\N	IOT	Território Britânico Do Oceano Índico	Britânico					
postgres	2013-06-07 08:49:37.390904-03	\N	ATF	Territórios Do Sul Da França	Frances	Euro	Euro			Eur
postgres	2013-06-07 08:49:37.390904-03	\N	TMP	Timor Leste	Timor Leste					
postgres	2013-06-07 08:49:37.390904-03	\N	TGO	Togo	Togo					
postgres	2013-06-07 08:49:37.390904-03	\N	TON	Tonga	Tonga					
postgres	2013-06-07 08:49:37.390904-03	\N	TTO	Trinidad And Tobago	Trinidad And Tobago	Tobago Dollar	Tobago Dollar			Ttd
postgres	2013-06-07 08:49:37.390904-03	\N	TUN	Tunísia	Tunísia					
postgres	2013-06-07 08:49:37.390904-03	\N	TKM	Turcomenistão	Turcomenistão					
postgres	2013-06-07 08:49:37.390904-03	\N	TUR	Turquia	Turquia	Turkish Lira	Turkish Lira			Try
postgres	2013-06-07 08:49:37.390904-03	\N	TUV	Tuvalu	Tuvalu					
postgres	2013-06-07 08:49:37.390904-03	\N	UKR	Ucrânia	Ucrânia					
postgres	2013-06-07 08:49:37.390904-03	\N	UGA	Uganda	Uganda	Uganda Shilling	Uganda Shilling			Ugx
postgres	2013-06-07 08:49:37.390904-03	\N	URY	Uruguai	Uruguai	Peso Uruguayo	Peso Uruguayo			Uyu
postgres	2013-06-07 08:49:37.390904-03	\N	UZB	Uzbequistão	Uzbequistão					
postgres	2013-06-07 08:49:37.390904-03	\N	VUT	Vanuatu	Vanuatu	Vatu	Vatu			Vuv
postgres	2013-06-07 08:49:37.390904-03	\N	VAT	Vaticano	Vaticano					
postgres	2013-06-07 08:49:37.390904-03	\N	VEN	Venezuela	Venezuela					
postgres	2013-06-07 08:49:37.390904-03	\N	VNM	Vietnã	Vietnã					
postgres	2013-06-07 08:49:37.390904-03	\N	ZAR	Zaire	Zaire					
postgres	2013-06-07 08:49:37.390904-03	\N	ZMB	Zâmbia	Zâmbia					
postgres	2013-06-07 08:49:37.390904-03	\N	ZWE	Zimbábue	Zimbábue	Zimbabwe Dollar	Zimbabwe Dollar			Zwl
\.


--
-- Data for Name: basdocument; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY basdocument (username, datetime, ipaddress, personid, documenttypeid, content, organ, dateexpedition, observation, obs, cityid, isexcused, isdelivered) FROM stdin;
\.


--
-- Data for Name: basdocumenttype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY basdocumenttype (username, datetime, ipaddress, documenttypeid, name, mask, persontype, sex, minage, maxage, needdeliver, isblockenroll, fillhint) FROM stdin;
\N	\N	\N	1	Identidade	\N	P	\N	\N	\N	t	f	\N
\N	\N	\N	2	Cadastro de pessoas físicas	\N	P	\N	\N	\N	t	f	\N
\.


--
-- Data for Name: basdomain; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY basdomain (username, datetime, ipaddress, domainid, sequence, key, abbreviated, label) FROM stdin;
\N	\N	\N	ABAS_PREFERENCIA	30	ADM_EMAIL	ADM EMAIL	Admin. e-mail
\N	\N	\N	ABAS_PREFERENCIA	31	ADM_INTERFACE	Adm interface	Admin. interface
\N	\N	\N	ABAS_PREFERENCIA	1	LOAN	Empréstimo	Empréstimo
\N	\N	\N	ABAS_PREFERENCIA	2	RETURN	Dev.	Devolução
\N	\N	\N	ABAS_PREFERENCIA	3	RESERVE	Res.	Reserva
\N	\N	\N	ABAS_PREFERENCIA	4	FINE	Multa	Multa
\N	\N	\N	ABAS_PREFERENCIA	32	PRINT	Impressão	Impressão
\N	\N	\N	ABAS_PREFERENCIA	5	ADMIN	Admin	Administração
\N	\N	\N	ABAS_PREFERENCIA	6	INTERCHANGE	Intercâmbio	Intercâmbio de materiais
\N	\N	\N	ABAS_PREFERENCIA	7	LOAN_LIBRARY	Emp. bibl.	Empréstimo entre biblioteca
\N	\N	\N	ABAS_PREFERENCIA	8	CATALOG	Catalogação	Catalogação
\N	\N	\N	ABAS_PREFERENCIA	9	MY_LIBRARY	Minha bib.	Minha biblioteca
\N	\N	\N	ABAS_PREFERENCIA	10	SEARCH	Pesquisa	Pesquisa
\N	\N	\N	ABAS_PREFERENCIA	23	NOTIFICATION_LOAN	Avisos de empréstimos	Avisos de empréstimos
\N	\N	\N	ABAS_PREFERENCIA	24	NOTIFICATION_AQUISITION	Avisos de aquisições	Avisos de aquisições
\N	\N	\N	ABAS_PREFERENCIA	25	NOTIFICATION_REQUEST	Avisos de requ. troca de estado	Avisos de requ. troca de estado
\N	\N	\N	ABAS_PREFERENCIA	33	PURCHASE_REQUEST	Solicitação de compras	Solicitação de compras
\N	\N	\N	ABAS_PREFERENCIA	34	Z3950	Z3950	Z3950
postgres	2013-06-07 08:49:37.390904-03	\N	ABAS_PREFERENCIA	35	SAGU	Sagu	Sagu
\N	\N	\N	PREFERENCE_TYPE	1	INT	INTEGER	Número inteiro
\N	\N	\N	PREFERENCE_TYPE	2	CHAR	CHAR	Caracter
\N	\N	\N	PREFERENCE_TYPE	3	VARCHAR	VARCHAR	Texto
\N	\N	\N	PREFERENCE_TYPE	4	DATE	DATE	Data
\N	\N	\N	PREFERENCE_TYPE	5	FILE	FILE	Arquivo
\N	\N	\N	PREFERENCE_TYPE	6	BOOLEAN	BOOLEAN	Booleano
\N	\N	\N	PREFERENCE_TYPE	7	NULL	NULL	Nulo
\N	\N	\N	PAGE_FORMAT	1	A4	A4	A4
\N	\N	\N	PAGE_FORMAT	2	Letter	Letter	Letter
\N	\N	\N	PAGE_FORMAT	3	A5	A5	A5
\N	\N	\N	PAGE_FORMAT	4	Automatic	Auto	Automatic
\N	\N	\N	REPORT_PERMISSION	1	basic	Bas.	Basico
\N	\N	\N	REPORT_PERMISSION	2	intermediary	Interm.	Intermediário
\N	\N	\N	REPORT_PERMISSION	3	advanced	Avan.	Avançado
\N	\N	\N	REPORT_GROUP	1	EMP	Emp.	Empréstimos
\N	\N	\N	REPORT_GROUP	2	RES	Res.	Reserva
\N	\N	\N	REPORT_GROUP	3	UTL	Utiliz.	Utilização
\N	\N	\N	REPORT_GROUP	4	ACV	Acervo.	Acervo
\N	\N	\N	REPORT_GROUP	5	MAT	Mat.	Material
\N	\N	\N	REPORT_GROUP	6	RST	Restaur.	Restauração
\N	\N	\N	TIPO_DE_TELEFONE	1	RES	Resid.	Residencial
\N	\N	\N	TIPO_DE_TELEFONE	2	CEL	Cel.	Celular
\N	\N	\N	TIPO_DE_TELEFONE	4	REC	Rec.	Recado
\N	\N	\N	MATERIAL_SEARCH_TYPE	1	cn	Ctrl.N.	Número de controle
\N	\N	\N	MATERIAL_SEARCH_TYPE	2	in	Item N.	Número do tombo
\N	\N	\N	MATERIAL_SEARCH_TYPE	3	wn	Work N.	Número da obra
\N	\N	\N	Z3950_RECORD_TYPE	1	xml	XML	XML
\N	\N	\N	IDIOMA_PESQUISA_GOOGLE	1		Todos	Todos
\N	\N	\N	IDIOMA_PESQUISA_GOOGLE	2	pt	Português	Português
\N	\N	\N	IDIOMA_PESQUISA_GOOGLE	3	en	Inglês	Inglês
\N	\N	\N	BACKGROUND_TASK_STATUS	1	1	Em exec.	Em execução
\N	\N	\N	BACKGROUND_TASK_STATUS	2	2	Sucesso	Sucesso
\N	\N	\N	BACKGROUND_TASK_STATUS	3	3	Erro	Erro
\N	\N	\N	REPORT_GROUP	7	ACS	Acesso	Pessoas
\N	\N	\N	WORKFLOW	1	PURCHASE_REQUEST	Compra	Solicitação de compra
\N	\N	\N	REPORT_GROUP	8	IMP	Capa	Acesso
\N	\N	\N	REPORT_GROUP	9	PRS	Pes.	Impressão
\N	\N	\N	PERSON_GROUP	1	PAD	Padrão	Padrão
\N	\N	\N	SEX	1	M	Masc.	Masculino
\N	\N	\N	SEX	2	F	Fem.	Feminino
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	1	RG	RG	Identidade
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	2	CPF	CPF	Cadastro de pessoa física
\N	\N	\N	BACKGROUND_TASK_STATUS	4	4	Reexecutando	Reexecutando
\N	\N	\N	BACKGROUND_TASK_STATUS	5	5	Sucesso ao reexecutar	Sucesso ao reexecutar
\N	\N	\N	BACKGROUND_TASK_STATUS	6	6	Falha ao reexecutar.	Falha ao reexecutar.
\N	\N	\N	TIPO_DE_TELEFONE	3	PRO	Prof.	Profissional
postgres	2013-06-07 08:49:37.390904-03	\N	SCHEDULE_TASK	1	START	START	Iniciando
postgres	2013-06-07 08:49:37.390904-03	\N	SCHEDULE_TASK	2	END_ERROR	END_ERROR	Falha na execução do agendamento
postgres	2013-06-07 08:49:37.390904-03	\N	SCHEDULE_TASK	3	END_SUCESS	END_SUCESS	Tarefa concluída com sucesso
\N	\N	\N	TIPO_RECIBO_NADA_CONSTA	1	diploma	diploma	Diploma
\N	\N	\N	TIPO_RECIBO_NADA_CONSTA	2	rematricula	rematricula	rematricula
\N	\N	\N	TIPO_RECIBO_NADA_CONSTA	3	trancamento	trancamento	trancamento
\N	\N	\N	TIPO_RECIBO_NADA_CONSTA	4	destrancamento	destrancamento	destrancamento
\N	\N	\N	TIPO_RECIBO_NADA_CONSTA	5	diversos	diversos	diversos
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	3	HISTORICO_ESCOLAR	HISTORICO_ESCOLAR	Histórico escolar
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	4	TITULO_ELEITOR	TITULO_ELEITOR	Título de eleitor
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	5	QUITACAO_ELEITORAL	QUITACAO_ELEITORAL	Quitação eleitoral
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	6	DOCUMENTACAO_MILITAR	DOCUMENTACAO_MILITAR	Documentação militar
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	7	FOTO	FOTO	Foto
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	8	HISTORICO_ORIGINAL	HISTORICO_ORIGINAL	Histórico original
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	9	ATESTADO_MEDICO	ATESTADO_MEDICO	Atestado médico
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	10	DIPLOMA_AUTENTICADO	DIPLOMA_AUTENTICADO	Diploma autenticado
postgres	2013-06-07 08:49:37.390904-03	\N	DOCUMENT_TYPE	11	SOLTEIRO_EMANCIPADO	SOLTEIRO_EMANCIPADO	Solteiro emancipado
\.


--
-- Data for Name: baslink; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY baslink (username, datetime, ipaddress, linkid, description, level, isvisibletoperson, isoperator) FROM stdin;
\N	\N	\N	1	Usuário da biblioteca	10	t	\N
\N	\N	\N	2	Funcionário	1	t	\N
\.


--
-- Data for Name: baslocationtype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY baslocationtype (locationtypeid, name) FROM stdin;
2	Aeroporto
3	Alameda
4	Área
5	Avenida
6	Campo
7	Chácara
8	Colônia
9	Conjunto
10	Condomínio
11	Distrito
12	Esplanada
13	Estação
14	Estrada
15	Favela
16	Fazenda
17	Feira
18	Jardim
19	Ladeira
20	Lago
21	Lagoa
22	Largo
23	Loteamento
24	Estação
25	Morro
26	Núcleo
27	Parque
28	Passarela
29	Pátio
30	Praça
31	Quadra
32	Recanto
33	Residencial
34	Rodovia
35	Rua
36	Setor
37	Sítio
38	Travessa
39	TRECHO
40	Trevo
41	Vale
42	Vereda
43	Via
44	Viaduto
45	Viela
46	Vila
\.


--
-- Data for Name: baslog; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY baslog (username, datetime, ipaddress) FROM stdin;
\.


--
-- Data for Name: basperson; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY basperson (username, datetime, ipaddress, personid, name, zipcode, location, number, complement, neighborhood, email, password, login, persondv, personmask, shortname, cityid, emailalternative, url, datein, isallowpersonaldata, locationtypeid, sentemail, obs, photoid) FROM stdin;
\.


--
-- Data for Name: baspersonlink; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY baspersonlink (username, datetime, ipaddress, personid, linkid, datevalidate) FROM stdin;
\.


--
-- Data for Name: basphone; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY basphone (username, datetime, ipaddress, personid, type, phone, phoneid) FROM stdin;
\.


--
-- Data for Name: basstate; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY basstate (username, datetime, ipaddress, stateid, countryid, name, ibgeid) FROM stdin;
postgres	2013-06-07 08:49:37.390904-03	\N	RS	BRA	Rio Grande Do Sul	\N
postgres	2013-06-07 08:49:37.390904-03	\N	SC	BRA	Santa Catarina	\N
postgres	2013-06-07 08:49:37.390904-03	\N	PR	BRA	Paraná	\N
postgres	2013-06-07 08:49:37.390904-03	\N	SP	BRA	São Paulo	\N
postgres	2013-06-07 08:49:37.390904-03	\N	MG	BRA	Minas Geraais	\N
postgres	2013-06-07 08:49:37.390904-03	\N	GO	BRA	Goias	\N
postgres	2013-06-07 08:49:37.390904-03	\N	RJ	BRA	Rio De Janeiro	\N
postgres	2013-06-07 08:49:37.390904-03	\N	AC	BRA	Acre	\N
postgres	2013-06-07 08:49:37.390904-03	\N	AL	BRA	Alagoas	\N
postgres	2013-06-07 08:49:37.390904-03	\N	AP	BRA	Amapá	\N
postgres	2013-06-07 08:49:37.390904-03	\N	AM	BRA	Amazonas	\N
postgres	2013-06-07 08:49:37.390904-03	\N	BA	BRA	Bahia	\N
postgres	2013-06-07 08:49:37.390904-03	\N	CE	BRA	Ceará	\N
postgres	2013-06-07 08:49:37.390904-03	\N	DF	BRA	Distrito Federal	\N
postgres	2013-06-07 08:49:37.390904-03	\N	ES	BRA	Espírito Santo	\N
postgres	2013-06-07 08:49:37.390904-03	\N	RR	BRA	Roraima	\N
postgres	2013-06-07 08:49:37.390904-03	\N	MA	BRA	Maranhão	\N
postgres	2013-06-07 08:49:37.390904-03	\N	MT	BRA	Mato Grosso	\N
postgres	2013-06-07 08:49:37.390904-03	\N	MS	BRA	Mato Grosso Do Sul	\N
postgres	2013-06-07 08:49:37.390904-03	\N	PA	BRA	Pará	\N
postgres	2013-06-07 08:49:37.390904-03	\N	PB	BRA	Paraíba	\N
postgres	2013-06-07 08:49:37.390904-03	\N	PE	BRA	Pernambuco	\N
postgres	2013-06-07 08:49:37.390904-03	\N	PI	BRA	Piauí	\N
postgres	2013-06-07 08:49:37.390904-03	\N	RN	BRA	Rio Grande Do Norte	\N
postgres	2013-06-07 08:49:37.390904-03	\N	RO	BRA	Rondônia	\N
postgres	2013-06-07 08:49:37.390904-03	\N	TO	BRA	Tocantins	\N
postgres	2013-06-07 08:49:37.390904-03	\N	SE	BRA	Sergipe	\N
\.


--
-- Data for Name: dbchanges; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY dbchanges (changeid, change, applied, applicationversion, orderchange, error, applieddate) FROM stdin;
1	\n            \nDROP TRIGGER gtctgrupdatematerialsontrigger ON gtcmaterial;\nUPDATE gtcmaterial SET searchcontentforsearchmodule = searchContent;\n-- atualiza as tags 090.a e etc considerando a preferencia MARC_CLASSIFICATION_TAG\nUPDATE gtcmaterial EM SET searchcontentforsearchmodule = preparetopographicindexsearch\n     ( content,\n         ( SELECT content\n         FROM gtcmaterial IM\n         WHERE fieldid = '090'\n             AND subfieldid = 'b'\n             AND line = 0\n             AND EM.controlnumber = IM.controlNumber\n         )\n     )\n WHERE fieldid || '.' || subfieldid in (  SELECT regexp_split_to_table( '090.a,080.a', ',' ) );\nCREATE TRIGGER gtctgrupdatematerialsontrigger AFTER INSERT OR DELETE OR UPDATE ON gtcmaterial FOR EACH ROW EXECUTE PROCEDURE gtcfncupdatematerialson();\n            \n        	t	3534	1	\N	2013-09-13 14:26:04.957529
2	\n            \nDROP TRIGGER gtctgrupdatematerialsontrigger ON gtcmaterial;\n-- atualiza as tags 090.a e etc considerando a preferencia MARC_CLASSIFICATION_TAG\nUPDATE gtcmaterial EM SET searchcontent = preparetopographicindex\n     ( content,\n         ( SELECT content\n         FROM gtcmaterial IM\n         WHERE fieldid = '090'\n             AND subfieldid = 'b'\n             AND line = 0\n             AND EM.controlnumber = IM.controlNumber\n         )\n     )\n WHERE fieldid || '.' || subfieldid in (  SELECT regexp_split_to_table( '090.a,080.a', ',' ) );\nCREATE TRIGGER gtctgrupdatematerialsontrigger AFTER INSERT OR DELETE OR UPDATE ON gtcmaterial FOR EACH ROW EXECUTE PROCEDURE gtcfncupdatematerialson();\n            \n        	t	3534	1	\N	2013-09-13 14:26:04.957529
63	\n            \nALTER TABLE gtcscheduletasklog\n\tALTER COLUMN status SET NOT NULL;\n\nCOMMENT ON TABLE gtcscheduletasklog IS 'Log de tarefas realizadas';\n\nCOMMENT ON COLUMN gtcscheduletasklog.status IS 'Estado deste log';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
3	\n            \nCREATE index index_gtcmaterial_searchcontentforsearchmodule ON gtcmaterial USING btree (controlnumber, searchcontentforsearchmodule);\nCREATE index index_gtcmaterial_indice4forsearchmodule ON gtcmaterial USING btree (fieldid, subfieldid, searchcontentforsearchmodule varchar_pattern_ops);\nCREATE index index_gtcmaterial_controlnumbersearchforsearchmodule ON gtcmaterial USING btree (controlnumber, fieldid, subfieldid, searchcontentforsearchmodule);\nCREATE index index_gtcmaterial_3forsearchmodule ON gtcmaterial USING btree (fieldid, subfieldid, searchcontentforsearchmodule varchar_pattern_ops);\nCREATE index index_gtcmaterial_searchcontentforsearchmodule_fulltext ON gtcmaterial USING gin (to_tsvector('portuguese'::regconfig, searchcontentforsearchmodule));\n            \n        	t	3534	1	\N	2013-09-13 14:26:04.957529
4	\n            \nUPDATE gtcmaterial SET searchcontent = preparesearchcontent(fieldid || '.' || subfieldid, content, ''), searchcontentforsearchmodule = preparesearchcontentforsearchmodule(fieldid || '.' || subfieldid, content, '') WHERE fieldid || '.' || subfieldid IN ('960.d','960.h','960.i','960.y','949.y','949.z','949.h') AND CONTENT LIKE '%/%/%';\n            \n        	t	3534	1	\N	2013-09-13 14:26:04.957529
5	\n            \nALTER TABLE basphone\n\tDROP CONSTRAINT basphone_pkey;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
6	\n            \nALTER TABLE basdocument\n\tDROP CONSTRAINT basdocument_documenttypeid;\n            \n        	f	3533	1	constraint "basdocument_documenttypeid" of relation "basdocument" does not exist	2013-11-08 13:30:33.165237
7	\n            \nALTER TABLE basperson\n\tDROP CONSTRAINT gtc_basperson_persongroup;\n            \n        	f	3533	1	constraint "gtc_basperson_persongroup" of relation "basperson" does not exist	2013-11-08 13:30:33.165237
8	\n            \nALTER TABLE basperson\n\tDROP CONSTRAINT gtc_basperson_sex;\n            \n        	f	3533	1	constraint "gtc_basperson_sex" of relation "basperson" does not exist	2013-11-08 13:30:33.165237
9	\n            \nDROP INDEX index_gtcloan_itemnumber_returndate;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
10	\n            \nDROP INDEX index_gtcloan_libraryunitid;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
11	\n            \nDROP TABLE baspersonoperationprocess;\n            \n        	f	3533	1	table "baspersonoperationprocess" does not exist	2013-11-08 13:30:33.165237
12	\n            \nALTER TABLE gtcdomain RENAME TO basdomain;\n            \n        	f	3533	1	relation "gtcdomain" does not exist	2013-11-08 13:30:33.165237
13	\n            \nCREATE SEQUENCE seq_cityid\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "seq_cityid" already exists	2013-11-08 13:30:33.165237
14	\n            \nCREATE SEQUENCE seq_documenttypeid\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "seq_documenttypeid" already exists	2013-11-08 13:30:33.165237
15	\n            \nCREATE SEQUENCE seq_locationtypeid\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "seq_locationtypeid" already exists	2013-11-08 13:30:33.165237
16	\n            \nCREATE SEQUENCE seq_phoneid\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "seq_phoneid" already exists	2013-11-08 13:30:33.165237
17	\n            \nCREATE SEQUENCE basphone_phoneid_seq\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "basphone_phoneid_seq" already exists	2013-11-08 13:30:33.165237
18	\n            \nCREATE SEQUENCE seq_materialevaluationid\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "seq_materialevaluationid" already exists	2013-11-08 13:30:33.165237
19	\n            \nCREATE SEQUENCE seq_mylibraryid\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "seq_mylibraryid" already exists	2013-11-08 13:30:33.165237
20	\n            \nCREATE SEQUENCE seq_workflowhistoryid\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "seq_workflowhistoryid" already exists	2013-11-08 13:30:33.165237
21	\n            \nCREATE SEQUENCE seq_workflowinstanceid\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "seq_workflowinstanceid" already exists	2013-11-08 13:30:33.165237
22	\n            \nCREATE SEQUENCE seq_workflowstatusid\n\tSTART WITH 1\n\tINCREMENT BY 1\n\tNO MAXVALUE\n\tNO MINVALUE\n\tCACHE 1;\n            \n        	f	3533	1	relation "seq_workflowstatusid" already exists	2013-11-08 13:30:33.165237
23	\n            \nCREATE TABLE baslog (\n\tusername character varying(20) DEFAULT "current_user"(),\n\tdatetime timestamp with time zone DEFAULT now(),\n\tipaddress inet\n);\nCOMMENT ON TABLE baslog IS 'Registro de acessos e modificações aos registros.';\nCOMMENT ON COLUMN baslog.username IS 'nome do usuário';\nCOMMENT ON COLUMN baslog.datetime IS 'Data do registo';\n            \n        	f	3533	1	relation "baslog" already exists	2013-11-08 13:30:33.165237
24	\n            \nCREATE TABLE bascity (\n\tcityid integer DEFAULT nextval('seq_cityid'::regclass) NOT NULL,\n\tname text NOT NULL,\n\tzipcode character varying(9),\n\tstateid character varying(2) NOT NULL,\n\tcountryid character varying(3) NOT NULL,\n\tibgeid integer\n)\nINHERITS (baslog);\n\nALTER TABLE ONLY bascity\n\tALTER COLUMN username SET DEFAULT "current_user"();\n\nALTER TABLE ONLY bascity\n\tALTER COLUMN datetime SET DEFAULT now();\n\nCOMMENT ON TABLE bascity IS 'Cidade';\nCOMMENT ON COLUMN bascity.cityid IS 'Código da cidade';\nCOMMENT ON COLUMN bascity.name IS 'Nome da cidade.';\nCOMMENT ON COLUMN bascity.zipcode IS 'CEP - Código de Endereçamento Postal';\nCOMMENT ON COLUMN bascity.stateid IS 'Código do estado.';\nCOMMENT ON COLUMN bascity.countryid IS 'código do pais';\nCOMMENT ON COLUMN bascity.ibgeid IS 'Código do ibge';\n            \n        	f	3533	1	relation "bascity" already exists	2013-11-08 13:30:33.165237
35	\n            \nALTER TABLE basphone\n\tADD COLUMN username character varying(20) DEFAULT "current_user"(),\n\tADD COLUMN datetime timestamp with time zone DEFAULT now(),\n\tADD COLUMN ipaddress inet,\n\tADD COLUMN phoneid integer DEFAULT nextval('seq_phoneid'::regclass) NOT NULL,\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: basphone original: integer new: bigint */;\n\nALTER TABLE basphone\n\tINHERIT baslog;\n\nCOMMENT ON COLUMN basphone.personid IS 'código da pessoa';\n\nCOMMENT ON COLUMN basphone.phoneid IS 'Código do telefone';\n            \n        	f	3533	1	column "username" of relation "basphone" already exists	2013-11-08 13:30:33.165237
69	\n            \nCOMMENT ON TABLE miolo_group IS 'Grupos de usuários/operadores';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
70	\n            \nCOMMENT ON TABLE miolo_groupuser IS 'Relaciona usuários/operadores e grupos';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
67	\n            \nALTER TABLE gtcworkflowstatus\n\tALTER COLUMN workflowstatusid SET DEFAULT nextval('seq_workflowstatusid'::regclass);\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
71	\n            \nCOMMENT ON TABLE miolo_module IS 'Módulos do miolo';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
25	\n            \nCREATE TABLE bascountry (\n\tcountryid character varying(3) NOT NULL,\n\tname character varying(50) NOT NULL,\n\tnationality character varying(30) NOT NULL,\n\tcurrency character varying(20),\n\tpluralcurrency character varying(20),\n\tdecimaldescription character varying(20),\n\tpluraldecimaldescription character varying(20),\n\tcurrencysymbol character varying(20)\n)\nINHERITS (baslog);\n\nALTER TABLE ONLY bascountry\n\tALTER COLUMN username SET DEFAULT "current_user"();\n\nALTER TABLE ONLY bascountry\n\tALTER COLUMN datetime SET DEFAULT now();\n\nCOMMENT ON TABLE bascountry IS 'País';\nCOMMENT ON COLUMN bascountry.countryid IS 'Código do país';\nCOMMENT ON COLUMN bascountry.name IS 'nome';\nCOMMENT ON COLUMN bascountry.nationality IS 'nacionalidade';\nCOMMENT ON COLUMN bascountry.currency IS 'Moeda Ex. Real';\nCOMMENT ON COLUMN bascountry.pluralcurrency IS 'moeda no plural (Ex. Reais)';\nCOMMENT ON COLUMN bascountry.decimaldescription IS 'Descrição decimal (Ex. centavo)';\nCOMMENT ON COLUMN bascountry.pluraldecimaldescription IS 'Descrição decimal no plural (Ex. centavos)';\nCOMMENT ON COLUMN bascountry.currencysymbol IS 'Simbolo da moeda Ex. R$';\n            \n        	f	3533	1	relation "bascountry" already exists	2013-11-08 13:30:33.165237
26	\n            \nCOMMENT ON COLUMN basdocumenttype.sex IS 'sexo que deve ter este documento.';\nCOMMENT ON COLUMN basdocumenttype.minage IS 'idade mínima';\nCOMMENT ON COLUMN basdocumenttype.maxage IS 'idade máxima';\nCOMMENT ON COLUMN basdocumenttype.needdeliver IS 'precisa de entrega';\nCOMMENT ON COLUMN basdocumenttype.isblockenroll IS 'bloqueia matricula';\nCOMMENT ON COLUMN basdocumenttype.fillhint IS 'dica de preenchimento';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
27	\n            \nCREATE TABLE baslocationtype (\n\tlocationtypeid integer DEFAULT nextval('seq_locationtypeid'::regclass) NOT NULL,\n\tname character varying(30) NOT NULL\n);\n\nCOMMENT ON TABLE baslocationtype IS 'tipo de Local';\nCOMMENT ON COLUMN baslocationtype.locationtypeid IS 'código do tipo de locação';\nCOMMENT ON COLUMN baslocationtype.name IS 'nome do tipo do locação';\n            \n        	f	3533	1	relation "baslocationtype" already exists	2013-11-08 13:30:33.165237
28	\n            \nCREATE TABLE basstate (\n\tstateid character varying(2) NOT NULL,\n\tcountryid character varying(3) NOT NULL,\n\tname character varying(50) NOT NULL,\n\tibgeid integer\n)\nINHERITS (baslog);\n\nALTER TABLE ONLY basstate\n\tALTER COLUMN username SET DEFAULT "current_user"();\n\nALTER TABLE ONLY basstate\n\tALTER COLUMN datetime SET DEFAULT now();\n\nCOMMENT ON TABLE basstate IS 'estado';\nCOMMENT ON COLUMN basstate.stateid IS 'código do estado';\nCOMMENT ON COLUMN basstate.countryid IS 'código do país';\nCOMMENT ON COLUMN basstate.name IS 'nome do estado';\nCOMMENT ON COLUMN basstate.ibgeid IS 'código do ibge';\n            \n        	f	3533	1	relation "basstate" already exists	2013-11-08 13:30:33.165237
29	\n            \nCREATE TABLE gtclibperson (\n\tpersonid bigint NOT NULL,\n\tbaseldap character varying(50),\n\tsex character(1),\n\tprofession character varying(100),\n\tworkplace character varying(100),\n\tschool character varying(100),\n\tdatebirth date,\n\tpersongroup character varying(255),\n\toperationprocess timestamp without time zone\n);\n\nCOMMENT ON TABLE gtclibperson IS 'Informação da pessoa, relacionadas a biblioteca';\nCOMMENT ON COLUMN gtclibperson.personid IS 'código da pessoa';\nCOMMENT ON COLUMN gtclibperson.baseldap IS 'Determina a base ldap onde o login deve ser efetuado.';\nCOMMENT ON COLUMN gtclibperson.sex IS 'Sexo, valores válidos M e F.';\nCOMMENT ON COLUMN gtclibperson.profession IS 'Profissão';\nCOMMENT ON COLUMN gtclibperson.workplace IS 'Local de trabalho.';\nCOMMENT ON COLUMN gtclibperson.school IS 'Escola.';\nCOMMENT ON COLUMN gtclibperson.datebirth IS 'Data de nascimento.';\nCOMMENT ON COLUMN gtclibperson.persongroup IS 'Grupo da pessoa, utilizado para caracterizar uma pessoa em alguma situação, varia de acordo com o cliente.';\nCOMMENT ON COLUMN gtclibperson.operationprocess IS 'Processo de operação';\n            \n        	f	3533	1	relation "gtclibperson" already exists	2013-11-08 13:30:33.165237
30	\n            \nCREATE TABLE gtcmateriallocation (\n\tmateriallocationid integer NOT NULL,\n\tname character varying(255),\n\tlibraryunitid integer NOT NULL\n);\n            \n        	f	3533	1	relation "gtcmateriallocation" already exists	2013-11-08 13:30:33.165237
31	\n            \nCREATE TABLE gtcmateriallocationtag (\n\tmateriallocationtagid integer NOT NULL,\n\ttype character(1),\n\tfieldid integer,\n\tsubfieldidid character(1),\n\trule character(1),\n\tcontent text,\n\tgtcmateriallocatioid integer NOT NULL\n);\n            \n        	f	3533	1	relation "gtcmateriallocationtag" already exists	2013-11-08 13:30:33.165237
32	\n            \nALTER TABLE basconfig\n\tADD COLUMN username character varying(20) DEFAULT "current_user"(),\n\tADD COLUMN datetime timestamp with time zone DEFAULT now(),\n\tADD COLUMN ipaddress inet;\n\nALTER TABLE basconfig\n\tINHERIT baslog;\n\nCOMMENT ON TABLE basconfig IS 'configurações do sistema';\n\nCOMMENT ON COLUMN basconfig.moduleconfig IS 'Modulo do parâmetro';\n            \n        	f	3533	1	column "username" of relation "basconfig" already exists	2013-11-08 13:30:33.165237
34	\n            \nALTER TABLE basperson\n\tDROP COLUMN city,\n\tDROP COLUMN baseldap,\n\tDROP COLUMN persongroup,\n\tDROP COLUMN sex,\n\tDROP COLUMN datebirth,\n\tDROP COLUMN school,\n\tDROP COLUMN profession,\n\tDROP COLUMN workplace,\n\tDROP COLUMN observation,\n\tADD COLUMN username character varying(20) DEFAULT "current_user"(),\n\tADD COLUMN datetime timestamp with time zone DEFAULT now(),\n\tADD COLUMN ipaddress inet,\n\tADD COLUMN persondv integer,\n\tADD COLUMN personmask integer,\n\tADD COLUMN shortname character varying(30),\n\tADD COLUMN cityid integer,\n\tADD COLUMN emailalternative character varying(60),\n\tADD COLUMN url text,\n\tADD COLUMN datein date DEFAULT now(),\n\tADD COLUMN isallowpersonaldata boolean DEFAULT true,\n\tADD COLUMN locationtypeid integer,\n\tADD COLUMN sentemail boolean,\n\tADD COLUMN obs text,\n\tADD COLUMN photoid integer,\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: basperson original: integer new: bigint */,\n\tALTER COLUMN location TYPE text /* TYPE change - table: basperson original: character varying(100) new: text */;\n\nALTER TABLE basperson\n\tINHERIT baslog;\n\nCOMMENT ON TABLE basperson IS 'Pessoas';\nCOMMENT ON COLUMN basperson.login IS 'Campo com login do usuário.';\nCOMMENT ON COLUMN basperson.persondv IS 'Digito verificador da pessoa.';\nCOMMENT ON COLUMN basperson.personmask IS 'máscara da pessoa???';\nCOMMENT ON COLUMN basperson.shortname IS 'Apelido';\nCOMMENT ON COLUMN basperson.cityid IS 'Codigo da cidade';\nCOMMENT ON COLUMN basperson.emailalternative IS 'email alternativo';\nCOMMENT ON COLUMN basperson.url IS 'url de site, blog, facebook, etc.';\nCOMMENT ON COLUMN basperson.datein IS 'Data de criação/entrada do registro';\nCOMMENT ON COLUMN basperson.isallowpersonaldata IS 'é permitido mostrar informações pessoais?';\nCOMMENT ON COLUMN basperson.locationtypeid IS 'código do tipo de locação.';\nCOMMENT ON COLUMN basperson.sentemail IS 'se permite envio de emails';\nCOMMENT ON COLUMN basperson.obs IS 'Observações.';\n            \n        	f	3533	1	column "city" of relation "basperson" does not exist	2013-11-08 13:30:33.165237
33	\n            \nALTER TABLE baslink\n\tADD COLUMN username character varying(20) DEFAULT "current_user"(),\n\tADD COLUMN datetime timestamp with time zone DEFAULT now(),\n\tADD COLUMN ipaddress inet;\n\nALTER TABLE baslink\n\tINHERIT baslog;\n            \n        	f	3533	1	column "username" of relation "baslink" already exists	2013-11-08 13:30:33.165237
68	\n            \nALTER TABLE miolo_access\n\tALTER COLUMN rights SET NOT NULL;\n\nCOMMENT ON TABLE miolo_access IS 'Registra os permissões por grupo';\nCOMMENT ON COLUMN miolo_access.idtransaction IS 'Código da transação';\nCOMMENT ON COLUMN miolo_access.idgroup IS 'Código do grupo';\nCOMMENT ON COLUMN miolo_access.rights IS 'Direitos, quanto maior mais poder';\nCOMMENT ON COLUMN miolo_access.validatefunction IS 'Função de validação';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
64	\n            \nALTER TABLE gtcsearchablefieldaccess\n\tDROP COLUMN bug_dia2sql_ignorar;\n\nALTER TABLE gtcsearchformataccess\n\tDROP COLUMN bug_dia2sql_ignorar;\n\nALTER TABLE gtcsearchformatcolumn\n\tDROP COLUMN bug_dia2sql_ignorar;\n\nALTER TABLE gtcsoapaccess\n\tDROP COLUMN bug_dia2sql_ignorar;\n\nALTER TABLE gtcsuppliertypeandlocation\n\tDROP COLUMN bug_dia2sql_ignorar;\n            \n        	f	3533	1	column "bug_dia2sql_ignorar" of relation "gtcsearchablefieldaccess" does not exist	2013-11-08 13:30:33.165237
65	\n            \nALTER TABLE gtcworkflowhistory\n\tALTER COLUMN workflowhistoryid SET DEFAULT nextval('seq_workflowhistoryid'::regclass);\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
36	\n            \nALTER TABLE gtcanalytics\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcanalytics original: integer new: bigint */;\n\nCOMMENT ON TABLE gtcanalytics IS 'Tabela que registra acessos (termos pesquisados e erros) ao sistemas.\nUtilizada para estatísticas.';\nCOMMENT ON COLUMN gtcanalytics.analyticsid IS 'Código do registro.';\nCOMMENT ON COLUMN gtcanalytics.query IS 'A intrução do navegador.';\nCOMMENT ON COLUMN gtcanalytics."action" IS 'Ação do miolo.';\nCOMMENT ON COLUMN gtcanalytics.event IS 'Evento do miolo.';\nCOMMENT ON COLUMN gtcanalytics.libraryunitid IS 'Unidade de bibllioteca logada.';\nCOMMENT ON COLUMN gtcanalytics.operator IS 'Operador.';\nCOMMENT ON COLUMN gtcanalytics.personid IS 'Código da pessoa.';\nCOMMENT ON COLUMN gtcanalytics."time" IS 'Data e Hora de registro.';\nCOMMENT ON COLUMN gtcanalytics.ip IS 'Ip de acesso.';\nCOMMENT ON COLUMN gtcanalytics.browser IS 'Navegador.';\nCOMMENT ON COLUMN gtcanalytics.loglevel IS 'Nível de registro.';\nCOMMENT ON COLUMN gtcanalytics.accesstype IS 'Tipo de acesso.';\nCOMMENT ON COLUMN gtcanalytics.menu IS 'Título do menu.';\nCOMMENT ON COLUMN gtcanalytics.timespent IS 'Tempo dispendido.';\nCOMMENT ON TABLE gtccontrolfielddetail IS 'Registra forma padrão de montagem de campos de controle Marc. Ex.:000 e 008';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
37	\n            \nALTER TABLE gtcemailcontrolnotifyaquisition\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcemailcontrolnotifyaquisition original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
38	\n            \nALTER TABLE gtcexemplaryfuturestatusdefined\n\tADD COLUMN cancelreserveemailobservation text;\n            \n        	f	3533	1	column "cancelreserveemailobservation" of relation "gtcexemplaryfuturestatusdefined" already exists	2013-11-08 13:30:33.165237
39	\n            \nALTER TABLE gtcfavorite\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcfavorite original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
40	\n            \nALTER TABLE gtcinterestsarea\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcinterestsarea original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
41	\n            \nALTER TABLE gtclibraryassociation\n\tDROP COLUMN bug_dia2sql_ignorar;\n            \n        	f	3533	1	column "bug_dia2sql_ignorar" of relation "gtclibraryassociation" does not exist	2013-11-08 13:30:33.165237
42	\n            \nCOMMENT ON TABLE gtclibraryunit IS 'Unidade de biblioteca.';\nCOMMENT ON COLUMN gtclibraryunit.acceptpurchaserequest IS 'Determina se aceita ou não solicitação de compras.';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
43	\n            \nALTER TABLE gtclibraryunitaccess\n\tDROP COLUMN bug_dia2sql_ignorar;\n            \n        	f	3533	1	column "bug_dia2sql_ignorar" of relation "gtclibraryunitaccess" does not exist	2013-11-08 13:30:33.165237
44	\n            \nCOMMENT ON TABLE gtclibraryunitconfig IS 'Configuracoes do sistema relativas a unidade de biblioteca.';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
45	\n            \nALTER TABLE gtclibraryunitisclosed\n\tDROP COLUMN bug_dia2sql_ignorar;\n            \n        	f	3533	1	column "bug_dia2sql_ignorar" of relation "gtclibraryunitisclosed" does not exist	2013-11-08 13:30:33.165237
46	\n            \nALTER TABLE gtcloan\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcloan original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
47	\n            \nALTER TABLE gtcloanbetweenlibrary\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcloanbetweenlibrary original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
48	\n            \nALTER TABLE gtcmarctaglisting\n\tALTER COLUMN description SET NOT NULL;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
49	\n            \nALTER TABLE gtcmaterial\n\tADD COLUMN searchcontentforsearchmodule text;\n            \n        	f	3533	1	column "searchcontentforsearchmodule" of relation "gtcmaterial" already exists	2013-11-08 13:30:33.165237
50	\n            \nALTER TABLE gtcmaterialcontrol\n\tADD COLUMN lastchangeoperator character varying(255) DEFAULT 'gnuteca3'::character varying NOT NULL;\n            \n        	f	3533	1	column "lastchangeoperator" of relation "gtcmaterialcontrol" already exists	2013-11-08 13:30:33.165237
51	\n            \nALTER TABLE gtcmaterialevaluation\n\tALTER COLUMN materialevaluationid SET DEFAULT nextval('seq_materialevaluationid'::regclass),\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcmaterialevaluation original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
52	\n            \nALTER TABLE gtcmylibrary\n\tALTER COLUMN mylibraryid SET DEFAULT nextval('seq_mylibraryid'::regclass),\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcmylibrary original: integer new: bigint */;\n\nCOMMENT ON COLUMN gtcmylibrary.mylibraryid IS 'Código da minha biblioteca';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
53	\n            \nALTER TABLE gtcnewsaccess\n\tDROP COLUMN bug_dia2sql_ignorar;\n            \n        	f	3533	1	column "bug_dia2sql_ignorar" of relation "gtcnewsaccess" does not exist	2013-11-08 13:30:33.165237
54	\n            \nALTER TABLE gtcpenalty\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcpenalty original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
55	\n            \nALTER TABLE gtcpersonconfig\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcpersonconfig original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
56	\n            \nALTER TABLE gtcpersonlibraryunit\n\tDROP COLUMN bug_dia2sql_ignorar,\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcpersonlibraryunit original: integer new: bigint */;\n            \n        	f	3533	1	column "bug_dia2sql_ignorar" of relation "gtcpersonlibraryunit" does not exist	2013-11-08 13:30:33.165237
57	\n            \nALTER TABLE gtcpolicy\n\tADD COLUMN momentaryfinevalue double precision;\n            \n        	f	3533	1	column "momentaryfinevalue" of relation "gtcpolicy" already exists	2013-11-08 13:30:33.165237
58	\n            \nALTER TABLE gtcpurchaserequest\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcpurchaserequest original: integer new: bigint */,\n\tALTER COLUMN amount SET NOT NULL;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
59	\n            \nALTER TABLE gtcrequestchangeexemplarystatus\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcrequestchangeexemplarystatus original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
60	\n            \nALTER TABLE gtcrequestchangeexemplarystatusaccess\n\tDROP COLUMN bug_dia2sql_ignorar;\n            \n        	f	3533	1	column "bug_dia2sql_ignorar" of relation "gtcrequestchangeexemplarystatusaccess" does not exist	2013-11-08 13:30:33.165237
61	\n            \nALTER TABLE gtcreserve\n\tALTER COLUMN personid TYPE bigint /* TYPE change - table: gtcreserve original: integer new: bigint */;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
62	\n            \nALTER TABLE gtcreturntype\n\tADD COLUMN sendmailreturnreceipt boolean;\n            \n        	f	3533	1	column "sendmailreturnreceipt" of relation "gtcreturntype" already exists	2013-11-08 13:30:33.165237
66	\n            \nALTER TABLE gtcworkflowinstance\n\tALTER COLUMN workflowinstanceid SET DEFAULT nextval('seq_workflowinstanceid'::regclass);\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
72	\n            \nCOMMENT ON TABLE miolo_transaction IS 'Descrimina as transações/permissões do sistema.';\nCOMMENT ON COLUMN miolo_transaction.idmodule IS 'Modulo ao qual a transação/permissão pertence.';\nCOMMENT ON COLUMN miolo_transaction."action" IS 'Ação (url) do miolo ao qual a transação está relacionada, utilizada para montagem do menu principal do sistema.';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
73	\n            \nCOMMENT ON TABLE miolo_user IS 'Usuários do miolo/operadores.';\nCOMMENT ON COLUMN miolo_user.iduser IS 'Código do usuário';\nCOMMENT ON COLUMN miolo_user.login IS 'usuário para autenticação';\nCOMMENT ON COLUMN miolo_user.name IS 'Nome completo do usuário';\nCOMMENT ON COLUMN miolo_user.nickname IS 'Apelido do usuário';\nCOMMENT ON COLUMN miolo_user.m_password IS 'Senha para autenticação';\nCOMMENT ON COLUMN miolo_user.confirm_hash IS 'Hash de confirmação de senha. ( Não utilizado pelo gnuteca)';\nCOMMENT ON COLUMN miolo_user.theme IS 'Tema escolhido pelo usuário (não utilizado pelo Gnuteca).';\nCOMMENT ON COLUMN miolo_user.idmodule IS 'Módulo ao qual o usuário pertence';\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
74	\n            \nALTER SEQUENCE basphone_phoneid_seq\n\tOWNED BY basphone.phoneid;\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
75	\n            \nALTER TABLE bascity\n\tADD CONSTRAINT bascity_pkey PRIMARY KEY (cityid);\n            \n        	f	3533	1	multiple primary keys for table "bascity" are not allowed	2013-11-08 13:30:33.165237
76	\n            \nALTER TABLE bascountry\n\tADD CONSTRAINT bascountry_pkey PRIMARY KEY (countryid);\n            \n        	f	3533	1	multiple primary keys for table "bascountry" are not allowed	2013-11-08 13:30:33.165237
77	\n            \nALTER TABLE basdocumenttype\n\tADD CONSTRAINT basdocumenttype_pkey PRIMARY KEY (documenttypeid);\n            \n        	f	3533	1	multiple primary keys for table "basdocumenttype" are not allowed	2013-11-08 13:30:33.165237
78	\n            \nALTER TABLE baslocationtype\n\tADD CONSTRAINT baslocationtype_pkey PRIMARY KEY (locationtypeid);\n            \n        	f	3533	1	multiple primary keys for table "baslocationtype" are not allowed	2013-11-08 13:30:33.165237
79	\n            \nALTER TABLE basphone\n\tADD CONSTRAINT basphone_pkey PRIMARY KEY (phoneid);\n\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
80	\n            \nALTER TABLE basstate\n\tADD CONSTRAINT basstate_pkey PRIMARY KEY (stateid);\n\n            \n        	f	3533	1	multiple primary keys for table "basstate" are not allowed	2013-11-08 13:30:33.165237
81	\n            \nALTER TABLE gtclibperson\n\tADD CONSTRAINT gtclibperson_pkey PRIMARY KEY (personid);\n\n            \n        	f	3533	1	multiple primary keys for table "gtclibperson" are not allowed	2013-11-08 13:30:33.165237
82	\n            \nALTER TABLE gtcmateriallocation\n\tADD CONSTRAINT gtcmateriallocation_pkey PRIMARY KEY (materiallocationid);\n\n            \n        	f	3533	1	multiple primary keys for table "gtcmateriallocation" are not allowed	2013-11-08 13:30:33.165237
83	\n            \nALTER TABLE gtcmateriallocationtag\n\tADD CONSTRAINT gtcmateriallocationtag_pkey PRIMARY KEY (materiallocationtagid);\n\n            \n        	f	3533	1	multiple primary keys for table "gtcmateriallocationtag" are not allowed	2013-11-08 13:30:33.165237
84	\n            \nALTER TABLE bascity\n\tADD CONSTRAINT bascity_countryid_fkey FOREIGN KEY (countryid) REFERENCES bascountry(countryid);\n\n            \n        	f	3533	1	constraint "bascity_countryid_fkey" for relation "bascity" already exists	2013-11-08 13:30:33.165237
85	\n            \nALTER TABLE bascity\n\tADD CONSTRAINT bascity_stateid_fkey FOREIGN KEY (stateid) REFERENCES basstate(stateid);\n\n            \n        	f	3533	1	constraint "bascity_stateid_fkey" for relation "bascity" already exists	2013-11-08 13:30:33.165237
86	\n            \nALTER TABLE bascountry\n\tADD CONSTRAINT bascountry_countryid_key UNIQUE (countryid);\n\n            \n        	f	3533	1	relation "bascountry_countryid_key" already exists	2013-11-08 13:30:33.165237
87	\n            \nALTER TABLE basperson\n\tADD CONSTRAINT basperson_email_key UNIQUE (email);\n\n            \n        	f	3533	1	relation "basperson_email_key" already exists	2013-11-08 13:30:33.165237
88	\n            \nALTER TABLE basstate\n\tADD CONSTRAINT basstate_countryid_fkey FOREIGN KEY (countryid) REFERENCES bascountry(countryid);\n\n            \n        	f	3533	1	constraint "basstate_countryid_fkey" for relation "basstate" already exists	2013-11-08 13:30:33.165237
89	\n            \nALTER TABLE gtclibperson\n\tADD CONSTRAINT gtclibperson_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);\n\n            \n        	f	3533	1	constraint "gtclibperson_personid_fkey" for relation "gtclibperson" already exists	2013-11-08 13:30:33.165237
90	\n            \nALTER TABLE gtcmateriallocation\n\tADD CONSTRAINT libraryunitfk FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);\n\n            \n        	f	3533	1	constraint "libraryunitfk" for relation "gtcmateriallocation" already exists	2013-11-08 13:30:33.165237
91	\n            \nALTER TABLE gtcmateriallocationtag\n\tADD CONSTRAINT materiallocationfk FOREIGN KEY (gtcmateriallocatioid) REFERENCES gtcmateriallocation(materiallocationid);\n\n            \n        	f	3533	1	constraint "materiallocationfk" for relation "gtcmateriallocationtag" already exists	2013-11-08 13:30:33.165237
92	\n            \nALTER TABLE gtcpurchaserequestquotation\n\tADD CONSTRAINT gtcpurchaserequestquotation_supplierid_fkey FOREIGN KEY (supplierid) REFERENCES gtcsupplier(supplierid);\n\n            \n        	f	3533	1	constraint "gtcpurchaserequestquotation_supplierid_fkey" for relation "gtcpurchaserequestquotation" already exists	2013-11-08 13:30:33.165237
93	\n            \nALTER TABLE miolo_user\n\tADD CONSTRAINT miolo_user_login_key UNIQUE (login);\n\n            \n        	f	3533	1	relation "miolo_user_login_key" already exists	2013-11-08 13:30:33.165237
94	\n            \nCREATE INDEX index_gtcloan_itemnumber_returndate ON gtcloan USING btree (itemnumber);\n\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
95	\n            \nCREATE INDEX index_gtcloan_libraryunitid ON gtcloan USING btree (libraryunitid);\n\n            \n        	t	3533	1	\N	2013-11-08 13:30:33.165237
96	\n            \nCREATE INDEX index_gtcmaterialhsitory_controlnumber ON gtcmaterialhistory USING btree (controlnumber);\n\n            \n        	f	3533	1	relation "index_gtcmaterialhsitory_controlnumber" already exists	2013-11-08 13:30:33.165237
97	\n            \n  ALTER TABLE basdocument \n  DROP COLUMN observation,\n  ADD COLUMN obs text,\n  ADD COLUMN cityid integer,\n  ADD COLUMN isexcused boolean,\n  ADD COLUMN isdelivered boolean;\n            \n        	f	3533	1	column "obs" of relation "basdocument" already exists	2013-11-08 13:30:33.165237
98	\n            \n         ALTER TABLE basperson add column login varchar;\n            \n        	f	3533	1	column "login" of relation "basperson" already exists	2013-11-08 13:30:33.165237
99	\n            \n         ALTER TABLE basperson add column obs text;\n            \n        	f	3533	1	column "obs" of relation "basperson" already exists	2013-11-08 13:30:33.165237
100	\n            \n         update basperson set login = miolousername;\n            \n        	f	3533	1	column "miolousername" does not exist	2013-11-08 13:30:33.165237
101	\n            \nselect setval('seq_supplierid', (select max(supplierid::int) from gtcsupplier));\n            \n        	t	3536	1	\N	2013-11-08 13:30:33.165237
\.


--
-- Data for Name: gtcanalytics; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcanalytics (analyticsid, query, action, event, libraryunitid, operator, personid, "time", ip, browser, loglevel, accesstype, menu, timespent) FROM stdin;
1	module=gnuteca3&action=main:search:simpleSearch	\N	\N	\N	\N	\N	2013-06-07 08:43:37	\N	\N	1	2	Pesquisa:Periódicos	\N
2	module=gnuteca3&action=main:search:simpleSearch	main:search:simpleSearch	\N	\N	\N	\N	2013-11-08 13:30:05	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	2	Pesquisa:Periódicos	1.1659700870514
3	module=gnuteca3&action=main	main	\N	\N	\N	\N	2013-11-08 13:32:08	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	\N	0.22956895828247001
4	module=gnuteca3&action=main	main	\N	1	gnuteca	\N	2013-11-08 13:33:29	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	\N	0.35341095924376997
5	module=gnuteca3&action=main:configuration:searchformat	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:42:12	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.29000687599182001
6	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=1&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:43:17	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.28958702087402
7	module=gnuteca3&action=main:catalogue:tag	main:catalogue:tag	\N	1	gnuteca	\N	2013-11-08 13:43:43	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Catalogação:Etiqueta	0.26807093620299999
8	module=gnuteca3&action=main:configuration:searchformat&function=search&pn_page=1&searchFormatIdS=1&descriptionS=Padr%C3%A3o&isRestrictedS=f	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:44:44	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.22135496139526001
9	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=2&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:44:56	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.23771595954895
10	module=gnuteca3&action=main:configuration:searchformat&__mainForm__EVENTTARGETVALUE=tbBtnSearch:click&function=search	main:configuration:searchformat	tbBtnSearch:click	1	gnuteca	\N	2013-11-08 13:45:22	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.22517490386962999
11	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=3&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:45:27	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.24036192893982
12	module=gnuteca3&action=main:configuration:searchformat&__mainForm__EVENTTARGETVALUE=tbBtnSearch:click&function=search	main:configuration:searchformat	tbBtnSearch:click	1	gnuteca	\N	2013-11-08 13:45:30	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.22623896598816001
13	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=4&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:45:34	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.24101591110229001
14	module=gnuteca3&action=main:configuration:searchformat&__mainForm__EVENTTARGETVALUE=tbBtnSearch:click&function=search	main:configuration:searchformat	tbBtnSearch:click	1	gnuteca	\N	2013-11-08 13:45:37	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.22518301010132
15	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=5&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:45:41	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.24037790298462
16	module=gnuteca3&action=main:configuration:searchformat&__mainForm__EVENTTARGETVALUE=tbBtnSearch:click&function=search	main:configuration:searchformat	tbBtnSearch:click	1	gnuteca	\N	2013-11-08 13:45:44	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.22385287284850999
17	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=7&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:45:48	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.24291300773621
18	module=gnuteca3&action=main:configuration:searchformat&__mainForm__EVENTTARGETVALUE=tbBtnSearch:click&function=search	main:configuration:searchformat	tbBtnSearch:click	1	gnuteca	\N	2013-11-08 13:46:17	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.23754596710205
19	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=10&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:46:21	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.23605513572692999
20	module=gnuteca3&action=main:configuration:searchformat&__mainForm__EVENTTARGETVALUE=tbBtnSearch:click&function=search	main:configuration:searchformat	tbBtnSearch:click	1	gnuteca	\N	2013-11-08 13:46:23	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.23397588729857999
21	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=1&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:46:27	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.23664617538452001
22	module=gnuteca3&action=main:configuration:searchformat&__mainForm__EVENTTARGETVALUE=tbBtnSearch:click&function=search	main:configuration:searchformat	tbBtnSearch:click	1	gnuteca	\N	2013-11-08 13:46:41	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.21998500823975001
23	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=2&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:46:45	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.23747587203979001
24	module=gnuteca3&action=main:configuration:searchformat&__mainForm__EVENTTARGETVALUE=tbBtnSearch:click&function=search	main:configuration:searchformat	tbBtnSearch:click	1	gnuteca	\N	2013-11-08 13:47:17	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.23959589004517001
25	module=gnuteca3&action=main:configuration:searchformat&searchFormatId=1&function=update	main:configuration:searchformat	\N	1	gnuteca	\N	2013-11-08 13:52:04	127.0.0.1	Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31	1	1	Configuração:Pesquisa:Formato da pesquisa	0.23633790016174
\.


--
-- Data for Name: gtcassociation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcassociation (associationid, description) FROM stdin;
\.


--
-- Data for Name: gtcbackgroundtasklog; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcbackgroundtasklog (backgroundtasklogid, begindate, enddate, task, label, status, message, operator, args, libraryunitid) FROM stdin;
\.


--
-- Data for Name: gtccataloguingformat; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtccataloguingformat (cataloguingformatid, description, observation) FROM stdin;
1	AACR2	Código de Catalogação Anglo-Americano
\.


--
-- Data for Name: gtcclassificationarea; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcclassificationarea (classificationareaid, areaname, classification, ignoreclassification) FROM stdin;
\.


--
-- Data for Name: gtccontrolfielddetail; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtccontrolfielddetail (controlfielddetailid, fieldid, subfieldid, beginposition, lenght, description, categoryid, marctaglistid, isactive, defaultvalue, emptyvalue) FROM stdin;
1	000	#	0	5	Tamanho do registrofd	LR	\N	f		00000
2	000	#	5	1	Status do registro	LR	000-05	t	n	#
3	000	#	6	1	Tipo do registro	LR	000-06	t	a	#
4	000	#	7	1	Nível Bibliográfico	LR	000-07	t	m	#
5	000	#	8	1	Tipo de controle	LR	000-08	t	#	#
6	000	#	9	1	Character coding scheme	LR	\N	f		#
7	000	#	10	1	Indicator count	LR	\N	f		2
8	000	#	11	1	Subfield code count	LR	\N	f		2
9	000	#	12	5	Base address of data	LR	\N	f		00000
10	000	#	17	1	Nível de Catalogação	LR	000-17	t	4	4
11	000	#	18	1	Forma de catalogação	LR	000-18	t	#	#
12	000	#	19	1	Ligação de registro	LR	000-19	t	#	#
13	000	#	20	1	Length of the length-of-field portion	LR	\N	f		4
14	000	#	21	1	Length of the starting-character-position	LR	\N	f		5
15	000	#	22	1	Length of the implementation-defined portion	LR	\N	f		0
16	000	#	23	1	Undefined	LR	\N	f		0
17	008	a	0	6	Data de Entrada	BK	\N	t		
18	008	a	6	1	Tipo de Data/Status de Publicação	BK	008-06-BK	t		
19	008	a	7	4	Data 1	BK	\N	t		
20	008	a	11	4	Data 2	BK	\N	t		
21	008	a	15	3	Local de publicação	BK	008-15	t		
22	008	a	18	1	Ilustração 1	BK	008-18-BK	t		
23	008	a	19	1	Ilustração 2	BK	008-18-BK	t		
24	008	a	20	1	Ilustração 3	BK	008-18-BK	t		
25	008	a	21	1	Ilustração 4	BK	008-18-BK	t		
26	008	a	22	1	Publico Alvo	BK	008-22-BK	t		
27	008	a	23	1	Forma do Item	BK	008-23-BK	t		
28	008	a	24	1	Natureza do conteúdo 1	BK	008-24-BK	t		
29	008	a	25	1	Natureza do conteúdo 2	BK	008-24-BK	t		
30	008	a	26	1	Natureza do conteúdo 3	BK	008-24-BK	t		
31	008	a	27	1	Natureza do conteúdo 4	BK	008-24-BK	t		
32	008	a	28	1	Publicação governamental	BK	008-28-BK	t		
33	008	a	29	1	Publicação de evento	BK	008-29-BK	t		
34	008	a	30	1	Coletânea de homenagem	BK	008-30-BK	t		
35	008	a	31	2	Índice	BK	008-31-BK	t		
36	008	a	32	1	Undefined	BK	\N	f		
37	008	a	33	1	Forma Literária	BK	008-33-BK	t		
38	008	a	34	1	Biografia	BK	008-34-BK	t		
39	008	a	35	3	Idioma	BK	008-35	t		
40	008	a	38	1	Registro modificado	BK	008-38-BK	t		
41	008	a	39	1	Fonte da catalogação	BK	008-39-BK	t		
42	008	a	0	6	Data de Entrada	SE	\N	t		
43	008	a	6	1	Tipo de Data/Status de Publicação	SE	008-06-SE	t		
44	008	a	7	4	Data 1	SE	\N	t		
45	008	a	11	4	Data 2	SE	\N	t		
46	008	a	15	3	Local de publicação	SE	008-15	t		
47	008	a	18	1	Frequência	SE	008-18-SE	t		
48	008	a	19	1	Regularidade	SE	008-19-SE	t		
49	008	a	20	1	Centro que atribui o ISSN	SE	008-20-SE	t		
50	008	a	21	1	Tipo de periódico	SE	008-21-SE	t		
51	008	a	22	1	Forma do item original	SE	008-22-SE	t		
52	008	a	23	1	Forma do item	SE	008-23-SE	t		
53	008	a	24	1	Natureza da obra	SE	008-24-SE	t		
54	008	a	25	1	Natureza do conteúdo 1	SE	008-25-SE	t		
55	008	a	26	1	Natureza do conteúdo 2	SE	008-25-SE	t		
56	008	a	27	1	Natureza do conteúdo 3	SE	008-25-SE	t		
57	008	a	28	1	Publicação governamental	SE	008-28-SE	t		
59	008	a	30	3	Undefined	SE	\N	f		
60	008	a	33	1	Alfabeto original ou escrita do título	SE	008-33-SE	t		
61	008	a	34	1	Entrada sucessiva/mais recente	SE	008-34-SE	t		
62	008	a	35	3	Idioma	SE	008-35	t		
63	008	a	38	1	Registro modificado	SE	008-38-SE	t		
64	008	a	39	1	Fonte da catalogação	SE	008-39-SE	t		
58	008	a	29	4	Publicação de evento	SE	008-29-SE	t		
\.


--
-- Data for Name: gtccostcenter; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtccostcenter (costcenterid, libraryunitid, description) FROM stdin;
\.


--
-- Data for Name: gtccutter; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtccutter (abbreviation, code) FROM stdin;
CACH	110
CACH	110
CACH	110
CARNE	280
CARNE	280
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERC	231
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
VANDERW	242
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WA	111
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAAS	112
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WAC	113
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACHS	114
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WACK	115
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WAD	116
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDI	117
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADDINGTON	118
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE	119
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADE, M.	121
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADH	122
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADL	123
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADS	124
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WADSWORTH, M.	125
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAE	126
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAEL	127
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAF	128
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAG	129
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGEN	131
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGN	132
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, G.	133
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, M.	134
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAGNER, S.	135
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAH	136
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAHLEN	137
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAI	138
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAILL	139
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAIN	141
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAINWRIGHT, M.	142
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIS	143
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAIT	144
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAITE	145
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAK	146
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEF	147
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEH	148
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAKEL	149
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WAL	151
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH	152
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, J.	153
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCH, P.	154
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCK	155
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALCO	156
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALD	157
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDE	158
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEG	159
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEM	161
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDEN	162
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDER	163
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDM	164
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDO	165
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDOR	166
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDR	167
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALDS	168
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALE	169
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALEI	171
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES	172
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALES, M.	173
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALF	174
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALG	175
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALI	176
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALK	177
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, D.	178
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, F.	179
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, J.	181
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, M.	182
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, P.	183
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, S.	184
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, T.	185
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALKER, W.	186
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALL	187
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, D.	188
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, F.	189
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, J.	191
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, M.	192
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, P.	193
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, S.	194
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLACE, W.	195
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLC	196
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLEN	197
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLER	198
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLEY	199
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLI	211
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGF	212
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLINGT	213
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLIS	214
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALLO	215
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALM	216
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALN	217
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALP	218
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALPOLE, M.	219
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALR	221
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALS	222
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH	223
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, D.	224
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, J.	225
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, M.	226
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, S.	227
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSH, W.	228
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALSI	229
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. G.	232
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTER. M.	233
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTERS	235
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTER. S.	234
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTH	236
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTHER	237
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTO	238
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, G.	239
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WALTON, M.	241
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAM	243
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAN	244
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WAND	245
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANG	246
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANH	247
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANL	248
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANN	249
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WANS	251
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAP	252
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WAR	253
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON	254
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARBURTON, M.	255
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD	256
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARD, C.	257
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARDE	265
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, F.	258
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARD, J.	259
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARDL	266
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, M.	261
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, P.	262
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, S.	263
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARD, W.	264
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE	267
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, D.	268
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, J.	269
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WARE, M.	271
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WAREN	274
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, S.	272
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARE, W.	273
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARH	275
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARI	276
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARING, M.	277
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARN	278
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER	279
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, D.	281
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, J.	282
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, M.	283
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, S.	284
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARNER, W.	285
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARR	286
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, C.	287
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, F.	288
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, J.	289
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, M.	291
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, P.	292
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, S.	293
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARREN, W.	294
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WARRI	295
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WART	296
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTENS	297
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARTO	298
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARW	299
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WARWICK, M.	311
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WAS	312
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASER	313
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASH	314
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHBURN, M.	315
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHI	316
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON	317
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, G.	318
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASHINGTON, M.	319
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASS	321
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSER	322
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WASSI	323
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WAT	324
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WEM	466
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WATERF	325
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERH	326
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERL	327
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERM	328
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS	329
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERS, M.	331
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERST	332
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATERW	333
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATK	334
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKE	335
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATKINSON	336
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATS	337
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, D.	338
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, J.	339
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, M.	341
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, S.	342
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATSON, W.	343
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATT	344
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATTI	347
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, J.	345
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATT, P.	346
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS	348
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, D.	349
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, J.	351
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, M.	352
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WATTS, S.	353
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAU	354
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAUT	355
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAW	356
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAY	357
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYL	358
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WAYN	359
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WE	361
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAL	362
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEAV	363
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEB	364
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBB	365
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBE	369
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER	371
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBBER, M.	372
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, G.	366
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, M.	367
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBB, S.	368
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER	373
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, G.	374
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, M.	375
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBER, S.	376
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBS	377
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, C.	378
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, F.	379
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, J.	381
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, M.	382
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, P.	383
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, S.	384
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WEBSTER, W.	385
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECH	386
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WECK	387
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WED	388
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDE	389
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDEL	391
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDG	392
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEDGW	393
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEE	394
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS	395
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEKS, M.	396
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEEM	397
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEER	398
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEEV	399
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEG	411
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEGN	412
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEH	413
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEHR	414
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEI	415
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEICH	416
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEID	417
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIDM	418
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIG	419
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIK	421
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIL	422
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEIN	423
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEINM	424
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIR	425
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEIS	426
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISE	427
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISK	428
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISS	429
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISSEN	433
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, J.	431
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEISS, P.	432
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEIT	434
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITS	435
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEITZ	436
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEK	437
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WEL	438
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH	439
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCH, M.	441
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELCK	442
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELD	443
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELDE	445
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELD, M.	444
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELH	446
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELL	447
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLER	448
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLES	449
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLESL	451
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLI	452
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS	453
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, G.	454
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, M.	455
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLS, S.	456
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELLW	457
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELS	458
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSE	459
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH	461
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, J.	462
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELSH, P.	463
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELT	464
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WELW	465
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEM	466
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WEN	467
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WENC	468
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WEND	469
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDL	471
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDO	472
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENDT	473
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENG	474
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENI	475
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENL	476
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENT	477
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, G.	478
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTWORTH, M.	479
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENTZ	481
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WENZ	482
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WEP	483
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WER	484
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERDE	485
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WERE	486
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WEREN	487
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERF	488
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERL	489
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERN	491
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER	492
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, G.	493
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNER, M.	494
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNH	495
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNI	496
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERNS	497
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERP	498
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WERT	499
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WES	511
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESL	513
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESLEY, M.	514
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESS	515
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WESSEN	512
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WEST	516
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTB	523
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WESTC	524
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WEST, D.	517
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTE	525
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTER	526
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTERM	527
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTG	528
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WESTH	529
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WEST, J.	518
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WESTM	531
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WEST, M.	519
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMI	532
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTMO	533
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTO	534
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, G.	535
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTON, P.	536
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTP	537
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WESTR	538
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, S.	521
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WEST, W.	522
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WET	539
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETM	541
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETT	542
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETTS	543
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WETZ	544
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEX	545
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEY	546
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYE	547
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYL	548
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WEYM	549
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WH	551
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHAL	552
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHART	553
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHARTON, M.	554
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHAT	555
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHE	556
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATL	557
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHEATO	558
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHED	559
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEE	561
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER	562
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, G.	563
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELER, P.	564
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELO	565
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHEELW	566
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHELP	567
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHET	568
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHEW	569
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHI	571
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHID	572
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIP	573
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, J.	574
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIPPLE, P.	575
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIS	576
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHIT	577
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITAKER, M.	578
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITB	579
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITC	581
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE	582
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITE, C.	583
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITEF	591
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITE, F.	584
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEH	592
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITEHO	593
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITE, J.	585
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITEL	594
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, M.	586
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, P.	587
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, S.	588
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITE, W.	589
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITF	595
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITG	596
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITI	597
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING	598
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, G.	599
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, M.	611
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, S.	612
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITING, W.	613
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITM	614
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMAN, M.	615
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITMORE	616
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY	617
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, D.	618
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, J.	619
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, M.	621
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, S.	622
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITNEY, W.	623
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITT	624
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTI	625
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTING	626
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITTL	627
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHITW	628
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WHY	629
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WI	631
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIB	632
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WIC	633
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHI	634
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICHM	635
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICK	636
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WICKH	637
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WID	638
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDE	639
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIDM	641
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIE	642
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDE	643
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEDEM	644
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEG	645
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEL	646
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIEN	647
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIER	648
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIES	649
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESE	651
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIESS	652
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIF	653
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIG	654
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WIGG	655
WRE	944
WIGG	655
WIGG	655
WIGG	655
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGGL	656
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGH	657
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGHTM	658
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGM	659
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGN	661
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIGR	662
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIILIAMSON, J.	731
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIK	663
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WIL	664
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBR	665
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILBU	666
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILC	667
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILD	668
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDB	669
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE	671
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDE, M.	672
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDER	673
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDM	674
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILDT	675
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILE	676
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILF	677
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILH	678
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILI	679
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILK	681
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKES	682
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKI	683
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS	684
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINS, M.	685
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON	686
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKINSON, M.	687
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILKS	688
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILL	689
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLAR	691
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, D.	692
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, J.	693
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, M.	694
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, S.	695
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLARD, W.	696
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLC	697
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLE	698
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEM	699
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLEN	711
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLER	712
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLES	713
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLEY	714
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLI	715
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM	716
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, G.	717
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAM, M.	718
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAMS	721
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAM, S.	719
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, C.	722
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, F.	723
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, J.	724
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMS, M.	725
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON	729
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMSON, P.	732
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, P.	726
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, S.	727
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIAMS, W.	728
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIN	733
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS	734
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIS, M.	735
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLIST	736
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLM	737
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLMO	738
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLO	739
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLS	741
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILLSO	742
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILM	743
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILMO	744
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILR	745
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILS	746
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, C.	747
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, F.	748
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, J.	749
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, M.	751
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, P.	752
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, S.	753
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILSON, W.	754
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILT	755
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WILTON, M.	756
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIM	757
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WIN	758
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCHE	759
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCK	761
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WINCKL	762
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WIND	763
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDH	764
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDI	765
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINDS	766
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINE	767
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WINES	768
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WING	769
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGF	771
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINGR	772
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINK	773
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKELM	774
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINKL	775
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINN	776
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINS	777
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW	778
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, G.	779
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, M.	781
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINSLOW, S.	782
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINST	783
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINT	784
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTERF	788
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, G.	785
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, M.	786
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTER, S.	787
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTH	789
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP	791
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, J.	792
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTHROP, P.	793
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WOG	845
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WINTR	794
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WINW	795
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIO	796
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIP	797
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIR	798
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIRT	799
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WIS	811
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISE	812
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISEM	814
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISE, M.	813
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISN	815
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WISS	816
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WIST	817
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WISW	818
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WIT	819
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITE	821
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITH	822
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERI	823
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITHERS	824
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITI	825
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITS	826
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITT	827
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTE	828
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTEN	829
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTG	831
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITTI	832
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZ	833
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WITZL	834
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WIX	835
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WL	836
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WO	837
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WOD	838
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WODES	839
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOE	841
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOEL	842
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOER	843
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOF	844
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOG	845
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOH	846
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOI	847
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOL	848
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT	849
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLCOTT, M.	851
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLD	852
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLF	853
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE	856
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, J.	857
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFFE, P.	858
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLFG	859
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, J.	854
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLF, P.	855
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLFR	861
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLK	862
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLL	863
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLLE	864
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLM	865
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLO	866
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLS	867
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLT	868
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLTM	869
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOLZ	871
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOM	872
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOO	873
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRI	882
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBRIDGE, M.	883
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBU	884
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODBURY, M.	885
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOODC	886
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOOD, C.	874
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOODF	887
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOOD, F.	875
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODH	888
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHO	889
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOODHU	891
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOOD, J.	876
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOODM	892
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, M.	877
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOOD, P.	878
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODR	893
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOODS	894
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOOD, S.	879
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, J.	895
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, M.	896
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODS, S.	897
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODSW	899
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOODS, W.	898
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOOD, W.	881
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, J.	911
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOODWARD, P.	912
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOL	913
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLM	914
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLR	915
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLS	916
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOLW	917
WOOT	918
WOOT	918
WRE	944
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOOT	918
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WOR	919
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, G.	921
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, M.	922
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORCESTER, S.	923
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORD	924
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSW	925
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORDSWORTH, S.	926
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORL	927
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORM	928
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORO	929
WORS	931
WORS	931
WRE	944
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORS	931
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORT	932
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON	933
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTHINGTON, M.	934
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WORTL	935
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOT	936
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOTT	937
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WOU	938
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WR	939
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAN	941
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAT	942
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRAX	943
WRE	944
WRE	944
WRE	944
WRE	944
WRE	944
WRE	944
WRE	944
WRE	944
WRE	944
WRE	944
WRE	944
WRE	944
WRE	944
WREN	945
WREN	945
WREN	945
WREN	945
WREN	945
WREN	945
WREN	945
WREN	945
WREN	945
XY	9
WREN	945
WREN	945
WREN	945
WREN	945
WREN	945
WREN	945
WREN	945
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRI	946
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT	947
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, C.	948
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, F.	949
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, J.	951
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, M.	952
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, S.	953
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIGHT, W.	954
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIS	955
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRIT	956
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WRO	957
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WROTH	958
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WU	959
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WUL	961
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFH	962
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFR	963
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WULFS	964
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUN	965
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUNS	966
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WUR	967
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURM	968
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURT	969
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURTZ	971
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WURZ	972
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WUS	973
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WY	974
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT	975
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYATT, M.	976
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYC	977
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYD	978
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYE	979
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYK	981
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYL	982
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYLE	983
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYM	984
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYN	985
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNF	986
WYNG	987
ZAP	35
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNG	987
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNN	988
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNNE, M.	989
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYNT	991
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYO	992
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYR	993
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYS	994
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYSS	995
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYT	996
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYTT	997
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WYV	998
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
WZ	999
XA	1
XA	1
XAN	2
XAN	2
XAV	3
XAV	3
XE	4
XE	4
XEN	5
XEN	5
XER	6
XER	6
XL	7
XL	7
XU	8
XU	8
XY	9
YR	87
YR	87
YR	87
YR	87
YR	87
YR	87
YR	87
YR	87
YRI	88
YRI	88
YRI	88
YRI	88
YRI	88
YRI	88
YRI	88
YRI	88
YRIE	89
YRIE	89
YRIE	89
YRIE	89
YRIE	89
YRIE	89
YRIE	89
YRIE	89
YS	91
YS	91
YS	91
YS	91
YS	91
YS	91
YS	91
YS	91
YSEN	92
YSEN	92
YSEN	92
YSEN	92
YSEN	92
YSEN	92
YSEN	92
YSEN	92
YSS	93
YSS	93
YSS	93
YSS	93
YSS	93
YSS	93
YSS	93
YSS	93
YU	94
YU	94
YU	94
YU	94
YU	94
YU	94
YU	94
YU	94
YULE	95
YULE	95
YULE	95
YULE	95
YULE	95
YULE	95
YULE	95
YULE	95
YV	96
YV	96
YV	96
YV	96
YV	96
YV	96
YV	96
YV	96
ZA	11
ZA	11
ZA	11
ZA	11
ZA	11
ZA	11
ZA	11
ZA	11
ZAB	12
ZAB	12
ZAB	12
ZAB	12
ZAB	12
ZAB	12
ZAB	12
ZAB	12
ZAC	13
ZAC	13
ZAC	13
ZAC	13
ZAC	13
ZAC	13
ZAC	13
ZAC	13
ZACCO	14
ZACCO	14
ZACCO	14
ZACCO	14
ZACCO	14
ZACCO	14
ZACCO	14
ZACCO	14
ZACH	15
ZACH	15
ZACH	15
ZACH	15
ZACH	15
ZACH	15
ZACH	15
ZACH	15
ZACHAR	16
ZACHAR	16
ZACHAR	16
ZACHAR	16
ZACHAR	16
ZACHAR	16
ZACHAR	16
ZACHAR	16
ZACU	17
ZACU	17
ZACU	17
ZACU	17
ZACU	17
ZACU	17
ZACU	17
ZACU	17
ZAG	18
ZAG	18
ZAG	18
ZAG	18
ZAG	18
ZAG	18
ZAG	18
ZAG	18
ZAH	19
ZAH	19
ZAH	19
ZAH	19
ZAH	19
ZAH	19
ZAH	19
ZAH	19
ZAI	21
ZAI	21
ZAI	21
ZAI	21
ZAI	21
ZAI	21
ZAI	21
ZAI	21
ZAL	22
ZAL	22
ZAL	22
ZAL	22
ZAL	22
ZAL	22
ZAL	22
ZAL	22
ZAM	23
ZAM	23
ZAM	23
ZAM	23
ZAM	23
ZAM	23
ZAM	23
ZAM	23
ZAMBO	24
ZAMBO	24
ZAMBO	24
ZAMBO	24
ZAMBO	24
ZAMBO	24
ZAMBO	24
ZAMBO	24
ZAMO	25
ZAMO	25
ZAMO	25
ZAMO	25
ZAMO	25
ZAMO	25
ZAMO	25
ZAMO	25
ZAMP	26
ZAMP	26
ZAMP	26
ZAMP	26
ZAMP	26
ZAMP	26
ZAMP	26
ZAMP	26
ZAN	27
ZAN	27
ZAN	27
ZAN	27
ZAN	27
ZAN	27
ZAN	27
ZAN	27
ZANE	28
ZANE	28
ZANE	28
ZANE	28
ZANE	28
ZANE	28
ZANE	28
ZANE	28
ZANG	29
ZANG	29
ZANG	29
ZANG	29
ZANG	29
ZANG	29
ZANG	29
ZANG	29
ZANI	31
ZANI	31
ZANI	31
ZANI	31
ZANI	31
ZANI	31
ZANI	31
ZANI	31
ZANN	32
ZANN	32
ZANN	32
ZANN	32
ZANN	32
ZANN	32
ZANN	32
ZANN	32
ZANO	33
ZANO	33
ZANO	33
ZANO	33
ZANO	33
ZANO	33
ZANO	33
ZANO	33
ZANT	34
ZANT	34
ZANT	34
ZANT	34
ZANT	34
ZANT	34
ZANT	34
ZANT	34
ZAP	35
ZAP	35
ZAP	35
ZAP	35
ZAP	35
ZAP	35
ZAP	35
ZAR	36
ZAR	36
ZAR	36
ZAR	36
ZAR	36
ZAR	36
ZAR	36
ZAR	36
ZARI	37
ZARI	37
ZARI	37
ZARI	37
ZARI	37
ZARI	37
ZARI	37
ZARI	37
ZARO	38
ZARO	38
ZARO	38
ZARO	38
ZARO	38
ZARO	38
ZARO	38
ZARO	38
ZAU	39
ZAU	39
ZAU	39
ZAU	39
ZAU	39
ZAU	39
ZAU	39
ZAU	39
ZE	41
ZE	41
ZE	41
ZE	41
ZE	41
ZE	41
ZE	41
ZE	41
ZEC	42
ZEC	42
ZEC	42
ZEC	42
ZEC	42
ZEC	42
ZEC	42
ZEC	42
ZED	43
ZED	43
ZED	43
ZED	43
ZED	43
ZED	43
ZED	43
ZED	43
ZEG	44
ZEG	44
ZEG	44
ZEG	44
ZEG	44
ZEG	44
ZEG	44
ZEG	44
ZEI	45
ZEI	45
ZEI	45
ZEI	45
ZEI	45
ZEI	45
ZEI	45
ZEI	45
ZEIL	46
ZEIL	46
ZEIL	46
ZEIL	46
ZEIL	46
ZEIL	46
ZEIL	46
ZEIL	46
ZEIS	47
ZEIS	47
ZEIS	47
ZEIS	47
ZEIS	47
ZEIS	47
ZEIS	47
ZEIS	47
ZEIT	48
ZEIT	48
ZEIT	48
ZEIT	48
ZEIT	48
ZEIT	48
ZEIT	48
ZEIT	48
ZEL	49
ZEL	49
ZEL	49
ZEL	49
ZEL	49
ZEL	49
ZEL	49
ZEL	49
ZELL	51
ZELL	51
ZELL	51
ZELL	51
ZELL	51
ZELL	51
ZELL	51
ZELL	51
ZELO	52
ZELO	52
ZELO	52
ZELO	52
ZELO	52
ZELO	52
ZELO	52
ZELO	52
ZELT	53
ZELT	53
ZELT	53
ZELT	53
ZELT	53
ZELT	53
ZELT	53
ZELT	53
ZEN	54
ZEN	54
ZEN	54
ZEN	54
ZEN	54
ZEN	54
ZEN	54
ZEN	54
ZENO	55
ZENO	55
ZENO	55
ZENO	55
ZENO	55
ZENO	55
ZENO	55
ZENO	55
ZENT	56
ZENT	56
ZENT	56
ZENT	56
ZENT	56
ZENT	56
ZENT	56
ZENT	56
ZEP	57
ZEP	57
ZEP	57
ZEP	57
ZEP	57
ZEP	57
ZEP	57
ZEP	57
ZER	58
ZER	58
ZER	58
ZER	58
ZER	58
ZER	58
ZER	58
ZER	58
ZES	59
ZES	59
ZES	59
ZES	59
ZES	59
ZES	59
ZES	59
ZES	59
ZET	61
ZET	61
ZET	61
ZET	61
ZET	61
ZET	61
ZET	61
ZET	61
ZEU	62
ZEU	62
ZEU	62
ZEU	62
ZEU	62
ZEU	62
ZEU	62
ZEU	62
ZEV	63
ZEV	63
ZEV	63
ZEV	63
ZEV	63
ZEV	63
ZEV	63
ZEV	63
ZI	64
ZI	64
ZI	64
ZI	64
ZI	64
ZI	64
ZI	64
ZI	64
ZIE	65
ZIE	65
ZIE	65
ZIE	65
ZIE	65
ZIE	65
ZIE	65
ZIE	65
ZIEG	66
ZIEG	66
ZIEG	66
ZIEG	66
ZIEG	66
ZIEG	66
ZIEG	66
ZIEG	66
ZIES	67
ZIES	67
ZIES	67
ZIES	67
ZIES	67
ZIES	67
ZIES	67
ZIES	67
ZIF	68
ZIF	68
ZIF	68
ZIF	68
ZIF	68
ZIF	68
ZIF	68
ZIF	68
ZIL	69
ZIL	69
ZIL	69
ZIL	69
ZIL	69
ZIL	69
ZIL	69
ZIL	69
ZIM	71
ZIM	71
ZIM	71
ZIM	71
ZIM	71
ZIM	71
ZIM	71
ZIM	71
ZIMMER	72
ZIMMER	72
ZIMMER	72
ZIMMER	72
ZIMMER	72
ZIMMER	72
ZIMMER	72
ZIMMER	72
ZIMMERMANN	73
ZIMMERMANN	73
ZIMMERMANN	73
ZIMMERMANN	73
ZIMMERMANN	73
ZIMMERMANN	73
ZIMMERMANN	73
ZIMMERMANN	73
ZIMMERMANN, G.	74
ZIMMERMANN, G.	74
ZIMMERMANN, G.	74
ZIMMERMANN, G.	74
ZIMMERMANN, G.	74
ZIMMERMANN, G.	74
ZIMMERMANN, G.	74
ZIMMERMANN, G.	74
ZIMMERMANN, M.	75
ZIMMERMANN, M.	75
ZIMMERMANN, M.	75
ZIMMERMANN, M.	75
ZIMMERMANN, M.	75
ZIMMERMANN, M.	75
ZIMMERMANN, M.	75
ZIMMERMANN, M.	75
ZIMMERMANN, S.	76
ZIMMERMANN, S.	76
ZIMMERMANN, S.	76
ZIMMERMANN, S.	76
ZIMMERMANN, S.	76
ZIMMERMANN, S.	76
ZIMMERMANN, S.	76
ZIMMERMANN, S.	76
ZIN	77
ZIN	77
ZIN	77
ZIN	77
ZIN	77
ZIN	77
ZIN	77
ZIN	77
ZINK	78
ZINK	78
ZINK	78
ZINK	78
ZINK	78
ZINK	78
ZINK	78
ZINK	78
ZINZ	79
ZINZ	79
ZINZ	79
ZINZ	79
ZINZ	79
ZINZ	79
ZINZ	79
ZINZ	79
ZIR	81
ZIR	81
ZIR	81
ZIR	81
ZIR	81
ZIR	81
ZIR	81
ZIR	81
ZIT	82
ZIT	82
ZIT	82
ZIT	82
ZIT	82
ZIT	82
ZIT	82
ZIT	82
ZO	83
ZO	83
ZO	83
ZO	83
ZO	83
ZO	83
ZO	83
ZO	83
ZOC	84
ZOC	84
ZOC	84
ZOC	84
ZOC	84
ZOC	84
ZOC	84
ZOC	84
ZOE	85
ZOE	85
ZOE	85
ZOE	85
ZOE	85
ZOE	85
ZOE	85
ZOE	85
ZOL	86
ZOL	86
ZOL	86
ZOL	86
ZOL	86
ZOL	86
ZOL	86
ZOL	86
ZW	97
ZW	97
ZW	97
ZW	97
ZW	97
ZW	97
ZW	97
ZW	97
ZWI	98
ZWI	98
ZWI	98
ZWI	98
ZWI	98
ZWI	98
ZWI	98
ZWI	98
ZY	99
ZY	99
ZY	99
ZY	99
ZY	99
ZY	99
ZY	99
ZY	99
\.


--
-- Data for Name: gtcdictionary; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcdictionary (dictionaryid, description, tags, readonly) FROM stdin;
\.


--
-- Data for Name: gtcdictionarycontent; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcdictionarycontent (dictionarycontentid, dictionaryid, dictionarycontent) FROM stdin;
\.


--
-- Data for Name: gtcdictionaryrelatedcontent; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcdictionaryrelatedcontent (dictionaryrelatedcontentid, dictionarycontentid, relatedcontent) FROM stdin;
\.


--
-- Data for Name: gtcemailcontroldelayedloan; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcemailcontroldelayedloan (loanid, lastsent, amountsent) FROM stdin;
\.


--
-- Data for Name: gtcemailcontrolnotifyaquisition; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcemailcontrolnotifyaquisition (personid, lastsent) FROM stdin;
\.


--
-- Data for Name: gtcexemplarycontrol; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcexemplarycontrol (controlnumber, itemnumber, originallibraryunitid, libraryunitid, acquisitiontype, exemplarystatusid, materialgenderid, materialtypeid, materialphysicaltypeid, entrancedate, lowdate, line, observation) FROM stdin;
\.


--
-- Data for Name: gtcexemplaryfuturestatusdefined; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcexemplaryfuturestatusdefined (exemplaryfuturestatusdefinedid, exemplarystatusid, itemnumber, applied, date, operator, observation, cancelreserveemailobservation) FROM stdin;
\.


--
-- Data for Name: gtcexemplarystatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcexemplarystatus (exemplarystatusid, description, mask, level, executeloan, momentaryloan, daysofmomentaryloan, executereserve, executereserveininitiallevel, meetreserve, isreservestatus, islowstatus, observation, schedulechangestatusforrequest) FROM stdin;
0	Estado inicial		1	f	f	0	f	f	f	f	f		f
4	Desaparecido		2	f	f	0	f	f	f	f	t		f
5	Danificado		2	f	f	0	f	f	f	f	t		f
16	Entre bibliotecas		2	f	f	0	f	f	f	f	f		t
1	Disponível		1	t	t	0	t	t	t	f	f		f
2	Emprestado		2	t	t	0	t	t	t	f	f		f
3	Reservado		2	t	t	0	t	f	t	t	f		f
6	Restaurando		2	t	f	0	t	f	t	f	f		f
7	Congelado		2	f	t	0	f	f	f	f	f		f
15	Em Processamento		2	t	f	0	t	t	t	f	f		f
8	Descartado		2	f	f	0	f	f	f	f	t		f
\.


--
-- Data for Name: gtcexemplarystatushistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcexemplarystatushistory (itemnumber, exemplarystatusid, libraryunitid, date, operator) FROM stdin;
\.


--
-- Data for Name: gtcfavorite; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcfavorite (personid, controlnumber, entracedate) FROM stdin;
\.


--
-- Data for Name: gtcfine; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcfine (fineid, loanid, begindate, value, finestatusid, enddate, observation) FROM stdin;
\.


--
-- Data for Name: gtcfinestatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcfinestatus (finestatusid, description) FROM stdin;
1	Em aberto
2	Paga
3	Paga via boleto
4	Abonada
\.


--
-- Data for Name: gtcfinestatushistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcfinestatushistory (fineid, finestatusid, date, operator, observation) FROM stdin;
\.


--
-- Data for Name: gtcformatbackofbook; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcformatbackofbook (formatbackofbookid, description, format, internalformat) FROM stdin;
1	Livro	$090.a\n$090.b\n$949.v $949.t\n$250.a	Obra: $950.a\nControle: $CONTROL_NUMBER\nExemplar: $949.a\n$100.a\n$245.a
2	Periódico	$245.a<ifExists $245.b>: $245.b</ifExists>\n$090.a $090.b\n$362.a\nBiblioteca Univates <gettagdescription $001.a | 949.b>_DESCRIPTION_</gettagdescription>	$245.a: $245.b\n$090.a $090.b\n$362.a\nBiblioteca Univates $949.b
\.


--
-- Data for Name: gtcformcontent; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcformcontent (formcontentid, operator, form, name, description, formcontenttype) FROM stdin;
4	\N	frmsimplesearch	materialMovement	\N	1
1	\N	frmsimplesearch	Simples	\N	1
2	\N	frmsimplesearch	Avançada	\N	1
3	\N	frmsimplesearch	Aquisição	\N	1
5	\N	frmsimplesearch	Periódicos	\N	1
\.


--
-- Data for Name: gtcformcontentdetail; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcformcontentdetail (formcontentid, field, value) FROM stdin;
1	termType[]	 
1	termCondition[]	LIKE
1	termType	array (   0 => ' ', )
1	termText	array (   0 => '', )
1	termCondition	array (   0 => 'LIKE', )
1	termOpt	array (   0 => '', )
1	searchFormat	1
2	termType[]	100.a,700.a
2	termType	array (\n  0 => '100.a,700.a',\n  1 => '240.a,245.a,245.b,246.a,246.b',\n  2 => '260.c',\n)
2	termText	array (\n   0 => '',\n   1 => '',\n   2 => '',\n)
2	termOpt	array (\n   0 => '',\n   1 => 'AND',\n   2 => 'AND',\n )
3	termType[]	 
3	termCondition[]	LIKE
3	termType	array (   0 => ' ', )
3	termText	array (   0 => '', )
3	termCondition	array (   0 => 'LIKE', )
3	termOpt	array (   0 => '', )
3	aquisitionFrom	2010-02-04
3	aquisitionTo	2010-02-19
4	termType[]	949.a
4	termCondition[] 	=
4	termType	array ( 0 => '949.a', )
4	termText	array ( 0 => '', )
4	termCondition	array ( 0 => '=', )
4	termOpt	array ( 0 => '', )
4	searchFormat	1
5	materialTypeId	23
5	letter	 
5	letterField	245.a
5	searchFormat	1
5	termCondition	array (   0 => 'LIKE', )
5	termCondition[]	LIKE
5	termOpt	array (   0 => '', )
5	termText	array (   0 => '%', )
5	termText[]	%
5	termType	array (   0 => '', )
3	searchFormat	1
\.


--
-- Data for Name: gtcformcontenttype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcformcontenttype (formcontenttypeid, description) FROM stdin;
1	Administrador
2	Operador
3	Usuário
\.


--
-- Data for Name: gtcgeneralpolicy; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcgeneralpolicy (privilegegroupid, linkid, loangenerallimit, reservegenerallimit, reservegenerallimitininitiallevel) FROM stdin;
\.


--
-- Data for Name: gtchelp; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtchelp (helpid, form, subform, help, isactive) FROM stdin;
1	FrmLibraryUnit	\N	Ajuda da Unidade de Biblioteca.	t
2	FrmSimpleSearch	2	<B><CENTER>Através desta busca é possível pesquisar em vários campos ao mesmo tempo.</B></CENTER><br /><img WIDTH="13" HEIGHT="13" SRC="file.php?folder=theme&file=add-16x16.png" align="top" /> Ao clicar neste botão, acrescenta novo termo.<br /><img WIDTH="13" HEIGHT="13" SRC="file.php?folder=theme&file=delete-16x16.png" align="top" /> Ao clicar neste botão, exclui um termo.	t
3	FrmSimpleSearch	5	<B><CENTER>Pesquisa de periódicos com títulos iniciados pela letra marcada.</B></CENTER><br />É necessário preencher o campo termo com um texto a ser buscado ou deixar o símbolo porcentagem (busca tudo) e clicar numa das letras.<br /><br />Esta pesquisa só busca periódicos, mas este filtro por letras pode ser utilizado em outros materiais. Neste caso, deve-se adicioná-lo pelos filtros avançados.	t
4	FrmSimpleSearch	1	<center><b>Através deste módulo, os usuários podem pesquisar os materiais catalogados pela biblioteca, além de reservarem os exemplares que necessitem.</b></center><br /><img WIDTH="120" HEIGHT="30" SRC="file.php?folder=theme&file=ConteudoFormulario.png" align="top" /> Pelo conteúdo do formulário é possível criar pesquisas personalizadas.<br /><br /><br /><img WIDTH="15" HEIGHT="15" SRC="file.php?folder=theme&file=add-16x16.png" align="top" /> Para restringir uma busca, pode-se adicionar quantos termos achar necessário, clicando neste botão.<br /><br /><img WIDTH="150" HEIGHT="30" SRC="file.php?folder=theme&file=FiltrosAvancados.png" align="top" /> Outra maneira de restringir a busca é através dos filtros avançados: <ul><li><b>Estado do exemplar:</b> retorna na busca só os materiais que estão no estado especificado.<br /><li><b>Limite de ocorrências:</b> número máximo de materiais listados na pesquisa.<br /><li><b>Ano de edição:</b> pode-se pesquisar a partir de um ano ou em determinado período.<br /><li><b>Período de aquisição:</b> pode-se pesquisar a partir de um determinado período de aquisição.<br /><li><b>Pesquisa por letras:</b> lista os materiais em que o título inicie pela letra selecionada. Para gerar algum resultado, deve-se digitar um texto a ser pesquisado.<br /><li><b>Ordem:</b> é possível ordenar a pesquisa por um determinado campo.<br /></ul><br /><img WIDTH="15" HEIGHT="15" SRC="file.php?folder=theme&file=config-16x16.png" align="top" /> Para mais informações sobre o material, é só clicar neste botão.<br /><br /><img WIDTH="15" HEIGHT="15" SRC="file.php?folder=theme&file=catalogue-16x16.png" align="top" /> Lista todos os exemplares do material, informando quantas reservas possui e data prevista de devolução, quando está emprestado.<br /><br /><img WIDTH="15" HEIGHT="15" SRC="file.php?folder=theme&file=reserve-16x16.png" align="top" /> Serve para reservar o material. Desde que se tenha permissão, pode-se reservar tanto exemplares emprestados, quanto disponíveis; sendo que para estes, é enviado um aviso ao operador do sistema para separar o material e alterar o estado da reserva para Atendida. Feito isto, o usuário que fez a requisição, terá dois dias para retirar a obra.<br /><br /><img WIDTH="15" HEIGHT="15" SRC="file.php?folder=theme&file=login-16x16.png" align="top" /> Quando a coluna Exemplares está em branco é porque o material pertence a uma coleção. Desta forma, para reservar o fascículo, deve-se clicar no link Detalhes deste botão.<br /><br /><img WIDTH="15" HEIGHT="15" SRC="file.php?folder=theme&file=congelado-16x16.png" align="top" /> Botão utilizado para solicitar o congelamento de materiais. Somente usuários com permissão, podem acessá-lo.<br /><br /><img WIDTH="15" HEIGHT="15" SRC="file.php?folder=theme&file=favorites-16x16.png" align="top" /> Ao selecionar um material e clicar neste botão, ele é adicionado aos Favoritos em Minha Biblioteca.<br /><br /><img WIDTH="15" HEIGHT="15" SRC="file.php?folder=theme&file=document-16x16.png" align="top" /> Salva os materiais selecionados num arquivo PDF.<br /><br /><img WIDTH="15" HEIGHT="15" SRC="file.php?folder=theme&file=email-16x16.png" align="top" /> Envia por e-mail um arquivo PDF com os materiais selecionados.	t
\.


--
-- Data for Name: gtcholiday; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcholiday (holidayid, date, description, occursallyear, libraryunitid) FROM stdin;
1	2008-12-25	Natal	t	\N
2	2008-05-01	Dia do Trabalho	t	\N
3	2008-01-01	1º Janeiro	t	\N
\.


--
-- Data for Name: gtcinterchange; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcinterchange (interchangeid, type, supplierid, description, date, interchangestatusid, interchangetypeid, operator) FROM stdin;
\.


--
-- Data for Name: gtcinterchangeitem; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcinterchangeitem (interchangeitemid, interchangeid, controlnumber, content) FROM stdin;
\.


--
-- Data for Name: gtcinterchangeobservation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcinterchangeobservation (interchangeobservationid, interchangeid, observation, date, operator) FROM stdin;
\.


--
-- Data for Name: gtcinterchangestatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcinterchangestatus (interchangestatusid, description, interchangetypeid) FROM stdin;
1	Criada	1
2	Carta enviada	1
3	Confirmado	1
4	Criada	2
5	Agradecido	2
\.


--
-- Data for Name: gtcinterchangetype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcinterchangetype (interchangetypeid, description) FROM stdin;
1	Envio
2	Recebimento
\.


--
-- Data for Name: gtcinterestsarea; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcinterestsarea (personid, classificationareaid, bud_dia2sql_ignorar) FROM stdin;
\.


--
-- Data for Name: gtckardexcontrol; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtckardexcontrol (controlnumber, codigodeassinante, libraryunitid, acquisitiontype, vencimentodaassinatura, datadaassinatura, entrancedate, line) FROM stdin;
\.


--
-- Data for Name: gtclabellayout; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclabellayout (labellayoutid, description, topmargin, leftmargin, verticalspacing, horizontalspacing, height, width, lines, columns, pageformat) FROM stdin;
2	PIMACO 5580A/5580M/5580V	1.27	0.47999999999999998	2.54	6.9800000000000004	2.54	6.6699999999999999	10	3	Letter
3	PIMACO 6080/6180/ 6280/62580	1.27	0.47999999999999998	2.54	6.9800000000000004	2.54	6.6699999999999999	10	3	Letter
4	PIMACO 6081/6181/6281/62581	1.27	0.40000000000000002	2.54	10.68	2.54	10.16	10	2	Letter
5	PIMACO 6082/6182/6282/62582	2.1200000000000001	0.40000000000000002	3.3900000000000001	10.68	3.3900000000000001	10.16	7	2	Letter
6	PIMACO 6083/6183/6283	1.27	0.40000000000000002	5.0800000000000001	10.68	5.0800000000000001	10.16	5	2	Letter
7	PIMACO 6084/6184/6284	1.27	0.40000000000000002	8.4700000000000006	10.68	8.4700000000000006	10.16	3	2	Letter
8	PIMACO 6085/6185/6285	0	0	27.940000000000001	21.59	27.940000000000001	21.59	1	1	Letter
9	PIMACO 6086/6286	0.16	0.16	13.81	21.27	13.81	21.27	2	1	Letter
10	PIMACO 6087/6187/6287	1.27	1.45	1.27	4.75	1.27	4.4400000000000004	20	4	Letter
11	PIMACO 6088/6288	0.16	0.16	13.81	10.640000000000001	13.81	10.640000000000001	2	2	Letter
12	PIMACO 6089	1.27	1.45	1.6899999999999999	4.75	1.6899999999999999	4.4400000000000004	15	4	Letter
13	PIMACO 6092	1.6899999999999999	1.3	2.8900000000000001	2.9100000000000001	1.7	1.7	9	7	Letter
14	PIMACO 6093/6293	1.51	1.45	4.4100000000000001	5.2000000000000002	2.7400000000000002	3.1000000000000001	6	4	Letter
15	PIMACO 6094	1.6699999999999999	1.8999999999999999	6.5999999999999996	6.75	4.8499999999999996	4.3499999999999996	4	3	Letter
16	PIMACO 6095	2.1200000000000001	1.7	5.9299999999999997	9.6300000000000008	5.9299999999999997	8.5700000000000003	4	2	Letter
17	PIMACO 7088/7188	1.27	1.8999999999999999	5.0800000000000001	8.8900000000000006	5.0800000000000001	8.8900000000000006	5	2	Letter
18	PIMACO 8096/8196/8296	1.27	0.32000000000000001	7.6200000000000001	6.9800000000000004	6.9800000000000004	6.9800000000000004	3	3	Letter
19	PIMACO 8098	1.27	1.27	4.2300000000000004	10.16	4.2300000000000004	8.8900000000000006	6	2	Letter
20	PIMACO 8099F	2.3300000000000001	2.7200000000000002	4.6600000000000001	8.3800000000000008	4.6600000000000001	7.7800000000000002	5	2	Letter
21	PIMACO 8099L	1.27	3.4100000000000001	1.6899999999999999	14.76	1.6899999999999999	14.76	15	1	Letter
22	PIMACO A4248/A4348	1.25	0.69999999999999996	1.7	3.2999999999999998	1.7	3.1000000000000001	16	6	A4
23	PIMACO A4249/A4349	1.3500000000000001	0.80000000000000004	1.5	2.7999999999999998	1.5	2.6000000000000001	18	7	A4
24	PIMACO A4250/A4350	0.90000000000000002	0.46999999999999997	5.5800000000000001	10.16	5.5800000000000001	9.9000000000000004	5	2	A4
25	PIMACO A4251/A4351	1.0700000000000001	0.45000000000000001	2.1200000000000001	4.0700000000000003	2.1200000000000001	3.8199999999999998	13	5	A4
26	PIMACO A4254/A4354	0.88	0.46999999999999997	2.54	10.16	2.54	9.9000000000000004	11	2	A4
27	PIMACO A4255/A4355	0.90000000000000002	0.71999999999999997	3.1000000000000001	6.6100000000000003	3.1000000000000001	6.3499999999999996	9	3	A4
28	PIMACO A4256/A4356	0.88	0.71999999999999997	2.54	6.6100000000000003	2.54	6.3499999999999996	11	3	A4
29	PIMACO A4260/A4360	1.52	0.71999999999999997	3.8100000000000001	6.6100000000000003	3.8100000000000001	6.3499999999999996	7	3	A4
30	PIMACO A4261/A4361	0.91000000000000003	0.71999999999999997	4.6500000000000004	6.6100000000000003	4.6500000000000004	6.3499999999999996	6	3	A4
31	PIMACO A4262/A4362	1.29	0.46999999999999997	3.3900000000000001	10.16	3.3900000000000001	9.9000000000000004	8	2	A4
32	PIMACO A4263/A4363	1.52	0.46999999999999997	3.8100000000000001	10.16	3.8100000000000001	9.9000000000000004	7	2	A4
33	PIMACO A4264/A4364	0.46999999999999997	0.71999999999999997	7.1900000000000004	6.6100000000000003	7.1900000000000004	6.3499999999999996	4	3	A4
34	PIMACO A4265/A4365	1.3	0.46999999999999997	6.7800000000000002	10.16	6.7800000000000002	9.9000000000000004	4	2	A4
35	PIMACO A4267/A4367	0.42999999999999999	0.5	28.850000000000001	20	28.850000000000001	20	1	1	A4
36	PIMACO A4268/A4368	0.51000000000000001	0.51000000000000001	14.34	19.989999999999998	14.34	19.989999999999998	2	1	A4
37	PIMACO A4291F	0.93000000000000005	2.75	4.6399999999999997	7.8700000000000001	4.6399999999999997	7.6200000000000001	6	2	A4
38	PIMACO A4291L	1.25	3.25	1.7	14.5	1.7	14.5	16	1	A4
39	PIMACO A4292	1.8500000000000001	2.3300000000000001	5.2000000000000002	9.3300000000000001	5.2000000000000002	7	5	2	A4
40	PIMACO A4293	2.3599999999999999	2.1200000000000001	4.4000000000000004	4.5999999999999996	2.9700000000000002	2.9700000000000002	6	4	A4
76	PIMACO *A5Q-1219	0.85999999999999999	1.1499999999999999	1.2	1.8999999999999999	1.2	2.1000000000000001	11	9	A5
77	PIMACO *A5Q-1226	0.85999999999999999	0.80000000000000004	1.2	2.6000000000000001	1.2	2.7999999999999998	11	7	A5
78	PIMACO *A5Q-1250	1.22	2.7999999999999998	1.2	5	1.3999999999999999	5.2000000000000002	9	3	A5
79	PIMACO *A5Q-1534	1.46	1.2	1.5	3.3999999999999999	1.5	3.7999999999999998	8	5	A5
80	PIMACO *A5Q-1723	0.62	0.59999999999999998	1.7	2.2999999999999998	2	2.5	7	8	A5
81	PIMACO *A5Q-1837	1.1599999999999999	0.84999999999999998	1.8	3.7000000000000002	1.8	3.8999999999999999	7	5	A5
82	PIMACO *A5Q-2050	0.85999999999999999	1.75	2.2000000000000002	5.5	2.2000000000000002	6	6	3	A5
83	PIMACO *A5Q-2232	0.85999999999999999	1.5	2.2000000000000002	3.2000000000000002	2.2000000000000002	3.7000000000000002	6	5	A5
84	PIMACO *A5Q-2337	1.71	0.84999999999999998	2.2999999999999998	3.7000000000000002	2.2999999999999998	3.8999999999999999	5	5	A5
85	PIMACO *A5Q-2372	0.85999999999999999	1	2.2000000000000002	9	2.2000000000000002	10	6	2	A5
86	PIMACO *A5Q-3272	1.0600000000000001	1	3.2000000000000002	9	3.2000000000000002	10	4	2	A5
87	PIMACO *A5Q-3348	0.85999999999999999	0.59999999999999998	3.2999999999999998	4.7999999999999998	3.2999999999999998	5	4	4	A5
88	PIMACO A5Q-3465	2	0.81999999999999995	3.3999999999999999	6.5	3.3999999999999999	6.7000000000000002	5	2	A5
89	PIMACO A5Q-35105	1.1499999999999999	2.21	3.5	10.5	3.7999999999999998	10.5	5	1	A5
90	PIMACO A5Q-50100	2.5	2.46	5	10	5.5	10	3	1	A5
91	PIMACO A5Q-66115	0.59999999999999998	1.72	6.5999999999999996	11.5	6.5999999999999996	11.5	3	1	A5
92	PIMACO A5Q-813	0.56000000000000005	0.84999999999999998	0.80000000000000004	1.3	1	1.5	14	13	A5
93	PIMACO A5Q-916	1.1599999999999999	1.6000000000000001	0.90000000000000002	1.6000000000000001	0.90000000000000002	1.8	14	10	A5
94	PIMACO A5Q-932	1.1599999999999999	1.5	0.90000000000000002	3.2000000000000002	0.90000000000000002	3.7000000000000002	14	5	A5
95	PIMACO A5Q-97138	0.55000000000000004	0.56000000000000005	9.8000000000000007	13.800000000000001	10	13.800000000000001	2	1	A5
96	PIMACO A5R-1313	0.81000000000000005	0.84999999999999998	1.3	1.3	1.5	1.5	9	13	A5
97	PIMACO A5R1919	0.75	0.51000000000000001	1.8999999999999999	1.8999999999999999	2.2000000000000002	2	9	7	A5
98	PIMACO A5R-909	0.68000000000000005	0.68999999999999995	0.90000000000000002	0.90000000000000002	1.25	1.1499999999999999	16	12	A5
41	PIMACO 8136	0	0.94999999999999996	3.8100000000000001	0	3.6499999999999999	8.0999999999999996	8	1	A4
42	PIMACO 8923	0	1.1000000000000001	2.54	0	2.3799999999999999	8.8900000000000006	12	1	A4
43	PIMACO 8923 MC	0	1.1000000000000001	2.54	0	2.3799999999999999	8.8900000000000006	12	1	A4
44	PIMACO 8936	0	1.1000000000000001	3.8100000000000001	0	3.6499999999999999	8.8900000000000006	8	1	A4
45	PIMACO 10236 MC	0	0.90000000000000002	3.8100000000000001	0	3.6499999999999999	10.199999999999999	8	1	A4
46	PIMACO 10723	0	0.90000000000000002	2.54	0	2.3799999999999999	10.66	12	1	A4
47	PIMACO 10736	0	0.90000000000000002	3.8100000000000001	0	3.6499999999999999	10.66	8	1	A4
48	PIMACO 10748	0	0.90000000000000002	5.0800000000000001	0	4.9199999999999999	10.66	6	1	A4
49	PIMACO 12536	0	0.90000000000000002	3.8100000000000001	0	3.6499999999999999	12.5	8	1	A4
50	PIMACO 12548	0	0.90000000000000002	5.0800000000000001	0	4.9199999999999999	12.5	6	1	A4
51	PIMACO 12874	0	1.2	7.6200000000000001	0	7.46	12.800000000000001	4	1	A4
52	PIMACO 14948	0	0.90000000000000002	5.0800000000000001	0	4.9199999999999999	14.800000000000001	6	1	A4
53	PIMACO 7023	0	1.1000000000000001	2.54	7.3600000000000003	2.3799999999999999	7	12	2	A4
54	PIMACO 8923	0	1	2.54	9.1400000000000006	2.3799999999999999	8.8900000000000006	12	2	A4
55	PIMACO 8936	0	1	3.8100000000000001	9.1400000000000006	3.6499999999999999	8.8900000000000006	8	2	A4
56	PIMACO 10223 MC	0	0.90000000000000002	2.54	10.41	2.3799999999999999	10.16	6	2	A4
57	PIMACO 10723	0	1	2.54	10.92	2.3799999999999999	10.66	12	2	A4
58	PIMACO 10736	0	1	3.8100000000000001	10.92	3.6499999999999999	10.66	8	2	A4
59	PIMACO 10748	0	1	5.0800000000000001	10.92	4.9199999999999999	10.66	6	2	A4
60	PIMACO 12536	0	1.3	3.8100000000000001	12.699999999999999	3.6499999999999999	12.44	8	2	A4
61	PIMACO 8923	0	1	2.54	9.1400000000000006	2.3799999999999999	8.8900000000000006	12	3	A4
62	PIMACO 8936	0	1	3.8100000000000001	9.1400000000000006	3.6499999999999999	8.8900000000000006	8	3	A4
63	PIMACO 10236	0	1.1499999999999999	3.8100000000000001	10.41	3.6499999999999999	10.16	8	3	A4
64	PIMACO 10723	0	1	2.54	10.92	2.3799999999999999	10.66	12	3	A4
65	PIMACO 10736	0	1	3.8100000000000001	10.92	3.6499999999999999	10.66	8	3	A4
66	PIMACO 10748	0	1	5.0800000000000001	10.92	4.9199999999999999	10.66	6	3	A4
67	PIMACO 10774	0	1	7.6200000000000001	10.92	7.46	10.66	4	3	A4
68	PIMACO 5115	0	0.90000000000000002	1.6899999999999999	5.3300000000000001	1.53	5.0800000000000001	18	4	A4
69	PIMACO 8123	0	1.0600000000000001	2.54	8.3800000000000008	2.3799999999999999	8.1199999999999992	12	4	A4
70	PIMACO 8136	0	1.0600000000000001	3.8100000000000001	8.3800000000000008	3.6499999999999999	8.1199999999999992	8	4	A4
71	PIMACO 8148	0	1.0600000000000001	5.0800000000000001	8.3800000000000008	4.9199999999999999	8.1199999999999992	6	4	A4
72	PIMACO 2615	0	0.90000000000000002	1.6899999999999999	3.04	1.53	2.6699999999999999	18	5	A4
73	PIMACO 3823	0	1.0600000000000001	2.54	4.0599999999999996	2.3799999999999999	3.8100000000000001	12	5	A4
74	PIMACO 3810	0	1.1000000000000001	1.27	4.0599999999999996	1.1100000000000001	3.8100000000000001	24	8	A4
75	PIMACO 3117	0	0.90000000000000002	1.8999999999999999	3.2999999999999998	1.74	3.04	16	10	A4
\.


--
-- Data for Name: gtclibperson; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclibperson (personid, baseldap, sex, profession, workplace, school, datebirth, persongroup, operationprocess) FROM stdin;
\.


--
-- Data for Name: gtclibraryassociation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclibraryassociation (associationid, libraryunitid) FROM stdin;
\.


--
-- Data for Name: gtclibrarygroup; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclibrarygroup (librarygroupid, description, observation) FROM stdin;
\.


--
-- Data for Name: gtclibraryunit; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclibraryunit (libraryunitid, libraryname, isrestricted, city, zipcode, location, number, complement, email, url, librarygroupid, privilegegroupid, observation, level, acceptpurchaserequest) FROM stdin;
1	Unidade padrão	f	\N	\N	\N	\N	\N	\N	\N	\N	1	\N	1	f
\.


--
-- Data for Name: gtclibraryunitaccess; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclibraryunitaccess (libraryunitid, linkid) FROM stdin;
\.


--
-- Data for Name: gtclibraryunitconfig; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclibraryunitconfig (libraryunitid, parameter, value) FROM stdin;
\.


--
-- Data for Name: gtclibraryunitisclosed; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclibraryunitisclosed (libraryunitid, weekdayid) FROM stdin;
\.


--
-- Data for Name: gtclinkoffieldsbetweenspreadsheets; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclinkoffieldsbetweenspreadsheets (linkoffieldsbetweenspreadsheetsid, category, level, tag, categoryson, levelson, tagson, type) FROM stdin;
1	SE	#	001.a	SE	4	773.w	1
2	BK	4	001.a	BA	4	773.w	1
3	SE	4	001.a	SA	4	773.w	1
4	SE	#	090.a	SE	4	090.a	2
5	SE	#	090.b	SE	4	090.b	2
6	SE	#	245.a	SE	4	245.a	2
7	SE	#	245.b	SE	4	245.b	2
8	SE	#	245.c	SE	4	245.c	2
9	SE	#	245.h	SE	4	245.h	2
10	SE	#	246.a	SE	4	246.a	2
11	SE	#	246.b	SE	4	246.b	2
12	SE	4	090.a	SA	4	090.a	2
13	SE	4	090.b	SA	4	090.b	2
14	SE	4	245.a	SA	4	773.t	2
15	SE	4	246.a	SA	4	246.a	2
16	SE	4	246.b	SA	4	246.b	2
17	SE	4	362.a	SA	4	362.a	2
\.


--
-- Data for Name: gtcloan; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcloan (loanid, loantypeid, personid, linkid, privilegegroupid, itemnumber, libraryunitid, loandate, loanoperator, returnforecastdate, returndate, returnoperator, renewalamount, renewalwebamount, renewalwebbonus) FROM stdin;
\.


--
-- Data for Name: gtcloanbetweenlibrary; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcloanbetweenlibrary (loanbetweenlibraryid, loandate, returnforecastdate, returndate, limitdate, libraryunitid, personid, loanbetweenlibrarystatusid, observation) FROM stdin;
\.


--
-- Data for Name: gtcloanbetweenlibrarycomposition; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcloanbetweenlibrarycomposition (loanbetweenlibraryid, itemnumber, isconfirmed) FROM stdin;
\.


--
-- Data for Name: gtcloanbetweenlibrarystatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcloanbetweenlibrarystatus (loanbetweenlibrarystatusid, description) FROM stdin;
1	Solicitado
2	Cancelado
3	Aprovado
4	Reprovado
5	Confirmado
6	Devolução
7	Finalizado
\.


--
-- Data for Name: gtcloanbetweenlibrarystatushistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcloanbetweenlibrarystatushistory (loanbetweenlibraryid, loanbetweenlibrarystatusid, date, operator) FROM stdin;
\.


--
-- Data for Name: gtcloantype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcloantype (loantypeid, description) FROM stdin;
1	Padrão
2	Forçado
3	Momentâneo
\.


--
-- Data for Name: gtclocationformaterialmovement; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtclocationformaterialmovement (locationformaterialmovementid, description, observation, sendloanreceiptbyemail, sendrenewreceiptbyemail, sendreturnreceiptbyemail) FROM stdin;
0	Todos lugares	Lugar comum para vários lugares	t	t	t
1	Local	Quando houver circulação de material no local	t	t	t
\.


--
-- Data for Name: gtcmarctaglisting; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmarctaglisting (marctaglistingid, description) FROM stdin;
000-05	Leader:Status
000-06	Leader:Tipo
000-07	Leader:Nivel Bibliografico
000-08	Leader:Tipo de controle
000-17	Leader:Nivel de catalagoção
000-18	Leader:Forma de catalogação
000-19	Leader:Ligação de registro
008-06-BK	Book:Tipo de Data/Status de Publicação
008-06-CF	Computer File:Tipo de data/status de publicação
008-06-MP	Mapas:Tipo de data / status de publicação
008-06-MX	Material Misto:Tipo de data / status de publicação
008-06-SE	Periódicos:Tipo de data/Status de publicação
008-06-VM	Material Visual:Tipo de data / status de publicação
008-18-BK	Book:Ilustrações
008-18-MP	Mapas:Relevo
008-18-MU	Música:Forma de composição
008-18-SE	Periódicos:Freqüência
008-19-SE	Periódicos:Regularidade
008-20-MU	Música:Formato da música
008-20-SE	Periódicos:Centro que atribui o ISSN
008-21-SE	Periódicos:Tipo de periódico
008-22-BK	Book:Público alvo
008-22-CF	Computer File:Público alvo
008-22-MP	Mapas:Projeção
008-22-MU	Música:Público alvo
008-22-SE	Periódicos:Forma do item original
008-22-VM	Material Visual:Público alvo
008-23-BK	Book:Forma do item
008-23-MU	Música:Forma do item
008-23-MX	Material Misto:Forma do item
008-23-SE	Periódicos:Forma do item
008-24-BK	Book:Natureza do conteúdo
901.d	Nacional
008-24-MU	Música:Matéria completamentar
008-24-SE	Natureza da obra
008-24-SK	Periódicos:Natureza da obra
008-25-MP	Mapas:Tipo de material cartográfico
008-25-SE	Periódicos:Natureza do conteúdo
008-26-CF	Computer File:Tipo de arquivo de computador
008-28-BK	Book:Publicação governamental
008-28-CF	Computer File:Publicação governamental
008-28-MP	Mapas:Publicação governamental
008-28-SE	Periódicos:Publicação governamental
008-28-VM	Material Visual:Publicação governamental
008-29-BK	Book:Publicação de evento
008-29-SE	Periódicos:Publicação de evento
008-30-BK	Book:Coletânea de homenagem
008-30-MU	Música:Texto literário para gravação sonora
008-31-BK	Book:Índice
008-33-BK	Forma literária
008-33-MP	Mapas:Caracteristica especiais do formato
008-33-SE	Periódicos:Alfabeto original ou escrita do título
008-33-VM	Material Visual:Tipo de material visual
008-34-BK	Book:Biografia
008-34-SE	Periódicos:Entrada sucessiva/mais recente
008-34-VM	Material Visual:Técnica
008-38-BK	Book:Registro modificado
008-38-CF	Computer File:Registro modificado
008-38-MP	Mapas:Registro modificado
008-38-MU	Música:Registro modificado
008-38-MX	Material Misto:Registro modificado
008-38-SE	Periódicos:Registro modificado
008-38-VM	Material Visual:Registro modificado
008-39-BK	Book:Fonte da catalogação
008-39-CF	Computer File:Fontes da catalogação
008-39-MP	Mapas:Fonte da catalogação
008-39-MU	Música:Fonte da catalogação
008-39-MX	Material Misto:Fonte da catalogação
008-39-SE	Periódicos:Fonte da catalogação
008-39-VM	Material Visual:Fonte da catalogação
022-I1	Nível de interesse internacional
041-I1	Indicação de tradução
100-I1	Tipo de entrada do nome pessoal
110-I1	Tipo do nome corporativo
111-I1	Tipo do nome do evento
210-I1	Entrada secundária de título
210-I2	Tipo de título abreviado
245-I1	Entrada Secundária de Título
245-I2	Caracteres a desprezar na alfabetação
362-I1	Formato da data
440-I2	Caracteres a desprezar na alfabetação
505-I1	Controle de constante para visualização
505-I2	Nível da Informação de conteúdo
555-I1	Controle de constante para visualização
650-I1	Nível do Assunto
650-I2	Sistema de cabeçalho de assunto/thesaurus
653-I1	Nível do termo do índice
700-I1	Tipo de entrada do nome pessoal
700-I2	Tipo de entrada secundária
710-I1	Tipo de entrada do nome corporativo
710-I2	Tipo de entrada secundária
711-I1	Tipo de entrada secundária
711-I2	Tipo de entrada secundária
720-I1	Tipo do nome
780-I1	Controle de nota
780-I2	Tipo de relação
785-I1	Controle de nota
785-I2	Tipo de relação
949.c	Lista de Tipos de Aquisição
CATEGORY	Categoria dos materiais
LEVEL	Nível
008-31-MP	Mapa:Índice 
008-06-MU	Música:Tipo de data / status de publicação
008-15	Lugar de Publicação
008-35	Idioma
949.5	Material que acompanha
960.c	Lista de Tipos de Aquisição
901.b	Área de conhecimento
901.e	Administração de Empresas
310.a	Anual
041.a	Catalão
960.j	Corrente
6565	dsd
773-I1	Controle de nota
773-I2	Controle de display
\.


--
-- Data for Name: gtcmarctaglistingoption; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmarctaglistingoption (marctaglistingid, option, description) FROM stdin;
008-35	kaw	Kawi
000-05	a	Aumento no nível de catalogação
000-05	c	Alterado ou revisado
000-05	d	Deletado
000-05	n	Novo
000-05	p	Aumento do Nível de catalogação da pré-publicação
000-06	a	Material Textual (impresso)
000-06	c	Música (impressa)
000-06	d	Música manuscrita
000-06	e	Material cartográfico (impresso)
000-06	f	Material cartográfico (manuscrito)
000-06	g	Material projetável
000-06	i	Gravação sonora (não musical)
000-06	j	Gravação sonora (musical)
000-06	k	Gráfico não projetável bidimensional
000-06	m	Arquivo de computador
008-18-MU	ch	Corais
000-06	o	Kit (contém duas ou mais categorias de material)
000-06	p	Material misto
000-06	r	Artefatos tridimensionais e objetos
000-06	t	Material textual (manuscrito)
000-07	a	Analítica de monografia
000-07	b	Analítica de periódico
000-07	c	Coleção
000-07	d	Sub-unidade
000-07	m	Monografia
000-07	s	Periódico
000-08	#	Nenhum tipo específico
000-08	a	Arquivamento
000-17	#	Completo
000-17	1	Completo (material não examinado)
000-17	2	Incompleto, material não examinado
000-17	3	Abreviado
000-17	4	Nível padrão
000-17	5	Parcial (preliminar)
000-17	7	Mínimo
000-17	8	Pré-publicação
000-17	u	Desconhecido
000-17	z	Não aplicável
000-18	#	Não está de acordo com ISBD
000-18	a	AACR2
000-18	i	ISBD
000-19	#	Não analítica
000-19	r	Analítica
008-06-BK	b	Não há datas; envolve data A.C.
008-06-BK	c	Data atual e de copyright (obsoleto)
008-06-BK	d	Data detalhada (obsoleto)
008-06-BK	i	Datas limite de uma coleção
008-06-BK	m	Múltiplas datas
008-06-BK	n	Data desconhecida
008-06-BK	q	Data incompleta
008-06-BK	r	Data de reimpressão/reedição e data original
008-06-BK	s	Data única/provável
008-06-CF	b	Não há datas; envolve data A.C.
008-06-CF	c	Data atual e de copyright (OBSOLETO)
008-06-CF	d	Data detalhada (OBSOLETO)
008-06-CF	i	Datas limite de uma coleção
008-06-CF	m	Múltiplas datas
008-06-CF	n	Data desconhecida
008-06-CF	q	Data incompleta
008-06-CF	r	Data de reimpressão / reedição e data original
008-06-CF	s	Data única / data provável
008-06-CF		
008-06-MP	b	Não há datas; envolve data A.C.
008-06-MP	c	Data atual e de copyright (OBSOLETO)
008-06-MP	d	Data detalhada (OBSOLETO)
008-06-MP	i	Datas limite de uma coleção
008-06-MP	m	Múltipas datas
008-06-MP	n	Data desconhecida
008-06-MP	q	data incompleta
008-06-MP	r	Data de reimpressão / reedição e data original
008-06-MP	s	Data única / data provável
008-06-MP		
008-06-MX	b	Não há  datas;  envolve data A.C.
008-06-MX	c	Data atual e de copyright (OBSOLETO)
008-06-MX	d	Data detalhada (OBSOLETO)
008-06-MX	i	Datas limite de uma coleção
008-06-MX	m	Múltiplas datas
008-06-MX	n	Data desconhecida
008-06-MX	q	Data incompleta
008-06-MX	r	Data de reimpressão / reedição e data original
008-06-MX	s	Data única / data provável
008-06-MX		
008-06-SE	c	Item seriado de publicação corrente
008-06-SE	d	Item seriado de publicação encerrada
008-06-SE	u	Status desconhecido
008-06-VM	b	Não há datas; envolve data A.C.
008-06-VM	c	Data atual e de copyright (OBSOLETO)
008-06-VM	d	Data detalhada (OBSOLETO)
008-06-VM	i	Datas limite de uma coleção
008-06-VM	m	Múltiplas datas
008-06-VM	n	Data desconhecida
008-06-VM	p	Data de distribuição / lançamento / publicação e produção / ou sessão de gravação quando diferente ( CF, MU, VM)
008-06-VM	q	Data incompleta
008-06-VM	r	Data de reimpressão / reedição e data original
008-06-VM	s	Data única / data provável
008-06-VM		
008-18-BK	#	Sem ilustração
008-18-BK	a	Ilustrações
008-18-BK	b	Mapas
008-18-BK	c	Retratos
008-18-BK	d	Gráficos
008-18-BK	e	Plantas
008-18-BK	f	Estampas
008-18-BK	g	Música (partitura)
008-18-BK	h	Fac-símiles
008-18-BK	i	Escudos ou brasões
008-18-BK	j	Árvore genealógica
008-18-BK	k	Formúlarios
008-18-BK	l	Amostras, tabelas estatísticas
008-18-BK	m	Gravações
008-18-BK	o	Fotografias
008-18-BK	p	Transparências
008-18-BK		
008-18-MP	#	Não há relevo
008-18-MP	a	Contorno do relevo
008-18-MP	b	Sombreado
008-18-MP	c	Gradiente e batimetria
008-18-MP	d	Hachuras
008-18-MP	e	Batimetria e sondagens
008-18-MP	f	Linhas de forma
008-18-MP	g	Pontos cotados
008-18-MP	i	Pictório
008-18-MP	j	Formas de relevo
008-18-MP	k	Batimetria / isolinhas
008-18-MP	m	Indicação de afloramentos rochosos
008-18-MP	z	Outros tipos de relevo
008-18-MP		
008-18-MU	an	 Canção patriótica
008-18-MU	bd	Baladas
008-18-MU	bg	Bluegrass
008-18-MU	bl	Blues
008-18-MU	bt	Ballet
008-18-MU	cn	Canon e rounds
008-18-MU	ct	Cantatas
008-18-MU	cz	Canzonas
008-18-MU	cr	Cântico de natal
008-18-MU	ca	Chaconnes
008-18-MU	cs	Chance compositions
008-18-MU	cp	Canções, polifonia
008-18-MU	cc	Canções, cristãs
008-18-MU	cb	Canções, outras religiões
008-18-MU	cl	Chorale preludes
008-18-MU	cg	Concerti grossi
008-18-MU	co	Concertos
008-18-MU	cy	Música country
008-18-MU	df	Dance forms
008-18-MU	dv	Divertimentos, etc.
008-18-MU	ft	Fantasias
008-18-MU	fm	Música gospel
008-18-MU	hy	Hino
008-18-MU	jz	Jazz
008-18-MU	md	Madrigais
008-18-MU	mr	Marchas
008-18-MU	ms	Missas
008-18-MU	mz	Mazurcas
008-18-MU	mi	Minuetos
008-18-MU	mo	Motetos
008-18-MU	mp	Música de filme
008-18-MU	mc	Revistas e comédias musicais
008-18-MU	mu	Múltiplas formas
008-18-MU	nc	Noturnos
008-18-MU	nn	Não aplicável
008-18-MU	op	Óperas
008-18-MU	or	Oratórios
008-18-MU	ov	Aberturas
008-18-MU	pt	Part-songs
008-18-MU	ps	Passacaglias
008-18-MU	pm	Passion music
008-18-MU	pv	Pavanas
008-18-MU	po	Polonaises
008-18-MU	pp	Música popular
008-18-MU	pr	Preludios
008-18-MU	pg	Program music
008-18-MU	rg	Ragtime music
008-18-MU	rq	Requiens
008-18-MU	ri	Ricercars
008-18-MU	rc	Rock
008-18-MU	rd	Rondós
008-18-MU	sn	Sonatas
008-18-MU	sg	Songs
008-18-MU	st	Estudos e exercícios
008-18-MU	su	Suítes
008-18-MU	sp	Poemas sinfônicos
008-18-MU	sy	Sinfonias
008-18-MU	tc	Tocatas
008-18-MU	ts	Trio-sonatas
008-18-MU	uu	Desconhecido
008-18-MU	vr	Variações
008-18-MU	wz	Valsas
008-18-MU	zz	Outro
008-18-MU		
008-18-SE	#	Freqüência não determinada
008-18-SE	a	Anual
008-18-SE	b	Bimestral
008-18-SE	c	Bissemanal
008-18-SE	d	Diário
008-18-SE	e	Quinzenal
008-18-SE	f	Semestral
008-18-SE	g	Bienal
008-18-SE	h	Trienal
008-18-SE	i	Três vezes por semana
008-18-SE	j	Três vezes por mês
008-18-SE	m	Mensal
008-18-SE	q	Trimestral
008-18-SE	s	Duas vezes por mês
008-18-SE	t	Quadrimestral
008-18-SE	u	Desconhecido
008-18-SE	w	Semanal
008-18-SE	z	Outro
008-19-SE	n	Irregular normalizado
008-19-SE	r	Regular
008-19-SE	u	Desconhecido
008-19-SE	x	Completamente irregular
008-20-MU	a	Full score
008-20-MU	b	Full score, miniature or study size
008-20-MU	c	Accompaniment reduced for keyboard
008-20-MU	d	Voice score
008-20-MU	e	Condensed score or piano-conductor score
008-20-MU	g	Close score
008-20-MU	m	Multiple score formats
008-20-MU	n	Não aplicável
008-20-MU	u	Desconhecido
008-20-MU	z	Outro
008-20-MU		
008-20-SE	#	Nenhum código atribuído
008-20-SE	0	Centro internacional (Paris, França)
008-20-SE	1	Estados Unidos
008-20-SE	2	Reino Unido (obsoleto)
008-20-SE	3	Austrália (obsoleto)
008-20-SE	4	Canadá
008-20-SE	5	Centro Regional de Moscou (obsoleto)
008-20-SE	6	República Federativa da Alemanha (obsoleto)
008-20-SE	7	França (obsoleto)
008-20-SE	8	Argentina (obsoleto)
008-20-SE	9	Japão (obsoleto)
008-20-SE	u	Desconhecido
008-20-SE	z	Outro
008-21-SE	#	Outro
008-21-SE	m	Série monográfica
008-21-SE	n	Jornal
008-21-SE	p	Revista/Publicação periódica
008-22-BK	#	Desconhecido ou não especificado
008-22-BK	a	Pré-escolar
008-22-BK	b	Primário
008-22-BK	c	1º Grau
008-22-BK	d	2º Grau
008-22-BK	e	Adulto
008-22-BK	f	Especializado
008-22-BK	g	Geral
008-22-BK	j	Juvenil
008-22-BK		
008-22-CF	#	Desconhecido ou não especificado
008-22-CF	a	Pré-escolar
008-22-CF	b	Primário
008-22-CF	c	1º Grau
008-22-CF	d	2º Grau
008-22-CF	e	Adulto
008-22-CF	f	Especializado
008-22-CF	g	Geral
008-22-CF	j	Juvenil
008-22-CF		
008-22-MP	##	Projeção não especificada
008-22-MP	aa	Aitoff
008-22-MP	ab	Gnomic
008-22-MP	ac	Lambert´s azimuthal equal area
008-22-MP	ad	Orthographic
008-22-MP	ae	Azimuthal equidistant
008-22-MP	af	Stereographic
008-22-MP	ag	General vertical near-sided
008-22-MP	am	Modified stereographic for Alaska
008-22-MP	an	Chamberlin trimetric
008-22-MP	ap	Polar stereographic
008-22-MP	au	Azimuthal, tipo específico desconhecido
008-22-MP	az	Azimuthal, Outro
008-22-MP	ba	Gall
008-22-MP	bb	Goode´s homolographic
008-22-MP	bc	Lambert´s cylindrical equal area
008-22-MP	bd	Mercator
008-22-MP	be	Miller
008-22-MP	bf	Mollweide
008-22-MP	bg	Sinusoidal
008-22-MP	gh	Transversa de Mercator
008-22-MP	bi	Gauss-Kruger
008-22-MP	bj	Equiretangular
008-22-MP	bo	Obliqua de Mercator
008-22-MP	br	Robinson
008-22-MP	bs	Space oblique Mercator
008-22-MP	bu	Cylindrical, tipo específico desconhecido
008-22-MP	bz	Cylindrical, outro
008-22-MP	ca	Alber´s equal area
008-22-MP	cb	Bonne
008-22-MP	cc	Lambert´s conformal conic
008-22-MP	cd	Equidistant conic
008-22-MP	cp	Policônica
008-22-MP	cu	Conic, tipo específico desconhecido
008-22-MP	cz	Conic, outro
008-22-MP	da	Armadillo
008-22-MP	db	Butterfly
008-22-MP	dc	Eckert
008-22-MP	dd	Goode´s homolosine
008-22-MP	de	Miller´s bipolar oblique conformal conic
008-22-MP	df	Van Der Grinten
008-22-MP	dg	Dimaxion
008-22-MP	dh	Cordiform
008-22-MP	dl	Lambert conformal
008-22-MP	zz	Outro
008-22-MP		
008-22-MU	#	Desconhecido ou não especificado
008-22-MU	a	Pré-escolar
008-22-MU	b	Primário
008-22-MU	c	1º Grau
008-22-MU	d	2º Grau
008-22-MU	e	Adulto
008-22-MU	f	Especializado
008-22-MU	g	Geral
008-22-MU	j	Juvenil
008-22-SE	#	Nenhuma das seguintes
008-22-SE	a	Microfilme
008-22-SE	b	Microficha
008-22-SE	c	Microficha opaca
008-22-SE	d	Impressão ampliada
008-22-SE	e	Formato de jornal
008-22-SE	f	Braille
008-22-SE	g	Fita de papel perfurada (obsoleto)
008-22-SE	h	Fita magnética (obsoleto)
008-22-SE	i	Multimídia (obsoleto)
008-22-SE	x	Outro meio físico (obsoleto)
008-22-SE	z	Outro meio físico (obsoleto)
008-22-VM	#	Desconhecido ou não especificado
008-22-VM	a	Pré-escolar
008-22-VM	b	Primário
008-22-VM	c	1º Grau
008-22-VM	d	2º Grau
008-22-VM	e	Adulto
008-22-VM	f	Especializado
008-22-VM	g	Geral
008-22-VM	j	Juvenil
008-22-VM		
008-23-BK	#	Nenhuma das seguintes
008-23-BK	a	Microfilme
008-23-BK	b	Microficha
008-23-BK	c	Microficha opaca
008-23-BK	d	Impressão ampliada
008-23-BK	f	Braille
008-23-BK	g	Fita de papel perfurada (obsoleto)
008-23-BK	h	Fita magnética (obsoleto)
008-23-BK	i	Multimídia (obsoleto)
008-23-BK	r	Impressão regular
008-23-BK	z	Outra forma de reprodução (obsoleto) 
008-23-BK		
008-23-MU	#	Nunhuma das seguintes
008-23-MU	a	Microfilme
008-23-MU	b	Microficha
008-23-MU	c	Microficha opaca
008-23-MU	d	Impressão ampliada
008-23-MU	f	Braille
008-23-MU	r	Impressão regular
008-23-MU	h	Fita magnética (OBSOLETO)
008-23-MU	i	Multimídia (OBSOLETO)
008-23-MU	x	Outra forma de reprodução (OBSOLETO)
008-23-MU	z	Outra forma de reprodução (OBSOLETO)
008-23-MU		
008-23-MX	#	Nenhuma das seguintes
008-23-MX	a	Microfilme
008-23-MX	b	Microficha
008-23-MX	c	Microficha opaca
008-23-MX	d	Impressão ampliada
008-23-MX	f	Braille
008-23-MX	g	Fita de papel perfurada (OBSOLETO)
008-23-MX	h	Fita magnética (OBSOLETO)
008-23-MX	i	Multimídia (OBSOLETO)
008-23-MX	r	Impressão regular
008-23-MX	z	Outra forma  de reprodução (OBSOLETO)
008-23-MX	j	Transcrição manual (OBSOLETO)
008-23-MX	p	Fotocópia (OBSOLETO)
008-23-MX	t	Transcrição a máquina (OBSOLETO)
008-23-MX		
008-23-SE	#	Nenhuma das seguintes
008-23-SE	a	Microfilme
008-23-SE	b	Microficha
008-23-SE	c	Microficha opaca
008-23-SE	d	Impressão ampliada
008-23-SE	e	Formato de jornal
008-23-SE	f	Braille
008-23-SE	g	Fita de papel perfurada (obsoleto)
008-23-SE	h	Fita magnética (obsoleto)
008-23-SE	i	Multimídia (obsoleto)
008-23-SE	r	Reprodução em impressão regular
008-23-SE	z	Outra forma de reprodução (obsoleto)
008-24-BK	#	Não especificado
008-24-BK	a	Resumos/sumários
008-24-BK	b	Bibliografias
008-24-BK	c	Catálogos
008-24-BK	d	Dicionários
008-24-BK	e	Enciclopédias
008-24-BK	f	Manuais
008-24-BK	g	Artigos legais
008-24-BK	i	Índices
008-24-BK	j	Patentes
008-24-BK	k	Discografia
008-24-BK	l	Legislação
008-24-BK	m	Teses
008-24-BK	n	Análise da literatura de uma área
008-24-BK	o	Recensões
008-24-BK	p	Textos programados
008-24-BK	q	Filmografias
008-24-BK	r	Guias/indicadores
008-24-BK	s	Estatísticas
008-24-BK	t	Relatórios técnicos
008-24-BK	v	Notas sobre casos legais
008-24-BK	w	Relatórios de legislação e jurisprudência
008-24-BK	y	Livros do ano (obsoleto)
008-24-BK	z	Tratados
008-24-BK		
008-24-MU	#	Não tem material complementar
008-24-MU	a	Discografia
008-24-MU	b	Bibliografia
008-24-MU	c	Índice temático
008-24-MU	d	Livreto ou texto
008-24-MU	e	Biografia do compositor ou autor
008-24-MU	f	Biografia do músico ou história do grupo
008-24-MU	g	Informações técnicas / históricas sobre instrumentos
008-24-MU	h	Informações técnicas sobre música
008-24-MU	i	Informação histórica
008-24-MU	k	Informação etnológica
008-24-MU	r	Material de instrução
008-24-MU	s	Música
008-24-MU	z	Outro
008-24-MU	j	Informação histórica mas não de música (OBSOLETO)
008-24-MU	n	Não aplicável (OBSOLETO)
008-24-MU		
008-24-SE	#	Natureza da obra
008-24-SE	a	Resumos/sumários
008-24-SE	b	Bibliografias
008-24-SE	c	Catálogos
008-24-SE	d	Dicionários
008-24-SE	e	Enciclopédias
008-24-SE	f	Manuais
008-24-SE	g	Artigos Legais
008-24-SE	i	Índices
008-24-SE	j	Patentes
008-24-SE	k	Discografias
008-24-SE	l	Legislação
008-24-SE	m	Teses
008-24-SE	n	Levantamento da literatura de uma área
008-24-SE	o	Recensões(criticas)
008-24-SE	p	Textos programados
008-24-SE	q	Filmografias
008-24-SE	r	Guias/indicadores
008-24-SE	s	Estatística
008-24-SE	t	Relatórios técnicos
008-24-SE	v	Notas sobre casos legais
008-24-SE	w	Relatórios de legislação e jurisprudência
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE		
008-24-SE	z	Tratados
008-24-SK	#	Não especificado
008-24-SK	a	Resumos/sumários
008-24-SK	b	Bibliografias
008-24-SK	c	Catálogos
008-24-SK	d	Dicionários
008-24-SK	e	Enciclopédias
008-24-SK	f	Manuais
008-24-SK	g	Artigos legais
008-24-SK	i	Índices
008-24-SK	j	Patentes
008-24-SK	k	Discografia
008-24-SK	l	Legislação
008-24-SK	m	Teses
008-24-SK	n	Levantamento da literatura de uma área
008-24-SK	o	Recensões (críticas)
008-24-SK	p	Textos programados
008-24-SK	q	Filmografias
008-24-SK	r	Guias/indicadores
008-24-SK	s	Estatísticas
008-24-SK	t	Relatórios técnicos
008-24-SK	v	Notas sobre casos legais
008-24-SK	w	Relatórios de legislação e jurisprudência
008-24-SK	z	Tratados
008-25-MP	a	Mapa simples
008-25-MP	b	Série de mapas - elemento de um conjunto
008-25-MP	c	Mapa seriado - parte de um mapa maior
008-25-MP	d	Globo
008-25-MP	e	Atlas
008-25-MP	f	Mapa separado, como parte de outra obra
008-25-MP	g	Mapa agregado, como parte de outra obra
008-25-MP	u	Desconhecido
008-25-MP	z	Outro
008-25-MP		
008-25-SE	#	Não especificado
008-25-SE	a	Resumos/sumários
008-25-SE	b	Bibliografias
008-25-SE	c	Catálogos
008-25-SE	d	Dicionários
008-25-SE	e	Enciclopédias
008-25-SE	f	Manuais
008-25-SE	g	Artigos legais
008-25-SE	h	Biografia
008-25-SE	i	Índices
008-25-SE	k	Discografia
008-25-SE	l	Legislação
008-25-SE	m	Teses
008-25-SE	n	Levantamento da literatura de uma área
008-25-SE	o	Recensões
008-25-SE	p	Textos programados
008-25-SE	q	Filmografias
008-25-SE	r	Guias/indicadores
008-25-SE	s	Estatísticas
008-25-SE	t	Relatórios técnicos
008-25-SE	v	Notas sobre casos legais
008-25-SE	w	Relatórios de legislação e jurisprudência
008-25-SE	y	Livros do ano (obsoleto)
008-25-SE	z	Tratados
008-26-CF	a	Dado numérico
008-26-CF	b	Programa de computador
008-26-CF	c	Representacional
008-26-CF	d	Documento
008-26-CF	e	Dado bibliográfico
008-26-CF	f	Fonte
008-26-CF	g	Jogo
008-26-CF	h	Som
008-26-CF	i	Multimídia interativa
008-26-CF	j	Sistema ou serviço online
008-26-CF	m	Combinação
008-26-CF	u	Desconhecido
008-26-CF	z	Outro
008-26-CF		
008-28-BK	#	Não é uma publicação governamental
008-28-BK	a	Membros autónomos/semi-autônomos de uma federação
008-28-BK	c	Multilocal
008-28-BK	f	Federal/nacional
008-28-BK	i	Internacionais intergovernamentais
008-28-BK	l	Municipal
008-28-BK	m	Multiestadual
008-28-BK	o	Publicação governamental - nível indeterminado
008-28-BK	s	Estado, província, território, jurisdição etc.
008-28-BK	u	Desconhecido se o item é publicação governamental
008-28-BK	z	Outros
008-28-BK		
008-28-CF	#	Não é publicação governamental
008-28-CF	a	Membros autônomos / semi-autônomos de uma federação
008-28-CF	c	Multilocal
008-28-CF	f	Federal / nacional
008-28-CF	i	Internacional intergovernamental
008-28-CF	l	Municipal
008-28-CF	m	Multiestadual
008-28-CF	s	Estado, província, território, jurisdição, etc.
008-28-CF	o	Publicação governamental / nível indeterminado
008-28-CF	u	Desconhecido se o item é publicação governamental
008-28-CF	z	Outro
008-28-CF		
008-28-MP	#	Não é publicação governamental
008-28-MP	a	Membros autônomos  / semi-autônomos de uma federação
008-28-MP	c	Multilocal
008-28-MP	f	Federal / nacional
008-28-MP	i	Internacional intergovernamental
008-28-MP	l	Municipal
008-28-MP	m	Multiestadual
008-28-MP	s	Estado, província, território, jurisdição, etc.
008-28-MP	o	Publicação governamental - nível indeterminado
008-28-MP	u	Desconhecido se o item é publicação governamental
008-28-MP	z	outro
008-28-MP		
008-28-SE	#	Não é uma publicação governamental
008-28-SE	a	Membros autónomos/semi-autônomos de uma federação
008-28-SE	c	Multilocal
008-28-SE	f	Federal/nacional
008-28-SE	i	Internacionais intergovernamentais
008-28-SE	l	Municipal
008-28-SE	m	Multiestadual
008-28-SE	o	Publicação governamental - nível indeterminado
008-28-SE	s	Estado, província, território, jurisdição etc.
008-28-SE	u	Desconhecido se o item é publicação governamental
008-28-SE	z	Outros
008-28-VM	#	Não é publicação governamental
008-28-VM	a	Membros autônomos / semi-autônomos de uma federação
008-28-VM	c	Multilocal
008-28-VM	f	Federal / nacional
008-28-VM	i	Internacional intergovernamental
008-28-VM	l	Municipal
008-28-VM	m	Multiestadual
008-28-VM	s	Estado, província, território, jurisdição, etc.
008-28-VM	o	Publicação governamental - nível indeterminado
008-28-VM	u	Desconhecido se o item é publicação governamental
008-28-VM	z	Outro
008-28-VM		
008-29-BK	0	Não é publicação de evento
008-29-BK	1	Publicação de evento
008-29-BK		
008-29-SE	0	Não é publicação de evento
008-29-SE	1	Publicação de evento
008-30-BK	0	Não é coletânea de homenagem
008-30-BK	1	Coletânea de homenagem
008-30-BK		
008-30-MU	#	Item é um registro sonoro musical
008-30-MU	a	Autobiografia
008-30-MU	b	Biografia
008-30-MU	c	Proceedings
008-30-MU	d	Drama
008-30-MU	e	Ensaio
008-30-MU	f	Ficção
008-30-MU	g	Reportagem
008-30-MU	h	História
008-30-MU	i	Instrução
008-30-MU	j	Curso de idioma
008-30-MU	k	Comédia
008-30-MU	l	Palestras, discursos
008-30-MU	m	Memórias
008-30-MU	n	Não aplicável
008-30-MU	o	Lenda popular
008-30-MU	p	Poesia
008-30-MU	r	Enaio
008-30-MU	s	Sons
008-30-MU	t	Entrevistas
008-30-MU	z	Outro
008-30-MU		
008-31-BK	0	Não possui índice
008-31-BK	1	Possui índice
008-31-BK		
008-33-BK	0	Não é ficção
008-33-BK	1	Ficção
008-33-BK	c	História em quadrinhos
008-33-BK	d	Drama
008-33-BK	e	Ensaio
008-33-BK	f	Romance
008-33-BK	h	Humor, sátira etc.
008-33-BK	i	Cartas
008-33-BK	j	Contos
008-33-BK	m	Formas mistas
008-33-BK	p	Poesia
008-33-BK	s	Discursos
008-33-BK	u	Desconhecido
008-33-BK		
008-33-MP	#	Não há caracteristica especiais do formato
008-33-MP	a	Fotocópia, cópia heliográfica (OBSOLETO)
008-33-MP	b	Fotocópia  (OBSOLETO)
008-33-MP	c	Fotocópia negativa (OBSOLETO)
008-33-MP	d	Filme negativo (OBSOLETO)
008-33-MP	e	Manuscrito
008-33-MP	f	Fac-símile (OBSOLETO)
008-33-MP	g	Relief model (OBSOLETO)
008-33-MP	h	Raro (OBSOLETO)
008-33-MP	j	Picture card, cartão postal
008-33-MP	k	Calendário
008-33-MP	l	Quebra cabeça
008-33-MP	m	Braille
008-33-MP	n	Jogo
008-33-MP	o	Mapa de parede
008-33-MP	p	Jogo de cartas
008-33-MP	q	Impressão ampliada
008-33-MP	r	Folhas soltas
008-33-MP	z	Outro
008-33-MP		
008-33-SE	#	Nenhum alfabeto/escrita determinado/Não há título chave
008-33-SE	a	Romano básico
008-33-SE	b	Romano estendido
008-33-SE	c	Cirílico
008-33-SE	d	Japonês
008-33-SE	e	Chinês
008-33-SE	f	Arábico
008-33-SE	g	Grego
008-33-SE	h	Hebreu
008-33-SE	i	Tailandês
008-33-SE	j	Devanagari
008-33-SE	k	Coreano
008-33-SE	l	Tamil
008-33-SE	u	Desconhecido
008-33-SE	z	Outro
008-33-VM	a	Arte (original)
008-33-VM	b	Kit
008-33-VM	c	Arte (reprodução)
008-33-VM	d	Diorama
008-33-VM	f	Tira de filme
008-33-VM	g	Jogo
008-33-VM	i	Quadro
008-33-VM	k	Graphic
008-33-VM	l	Desenho técnico
008-33-VM	m	Filme
008-33-VM	n	Mapa
008-33-VM	o	Flash card (Cartão relâmpago)
008-33-VM	p	Slide de microscopia
008-33-VM	q	Modelo
008-33-VM	r	Reália
008-33-VM	s	Slide
008-33-VM	t	Transparência
008-33-VM	v	Gravação em vídeo
008-33-VM	w	Brinquedo
008-33-VM	z	Outro
008-33-VM		
008-34-BK	#	Não contém dados biográficos
008-34-BK	a	Autobiografia
008-34-BK	b	Biografia individual
008-34-BK	c	Biografia coletiva
008-34-BK	d	Contém informação biográfica
008-34-BK		
008-34-SE	0	Entrada sucessiva
008-34-SE	1	Entrada mais recentes
008-34-VM	a	Animação
008-34-VM	c	Animação e ação com atores
008-34-VM	l	Ação com atores
008-34-VM	n	Não aplicável
008-34-VM	u	Desconhecido
008-34-VM	z	Outro
008-34-VM		
008-38-BK	#	Não modificado
008-38-BK	d	Omissões substituídas por traços na transliteração
008-38-BK	o	Completamente romanizado/imprimir ficha romanizada
008-38-BK	r	Completamente romanizado/imprimir ficha na escrita
008-38-BK	s	Abreviado
008-38-BK	x	Faltam caracteres
008-38-BK		
008-38-CF	#	Não modificado
008-38-CF	d	Omitida informação de transliteração, substituída por traço
008-38-CF	o	Completamente romanizado / imprimir ficha romanizada
008-38-CF	r	Completamente romanizado/ imprimir ficha na escrita
008-38-CF	s	Abreviado
008-38-CF	x	Faltam caracteres
008-38-CF		
008-38-MP	#	Não modificado
008-38-MP	d	Omissões substituídas por traços na transliteração
008-38-MP	o	Completamente romanizado / imprimir ficha romanizada
008-38-MP	r	Completamente romanizado / imprimir ficha na escrita
008-38-MP	s	Abreviado
008-38-MP	x	Faltam caracteres
008-38-MP		
008-38-MU	#	Não modificado
008-38-MU	d	Omissões substituídas por traços na transliteração
008-38-MU	o	Completamente romanizado / imprimir ficha romanizada
008-38-MU	r	Completamente romanizado / imprimir ficha na escrita
008-38-MU	s	Abreviado
008-38-MU	x	Faltam caracteres
008-38-MU		
008-38-MX	#	Não modificado
008-38-MX	d	Omissões substituídas  por traços na transliteração
008-38-MX	o	Completamente romanizado / imprimir ficha romanizada
008-38-MX	r	Completamente romanizado / imprimir ficha na escrita
008-38-MX	s	Abreviado
008-38-MX	x	Faltam caracteres
008-38-MX		
008-38-SE	#	Não modificado
008-38-SE	d	Omissões substituídas por traços na transliteração
008-38-SE	o	Completamente romanizado/imprimir ficha romanizada
008-38-SE	r	Completamente romanizado/imprimir ficha na escrita
008-38-SE	s	Abreviado
008-38-SE	x	Faltam caracteres
008-38-VM	#	Não modificado
008-38-VM	d	Omissões substituídas por traços na transliteração
008-38-VM	o	Completamente romanizado / imprimir ficha romanizada
008-38-VM	r	Completamente romanizado / imprimir ficha na escrita
008-38-VM	s	Abreviado
008-38-VM	x	Faltam caracteres
008-38-VM		
008-39-BK	#	Library of Congress
008-39-BK	a	National Agricultural Library
008-39-BK	b	National Library of Medicine
008-39-BK	c	Programa de catalogação cooperativa da Library of Congress
008-39-BK	d	Outra
008-39-BK	n	Report to New Serial Titles
008-39-BK	u	Desconhecido
008-39-BK		
008-39-CF	#	Library of Congress
008-39-CF	a	National Agricultural Library
008-39-CF	b	National Library of Medicine
008-39-CF	c	Programa de catalogação cooperativa da Library of Congress
008-39-CF	d	Outra
008-39-CF	n	Relatório para novos títulos seriados
008-39-CF	u	Desconhecido
008-39-CF		
008-39-MP	#	Library of congress
008-39-MP	a	National agricultural library
008-39-MP	b	National library of medicine
008-39-MP	c	Programa de catalogação cooperativa da library of congress
008-39-MP	d	Outra fonte
008-39-MP	n	Relatório para novos títulos seriados
008-39-MP	u	Desconhecido
008-39-MP		
008-39-MU	#	Library of Congress
008-39-MU	a	National agricultural library
008-39-MU	b	National library of medicine
008-39-MU	c	Programa de catalogação cooperativa da library of congress
008-39-MU	d	Outra
008-39-MU	n	Relatório para novos títulos seriados
008-39-MU	u	Desconhecido
008-39-MU		
008-39-MX	#	Library of congress
008-39-MX	a	National agricultural library
008-39-MX	b	National library of medicine
008-39-MX	c	Progr. De catal. Coop da library of congress
008-39-MX	d	Outra
008-39-MX	n	Relatório para novos títulos seriados
008-39-MX	u	desconhecido
008-39-MX		
008-39-SE	#	Library of Congress
008-39-SE	a	National Agricultural Library
008-39-SE	b	National Library of Medicine
008-39-SE	c	Programa de catalogação cooperativa da Library of Congress
008-39-SE	d	Outra
008-39-SE	n	Report to New Serial Titles
008-39-SE	u	Desconhecido
008-39-VM	#	Library of congress
008-39-VM	a	National agricultural library
008-39-VM	b	National library of medicine
008-39-VM	c	Programa de catalogação cooperativa da library of congress
008-39-VM	d	Outra
008-39-VM	n	Relatório para novos títulos seriados
008-39-VM	u	Desconhecido
008-39-VM		
022-I1	#	Nível de interesse internacional não especificado
022-I1	0	Per. de interesse internacional; registro completo, registrado na rede ISSN Network
022-I1	1	Per. sem interesse internacional; registro abreviado, registrado na rede ISSN Network
041-I1	#	indefinido (obsoleto)
041-I1	0	item não é ou não inclui tradução
041-I1	1	item é ou inclui tradução
041-I1		
100-I1	0	Prenome simples e/ou composto
100-I1	1	Sobrenome simples e/ou composto
100-I1	2	Múltiplos sobrenomes (obsoleto)
100-I1	3	Nome de família
100-I1		
110-I1	0	Nome invertido
110-I1	1	Nome da jurisdição
110-I1	2	Nome em ordem direta
111-I1	0	Nome invertido
111-I1	1	Nome da jurisdição
111-I1	2	Nome em ordem direta
210-I1	0	Não há entrada secundária de título
210-I1	1	Entrada secundária de título
210-I2	#	Título chave abreviado
210-I2	0	Outro título abreviado
245-I1	0	Não gerar entrada secundária de título
245-I1	1	Gerar entrada secundária de título
245-I2	0	Zero
245-I2	1	Um
245-I2	2	Dois
245-I2	3	Três
245-I2	4	Quatro
245-I2	5	Cinco
245-I2	6	Seis
245-I2	7	Sete
245-I2	8	Oito
245-I2	9	Nove
362-I1	0	Estilo formatado
362-I1	1	Nota não formatada
440-I2	0	Zero
440-I2	1	Um
440-I2	2	Dois
440-I2	3	Três
440-I2	4	Quatro
440-I2	5	Cinco
440-I2	6	Seis
440-I2	7	Sete
440-I2	8	Oito
440-I2	9	Nove
505-I1	0	Conteúdo
505-I1	1	Conteúdo incompleto
505-I1	2	Conteúdo
505-I1	8	Não gerar constante para visualização
505-I2	#	Básico
505-I2	0	Aumentado
555-I1	#	Não há informação Índice, pode ser gerado
555-I1	0	Índice Remissivo
555-I1	8	Não gerar constante para visualização
650-I1	#	Informação não disponível
650-I1	0	Nível não especificado
650-I1	1	Primário
650-I1	2	Secundário
650-I2	0	Cabeçalhos de assuntos da Library of Congress/lista de autoridades da LC
650-I2	1	Cabeçalhos de assuntos da LC para literatura infantil
650-I2	2	Cabeçalhos de assuntos de Medicina/lista de autoridades da NLM
650-I2	3	Lista de autoridade-assunto-Nat. Agricultural Library
650-I2	4	Fonte não especificada
650-I2	5	Cabeçalhos de as. Canadenses/lista de aut. da NLC
650-I2	6	Repertorie des vedettes-matiere/lista de aut. da NLC
650-I2	7	Fonte especificada no subcampo $2
653-I1	#	Informação não fornecida
653-I1	0	Nível não especificado
653-I1	1	Primário
653-I1	2	Secundário
700-I1	0	Prenome simples e/ou composto
700-I1	1	Sobrenome simples e/ou composto
700-I1	2	Múltiplos sobrenomes (obsoleto)
700-I1	3	Nome de família
700-I2	#	Não há informação
700-I2	0	Entrada alternativa (BK CF MP MU SE MX) (Obsoleto)
700-I2	1	Imprimir ficha (VM) (Obsoleto)
700-I2	1	Imprimir ficha (VM) (Obsoleto)
700-I2	2	Entrada Analítica
700-I2	3	Não imprimir ficha (VM) (Obsoleto)
710-I1	0	Nome Invertido
710-I1	1	Nome da jursidição
710-I1	2	Nome em ordem direta
710-I2	#	Não há informação
710-I2	0	Entrada alternativa (BK CF MP MU SE MX) (Obsoleto)
710-I2	1	Imprimir ficha (VM) (Obsoleto)
710-I2	1	Imprimir ficha (VM) (Obsoleto)
710-I2	2	Entrada Analítica
710-I2	3	Não imprimir ficha (VM) (Obsoleto)
711-I1	0	Nome invertido
711-I1	1	Nome da jurisdição
711-I1	2	Nome em ordem direta
711-I2	#	Não há informação
711-I2	0	Entrada alternativa (BK CF MP MU SE MX) (Obsoleto)
711-I2	1	Imprimir ficha (VM) (Obsoleto)
711-I2	1	Imprimir ficha (VM) (Obsoleto)
711-I2	2	Entrada Analítica
711-I2	3	Não imprimir ficha (VM) (Obsoleto)
720-I1	#	Não especificado
720-I1	1	Pessoal
720-I1	2	Outro
780-I1	0	Exibir nota
780-I1	1	Não exibir nota
780-I2	0	Continua
780-I2	1	Continua em parte
780-I2	2	Substitui
780-I2	3	Substitui em parte
780-I2	4	Formado pela união de... e...
780-I2	5	Absorvido
780-I2	6	Absorvido em parte
780-I2	7	Separado de
785-I1	0	Exibir nota
785-I1	1	Não exibir nota
785-I2	0	Continuado por
785-I2	1	Continuado em parte por
785-I2	2	Substituído por
785-I2	3	Substituído em parte por
785-I2	4	Absorvido por
785-I2	5	Absorvido em parte por
785-I2	6	Dividido em... e...
785-I2	7	Fundido com... para forma...
785-I2	8	Voltou para...
949.c	C	Compra
949.c	D	Doação
949.c	P	Permuta
CATEGORY	BK	Livro
CATEGORY	BA	Analítica de livro
CATEGORY	SE	Periódico
CATEGORY	SA	Analítica de periódico
CATEGORY	AM	Controle de arquivos e manuscritos
CATEGORY	CF	Arquivos de computador
CATEGORY	MP	Mapas
CATEGORY	MU	Música
CATEGORY	VM	Material visual
CATEGORY	MX	Materiais diversos
LEVEL	#	Completo
LEVEL	1	Completo (material não examinado)
LEVEL	2	Incompleto, material não examinado
LEVEL	3	Abreviado
LEVEL	4	Nível padrão
LEVEL	5	Parcial (preliminar)
LEVEL	7	Mínimo
LEVEL	8	Pré-publicação
LEVEL	u	Desconhecido
LEVEL	z	Não aplicável
008-31-MP	0	Não possui índice
008-31-MP	1	Possui índice
008-06-MU	b	Não há datas; envolve data A.C.
008-06-MU	c	Data atual e de copyright (OBSOLETO)
008-06-MU	d	Data detalhada (OBSOLETO)
008-06-MU	i	Datas limite de uma coleção
008-06-MU	m	Múltiplas datas
008-06-MU	n	Data desconhecida
008-15	-jn	Jan Mayen
008-15	jo	Jordan
008-06-MU	p	Data de distribuição / lançamento / publicação e produção / ou sessão de gravação quando diferente ( CF, MU, VM)
008-06-MU	q	Data incompleta
008-06-MU	r	Data de reimpressão / reedição e data original
008-06-MU	s	Data única / data provável
008-15	aa	Albania
008-15	abc	Alberta
008-15	-ac	Ashmore and Cartier Islands
008-15	ae	Algeria
008-15	af	Afghanistan
008-15	ag	Argentina
008-15	ai	Armenia (Republic)
008-15	-ai	Anguilla
008-15	-air	Armenian S.S.R.
008-15	aj	Azerbaijan
008-15	-ajr	Azerbaijan S.S.R.
008-15	aku	Alaska
008-15	alu	Alabama
008-15	am	Anguilla
008-15	an	Andorra
008-15	ao	Angola
008-15	aq	Antigua and Barbuda
008-15	aru	Arkansas
008-15	as	American Samoa
008-15	at	Australia
008-15	au	Austria
008-15	aw	Aruba
008-15	ay	Antarctica
008-15	azu	Arizona
008-15	ba	Bahrain
008-15	bb	Barbados
008-15	bcc	British Columbia
008-15	bd	Burundi
008-15	be	Belgium
008-15	bf	Bahamas
008-15	bg	Bangladesh
008-15	bh	Belize
008-15	bi	British Indian Ocean Territory
008-15	bl	Brazil
008-15	bm	Bermuda Islands
008-15	bn	Bosnia and Hercegovina
008-15	bo	Bolivia
008-15	bp	Solomon Islands
008-15	br	Burma
008-15	bs	Botswana
008-15	bt	Bhutan
008-15	bu	Bulgaria
008-15	bv	Bouvet Island
008-15	bw	Belarus
008-15	-bwr	Byelorussian S.S.R.
008-15	bx	Brunei
008-15	cau	California
008-15	cb	Cambodia
008-15	cc	China
008-15	cd	Chad
008-15	ce	Sri Lanka
008-15	cf	Congo (Brazzaville)
008-15	cg	Congo (Democratic Republic)
008-15	ch	China (Republic : 1949- )
008-15	ci	Croatia
008-15	cj	Cayman Islands
008-15	ck	Colombia
008-15	cl	Chile
008-15	cm	Cameroon
008-15	-cn	Canada
008-15	cou	Colorado
008-15	-cp	Canton and Enderbury Islands
008-15	cq	Comoros
008-15	cr	Costa Rica
008-15	-cs	Czechoslovakia
008-15	ctu	Connecticut
008-15	cu	Cuba
008-15	cv	Cape Verde
008-15	cw	Cook Islands
008-15	cx	Central African Republic
008-15	cy	Cyprus
008-15	-cz	Canal Zone
008-15	d	 (Indian Ocean)
008-15	dcu	District of Columbia
008-15	deu	Delaware
008-15	dk	Denmark
008-15	dm	Benin
008-15	dq	Dominica
008-15	dr	Dominican Republic
008-15	ea	Eritrea
008-15	ec	Ecuador
008-15	eg	Equatorial Guinea
008-15	enk	England
008-15	er	Estonia
008-15	-err	Estonia
008-15	es	El Salvador
008-15	et	Ethiopia
008-15	fa	Faroe Islands
008-15	fg	French Guiana
008-15	fi	Finland
008-15	fj	Fiji
008-15	fk	Falkland Islands
008-15	flu	Florida
008-15	fm	Micronesia (Federated States)
008-15	fp	French Polynesia
008-15	fr	France
008-15	fs	Terres australes et antarctiques franaise
008-15	ft	Djibouti
008-15	gau	Georgia
008-15	gb	Kiribati
008-15	gd	Grenada
008-15	-ge	Germany (East)
008-15	gh	Ghana
008-15	gi	Gibraltar
008-15	gl	Greenland
008-15	gm	Gambia
008-15	-gn	Gilbert and Ellice Islands
008-15	go	Gabon
008-15	gp	Guadeloupe
008-15	gr	Greece
008-15	gs	Georgia (Republic)
008-15	-gsr	Georgian S.S.R.
008-15	gt	Guatemala
008-15	gu	Guam
008-15	gv	Guinea
008-15	gw	Germany
008-15	gy	Guyana
008-15	gz	Gaza Strip
008-15	hiu	Hawaii
008-15	-hk	Hong Kong
008-15	hm	Heard and McDonald Islands
008-15	ho	Honduras
008-15	ht	Haiti
008-15	hu	Hungary
008-15	iau	Iowa
008-15	ic	Iceland
008-15	idu	Idaho
008-15	ie	Ireland
008-15	ii	India
008-15	ilu	Illinois
008-15	inu	Indiana
008-15	io	Indonesia
008-15	iq	Iraq
008-15	ir	Iran
008-15	is	Israel
008-15	it	Italy
008-15	-iu	Israel-Syria Demilitarized Zones
008-15	iv	Côte dIvoire
008-15	-iw	Israel-Jordan Demilitarized Zones
008-15	iy	Iraq-Saudi Arabia Neutral Zone
008-15	ja	Japan
008-15	ji	Johnston Atoll
008-15	jm	Jamaica
008-15	ke	Kenya
008-15	kg	Kyrgyzstan
008-15	-kgr	Kirghiz S.S.R.
008-15	kn	Korea (North)
008-15	ko	Korea (South)
008-15	ksu	Kansas
008-15	ku	Kuwait
008-15	kyu	Kentucky
008-15	kz	Kazakhstan
008-15	-kzr	Kazakh S.S.R.
008-15	lau	Louisiana
008-15	lb	Liberia
008-15	le	Lebanon
008-15	lh	Liechtenstein
008-15	li	Lithuania
008-15	-lir	Lithuania
008-15	-ln	Central and Southern Line Islands
008-15	lo	Lesotho
008-15	ls	Laos
008-15	lu	Luxembourg
008-15	lv	Latvia
008-15	-lvr	Latvia
008-15	ly	Libya
008-15	mau	Massachusetts
008-15	mbc	Manitoba
008-15	mc	Monaco
008-15	mdu	Maryland
008-15	meu	Maine
008-15	mf	Mauritius
008-15	mg	Madagascar
008-15	-mh	Macao
008-15	miu	Michigan
008-15	mj	Montserrat
008-15	mk	Oman
008-15	ml	Mali
008-15	mm	Malta
008-15	mnu	Minnesota
008-15	mou	Missouri
008-15	mp	Mongolia
008-15	mq	Martinique
008-15	mr	Morocco
008-15	msu	Mississippi
008-15	mtu	Montana
008-15	mu	Mauritania
008-15	mv	Moldova
008-15	-mvr	Moldavian S.S.R.
008-15	mw	Malawi
008-15	mx	Mexico
008-15	my	Malaysia
008-15	mz	Mozambique
008-15	na	Netherlands Antilles
008-15	nbu	Nebraska
008-15	ncu	North Carolina
008-15	ndu	North Dakota
008-15	ne	Netherlands
008-15	nfc	Newfoundland
008-15	ng	Niger
008-15	nhu	New Hampshire
008-15	nik	Northern Ireland
008-15	nju	New Jersey
008-15	nkc	New Brunswick
008-15	nl	New Caledonia
008-15	-nm	Northern Mariana Islands
008-15	nmu	New Mexico
008-15	nn	Vanuatu
008-15	no	Norway
008-15	np	Nepal
008-15	nq	Nicaragua
008-15	nr	Nigeria
008-15	nsc	Nova Scotia
008-15	ntc	Northwest Territories
008-15	nu	Nauru
008-15	nuc	Nunavut
008-15	nvu	Nevada
008-15	nw	Northern Mariana Islands
008-15	nx	Norfolk Island
008-15	nyu	New York (State)
008-15	nz	New Zealand
008-15	ohu	Ohio
008-15	oku	Oklahoma
008-15	onc	Ontario
008-15	oru	Oregon
008-15	ot	Mayotte
008-15	pau	Pennsylvania
008-15	pc	Pitcairn Island
008-15	pe	Peru
008-15	pf	Paracel Islands
008-15	pg	Guinea-Bissau
008-15	ph	Philippines
008-15	pic	Prince Edward Island
008-15	pk	Pakistan
008-15	pl	Poland
008-15	pn	Panama
008-15	po	Portugal
008-15	pp	Papua New Guinea
008-15	pr	Puerto Rico
008-15	-pt	Portuguese Timor
008-15	pw	Palau
008-15	py	Paraguay
008-15	qa	Qatar
008-15	quc	Qubec (Province)
008-15	re	Runion
008-15	rh	Zimbabwe
008-15	riu	Rhode Island
008-15	rm	Romania
008-15	ru	Russia (Federation)
008-15	-rur	Russian S.F.S.R.
008-15	rw	Rwanda
008-15	-ry	Ryukyu Islands, Southern
008-15	sa	South Africa
008-15	-sb	Svalbard
008-15	scu	South Carolina
008-15	sdu	South Dakota
008-15	se	Seychelles
008-15	sf	Sao Tome and Principe
008-15	sg	Senegal
008-15	sh	Spanish North Africa
008-15	si	Singapore
008-15	sj	Sudan
008-15	-sk	Sikkim
008-15	sl	Sierra Leone
008-15	sm	San Marino
008-15	snc	Saskatchewan
008-15	so	Somalia
008-15	sp	Spain
008-15	sq	Swaziland
008-15	sr	Surinam
008-15	ss	Western Sahara
008-15	stk	Scotland
008-15	su	Saudi Arabia
008-15	-sv	Swan Islands
008-15	sw	Sweden
008-15	sx	Namibia
008-15	sy	Syria
008-15	sz	Switzerland
008-15	ta	Tajikistan
008-15	-tar	Tajik S.S.R.
008-15	tc	Turks and Caicos Islands
008-15	tg	Togo
008-15	th	Thailand
008-15	ti	Tunisia
008-15	tk	Turkmenistan
008-15	-tkr	Turkmen S.S.R.
008-15	tl	Tokelau
008-15	tnu	Tennessee
008-15	to	Tonga
008-15	tr	Trinidad and Tobago
008-15	ts	United Arab Emirates
008-15	-tt	Trust Territory of the Pacific Islands
008-15	tu	Turkey
008-15	tv	Tuvalu
008-15	txu	Texas
008-15	tz	Tanzania
008-15	ua	Egypt
008-15	uc	United States Misc. Caribbean Islands
008-15	ug	Uganda
008-15	-ui	United Kingdom Misc. Islands
008-15	uik	United Kingdom Misc. Islands
008-15	-uk	United Kingdom
008-15	un	Ukraine
008-15	-unr	Ukraine
008-15	up	United States Misc. Pacific Islands
008-15	-ur	Soviet Union
008-15	-us	United States
008-15	utu	Utah
008-15	uv	Burkina Faso
008-15	uy	Uruguay
008-15	uz	Uzbekistan
008-15	-uzr	Uzbek S.S.R.
008-15	vau	Virginia
008-15	vb	British Virgin Islands
008-15	vc	Vatican City
008-15	ve	Venezuela
008-15	vi	Virgin Islands of the United States
008-15	vm	Vietnam
008-15	-vn	Vietnam, North
008-15	vp	Various places
008-15	-vs	Vietnam, South
008-15	vtu	Vermont
008-15	wau	Washington (State)
008-15	-wb	West Berlin
008-15	wf	Wallis and Futuna
008-15	wiu	Wisconsin
008-15	wj	West Bank of the Jordan River
008-15	wk	Wake Island
008-15	wlk	Wales
008-15	ws	Samoa
008-15	wvu	West Virginia
008-15	wyu	Wyoming
008-15	xa	Christmas Islan
008-15	xb	Cocos (Keeling) Islands
008-15	xc	Maldives
008-15	xd	Saint Kitts-Nevis
008-15	xe	Marshall Islands
008-15	xf	Midway Islands
008-15	xh	Niue
008-15	-xi	Saint Kitts-Nevis-Anguilla
008-15	xj	Saint Helena
008-15	xk	Saint Lucia
008-15	xl	Saint Pierre and Miquelon
008-15	xm	Saint Vincent and the Grenadines
008-15	xn	Macedonia
008-15	xo	Slovakia
008-15	xp	Spratly Island
008-15	xr	Czech Republic
008-15	xs	South Georgia and the South Sandwich Islands
008-15	xv	Slovenia
008-15	xx	No place, unknown, or undetermined
008-15	xxc	Canada
008-15	xxk	United Kingdom
008-15	-xxr	Soviet Union
008-15	xxu	United States
008-15	ye	Yemen
008-15	ykc	Yukon Territory
008-15	-ys	Yemen (Peoples Democratic Republic)
008-15	yu	Yugoslavia
008-15	za	Zambia
008-35	aar	Afar
008-35	abk	Abkhaz
008-35	ace	Achinese
008-35	ach	Acoli
008-35	ada	Adangme
008-35	afa	Afroasiatic (Other)
008-35	afh	Afrihili (Artificial language)
008-35	afr	Afrikaans
008-35	-ajm	Aljamía
008-35	aka	Akan
008-35	akk	Akkadian
008-35	alb	Albanian
008-35	ale	Aleut
008-35	alg	Algonquian (Other)
008-35	amh	Amharic
008-35	ang	English, Old (ca. 450-1100)
008-35	apa	Apache languages
008-35	ara	Arabic
008-35	arc	Aramaic
008-35	arm	Armenian
008-35	arn	Mapuche
008-35	arp	Arapaho
008-35	art	Artificial (Other)
008-35	arw	Arawak
008-35	asm	Assamese
008-35	ath	Athapascan (Other)
008-35	aus	Australian languages
008-35	ava	Avaric
008-35	ave	Avestan
008-35	awa	Awadhi
008-35	aym	Aymara
008-35	aze	Azerbaijani
008-35	bad	Banda
008-35	bai	Bamileke languages
008-35	bak	Bashkir
008-35	bal	Baluchi
008-35	bam	Bambara
008-35	ban	Balinese
008-35	baq	Basque
008-35	bas	Basa
008-35	bat	Baltic (Other)
008-35	bej	Beja
008-35	bel	Belarusian
008-35	bem	Bemba
008-35	ben	Bengali
008-35	ber	Berber (Other)
008-35	bho	Bhojpuri
008-35	bih	Bihari
008-35	bik	Bikol
008-35	bin	Bini
008-35	bis	Bislama
008-35	bla	Siksika
008-35	bnt	Bantu (Other)
008-35	bos	Bosnian
008-35	bra	Braj
008-35	bre	Breton
008-35	btk	Batak
008-35	bua	Buriat
008-35	bug	Bugis
008-35	bul	Bulgarian
008-35	bur	Burmese
008-35	cad	Caddo
008-35	cai	Central American Indian (Other)
008-35	-cam	Khmer
008-35	car	Carib
008-35	cat	Catalan
008-35	cau	Caucasian (Other)
008-35	ceb	Cebuano
008-35	cel	Celtic (Other)
008-35	cha	Chamorro
008-35	chb	Chibcha
008-35	che	Chechen
008-35	chg	Chagatai
008-35	chi	Chinese
008-35	chk	Truk
008-35	chm	Mari
008-35	chn	Chinook jargon
008-35	cho	Choctaw
008-35	chp	Chipewyan
008-35	chr	Cherokee
008-35	chu	Church Slavic
008-35	chv	Chuvash
008-35	chy	Cheyenne
008-35	cmc	Chamic languages
008-35	cop	Coptic
008-35	cor	Cornish
008-35	cos	Corsican
008-35	cpe	Creoles and Pidgins, English-based (Other)
008-35	cpf	Creoles and Pidgins, French-based (Other)
008-35	cpp	Creoles and Pidgins, Portuguese-based (Other)
008-35	cre	Cree
008-35	crp	Creoles and Pidgins (Other)
008-35	cus	Cushitic (Other)
008-35	cze	Czech
008-35	dak	Dakota
008-35	dan	Danish
008-35	day	Dayak
008-35	del	Delaware
008-35	den	Slave
008-35	dgr	Dogrib
008-35	din	Dinka
008-35	div	Divehi
008-35	doi	Dogri
008-35	dra	Dravidian (Other)
008-35	dua	Duala
008-35	dum	Dutch, Middle (ca. 1050-1350)
008-35	dut	Dutch
008-35	dyu	Dyula
008-35	dzo	Dzongkha
008-35	efi	Efik
008-35	egy	Egyptian
008-35	eka	Ekajuk
008-35	elx	Elamite
008-35	eng	English
008-35	enm	English, Middle (1100-1500)
008-35	epo	Esperanto
008-35	-esk	Eskimo languages
008-35	-esp	Esperanto
008-35	est	Estonian
008-35	-eth	Ethiopic
008-35	ewe	Ewe
008-35	ewo	Ewondo
008-35	fan	Fang
008-35	fao	Faroese
008-35	-far	Faroese
008-35	fat	Fanti
008-35	fij	Fijian
008-35	fin	Finnish
008-35	fiu	Finno-Ugrian (Other)
008-35	fon	Fon
008-35	fre	French
008-35	-fri	Frisian
008-35	frm	French, Middle (ca. 1400-1600)
008-35	fro	French, Old (ca. 842-1400)
008-35	fry	Frisian
008-35	ful	Fula
008-35	fur	Friulian
008-35	gaa	Gã
008-35	-gae	Scottish Gaelic
008-35	-gag	Galician
008-35	-gal	Oromo
008-35	gay	Gayo
008-35	gba	Gbaya
008-35	gem	Germanic (Other)
008-35	geo	Georgian
008-35	ger	German
008-35	gez	Ethiopic
008-35	gil	Gilbertese
008-35	gla	Scottish Gaelic
008-35	gle	Irish
008-35	glg	Galician
008-35	glv	Manx
008-35	gmh	German, Middle High (ca. 1050-1500)
008-35	goh	German, Old High (ca. 750-1050)
008-35	gon	Gondi
008-35	gor	Gorontalo
008-35	got	Gothic
008-35	grb	Grebo
008-35	grc	Greek, Ancient (to 1453)
008-35	gre	Greek, Modern (1453- )
008-35	grn	Guarani
008-35	-gua	Guarani
008-35	guj	Gujarati
008-35	gwi	Gwichin
008-35	hai	Haida
008-35	hau	Hausa
008-35	haw	Hawaiian
008-35	heb	Hebrew
008-35	her	Herero
008-35	hil	Hiligaynon
008-35	him	Himachali
008-35	hin	Hindi
008-35	hit	Hittite
008-35	hmn	Hmong
008-35	hmo	Hiri Motu
008-35	hun	Hungarian
008-35	hup	Hupa
008-35	iba	Iban
008-35	ibo	Igbo
008-35	ice	Icelandic
008-35	ijo	Ijo
008-35	iku	Inuktitut
008-35	ile	Interlingue
008-35	ilo	Iloko
008-35	ina	Interlingua (International Auxiliary Language Association)
008-35	inc	Indic (Other)
008-35	ind	Indonesian
008-35	ine	Indo-European (Other)
008-35	-int	Interlingua (International Auxiliary Language Association)
008-35	ipk	Inupiaq
008-35	ira	Iranian (Other)
008-35	-iri	Irish
008-35	iro	Iroquoian (Other)
008-35	ita	Italian
008-35	jav	Javanese
008-35	jpn	Japanese
008-35	jpr	Judeo-Persian
008-35	jrb	Judeo-Arabic
008-35	kaa	Kara-Kalpak
008-35	kab	Kabyle
008-35	kac	Kachin
008-35	kal	Kalâtdlisut
008-35	kam	Kamba
008-35	kan	Kannada
008-35	kar	Karen
008-35	kas	Kashmiri
008-35	kau	Kanuri
008-35	kaz	Kazakh
008-35	kha	Khasi
008-35	khi	Khoisan (Other)
008-35	khm	Khmer
008-35	kho	Khotanese
008-35	kik	Kikuyu
008-35	kin	Kinyarwanda
008-35	kir	Kyrgyz
008-35	kmb	Kimbundu
008-35	kok	Konkani
008-35	kom	Komi
008-35	kon	Kongo
008-35	kor	Korean
008-35	kos	Kusaie
008-35	kpe	Kpelle
008-35	kro	Kru
008-35	kru	Kurukh
008-35	kua	Kuanyama
008-35	kum	Kumyk
008-35	kur	Kurdish
008-35	-kus	Kusaie
008-35	kut	Kutenai
008-35	lad	Ladino
008-35	lah	Lahnda
008-35	lam	Lamba
008-35	-lan	Occitan (post-1500)
008-35	lao	Lao
008-35	-lap	Sami
008-35	lat	Latin
008-35	lav	Latvian
008-35	lez	Lezgian
008-35	lin	Lingala
008-35	lit	Lithuanian
008-35	lol	Mongo-Nkundu
008-35	loz	Lozi
008-35	ltz	Letzeburgesch
008-35	lua	Luba-Lulua
008-35	lub	Luba-Katanga
008-35	lug	Ganda
008-35	lui	Luiseño
008-35	lun	Lunda
008-35	luo	Luo (Kenya and Tanzania)
008-35	lus	Lushai
008-35	mac	Macedonian
008-35	mad	Madurese
008-35	mag	Magahi
008-35	mah	Marshall
008-35	mai	Maithili
008-35	mak	Makasar
008-35	mal	Malayalam
008-35	man	Mandingo
008-35	mao	Maori
008-35	map	Austronesian (Other)
008-35	mar	Marathi
008-35	mas	Masai
008-35	-max	Manx
008-35	may	Malay
008-35	mdr	Mandar
008-35	men	Mende
008-35	mga	Irish, Middle (ca. 1100-1550)
008-35	mic	Micmac
008-35	min	Minangkabau
008-35	mis	Miscellaneous languages
008-35	mkh	Mon-Khmer (Other)
008-35	-mla	Malagasy
008-35	mlg	Malagasy
008-35	mlt	Maltese
008-35	mnc	Manchu
008-35	mni	Manipuri
008-35	mno	Manobo languages
008-35	moh	Mohawk
008-35	mol	Moldavian
008-35	mon	Mongolian
008-35	mos	Mooré
008-35	mul	Multiple languages
008-35	mun	Munda (Other)
008-35	mus	Creek
008-35	mwr	Marwari
008-35	myn	Mayan languages
008-35	nah	Nahuatl
008-35	nai	North American Indian (Other)
008-35	nau	Nauru
008-35	nav	Navajo
008-35	nbl	Ndebele (South Africa)
008-35	nde	Ndebele (Zimbabwe)
008-35	ndo	Ndonga
008-35	nep	Nepali
008-35	new	Newari
008-35	nia	Nias
008-35	nic	Niger-Kordofanian (Other)
008-35	niu	Niuean
008-35	non	Old Norse
008-35	nor	Norwegian
008-35	nso	Northern Sotho
008-35	nub	Nubian languages
008-35	nya	Nyanja
008-35	nym	Nyamwezi
008-35	nyn	Nyankole
008-35	nyo	Nyoro
008-35	nzi	Nzima
008-35	oci	Occitan (post-1500)
008-35	oji	Ojibwa
008-35	ori	Oriya
008-35	orm	Oromo
008-35	osa	Osage
008-35	oss	Ossetic
008-35	ota	Turkish, Ottoman
008-35	oto	Otomian languages
008-35	paa	Papuan (Other)
008-35	pag	Pangasinan
008-35	pal	Pahlavi
008-35	pam	Pampanga
008-35	pan	Panjabi
008-35	pap	Papiamento
008-35	pau	Palauan
008-35	peo	Old Persian (ca. 600-400 B.C.)
008-35	per	Persian
008-35	phi	Philippine (Other)
008-35	phn	Phoenician
008-35	pli	Pali
008-35	pol	Polish
008-35	pon	Ponape
008-35	por	Portuguese
008-35	pra	Prakrit languages
008-35	pro	Provençal (to 1500)
008-35	pus	Pushto
008-35	que	Quechua
008-35	raj	Rajasthani
008-35	rap	Rapanui
008-35	rar	Rarotongan
008-35	roa	Romance (Other)
008-35	roh	Raeto-Romance
008-35	rom	Romany
008-35	rum	Romanian
008-35	run	Rundi
008-35	rus	Russian
008-35	sad	Sandawe
008-35	sag	Sango
008-35	sah	Yakut
008-35	sai	South American Indian (Other)
008-35	sal	Salishan languages
008-35	sam	Samaritan Aramaic
008-35	san	Sanskrit
008-35	-sao	Samoan
008-35	sas	Sasak
008-35	sat	Santali
008-35	scc	Serbian
008-35	sco	Scots
008-35	scr	Croatian
008-35	sel	Selkup
008-35	sem	Semitic (Other)
008-35	sga	Irish, Old (to 1100)
008-35	sgn	Sign languages
008-35	shn	Shan
008-35	-sho	Shona
008-35	sid	Sidamo
008-35	sin	Sinhalese
008-35	sio	Siouan (Other)
008-35	sit	Sino-Tibetan (Other)
008-35	sla	Slavic (Other)
008-35	slo	Slovak
008-35	slv	Slovenian
008-35	sme	Northern Sami
008-35	smi	Sami
008-35	smo	Samoan
008-35	sna	Shona
008-35	snd	Sindhi
008-35	-snh	Sinhalese
008-35	snk	Soninke
008-35	sog	Sogdian
008-35	som	Somali
008-35	son	Songhai
008-35	sot	Sotho
008-35	spa	Spanish
008-35	srd	Sardinian
008-35	srr	Serer
008-35	ssa	Nilo-Saharan (Other)
008-35	-sso	Sotho
008-35	ssw	Swazi
008-35	suk	Sukuma
008-35	sun	Sundanese
008-35	sus	Susu
008-35	sux	Sumerian
008-35	swa	Swahili
008-35	swe	Swedish
008-35	-swz	Swazi
008-35	syr	Syriac
008-35	-tag	Tagalog
008-35	tah	Tahitian
008-35	tai	Tai (Other)
008-35	-taj	Tajik
008-35	tam	Tamil
008-35	-tar	Tatar
008-35	tat	Tatar
008-35	tel	Telugu
008-35	tem	Temne
008-35	ter	Terena
008-35	tet	Tetum
008-35	tgk	Tajik
008-35	tgl	Tagalog
008-35	tha	Thai
008-35	tib	Tibetan
008-35	tig	Tigré
008-35	tir	Tigrinya
008-35	tiv	Tiv
008-35	tkl	Tokelauan
008-35	tli	Tlingit
008-35	tmh	Tamashek
008-35	tog	Tonga (Nyasa)
008-35	ton	Tongan
008-35	tpi	Tok Pisin
008-35	-tru	Truk
008-35	tsi	Tsimshian
008-35	tsn	Tswana
008-35	tso	Tsonga
008-35	-tsw	Tswana
008-35	tuk	Turkmen
008-35	tum	Tumbuka
008-35	tur	Turkish
008-35	tut	Altaic (Other)
008-35	tvl	Tuvaluan
008-35	twi	Twi
008-35	tyv	Tuvinian
008-35	uga	Ugaritic
008-35	uig	Uighur
008-35	ukr	Ukrainian
008-35	umb	Umbundu
008-35	und	Undetermined
008-35	urd	Urdu
008-35	uzb	Uzbek
008-35	vai	Vai
008-35	ven	Venda
008-35	vie	Vietnamese
008-35	vol	Volapük
008-35	vot	Votic
008-35	wak	Wakashan languages
008-35	wal	Walamo
008-35	war	Waray
008-35	was	Washo
008-35	wel	Welsh
008-35	wen	Sorbian languages
008-35	wol	Wolof
008-35	xho	Xhosa
008-35	yao	Yao
008-35	yap	Yapese
008-35	yid	Yiddish
008-35	yor	Yoruba
008-35	ypk	Yupik languages
008-35	zap	Zapotec
008-35	zen	Zenaga
008-35	zha	Zhuang
008-35	znd	Zande
008-35	zul	Zulu
008-35	zun	Zuni
949.5	n	Não
949.5	s	Sim
960.c	C	Compra
960.c	D	Doação
960.c	P	Permuta
901.b	CA	Ciências agrárias
901.b	CB	Ciências biológicas
901.b	CH	Ciências humanas
901.b	CS	Ciências da saúde
901.b	CET	Ciências exatas e da terra
901.b	CSA	Ciências sociais aplicadas
901.b	ENG	Engenharias
901.b	LLA	Linguística, letra e arte
773-I1	0	Exibe nota
773-I1	1	Não exibe nota
773-I2	#	In
773-I2	8	Não gera visualização
\.


--
-- Data for Name: gtcmaterial; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmaterial (controlnumber, fieldid, subfieldid, line, indicator1, indicator2, content, searchcontent, prefixid, suffixid, separatorid, searchcontentforsearchmodule) FROM stdin;
\.


--
-- Data for Name: gtcmaterialcontrol; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmaterialcontrol (controlnumber, controlnumberfather, entrancedate, lastchangedate, category, level, materialgenderid, materialtypeid, materialphysicaltypeid, lastchangeoperator) FROM stdin;
\.


--
-- Data for Name: gtcmaterialevaluation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmaterialevaluation (materialevaluationid, controlnumber, personid, date, comment, evaluation) FROM stdin;
\.


--
-- Data for Name: gtcmaterialgender; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmaterialgender (materialgenderid, description) FROM stdin;
1	LIVRO
2	REFERÊNCIA
3	PERIÓDICO
4	DVD
5	CD
\.


--
-- Data for Name: gtcmaterialhistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmaterialhistory (materialhistoryid, controlnumber, revisionnumber, operator, data, chancestype, fieldid, subfieldid, previousline, previousindicator1, previousindicator2, previouscontent, currentline, currentindicator1, currentindicator2, currentcontent, previousprefixid, previoussuffixid, previousseparatorid, currentprefixid, currentsuffixid, currentseparatorid) FROM stdin;
\.


--
-- Data for Name: gtcmateriallocation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmateriallocation (materiallocationid, name, libraryunitid) FROM stdin;
\.


--
-- Data for Name: gtcmateriallocationtag; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmateriallocationtag (materiallocationtagid, type, fieldid, subfieldidid, rule, content, gtcmateriallocatioid) FROM stdin;
\.


--
-- Data for Name: gtcmaterialphysicaltype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmaterialphysicaltype (materialphysicaltypeid, description, image, observation) FROM stdin;
1	Impresso		
2	CD		
3	DVD		
5	Fita K7		
6	Disquete		
7	Calculadora		
4	Fita VHS		
8	Braille		
9	Transparência		
\.


--
-- Data for Name: gtcmaterialtype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmaterialtype (materialtypeid, description, isrestricted, level, observation) FROM stdin;
1	Livro	f	10	
2	Monografia	f	15	
5	Tese	f	20	
4	Dissertação	f	25	
3	Especialização	f	30	
23	Coleção de Periódico	f	35	
25	Artigo de periódico	f	40	
6	Referência	f	50	
16	Norma Brasileira	f	55	
15	Norma Internacional	f	60	
18	Norma Técnica Temática	f	65	
19	Norma Nacional/Internacional	f	70	
17	Norma Mercosur	f	75	
20	Norma Nacional/Internacional/Eletrotécnica	f	80	
21	American Society for Testing and Materials	f	85	
7	Anuário	f	95	
8	Balanço	f	100	
9	Catálogo	f	105	
10	Censo	f	110	
11	Folheto	f	115	
12	Governo do estado	f	120	
13	Prática de ensino	f	125	
14	Relatório	f	130	
26	Manual	f	135	
27	Livro de exercícios	f	140	
28	Livro do professor	f	145	
29	Índice	f	150	
30	Mapa	f	155	
31	Jogo	f	160	
32	Testes	f	165	
33	Suplemento	f	170	
34	Anexo	f	175	
35	Livro do aluno	f	180	
36	Planilha	f	185	
37	Temapédia	f	190	
38	Datapédia	f	195	
39	HP-12c	f	200	
24	Periódico	f	45	
\.


--
-- Data for Name: gtcmylibrary; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcmylibrary (mylibraryid, personid, tablename, tableid, date, message, visible) FROM stdin;
\.


--
-- Data for Name: gtcnews; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcnews (newsid, place, title1, news, date, begindate, enddate, isrestricted, isactive, operator, libraryunitid) FROM stdin;
1	2	Seja bem vindo ao Gnuteca3.	<center>Esta nova versão foi reestruturada adotando novas tecnologias e seguindo o conceito da Web 2.0. Agrega novas funcionalidades, dentre elas pode-se destacar: </center>\n<ul><li>suporte de políticas e direitos por unidade</li><li>associação de biblioteca</li><li>facilidade na configuração de formatos, filtros, regras de circulação de material, planilhas Marc</li><li>catalogo e visualização da capa de materiais</li><li>possui mais de 30 relatórios</li><li>integração com Google Livros</li><li>pesquisas personalizáveis</li><li>envio configurável de recibos por e-mail</li><li>preferências por biblioteca</li></ul>\nMais informações em <a href=http://www.solis.coop.br/gnuteca>www.solis.coop.br/gnuteca</a>.\nPara editar esta notícia e criar novas, clique <a href=/index.php?module=gnuteca3&action=main:administration:news>Aqui</a>.	2010-06-12 00:00:00	2010-06-12 00:00:00	2010-06-12 00:00:00	f	t	gnuteca	1
\.


--
-- Data for Name: gtcnewsaccess; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcnewsaccess (newsid, linkid) FROM stdin;
\.


--
-- Data for Name: gtcoperation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcoperation (operationid, description, definerule) FROM stdin;
1	Empréstimo	t
2	Devolução	t
3	Empréstimo entre unidades	t
4	Devolução entre unidades	t
5	Empréstimo entre unidades - Confirma recebimento	t
10	Reserva local	f
11	Reserva local para nível inicial	f
12	Reserva web	f
13	Reserva web para nível inicial	f
14	Atender reserva	t
15	Cancelar reserva	t
20	Retirar com atraso	f
21	Retirar com penalidade	f
22	Retirar com multa	f
23	Empréstimo momentâneo	f
\.


--
-- Data for Name: gtcoperatorlibraryunit; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcoperatorlibraryunit (operator, libraryunitid) FROM stdin;
gnuteca	\N
\.


--
-- Data for Name: gtcpenalty; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcpenalty (penaltyid, personid, libraryunitid, observation, internalobservation, penaltydate, penaltyenddate, operator) FROM stdin;
\.


--
-- Data for Name: gtcpersonconfig; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcpersonconfig (personid, parameter, value) FROM stdin;
\.


--
-- Data for Name: gtcpersonlibraryunit; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcpersonlibraryunit (libraryunitid, personid) FROM stdin;
\.


--
-- Data for Name: gtcpolicy; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcpolicy (privilegegroupid, linkid, materialgenderid, loandays, loandate, loanlimit, renewallimit, reservelimit, daysofwaitforreserve, reservelimitininitiallevel, daysofwaitforreserveininitiallevel, finevalue, renewalweblimit, renewalwebbonus, additionaldaysforholidays, penaltybydelay, momentaryfinevalue) FROM stdin;
1	1	1	7	\N	5	99	7	2	7	2	1	2	t	1	0	\N
1	2	1	7	\N	5	99	7	2	7	2	1	2	t	1	0	\N
1	1	3	2	\N	2	99	2	2	2	2	1	2	t	1	0	\N
1	2	3	2	\N	2	99	2	2	2	2	1	2	t	1	0	\N
1	1	4	2	\N	2	99	2	2	2	2	1	2	t	1	0	\N
1	2	4	2	\N	2	99	2	2	2	2	1	2	t	1	0	\N
1	1	5	2	\N	2	99	2	2	2	2	1	2	t	1	0	\N
1	2	5	2	\N	2	99	2	2	2	2	1	2	t	1	0	\N
\.


--
-- Data for Name: gtcprecatalogue; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcprecatalogue (controlnumber, fieldid, subfieldid, line, indicator1, indicator2, content, searchcontent, prefixid, suffixid, separatorid) FROM stdin;
\.


--
-- Data for Name: gtcprefixsuffix; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcprefixsuffix (prefixsuffixid, fieldid, subfieldid, content, type) FROM stdin;
1	300	a	 p.	2
2	250	a	 ed.	2
\.


--
-- Data for Name: gtcprivilegegroup; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcprivilegegroup (privilegegroupid, description) FROM stdin;
1	Padrão
\.


--
-- Data for Name: gtcpurchaserequest; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcpurchaserequest (purchaserequestid, libraryunitid, personid, costcenterid, amount, course, observation, needdelivery, forecastdelivery, deliverydate, voucher, controlnumber, precontrolnumber, externalid) FROM stdin;
\.


--
-- Data for Name: gtcpurchaserequestmaterial; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcpurchaserequestmaterial (purchaserequestid, fieldid, subfieldid, content) FROM stdin;
\.


--
-- Data for Name: gtcpurchaserequestquotation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcpurchaserequestquotation (purchaserequestid, supplierid, value, observation) FROM stdin;
\.


--
-- Data for Name: gtcrenew; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcrenew (renewid, loanid, renewtypeid, renewdate, returnforecastdate, operator) FROM stdin;
\.


--
-- Data for Name: gtcrenewtype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcrenewtype (renewtypeid, description) FROM stdin;
1	Local
2	Web
\.


--
-- Data for Name: gtcreport; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcreport (reportid, title, description, permission, reportsql, reportsubsql, script, model, isactive, reportgroup) FROM stdin;
10	Exemplo de Script	Teste de código feito para a aba Script que retorna a quantidade de exemplares por estado do material.<BR>\nÉ simplesmente um exemplo para se ter ideia de como criar relatórios utilizando comandos de PHP.	advanced	\N	\N	\nclass FrmCustomReport extends FrmAdminReport \n{ \n    function __construct() \n    { \n        parent::__construct(); \n    } \n\n    public function getGrid() \n    { \n        $data = $this->getReportData(); \n        $args = (object) ( $_REQUEST ); \n        $sql = $data->reportSql; \n        $subSql = $data->reportSubSql; \n        $columns[]= 'Quantidade'; \n        $columns[]= 'Descrição'; \n\n        if ( $columns ) \n        { \n            foreach ( $columns as $line => $info ) \n            { \n                $gridColumns[] = new MGridColumn( $info, MGrid::ALIGN_LEFT, null, null, true, null, true); \n            } \n        } \n\n        $grid = new GnutecaGrid(null, $gridColumns, $this->MIOLO->getCurrentURL(), LISTING_NREGS); \n\n        if ( MIOLO::_REQUEST('reportType') == 'detail' ) \n        { \n            $gridArgs['0'] = '%0%'; \n            $gridArgs['event'] = 'showDetail'; \n            $hrefDetail = $this->MIOLO->getActionURL($this->module, $this->action, null, $gridArgs); \n            $grid->addActionIcon( _M('Details', $this->module), 'select', $hrefDetail ); \n            unset( $subSql ); \n        } \n\n        $sql = "SELECT count(A.exemplaryStatusId), B.description from gtcexemplarycontrol A, gtcExemplaryStatus B where A.exemplaryStatusId = B.exemplaryStatusId group by A.exemplaryStatusId, B.description order by count desc"; \n\n        $result = $this->business->executeSelect( $sql , $subSql, $args); \n        $grid->setData( $result ); \n        $grid->setIsScrollable(); \n        \n        return $grid; \n    } \n}	\N	t	\N
ACCESS_FORM	Formulários mais/menos acessados	Lista os formulários mais ou menos acessados.	basic	SELECT menu as "Formulário", count(*) as "Acessos" FROM gtcAnalytics WHERE menu != '' AND action != 'main' GROUP BY menu ORDER BY 2 $orderby LIMIT $limit;			\N	t	ACS
20	Estatística - Reserva vencida de Material Emprestado	 Gera a quantidade de reservas vencidas (usuário não retirou o material até a data limite) de materiais emprestados (material estava emprestado quando foi feita a reserva) realizadas num determinado período.	basic	SELECT \n        COUNT(DISTINCT reserveid) AS "Quantidade" \n        FROM \n            gtcreserve \n        WHERE \n            requesteddate::date BETWEEN '$beginDate' AND '$endDate' AND \n            CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE libraryUnitId = $libraryUnitId END AND \n            reservetypeid IN (1, 2) AND \n            reservestatusid IN (5, 6);			\N	t	RES
4	Estatística - Empréstimos por grupo	Gera a quantidade de empréstimos por grupos de usuários num determinado período.<BR>	basic	  SELECT a.linkId as "Código grupo",\n            b.description as "Descrição",\n            count(a.loanId) as "Empréstimos"\n        FROM gtcloan a\n    LEFT JOIN baslink b on a.linkId    = b.linkId\n        WHERE loanDate::date                >= '$beginDate'\n        AND loanDate::date                <= '$endDate'\n        AND CASE WHEN $libraryUnitId = 0\n            THEN 1                   = 1\n            ELSE a.libraryUnitId     = $libraryUnitId\n            END\n    GROUP BY a.linkId, b.description\n    ORDER BY  b.description			\N	t	EMP
17	Estatística - Reservas Material Emprestado	 Gera a quantidade de reservas de materiais emprestados (material estava emprestado quando foi feita a reserva) realizadas num determinado período.	basic	SELECT \n        COUNT(DISTINCT reserveid) AS "Quantidade" \n        FROM \n            gtcreserve \n        WHERE\n            requesteddate::date BETWEEN '$beginDate' AND '$endDate' AND \n            CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE libraryUnitId = $libraryUnitId END AND \n            reservetypeid IN (1, 2);			\N	t	RES
18	Estatística - Reservas Material Disponível	 Gera a quantidade de reservas de materiais disponíveis (material estava disponível quando foi feita a reserva) realizadas num determinado período.	basic	SELECT \n        COUNT(DISTINCT reserveid) AS "Quantidade" \n        FROM \n            gtcreserve \n        WHERE \n            requesteddate::date BETWEEN '$beginDate' AND '$endDate' AND \n            CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE libraryUnitId = $libraryUnitId END AND \n            reservetypeid NOT IN (1, 2);			\N	t	RES
19	Estatística - Reserva vencida de Material Disponível	 Gera a quantidade de reservas vencidas (usuário não retirou o material até a data limite) de materiais disponíveis (material estava disponível quando foi feita a reserva) realizadas num determinado período.	basic	SELECT \n        COUNT(DISTINCT reserveid) AS "Quantidade" \n        FROM \n            gtcreserve \n        WHERE \n            requesteddate::date BETWEEN '$beginDate' AND '$endDate' AND \n            CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE libraryUnitId = $libraryUnitId END AND \n            reservetypeid NOT IN (1, 2) AND \n            reservestatusid IN (5, 6);			\N	t	RES
21	Estatística - Acervo Impresso (Livros)	Gera a quantidade de Obras e Exemplares de livros da biblioteca, agrupado pelo CNPQ (áreas do conhecimento de acordo com o Conselho Nacional de Desenvolvimento Científico e Tecnológico).<BR>\n    É necessário que o campo 901.b (Áreas do conhecimento) na catalogação dos livros esteja preenchido.	basic	SELECT \n        C.description AS "CNPQ", \n        COUNT(DISTINCT A.controlnumber) AS "Quantidade de Obras", \n        COUNT(DISTINCT A.itemnumber) AS "Quantidade de Exemplares" \n    FROM \n        gtcexemplarycontrol A, \n        gtcmaterial B, \n        gtcmarctaglistingoption C \n    WHERE \n        A.controlnumber = B.controlnumber AND\n        CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE A.originallibraryUnitId = $libraryUnitId END AND \n        A.materialphysicaltypeid IN (1, 8) AND \n        A.materialtypeid NOT IN (23, 24, 25) AND \n        A.exemplarystatusid NOT IN (4, 5, 8) AND \n        C.marctaglistingid = '901.b' AND \n        B.content = C.option AND \n        B.fieldid = '901' AND \n        B.subfieldid = 'b' \n    GROUP BY 1 \n    ORDER BY 1;			\N	t	ACV
22	Estatística - Acervo Impresso (Periódicos)	Gera a quantidade de Obras e Exemplares de livros da biblioteca, agrupado pelo CNPQ (áreas do conhecimento de acordo com o Conselho Nacional de Desenvolvimento Científico e Tecnológico).<BR>\n    É necessário que o campo 901.b (Áreas do conhecimento) na catalogação dos periódicos esteja preenchido.	basic	SELECT \n        C.description AS "CNPQ", \n        COUNT(DISTINCT A.controlnumber) AS "Quantidade de Obras", \n        COUNT(DISTINCT A.itemnumber) AS "Quantidade de Exemplares" \n    FROM \n        gtcexemplarycontrol A, \n        gtcmaterial B, \n        gtcmarctaglistingoption C \n    WHERE \n        A.controlnumber = B.controlnumber AND\n        CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE A.originallibraryUnitId = $libraryUnitId END AND \n        A.materialphysicaltypeid IN (1, 8) AND \n        A.materialtypeid IN (24) AND \n        A.exemplarystatusid NOT IN (4, 5, 8) AND \n        C.marctaglistingid = '901.b' AND \n        B.content = C.option AND \n        B.fieldid = '901' AND \n        B.subfieldid = 'b' \n    GROUP BY 1 \n    ORDER BY 1			\N	t	ACV
23	Estatística - Empréstimos por CNPQ	Gera a quantidade de empréstimos por CNPQ (áreas do conhecimento de acordo com o Conselho Nacional de Desenvolvimento Científico e Tecnológico).<BR>\n    É necessário que o campo 901.b (Áreas do conhecimento) na catalogação esteja preenchido.<BR>\n    * O relatório pode demorar para ser gerado caso o período de empréstimo informado no filtro seja muito grande.	basic	SELECT \n        Z.content AS "ID", \n        W.description AS "CNPQ", \n        COUNT(DISTINCT X.loanid) + (SELECT COUNT(DISTINCT D.renewid) FROM gtcloan A, gtcexemplarycontrol B, gtcmaterial C, gtcrenew D WHERE A.itemnumber = B.itemnumber AND  B.controlnumber = C.controlnumber AND A.loanid = D.loanid AND  D.renewdate BETWEEN '$beginDate' AND '$endDate' AND CASE WHEN $libraryUnitId = 0\n            THEN 1                     = 1\n            ELSE A.libraryUnitId         = $libraryUnitId\n            END \n    AND  C.fieldid = '901' AND  C.subfieldid = 'b' AND C.content = Z.content) AS "Quantidade" \n    FROM \n    gtcloan X, \n    gtcexemplarycontrol Y, \n    gtcmaterial Z, \n    gtcmarctaglistingoption W \n    WHERE \n    X.itemnumber = Y.itemnumber AND \n    Y.controlnumber = Z.controlnumber AND \n    X.loandate::date BETWEEN '$beginDate' AND '$endDate'\n            AND CASE WHEN $libraryUnitId = 0\n            THEN 1                     = 1\n            ELSE X.libraryUnitId         = $libraryUnitId\n            END AND \n    W.marctaglistingid = '901.b' AND \n    Z.content = W.option AND \n    Z.fieldid = '901' AND \n    Z.subfieldid = 'b' \n    GROUP BY 1, 2 \n    ORDER BY 2;			\N	t	EMP
24	Estatística - MNC	Gera uma lista com os tipos de materiais não convencionais (CD, DVD, calculadora, fita, etc) e a quantidade de obras e exemplares de cada um	basic	SELECT \n        B.description AS "Tipo", \n        COUNT(DISTINCT A.controlnumber) AS "Quantidade de Obras", \n        COUNT(DISTINCT A.itemnumber) AS "Quantidade de Exemplares" \n    FROM \n        gtcexemplarycontrol A, \n        gtcmaterialphysicaltype B \n    WHERE \n        A.materialphysicaltypeid = B.materialphysicaltypeid AND\n        CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE A.originallibraryUnitId = $libraryUnitId END AND  \n        A.exemplarystatusid NOT IN (4, 5, 8) AND \n        A.materialtypeid <> 24 AND \n        A.materialphysicaltypeid NOT IN (1, 8, 9) \n    GROUP BY 1 \n    ORDER BY 1;			\N	t	ACV
25	Estatística - Utilização Local	Gera a quantidade de materiais utilizados localmente na biblioteca em determinado período, sem terem sidos retirados.<BR>\n    Para isto é necessário que todos materiais encontrados nas mesas sejam devolvidos e que na tela de devolução do Circulação de material esteja selecionado o tipo: Utilização local.	basic	SELECT \n        D.description AS "CNPQ", \n        COUNT(DISTINCT A.returnregisterid) AS "Quantidade" \n    FROM \n        gtcreturnregister A, \n        gtcexemplarycontrol B, \n        gtcmaterial C, \n        gtcmarctaglistingoption D  \n    WHERE \n        A.returntypeid = 2 AND \n        A.itemnumber = B.itemnumber AND \n        B.controlnumber = C.controlnumber AND \n        B.line = C.line AND \n        CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE B.libraryUnitId = $libraryUnitId END AND \n        D.marctaglistingid = '901.b' AND \n        C.content = D.option AND \n        C.fieldid = '901' AND \n        C.subfieldid = 'b' AND \n        A.date::date BETWEEN '$beginDate' AND '$endDate' \n    GROUP BY 1 \n    ORDER BY 1;			\N	t	UTL
1	Estatística - Quantidade de exemplares por unidade	Gera uma lista com a quantidade de exemplares por unidade.	basic	   SELECT A.libraryName as "Nome da biblioteca",\n            count(B.itemNumber) as "Quantidade de exemplares"\n        FROM gtcLibraryUnit      A\n    LEFT JOIN gtcExemplaryControl B\n        ON (A.libraryUnitId = B.originalLibraryUnitId)\n        WHERE CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE B.libraryUnitId = $libraryUnitId END\n    GROUP BY 1\n    ORDER BY 2 DESC			\N	t	ACV
2	Estatística - Quantidade de obras por unidade	Gera uma lista com a quantidade de obras por unidade.	basic	      SELECT A.libraryName as "Nome da biblioteca",\n            count(distinct B.controlNumber) as "Quantidade de obras"\n        FROM gtcLibraryUnit      A\n    LEFT JOIN gtcExemplaryControl B\n        ON (A.libraryUnitId = B.originalLibraryUnitId)\n        WHERE CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE B.libraryUnitId = $libraryUnitId END\n    GROUP BY 1\n    ORDER BY 2 DESC			\N	t	ACV
3	Estatítisca - Empréstimos por classe	Gera a quantidade de empréstimos por classes (classificação dada aos materiais) num determinado período.<BR>\n    É necessário que o campo 090.a (Número da classificação) na Catalogação esteja preenchido.	basic	   SELECT b.content as "Classe do Material", \n            count(a.loanId) as "Quantidade de Empréstimos" \n    FROM gtcLoan a, gtcMaterial b, gtcExemplaryControl c \n    WHERE a.itemNumber             = c.itemNumber \n        AND c.controlNumber          = b.controlNumber\n        AND b.fieldId                = '090'\n        AND b.subFieldId             = 'a'\n        AND a.loanDate              >= '$beginDate'\n        AND a.loanDate              <= '$endDate' \n        AND CASE WHEN $libraryUnitId = 0\n            THEN 1                 = 1\n            ELSE a.libraryUnitId   = $libraryUnitId\n            END\n    GROUP BY b.content\n    ORDER BY b.content			\N	t	EMP
5	Estatística - Empréstimos por grupo x classe	Gera a quantidade de empréstimos por <B>grupos de usuários X classe</B> (classificação dada aos materiais).<BR>\n    É necessário que o campo 090.a (Número da classificação) na Catalogação esteja preenchido.	basic	 SELECT a.linkId as "Código grupo", \n            d.description as "Grupo", \n            b.content as "Classe do Material", \n            count(a.loanId) as "Quantidade de Empréstimos"\n        FROM gtcLoan             a, \n            gtcMaterial         b, \n            gtcExemplaryControl c, \n            baslink             d \n    WHERE a.itemNumber             = c.itemNumber \n        AND c.controlNumber          = b.controlNumber \n        AND a.linkId                 = d.linkId \n        AND b.fieldId                = '090' \n        AND b.subFieldId             = 'a' \n        AND a.loanDate::date              >= '$beginDate' \n        AND a.loanDate::date              <= '$endDate'\n        AND CASE WHEN $libraryUnitId = 0\n            THEN 1                  = 1\n            ELSE a.libraryUnitId    = $libraryUnitId\n            END \n    group by a.linkId, d.description, b.content\n    ORDER BY 1 desc			\N	t	EMP
7	Estatística - Renovações dos grupos	Gera a quantidade de renovações por grupos de usuários num determinado período.	basic	  SELECT a.linkid as "Código grupo", \n            b.description as "Grupo", \n            count(c.renewid) as "Quantidade de renovações" \n        FROM gtcloan  a, \n            baslink  b, \n            gtcrenew c \n    WHERE a.linkid                 = b.linkid \n        AND a.loanid                 = c.loanid \n        AND c.renewdate::date        >= '$beginDate' \n        AND c.renewdate::date        <= '$endDate'\n        AND CASE WHEN $libraryUnitId = 0\n            THEN 1                  = 1\n            ELSE a.libraryUnitId    = $libraryUnitId\n            END\n    GROUP BY a.linkid, b.description \n    ORDER BY a.linkid			\N	t	EMP
8	Estatítisca - Renovações das classes	Gera a quantidade de renovações por classes (classificação dada aos materiais) num determinado período.<BR>\n    É necessário que o campo 090.a (Número da classificação) na Catalogação esteja preenchido.	basic	  SELECT b.content as "Classe do Material", \n    COUNT(d.renewid) as "Quantidade de renovações" \n    FROM gtcloan             a, \n            gtcmaterial         b, \n            gtcexemplarycontrol c, \n            gtcrenew            d \n    WHERE a.itemnumber             = c.itemnumber \n        AND c.controlnumber          = b.controlnumber \n        AND a.loanid                 = d.loanid \n        AND b.fieldId                = '090' \n        AND b.subFieldId             = 'a' \n        AND d.renewdate::date        >= '$beginDate' \n        AND d.renewdate::date        <= '$endDate'\n        AND CASE WHEN $libraryUnitId = 0\n            THEN 1                 = 1\n            ELSE a.libraryUnitId   = $libraryUnitId\n            END \n    GROUP BY b.content \n    ORDER BY b.content			\N	t	EMP
26	Estatística - Materiais Apagados	Gera a quantidade de materiais apagados em determinado período.<BR>\n    Para isto, é necessário que após ter sido apagado, o material seja devolvido e que na tela de devolução do Circulação de material esteja selecionado o tipo: Apagados.	basic	SELECT \n        COUNT(A.returnregisterid) AS "Quantidade" \n    FROM \n        gtcreturnregister A, \n        gtcexemplarycontrol B \n    WHERE \n        A.itemnumber = B.itemnumber AND \n        CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE B.libraryUnitId = $libraryUnitId END AND \n        A.returntypeid = 1 AND \n        A.date::date BETWEEN '$beginDate' AND '$endDate';			\N	t	RST
27	Lista de Coleções de Periódicos	Gera uma lista com todos os títulos de coleções de periódicos.	basic	SELECT \n            CASE WHEN \n                    B.content IS NULL \n            THEN \n                    A.content \n            ELSE \n                    A.content || ': ' || B.content \n            END AS "Título" \n    FROM \n            gtcmaterial A \n                    LEFT JOIN \n            gtcmaterial B \n                    ON (A.controlnumber = B.controlnumber AND \n                            B.fieldid = '245' AND \n                            B.subfieldid = 'b') \n    WHERE \n            A.controlnumber IN (SELECT DISTINCT controlnumber FROM gtckardexcontrol) AND \n            A.fieldid = '245' AND \n            A.subfieldid = 'a' \n    ORDER BY 1;			\N	t	MAT
28	Lista de títulos de VTs por CNPQ	Gera uma lista com todos os títulos de vídeos por CNPQ (áreas do conhecimento de acordo com o Conselho Nacional de Desenvolvimento Científico e Tecnológico).<BR>\n    É necessário que o campo 901.b (Áreas do conhecimento) na catalogação esteja preenchido e o campo 901.c (Tipo físico do material) seja DVD ou Fita VHS.	basic	SELECT \n            CASE WHEN \n                    B.content IS NULL \n            THEN \n                    A.content \n            ELSE \n                    A.content || ': ' || B.content \n            END AS "Título" \n    FROM \n            gtcmaterial X \n                    INNER JOIN \n            gtcmaterial Y \n                    ON (Y.controlnumber = X.controlnumber AND X.fieldid = '901' AND X.subfieldid = 'b' AND X.content = '$cnpq' AND Y.fieldid = '901' AND Y.subfieldid = 'c' AND Y.content IN ('2','3')) \n                    INNER JOIN \n            gtcmaterial A \n                    ON (A.controlnumber = Y.controlnumber)\n                    LEFT JOIN \n            gtcmaterial B \n                    ON (A.controlnumber = B.controlnumber AND \n                            B.fieldid = '245' AND \n                            B.subfieldid = 'b') \n    WHERE \n            A.fieldid = '245' AND \n            A.subfieldid = 'a' \n    ORDER BY 1;			\N	t	MAT
9	Estatística - Renovações dos grupo X classe	Gera a quantidade de renovações por <B>grupos de usuários X classe</B>  (classificação dada aos materiais).<BR>\n    É necessário que o campo 090.a (Número da classificação) na Catalogação esteja preenchido.	basic	 SELECT a.linkId as "Código grupo", \n            d.description as "Grupo", \n            b.content as "Classe do Material", \n            count(e.renewid) as "Quantidade de Renovações" \n        FROM gtcLoan             a, \n            gtcMaterial         b, \n            gtcExemplaryControl c, \n            baslink             d, \n            gtcrenew            e \n    WHERE a.itemNumber             = c.itemNumber \n        AND c.controlNumber          = b.controlNumber \n        AND a.linkId                 = d.linkId \n        AND a.loanid                 = e.loanid \n        AND b.fieldId                = '090' \n        AND b.subFieldId             = 'a' \n        AND e.renewDate::date        >= '$beginDate' \n        AND e.renewDate::date        <= '$endDate' \n        AND CASE WHEN $libraryUnitId = 0\n            THEN 1                  = 1\n            ELSE a.libraryUnitId    = $libraryUnitId\n            END\n    GROUP BY a.linkId, d.description, b.content \n    ORDER BY 1 desc			\N	t	EMP
12	Atrasados por classificação	Gera uma lista ordenada pela classificação dos materiais atrasados dentro de um determinado período.<BR> \n    Antes de avisar os usuários que seu empréstimo está atrasado, é bom conferir se por ventura o material não está na prateleira.	basic	(SELECT \n        A.personid AS "Código", \n        B.name AS "Nome", \n        A.itemnumber AS "Exemplar", \n        C.content || '  ' || D.content AS "Classificação", \n        (SELECT content FROM gtcmaterial WHERE fieldid = '250' AND subfieldid = 'a' AND controlnumber = C.controlnumber) AS "Edição", \n        (SELECT content FROM gtcmaterial WHERE fieldid = '949' AND subfieldid = 'v' AND controlnumber = C.controlnumber AND line = E.line) AS "Volume", \n        DATE(A.loandate) AS "Empréstimo", \n        DATE(A.returnforecastdate) AS "Prev. Devolução" \n    FROM \n        gtcLoan A, \n        basperson B, \n        gtcmaterial C, \n        gtcmaterial D, \n        gtcExemplaryControl E \n    WHERE\n        A.personid = B.personid AND \n        A.itemNumber = E.itemNumber AND \n        E.controlNumber = C.controlNumber AND \n        C.controlNumber = D.controlNumber AND  \n        C.fieldId = '090' AND \n        C.subFieldId = 'a' AND \n        D.fieldId = '090' AND \n        D.subFieldId = 'b' AND \n        A.returnforecastdate < DATE(NOW()) AND \n        DATE(A.returnforecastdate) >= '$beginDate' AND \n        DATE(A.returnforecastdate) <= '$endDate' AND \n        A.returndate IS NULL AND \n        A.itemnumber NOT ILIKE 'P%' AND \n        CASE WHEN $libraryUnitId = 0\n            THEN 1 = 1 \n        ELSE \n            A.libraryUnitId = $libraryUnitId \n        END\n    ORDER BY \n        SUBSTR(A.itemnumber, 0, 2), \n            SUBSTR(C.content, 0, 2), \n        REPLACE(C.searchcontent, '@', '1'), \n        D.content)\n    UNION ALL \n    (SELECT \n        A.personid AS "Código", \n        B.name AS "Nome", \n        A.itemnumber AS "Exemplar", \n        C.content || '  ' || D.content || ' ' || F.content AS "Classificação", \n        (SELECT content FROM gtcmaterial WHERE fieldid = '250' AND subfieldid = 'a' AND controlnumber = C.controlnumber) AS "Edição", \n        (SELECT content FROM gtcmaterial WHERE fieldid = '949' AND subfieldid = 'v' AND controlnumber = C.controlnumber AND line = E.line) AS "Volume", \n        DATE(A.loandate) AS "Empréstimo", \n        DATE(A.returnforecastdate) AS "Prev. Devolução" \n    FROM \n        gtcLoan A, \n        basperson B, \n        gtcmaterial C, \n        gtcmaterial D, \n        gtcExemplaryControl E, \n        gtcmaterial F \n    WHERE\n        A.personid = B.personid AND \n        A.itemNumber = E.itemNumber AND \n        E.controlNumber = C.controlNumber AND \n        C.controlNumber = D.controlNumber AND \n        D.controlNumber = F.controlNumber AND \n        C.fieldId = '090' AND \n        C.subFieldId = 'a' AND \n        D.fieldId = '090' AND \n        D.subFieldId = 'b' AND \n        F.fieldId = '362' AND \n        F.subFieldId = 'a' AND \n        A.returnforecastdate < DATE(NOW()) AND \n        DATE(A.returnforecastdate) >= '$beginDate' AND \n        DATE(A.returnforecastdate) <= '$endDate' AND \n        A.returndate IS NULL AND \n        A.itemnumber ILIKE 'P%' AND \n        CASE WHEN $libraryUnitId = 0\n            THEN 1 = 1 \n        ELSE \n            A.libraryUnitId = $libraryUnitId \n        END\n    ORDER BY \n        SUBSTR(A.itemnumber, 0, 2), \n        REPLACE(C.searchcontent, '@', '1'), \n        D.content, \n        F.content)			\N	t	EMP
13	Conferir reservas atendidas	Gera uma lista com todas as reservas atendidas e comunicadas, para conferir se estão na biblioteca.<BR> É recomendado sempre fazer esta conferência antes de avisar os usuários sobre a chegada de sua reserva.	intermediary	 SELECT A.itemnumber, D.content, E.content\n                FROM gtcreservecomposition A \n                LEFT JOIN gtcreserve B \n                ON (A.reserveid = B.reserveid) \n                LEFT JOIN gtcexemplarycontrol C \n                ON (A.itemnumber = C.itemnumber) \n                LEFT JOIN gtcmaterial D \n                ON (C.controlnumber = D.controlnumber AND D.fieldid = '090' AND D.subfieldid = 'a') \n                LEFT JOIN gtcmaterial E \n                ON (D.controlnumber = E.controlnumber AND E.fieldid = '090' AND E.subfieldid = 'b') \n                WHERE A.isconfirmed = 't' AND B.reservestatusid IN (2, 3) AND \n                CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE C.libraryUnitId = $libraryUnitId END \n                ORDER BY SUBSTR(C.itemnumber, 0, 2), SUBSTR(D.content, 0, 2), \n                REPLACE(D.searchcontent, '@', '1'), \n                E.content;			\N	t	RES
14	Reservas disponíveis	Gera uma lista com todas as reservas de materiais disponíveis que ainda não foram atendidas.<BR> É útil para pegar os materiais nas prateleiras e separá-los junto com os outros reservados.	intermediary	SELECT \n        result."Cód. Reserva", \n        result."Classificação", \n        result."Exemplar", \n        (SELECT Y.description FROM gtcexemplarycontrol X, gtcmaterialtype Y where X.itemnumber = result."Exemplar" AND X.materialtypeid = Y.materialtypeid LIMIT 1) as "Tipo", \n        (SELECT Y.description FROM gtcexemplarycontrol X, gtcmaterialphysicaltype Y where X.itemnumber = result."Exemplar" AND X.materialphysicaltypeid = Y.materialphysicaltypeid LIMIT 1) as "Tipo Físico", \n        (SELECT Y.content FROM gtcexemplarycontrol X, gtcmaterial Y where X.itemnumber = result."Exemplar" AND Y.fieldid = '949' AND Y.subfieldid = 'v' AND X.line = Y.line AND X.controlnumber = Y.controlnumber LIMIT 1) as "Volume", \n        (SELECT Y.content FROM gtcexemplarycontrol X, gtcmaterial Y where X.itemnumber = result."Exemplar" AND Y.fieldid = '250' AND Y.subfieldid = 'a' AND X.line = Y.line AND X.controlnumber = Y.controlnumber LIMIT 1) as "Edição" \n    FROM (\n        (SELECT \n            DISTINCT B.reserveid AS "Cód. Reserva", \n            D.content || '   ' || E.content AS "Classificação",\n            (SELECT x.itemnumber FROM gtcexemplarycontrol X, gtcreservecomposition Y WHERE X.itemnumber = Y.itemnumber AND Y.reserveid = B.reserveid LIMIT 1) AS "Exemplar", \n            SUBSTR((SELECT x.itemnumber FROM gtcexemplarycontrol X, gtcreservecomposition Y WHERE X.itemnumber = Y.itemnumber AND Y.reserveid = B.reserveid LIMIT 1), 0, 2), \n            SUBSTR(D.content, 0, 2), \n            REPLACE(D.searchcontent, '@', '1')\n        FROM \n            gtcreservecomposition A, \n            gtcreserve B, \n            gtcexemplarycontrol C, \n            gtcmaterial D, \n            gtcmaterial E \n        WHERE \n            A.reserveid = B.reserveid AND \n            A.itemnumber = c.itemnumber AND\n            C.controlnumber = D.controlnumber AND \n            D.controlnumber = E.controlnumber AND \n            D.fieldid = '090' AND \n            D.subfieldid = 'a' AND \n            E.fieldid = '090' AND \n            E.subfieldid = 'b' AND \n            B.reservestatusid = 1 AND \n            B.libraryUnitId = 1 AND \n            B.reservestatusid = 1 AND \n            C.materialtypeid <> 24 AND \n            C.exemplarystatusid = 1 AND \n            CASE WHEN $libraryUnitId = 0\n            THEN 1 = 1 \n            ELSE \n                B.libraryUnitId = $libraryUnitId \n            END\n        ORDER BY \n            4, 5, 6) \n        UNION ALL \n        (SELECT \n            DISTINCT B.reserveid AS "Cód. Reserva", \n            D.content || '   ' || E.content || '   ' || F.content AS "Classificação",\n            (SELECT x.itemnumber FROM gtcexemplarycontrol X, gtcreservecomposition Y WHERE X.itemnumber = Y.itemnumber AND Y.reserveid = B.reserveid LIMIT 1) AS "Tipo", \n            SUBSTR((SELECT x.itemnumber FROM gtcexemplarycontrol X, gtcreservecomposition Y WHERE X.itemnumber = Y.itemnumber AND Y.reserveid = B.reserveid LIMIT 1), 0, 2), \n            SUBSTR(D.content, 0, 2), \n            REPLACE(D.searchcontent, '@', '1')\n        FROM \n            gtcreservecomposition A, \n            gtcreserve B, \n            gtcexemplarycontrol C, \n            gtcmaterial D, \n            gtcmaterial E, \n            gtcmaterial F \n        WHERE \n            A.reserveid = B.reserveid AND \n            A.itemnumber = c.itemnumber AND\n            C.controlnumber = D.controlnumber AND \n            D.controlnumber = E.controlnumber AND \n            E.controlnumber = F.controlnumber AND \n            D.fieldid = '090' AND \n            D.subfieldid = 'a' AND \n            E.fieldid = '090' AND \n            E.subfieldid = 'b' AND \n            F.fieldid = '362' AND \n            F.subfieldid = 'a' AND \n            B.reservestatusid = 1 AND \n            B.libraryUnitId = 1 AND \n            B.reservestatusid = 1 AND \n            C.materialtypeid = 24 AND \n            C.exemplarystatusid = 1 AND \n            CASE WHEN $libraryUnitId = 0\n            THEN 1 = 1 \n            ELSE \n                B.libraryUnitId = $libraryUnitId \n            END\n        ORDER BY \n            4, 5, 6)\n    ) result			\N	t	RES
15	Restaurandos	Gera uma lista de todos os materiais que estão no estado restauração, com o número do tombo e seu respectivo título.	basic	SELECT \n            DISTINCT A.itemnumber, \n            B.content \n    FROM \n            gtcexemplarycontrol A, \n            gtcmaterial B, \n            gtcexemplarystatushistory C \n    WHERE \n            A.controlnumber = B.controlnumber AND \n            A.itemnumber = C.itemnumber AND \n            A.exemplarystatusid = 6 AND \n            B.fieldid = '245' AND \n            B.subfieldid = 'a' AND \n            C.exemplarystatusid = 6 AND \n            C.date::date > '$beginDate' \n    ORDER BY 2			\N	t	RST
16	Nota fiscal mês	Gera uma lista com a quantidade de materiais cadastrados por nota fiscal e centro de custo num determinado mês.<BR>\n    É necessário o preenchimento dos seguintes campos na catalogação:<BR>\n    949.f - Nota fiscal<BR>\n    949.h - Data da nota fiscal<BR>\n    949.q - Centro de custo	intermediary	select \n        A.content, b.content, G.description, H.description, COUNT(F.itemnumber), C.content, E.libraryname \n        FROM \n        gtcmaterial A, gtcmaterial B, gtcmaterial C, gtclibraryunit E, gtcexemplarycontrol F, gtcmaterialphysicaltype G, gtcmaterialtype H \n        where \n        F.acquisitiontype = 'C' and F.controlnumber = A.controlnumber and \n        F.line = A.line and a.fieldid = '949' and a.subfieldid = 'f' and A.controlnumber = B.controlnumber and \n        A.line = B.line and b.fieldid = '949' and b.subfieldid = 'h' and b.content ilike '$data' and B.controlnumber = C.controlnumber and \n        B.line = C.line and c.fieldid = '949' and c.subfieldid = 'q' and \n        F.materialtypeid <> 24 AND \n        F.originallibraryUnitId = E.libraryUnitId AND \n        G.materialphysicaltypeid = F.materialphysicaltypeid and \n        H.materialtypeid = F.materialtypeid \n        Group by 1, 2, 3, 4, 6, 7 \n        Order by 7, 1, 2, 3, 4, 6, 5;			\N	t	ACV
29	Estatística - Coleções X Quantidade de Fascículos	Gera uma lista com todos os títulos das coleções e a respectiva quantidade de fascículos.	basic	SELECT \n            A.content AS "Coleção", \n            COUNT(DISTINCT B.controlnumber) AS "Quantidade de Fascículos" \n    FROM \n            gtcmaterial A, \n            gtcmaterial B, \n            gtckardexcontrol C \n    WHERE \n            A.controlnumber::TEXT = B.content AND \n            A.controlnumber = C.controlnumber AND \n            A.fieldid = '245' AND \n            A.subfieldid = 'a' AND \n            B.fieldid = '773' AND \n            B.subfieldid = 'w' \n    GROUP BY 1 \n    ORDER BY 1 ASC;			\N	t	ACV
30	Estatística - Exemplares Catalogados por Unidade	Gera a quantidade de exemplares (todos os tipos de materiais) cadastrados num determinado período.	basic	SELECT \n            COUNT(*) AS "Quantidade" \n    FROM \n            gtcexemplarycontrol \n    WHERE \n            entrancedate::date BETWEEN '$beginDate' AND '$endDate' AND\n        CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE originallibraryUnitId = $libraryUnitId END;			\N	t	ACV
31	Estatística - Artigos Processados por Mês	Gera a quantidade de artigos cadastrados por período em todas as biliotecas	basic	SELECT \n            COUNT(*) \n    FROM \n            gtcmaterialcontrol \n    WHERE \n            entrancedate BETWEEN '$beginDate' AND '$endDate' AND \n            category = 'SA' AND \n            level = '4';			\N	t	ACV
6	Obras mais reservadas	Lista o título das obras mais reservadas num determinado período.<BR>\n    Para não demorar muito a geração do relatório, foi incluído um limite de itens na listagem.	intermediary	  SELECT d.controlNumber as "Número de controle", d.content as "Título", \n            count(distinct b.reserveId) as "Quantidade de reservas" \n        FROM gtcReserve            a, \n            gtcReserveComposition b, \n            gtcExemplaryControl   c, \n            gtcMaterial           d \n    WHERE a.reserveId              = b.reserveId \n        AND b.itemNumber             = c.itemNumber \n        AND c.controlNumber          = d.controlNumber \n        AND a.requestedDate::date    >= '$beginDate'\n        AND a.requestedDate::date    <= '$endDate' \n        AND (d.fieldId = '245' and d.subfieldId = 'a') \n        AND CASE WHEN $libraryUnitId = 0\n            THEN 1                 = 1\n            ELSE a.libraryUnitId   = $libraryUnitId\n            END\n    GROUP BY d.controlNumber, d.content \n    ORDER BY 3 desc limit $limit			\N	t	RES
32	Lista de coleções por CNPQ	Gera uma lista contendo a classificação e o título de todas coleções, agrupadas pelo CNPQ (áreas do conhecimento de acordo com o Conselho Nacional de Desenvolvimento Científico e Tecnológico).<BR>\n    É necessário que os seguinte campos na catalogação estejam preenchidos:<BR>\n    090.a - Número de classificação<BR>\n    090.b - Cutter<BR>\n    245.a - Título<BR>\n    901.b - Áreas do conhecimento	basic	SELECT DISTINCT\n            C.content AS "Classificação", \n            D.content AS "Cutter", \n            B.content ||\n                    CASE WHEN\n                        (SELECT content FROM gtcmaterial WHERE fieldid = '245' AND subfieldid = 'b' AND controlnumber = D.controlnumber) IS NULL\n                    THEN\n                        ''\n                    ELSE\n                        ':' || (SELECT content FROM gtcmaterial WHERE fieldid = '245' AND subfieldid = 'b' AND controlnumber = D.controlnumber)\n                    END AS "Título", \n            F.description AS "CNPQ" \n    FROM \n            gtcmaterial B,\n            gtcmaterial C, \n            gtcmaterial D, \n            gtcmaterial E, \n            gtcmarctaglistingoption F \n    WHERE \n            B.controlnumber = C.controlnumber AND \n            C.controlnumber = D.controlnumber AND \n            D.controlnumber = E.controlnumber AND \n            C.fieldid = '090' AND \n            C.subfieldid = 'a' AND \n            D.fieldid = '090' AND \n            D.subfieldid = 'b' AND \n            E.fieldid = '901' AND \n            E.subfieldid = 'b' AND \n            E.content = F.option AND \n            F.marctaglistingid = '901.b' AND \n            B.controlnumber IN (SELECT DISTINCT controlnumber FROM gtckardexcontrol) AND \n            B.fieldid = '245' AND \n            B.subfieldid = 'a' \n    ORDER BY 4, 1, 2;			\N	t	MAT
33	Estatística - Estimativa de Visita	Gera uma estimativa de quantas pessoas utilizaram a biblioteca num determinado período.<BR>\n    Soma a quantidade de empréstimos, devoluções, renovações, reservas solicitadas e confirmadas por pessoas diferentes.	basic	SELECT \n            COUNT(DISTINCT result."A")\n    FROM \n            (\n            (SELECT \n                    DISTINCT personid::TEXT || '-' || DATE_PART('hour', loandate) || '-' || DATE_PART('day', loandate) AS "A" \n            FROM \n                    gtcloan \n            WHERE \n                    loandate::date BETWEEN '$beginDate' AND '$endDate' AND \n            CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE libraryUnitId = $libraryUnitId END \n            )\n            UNION\n            (SELECT \n                    DISTINCT personid::TEXT || '-' || DATE_PART('hour', returndate) || '-' || DATE_PART('day', returndate) AS "A" \n            FROM \n                    gtcloan \n            WHERE \n                    returndate BETWEEN '$beginDate' AND '$endDate' AND \n            CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE libraryUnitId = $libraryUnitId END \n            ) \n            UNION \n            (SELECT \n                    DISTINCT personid::TEXT || '-' || DATE_PART('hour', requesteddate) || '-' || DATE_PART('day', requesteddate) AS "A" \n            FROM \n                    gtcreserve \n            WHERE \n                    requesteddate BETWEEN '$beginDate' AND '$endDate' AND \n                    reservetypeid IN (1, 3) AND \n            CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE libraryUnitId = $libraryUnitId END \n            )\n        UNION \n        (SELECT \n            DISTINCT Y.personid::TEXT || '-' || DATE_PART('hour', renewdate) || '-' || DATE_PART('day', renewdate) AS "A" \n        FROM \n            gtcrenew X, \n            gtcloan Y \n        WHERE \n            X.loanid = Y.loanid AND \n            CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE libraryUnitId = $libraryUnitId END AND \n            renewdate BETWEEN '$beginDate' AND '$endDate'\n        )\n        ) AS result;			\N	t	UTL
34	Estatística - Materiais Inseridos no Sistema por operador	Gera uma lista com os operadores e a quantidade de materiais (artigos, coleções, exemplares e kardex) que cada um cadastrou num determinado período.	intermediary	SELECT \n            'Exemplares', \n            operator, \n            COUNT(*) \n    FROM \n            gtcmaterialhistory \n    WHERE \n            fieldid = '949' AND \n            subfieldid = 'a' AND \n            data::date BETWEEN '$beginDate' AND '$endDate' AND \n            chancestype = 'I' \n    GROUP BY 1, 2 \n    UNION \n    SELECT \n            'Artigos', \n            B.operator, \n            COUNT(*) \n    FROM \n            gtcmaterialcontrol A, \n            gtcmaterialhistory B \n    WHERE \n            A.controlnumber = B.controlnumber AND \n            A.category = 'SA' AND \n            A.level = '4' AND \n            B.fieldid = '773' AND \n            B.subfieldid = 'w' AND \n            B.data::date BETWEEN '$beginDate' AND '$endDate' AND \n            B.chancestype = 'I' \n    GROUP BY 1, 2 \n    UNION \n    SELECT \n            'Kardex', \n            operator, \n            COUNT(*) \n    FROM \n            gtcmaterialhistory \n    WHERE \n            fieldid = '960' AND \n            subfieldid = 'a' AND \n            data::date BETWEEN '$beginDate' AND '$endDate' AND \n            chancestype = 'I' \n    GROUP BY 1, 2 \n    UNION \n    SELECT \n            'Coleções', \n            B.operator, \n            COUNT(*) \n    FROM \n            gtcmaterialcontrol A, \n            gtcmaterialhistory B \n    WHERE \n            A.controlnumber = B.controlnumber AND \n            A.category = 'SE' AND \n            A.level = '#' AND \n            B.fieldid = '245' AND \n            B.subfieldid = 'a' AND \n            B.data::date BETWEEN '$beginDate' AND '$endDate' AND \n            B.chancestype = 'I' \n    GROUP BY 1, 2  \n    ORDER BY 1, 2;			\N	t	ACV
35	Estatística - Empréstimos Por Turno	Gera a quantidade de empréstimos + renovações locais por turno.<BR>\n    Para seu correto funcionamento, deve ser selecionado 1 dia de cada vez.<BR>\n    * Manhã: entre 0 e 12 horas<BR>\n    * Tarde: entre 12 e 18 horas<BR>\n    * Noite: entre 18 e 24 horas	basic	SELECT \n    '1-Manhã' AS "Turno", \n            count(distinct loanId) + (SELECT COUNT(DISTINCT B.renewId) \n        FROM gtcLoan A, gtcRenew B \n            WHERE A.loanId = B.loanId \n            AND B.renewdate BETWEEN '$beginDate 00:00:00' AND '$endDate 12:00:00' \n            AND CASE WHEN $libraryUnitId = 0\n            THEN 1                     = 1\n            ELSE libraryUnitId         = $libraryUnitId\n            END \n            AND B.renewtypeid = 1 ) \n            AS "Quantidade" \n        FROM gtcLoan \n            WHERE loanDate BETWEEN '$beginDate 00:00:00' AND '$endDate 12:00:00' \n            AND CASE WHEN $libraryUnitId = 0\n            THEN 1                     = 1\n            ELSE libraryUnitId         = $libraryUnitId\n            END \n    UNION SELECT \n    '2-Tarde' AS "Turno", \n            count(distinct loanId) + (SELECT COUNT(DISTINCT B.renewId) \n        FROM gtcLoan A, gtcRenew B \n            WHERE A.loanId = B.loanId \n            AND B.renewdate BETWEEN '$beginDate 12:00:00' AND '$endDate 18:00:00' \n            AND CASE WHEN $libraryUnitId = 0\n            THEN 1                     = 1\n            ELSE libraryUnitId         = $libraryUnitId\n            END \n            AND B.renewtypeid = 1 ) \n                AS "Quantidade" \n        FROM gtcLoan \n            WHERE loanDate BETWEEN '$beginDate 12:00:00' AND '$endDate 18:00:00' \n            AND CASE WHEN $libraryUnitId = 0\n            THEN 1                     = 1\n            ELSE libraryUnitId         = $libraryUnitId\n            END \n    UNION SELECT \n    '3-Noite' AS "Turno", \n            count(distinct loanId) + (SELECT COUNT(DISTINCT B.renewId) \n        FROM gtcLoan A, gtcRenew B \n            WHERE A.loanId = B.loanId \n            AND B.renewdate BETWEEN '$beginDate 18:00:00' AND '$endDate 00:00:00' \n            AND CASE WHEN $libraryUnitId = 0\n            THEN 1                     = 1\n            ELSE libraryUnitId         = $libraryUnitId\n            END \n            AND B.renewtypeid = 1 ) \n                AS "Quantidade" \n        FROM gtcLoan \n            WHERE loanDate BETWEEN '$beginDate 18:00:00' AND '$endDate 23:59:59' \n            AND CASE WHEN $libraryUnitId = 0\n            THEN 1                     = 1\n            ELSE libraryUnitId         = $libraryUnitId\n            END \n    ORDER BY 1;			\N	t	EMP
36	Estatística - Materiais Processados por Mês	Gera uma lista com a quantidade de materiais (exemplares, artigos e obras) cadastrados em determinado período para a primeira biblioteca do sistema.<BR>\n    A geração deste relatório pode ser demorada.	basic	SELECT \n            '1-Exemplares' AS "Materiais", \n            COUNT(*) AS "Quantidade" \n    FROM \n            gtcexemplarycontrol \n    WHERE \n            entrancedate::date BETWEEN '$beginDate' AND '$endDate'\n    UNION \n    SELECT \n            '2-Artigos' AS "Materiais",\n            COUNT(*) AS "Quantidade" \n    FROM \n            gtcmaterialcontrol \n    WHERE \n            entrancedate::date BETWEEN '$beginDate' AND '$endDate' AND \n            category = 'SA' AND \n            level = '4' \n    UNION \n    SELECT \n            '3-Obras' AS "Materiais", \n            COUNT(*) AS "Quantidade" \n    FROM \n            gtcmaterialcontrol \n    WHERE \n            entrancedate::date BETWEEN '$beginDate' AND '$endDate' ORDER BY 1;			\N	t	ACV
37	Obras mais retiradas	Lista o título das obras mais retiradas num determinado período.<BR>\n    Para não demorar muito a geração do relatório, foi incluído um limite de itens na listagem.	intermediary	SELECT \n            c.controlNumber as "Número de controle", c.content as "Título", count(distinct a.loanId) as "Quantidade de empréstimos" \n    FROM    gtcLoan a, \n            gtcExemplaryControl b, \n            gtcMaterial c \n    WHERE   a.itemNumber = b.itemNumber AND \n            b.controlNumber = c.controlNumber AND \n            a.loanDate::date >= '$beginDate' AND \n            a.loanDate::date <= '$endDate' AND \n            (c.fieldId = '245' and c.subfieldId = 'a') \n            AND CASE WHEN $libraryUnitId = 0 THEN 1 = 1 ELSE a.libraryUnitId = $libraryUnitId END \n    GROUP BY c.controlNumber, \n            c.content ORDER BY 3 desc limit $limit			\N	t	EMP
PERSON_ENTRY	Pessoas inseridas por período.	 Relatório de todos os usuários que foram inseridos no sistema. Em um determinado período.	basic	SELECT CASE WHEN L.description IS NULL THEN 'Sem vínculo' ELSE L.description END as "Vínculo", count(distinct(P.personid)) as "Quantidade" FROM \n        basperson P \n        LEFT JOIN baspersonlink PL ON P.personid = PL.personid\n        LEFT JOIN baslink L ON PL.linkid = L.linkid\n        WHERE P.dateIn BETWEEN '$beginDate' AND '$endDate'\n\n        GROUP BY L.description;			\N	t	PRS
38	Gerenciamento de Dicionários	Relatório de gerenciamento de dicionário visa detectar quais informações estão faltando ou sobrando em um dicionario, facilitando suas manutenção.\n    <br/>\n    <b>Sobrando:</b> quer dizer que o dado está sobrando no dicionário, ou seja nunca foi usado em nenhum material.\n    <br/>\n    <b>Faltando:</b> significa que o conteúdo foi utilizado em algum material, mas não foi adicionado ao dicionário.	intermediary	SELECT '''' || content || '''' as "Conteúdo", 'Faltando' as "Tipo" FROM (\n    SELECT distinct content\n    FROM\n    (\n        SELECT substring(subTag, 0, position('.' in subTag)) as field,\n            substring(subTag, position('.' in subTag)+1) as subfield\n        FROM regexp_split_to_table( (\n                    SELECT tags\n                    FROM gtcDictionary where dictionaryid =$dictionaryId ) , ',' ) AS subTag )\n            AS tags\n    INNER JOIN gtcMaterial M ON (tags.field = M.fieldid AND tags.subfield = M.subfieldID )\n\n    EXCEPT\n\n    SELECT dictionaryContent FROM gtcDictionaryContent where dictionaryId = $dictionaryId\n\n    ) as faltando\n\n    UNION\n\n    SELECT '''' || dictionaryContent || '''' as "Conteúdo", 'Sobrando' as "Tipo" FROM (\n\n    SELECT dictionaryContent FROM gtcDictionaryContent where dictionaryId = $dictionaryId\n\n    EXCEPT\n\n    SELECT distinct content\n    FROM\n    (\n        SELECT substring(subTag, 0, position('.' in subTag)) as field,\n            substring(subTag, position('.' in subTag)+1) as subfield\n        FROM regexp_split_to_table( (\n                    SELECT tags\n                    FROM gtcDictionary where dictionaryid =$dictionaryId ) , ',' ) AS subTag )\n            AS tags\n    INNER JOIN gtcMaterial M ON (tags.field = M.fieldid AND tags.subfield = M.subfieldID )\n\n    ) as sobrando\n    			\N	t	ACV
40	Lista ordenada para inventário	Este relatório lista todos os exemplares da unidade de biblioteca selecionada de forma ordenada para a realização do \n    inventário.\n\n    <br><br>\n    <b>Exemplos de preenchimento do campo "Classificação":</b> <br>\n    <table align=center>\n    <tr align=left>\n    <td align=left>\n    <b>51</b> - Pesquisa pela classificação <b>51</b>\n    </td>\n    </tr>\n    <tr align=left>\n    <td>\n    <b>5%</b> - Pesquisa pelas classificações que <b>começam</b> com <b>5</b>\n    </tr>\n    </td>\n    </table>\n\n    <br>\n    É necessário que o campo 090.a (Número de Classificação) na catalogação esteja preenchido.	basic	                    SELECT MC.controlnumber as "Número de controle", \n                            M.content as "Chamada",\n                            (SELECT content FROM gtcMaterial WHERE fieldid = '090' AND subfieldid = 'b' AND controlNumber = MC.controlNumber) as "Cutter",\n                            EC.itemNumber as "Exemplar",\n                            ES.description as "Estado do exemplar" \n                        FROM gtcMaterialControl MC\n                    INNER JOIN gtcMaterial M ON (MC.controlnumber = M.controlnumber AND fieldId = '090' and subfieldid = 'a' AND ( content LIKE '$classification' ) ) --Filtro de classificação, um por vez, sem explode.\n                    INNER JOIN gtcExemplaryControl EC ON (EC.controlnumber = MC.controlnumber) \n                    LEFT JOIN gtcExemplaryStatus ES ON (ES.exemplaryStatusID = EC.exemplaryStatusId)\n                        WHERE EC.libraryUnitId = '$libraryUnitId' -- um filtro por unidade, ou seja, sem a opção "Todas" \n                    ORDER BY split_part(M.searchContent, '@', 1),\n                            split_part(M.searchContent, '@', 2),\n                            MC.controlnumber\n    			\N	t	MAT
MATERIAL_EVALUATION	Avaliações de Material	Este relatÃ³rio disponibiliza totais sobre quantidades, média e pontuações quanto a avaliações efetuadas por pesquisadores/usuáios/alunos. é importante considerar que todas avaliaçõees nulas ou zeradas são desconsideradas.	basic	   SELECT e.controlNumber as "Número de controle",\n            m.content as Autor, t.content as "Título" ,\n            count(evaluatioN) as "Quant." ,\n            round(avg(evaluation),2) as "Média",\n            count(evaluation) * sum(evaluation) as "Pontuação"\n        FROM gtcmaterialevaluation e\n    LEFT JOIN gtcMaterial m ON ( e.controlNumber = m.controlNumber and fieldid = '100' and subfieldid='a' )\n    LEFT JOIN gtcMaterial t ON ( e.controlNumber = t.controlNumber and t.fieldid = '245' and t.subfieldid='a' )\n        WHERE e.controlNumber in ( SELECT controlNumber FROM gtcExemplaryControl ex WHERE CASE WHEN $libraryUnitId::varchar = '0' THEN true ELSE libraryUNitId = $libraryUnitId END )\n        AND ( evaluation > 0 or evaluation is not null )\n    GROUP BY e.controlNumber , m.content, t.content\n    ORDER BY $order $type\n        LIMIT $limit;\n    			\N	t	ACV
41	Estatística - Gênero Material		basic	SELECT \n            A.materialgenderid as "Id", \n            B.description as "Descrição", \n            count(distinct controlnumber) as "Quantidade de obras",\n            count(itemnumber) as "Quantidade Exemplares"\n\n    FROM \n            gtcexemplarycontrol A \n\n    INNER JOIN \n            gtcmaterialgender B \n            ON \n                    (A.materialgenderid = B.materialgenderid) \n\n    WHERE (A.libraryUnitId = $libraryUnitId OR 0 = $libraryUnitId)\n\n            Group by 1, 2;			\N	t	ACV
MULTAS_PERIODO	Multas por período	Retorna quantia das multas no período especificado.	basic	 SELECT\n            loanid as "Código do empréstimo",\n            fineid as "Código da multa",\n            to_char(beginDate,'dd/mm/yyyy hh24:MI:SS') as "Data inicial",\n            to_char(enddate,'dd/mm/yyyy hh24:MI:SS') as "Data final" ,\n            libraryname as "Unidade",\n            operador as "Operador",\n            description as "Estado do empréstimo",\n            value as "Valor"\n        FROM\n        (\n            SELECT\n                f.loanid,\n                F.fineid,\n                f.begindate,\n                f.enddate ,\n                U.libraryname,\n                (SELECT operator FROM gtcfinestatushistory H WHERE H.fineid = F.fineid AND H.date = (SELECT max(date) from gtcfinestatushistory WHERE fineid = F.fineid) ) as "operador",\n                s.description ,\n                F.value ,\n                F.finestatusid\n            FROM     gtcfine as F\n                INNER JOIN gtcfinestatus as S  ON F.finestatusid = S.finestatusid\n                INNER JOIN gtcloan L  ON L.loanid = F.loanid\n                INNER JOIN gtclibraryunit U  ON L.libraryunitid = U.libraryunitid\n\n                AND CASE WHEN $unityId > 0\n                THEN  L.libraryunitid = $unityId\n                ELSE 1=1\n                END\n                AND CASE WHEN $status > 0\n                THEN  F.finestatusid = $status\n                ELSE 1=1\n                END\n        ) as AA\n\n        WHERE\n\n        endDate::date >= '$beginDate'::date\n        AND endDate::date <= '$finalDate'::date\n        AND CASE WHEN '$operator' = 'Todos' THEN  1=1\n        ELSE operador = '$operator'\n        END\n    			\N	t	EMP
ACTIVE_PERSON	Pessoas ativas		basic	    SELECT A.personId as "Código",\n            A.name as "Nome",\n            C.description as "Vínculo",\n            COALESCE(to_char(B.dateValidate, 'dd/mm/yyyy'),'Permanente') as "Data de validade"\n        FROM basPerson A\n    INNER JOIN basPersonLink B\n            ON (A.personId = B.personid)\n    INNER JOIN basLink C\n            ON (B.linkId = C.linkId)\n        WHERE (B.dateValidate >= now()::date OR B.dateValidate IS NULL)\n        AND CASE WHEN $linkId = 0 THEN 1=1\n        ELSE B.linkId = $linkId\n        END\n        ORDER BY A.name\n    			\N	t	PRS
LOAN_BY_TYPE	Quantidade de empréstimos por tipo	Mostra quais os tipos de materiais mais emprestados em um determinado período em ordem decrescente de quantidade de empréstimos o campo. O campo tipo do material 949.a deve estar preenchido para que o material conste neste relatório.	basic	    SELECT C.materialTypeId as "Código",\n            C.description as "Tipo do material",\n            count(*) as "Quantidade de empréstimos"\n        FROM gtcLoan A\n    INNER JOIN gtcExemplaryControl B\n            ON (A.itemNumber = B.itemNumber)\n    INNER JOIN gtcMaterialType C\n            ON (B.materialTypeId = C.materialTypeId)\n        WHERE A.loanDate between '$beginDate'::TIMESTAMP and '$finalDate'::TIMESTAMP\n        AND CASE WHEN $materialTypeId = 0 THEN 1=1\n            ELSE B.materialTypeId = $materialTypeId\n            END\n        AND CASE WHEN $libraryUnitId = 0 THEN 1=1\n            ELSE B.libraryUnitId = $libraryUnitId\n            END\n    GROUP BY 1, 2\n    ORDER BY 3 DESC;\n    			\N	t	EMP
MOST_BORROWED	Materiais mais retirados	Exibe quais os materiais mais retirados da biblioteca mostrando número de controle, título e quantidade de empréstimos em ordem decrescente de quantidade de empréstimos. O campo tipo do material 949.a deve estar preenchido para que o material conste neste relatório.	basic	    SELECT C.controlNumber as "Número de controle",\n            C.content as Título,\n            count(*) as "Quantidade de empréstimos"\n        FROM gtcLoan A\n    INNER JOIN gtcExemplaryControl B\n            ON (A.itemNumber = B.itemNumber)\n    INNER JOIN gtcMaterial C\n            ON (B.controlNumber = C.controlNumber AND C.fieldId = '245' AND C.subfieldId = 'a')\n        WHERE A.loanDate between '$beginDate'::timestamp and '$finalDate'::timestamp\n        AND CASE WHEN $materialTypeId = 0 THEN 1=1\n            ELSE B.materialTypeId = $materialTypeId\n            END\n        AND CASE WHEN $libraryUnitId = 0 THEN 1=1\n            ELSE B.libraryUnitId = $libraryUnitId\n            END\n    GROUP BY 1, 2\n    ORDER BY 3 DESC;\n    			\N	t	EMP
LOAN_BY_ENTERPRISE	Empréstimos por empresa	Exibe quantidade de empréstimos por empresa em ordem decrescente.	basic	    SELECT D.label as Empresa,\n            count(*) as "Quantidade de empréstimos"\n        FROM gtcLoan A\n    INNER JOIN basPerson B\n            ON (A.personId = B.personId)\n    INNER JOIN gtcExemplaryControl C\n            ON (C.itemNumber = A.itemNumber)\n    LEFT JOIN basDomain D\n            ON (D.domainid = 'PERSON_GROUP' AND key = B.personGroup)\n        WHERE A.loanDate between '$beginDate'::TIMESTAMP and '$finalDate'::TIMESTAMP\n        AND CASE WHEN $libraryUnitId = 0 THEN 1=1\n            ELSE C.libraryUnitId = $libraryUnitId\n            END\n    GROUP BY 1\n    ORDER BY 2 DESC;\n    			\N	t	EMP
LOAN_BY_PERSON	Empréstimos por pessoa	Exibe quantidade de empréstimos por usuário em ordem decrescente por quantidade de empréstimo.	basic	    SELECT B.personId as "Código",\n            B.name as "Nome",\n            count(*) as "Quantidade de empréstimos"\n        FROM gtcLoan A\n    INNER JOIN basPerson B\n            ON (A.personId = B.personId)\n    INNER JOIN gtcExemplaryControl C\n            ON (C.itemNumber = A.itemNumber)\n        WHERE A.loanDate between '$beginDate'::TIMESTAMP and '$finalDate'::TIMESTAMP\n        AND CASE WHEN $libraryUnitId = 0 THEN 1=1\n            ELSE C.libraryUnitId = $libraryUnitId\n            END\n    GROUP BY 1, 2\n    ORDER BY 3 DESC;\n    			\N	t	EMP
MATERIAL_TYPE_STATIS	Estatística - Tipo de material	Exibe a quantidade de materiais e exemplares de um determinado tipo de material ordenando em ordem decrescente pela quantidade de materiais e exemplares. Para que o material conste neste relatório o campo 901.a deve estar preenchido.	basic	    SELECT A.materialTypeId as "Id",\n            A.description as "Tipo",\n            (SELECT count(distinct A1.controlnumber) FROM gtcMaterialControl A1 LEFT JOIN gtcExemplaryControl B1 ON (A1.controlNumber = B1.controlNumber)  WHERE A1.materialTypeId = A.materialTypeId AND CASE WHEN $libraryUnitId = 0 THEN 1=1 ELSE libraryUnitId = $libraryUnitId END) as "Obras",\n            (SELECT count(materialTypeId) FROM gtcExemplaryControl WHERE materialTypeId = A.materialTypeId AND CASE WHEN $libraryUnitId = 0 THEN 1=1 ELSE libraryUnitId = $libraryUnitId END) as "Exemplares"\n        FROM gtcMaterialType A\n        WHERE CASE WHEN $materialTypeId = 0 THEN 1=1\n                    ELSE A.materialTypeId = $materialTypeId\n                END\n    order by 3 desc, 4 desc\n    			\N	t	ACV
INVENTARY	Inventário	Exibe todos os exemplares existentes dentro dos filtros de "Classificação" e "Unidade de biblioteca", estes sendo estes ordenados pelo campo "Ordenar por".\n\n    Para que os exemplares constem neste relatório os seguintes campos devem ser preenchidos :\n\n    <b>090.a, 100.a, 245.a</b>	basic	    SELECT A.controlnumber as "Número de controle",\n            A.content as "Classificação",\n            D.content as "Título",\n            E.content as "Autor",\n            B.itemNumber as "Exemplar",\n            B.exemplaryStatusId || ' - ' || C.description as "Estado"\n\n        FROM gtcMaterial A\n    INNER JOIN gtcExemplaryControl B\n            ON (A.controlNumber = B.controlNumber)\n    INNER JOIN gtcExemplaryStatus C\n            ON (B.exemplaryStatusId = C.exemplaryStatusId)\n    LEFT JOIN gtcMaterial D\n            ON (A.controlNumber = D.controlNumber AND D.fieldid = '245' AND D.subfieldid = 'a')\n    LEFT JOIN gtcMaterial E\n            ON (A.controlNumber = E.controlNumber AND E.fieldid = '100' AND E.subfieldid = 'a')\n\n    where A.fieldid = '090' and A.subfieldid = 'a'\n\n    AND CASE WHEN $libraryUnitId = 0 THEN 1=1\n            ELSE B.libraryUnitId = $libraryUnitId\n        END\n    AND split_part(A.searchcontent, '@', 1) between prepareSearchContent('090.a','$beginClassification','') AND prepareSearchContent('090.a','$finalClassification','')\n\n    ORDER BY $orderBy.searchcontent;\n    			\N	t	ACV
MOST_BORROWED_SUB	Assuntos mais retirados.	Exibe quais os assuntos dos materiais mais retirados em ordem decrescente de quantidade. Para que os empréstimos sejam contabilizados é necessário que o campo <b>650.a</b> seja preenchido.	basic	    SELECT C.content as Assunto,\n            count(*) as "Quantidade de empréstimos"\n        FROM gtcLoan A\n    INNER JOIN gtcExemplaryControl B\n            ON (A.itemNumber = B.itemNumber)\n    INNER JOIN gtcMaterial C\n            ON (B.controlNumber = C.controlNumber AND C.fieldId = '650' AND C.subfieldId = 'a')\n        WHERE A.loanDate between '$beginDate' and '$endDate'\n        AND CASE WHEN $libraryUnitId = 0 THEN 1=1\n                    ELSE B.libraryUnitId = $libraryUnitId\n            END\n    GROUP BY 1\n    ORDER BY 2 DESC;\n    			\N	t	EMP
TOTAL_ACQUISITION	Totalização de tipo de aquisição	Este relatório lista a totalização de exemplares por tipos de aquisição por período e unidade. Utiliza o campo 949.c como referência, caso esse campo não seja preenchido o material não será contabilizado.	basic	    SELECT o.description as "Tipo de aquisição",\n            count(controlNumber) as "Quantidade"\n        FROM gtcexemplarycontrol e\n    INNER JOIN gtcmarctaglistingoption o\n            ON ( lower(e.acquisitiontype) = lower( o.option) and marctaglistingid = '949.c'  )\n        AND entrancedate >= '$beginDate'\n        AND entranceDate <= '$endDate' \n        AND CASE WHEN $libraryUnitId = 0 THEN 1=1\n                    ELSE libraryUnitId = $libraryUnitId\n            END\n    GROUP BY acquisitiontype, o.description\n    ORDER BY 2 desc;			\N	t	ACV
LOAN_BY_ENT_SUB	Empréstimos por empresa/assuntos	Este relatório exibe a quantidade de empréstimos de materiais por assunto que uma empresa efetuou.\n    Para que os materiais constem neste relatório o campo <b>650.a</b> deve estar preenchido.	basic	   SELECT B.personGroup as Empresa, \n            D.content as "Assunto", \n            count(*) as "Quantidade de empréstimos"\n        FROM gtcLoan A \n    INNER JOIN basPerson B \n            ON (A.personId = B.personId) \n    INNER JOIN gtcExemplaryControl C \n            ON (C.itemNumber = A.itemNumber) \n    INNER JOIN gtcMaterial D\n            ON (C.controlNumber = D.controlNumber AND D.fieldId = '650' AND D.subfieldId = 'a') \n    LEFT JOIN basDomain E\n            ON (E.domainid = 'PERSON_GROUP' AND key = B.personGroup)\n        WHERE A.loanDate between '$beginDate' and '$endDate' \n        AND CASE WHEN $libraryUnitId = 0 THEN 1=1 \n                    ELSE C.libraryUnitId = $libraryUnitId \n            END \n        AND CASE WHEN '$personGroup' = '0' THEN 1=1 \n                ELSE B.personGroup = '$personGroup' \n            END \n    GROUP BY 1, 2 \n    ORDER BY 3 DESC; 			\N	t	EMP
TIPO_AQUISICAO_LISTA	Lista de tipos de aquisição	Lista os materiais pelo tipo de aquisição, para que o material seja contabilizado nesta listagem o campo <b>949.c</b> deste deve estar preenchido.	basic	SELECT \n                a.itemnumber as "Numero do tombo", \n                a.controlnumber as "Numero de controle", \n                b.content as "Título",\n                c.content as "Autor",\n                (SELECT description FROM gtcmarctaglistingoption WHERE marctaglistingid = '949.c' and option = a.acquisitiontype) as "Tipo de aquisição",\n                to_char(a.entrancedate,'DD/MM/YYYY') as "Data de entrada"\t\n        FROM \n                gtcexemplarycontrol as a\n            LEFT JOIN gtcmaterial as b ON (a.controlnumber = b.controlnumber AND b.fieldid = '245' AND b.subfieldid = 'a')\n            LEFT JOIN gtcmaterial as c ON (a.controlnumber = c.controlnumber AND c.fieldid = '100' AND c.subfieldid = 'a')\n        WHERE\n                CASE WHEN '$aquisitionType' = '0' THEN 1=1\n                ELSE a.acquisitiontype = '$aquisitionType'\n                END\n                AND CASE WHEN  '$libraryUnitId' = '0' THEN 1=1\n                ELSE a.libraryunitid = '$libraryUnitId'\n                END\n                AND a.entrancedate >= '$beginDate'\n                AND a.entrancedate <= '$finalDate'\nORDER BY 6			\N	t	ACV
INSERIDO_PERIODO	Lista de materiais inseridos por período	Lista todos materiais inseridos dentro de um determinado período.\n    Para que o material seja contabilizado corretamente será necessário o preenchimentos das etiquetas <b>950.a</b>,<b>90.a</b>,<b>245.a</b>	basic	SELECT \n            (SELECT distinct(content) from gtcmaterial where fieldid = '950' and subfieldid = 'a' and controlnumber = E.controlnumber limit 1) as Obra,\n            E.controlnumber as Controle,\n            E.itemnumber as Exemplar,\n            (SELECT content from gtcmaterial where fieldid = '245' and subfieldid = 'a' and controlnumber = E.controlnumber LIMIT 1) as Título,\n            (SELECT description FROM gtcexemplarystatus where exemplarystatusid = E.exemplarystatusid)  as Estado,\n            (SELECT distinct(content) from gtcmaterial where fieldid = '090' and subfieldid = 'a' and controlnumber = E.controlnumber limit 1) as Classificação\n    FROM \n            gtcmaterialcontrol D \n            INNER JOIN gtcexemplarycontrol E ON (D.controlnumber = E.controlnumber) \n\n    WHERE  \n            D.entrancedate::DATE BETWEEN '$beginDate' AND '$finalDate'\n            AND CASE WHEN '$materialGenderId' = '-1' THEN 1=1\n            ELSE E.materialgenderid = '$materialGenderId'\n            END\n            AND CASE WHEN '$libraryUnitId' = 0 THEN 1=1\n            ELSE E.libraryunitid = '$libraryUnitId'\n            END\n    			\N	t	ACV
LISTA_EXEMPLARES	Lista de exemplares	Este relatório lista exemplares da instituição por unidade de biblioteca, área de conhecimento, tipo físico do material, estado do exemplar e planilha.\n    Para melhor visualização as etiquetas <b>245.a, 100.a, 901.b</b> devem estar preenchidas.\n    Caso a planilha seja filtrada por SE.4, o autor não irá aparecer na listagem pois periódicos não tem autor.	basic	SELECT \n        A.controlnumber AS "Número de controle", \n        A.itemnumber AS "Número de obra" ,\n        b.content as "Título",\n        c.content as "Autor",\n        (E.category ||'.'|| E.level) as "Categoria",\n        ES.description as "Estado do exemplar",\n        MPT.description as "Tipo fisico do material",\n        MTLO.description as "Área de conhecimento"\n    FROM \n        gtcexemplarycontrol A LEFT JOIN gtcmaterial B ON (A.controlnumber = B.controlnumber AND B.fieldid = '245' AND B.subfieldid = 'a')\n        LEFT JOIN gtcmaterial C ON (C.controlnumber = A.controlnumber AND C.fieldid = '100' AND C.subfieldid = 'a')\n        LEFT JOIN gtcmaterial D ON (D.controlnumber = A.controlnumber AND D.fieldid = '901' AND D.subfieldid = 'b')\n        LEFT JOIN gtcmaterialcontrol E ON (E.controlnumber = A.controlnumber)\n        LEFT JOIN gtcmaterialphysicaltype MPT ON (MPT.materialphysicaltypeid = A.materialphysicaltypeid)\n        LEFT JOIN gtcexemplarystatus ES ON (ES.exemplarystatusid =  A.exemplarystatusid)\n        LEFT JOIN gtcmarctaglistingoption MTLO ON (MTLO.marctaglistingid = '901.b' AND MTLO.option = D.content)\n\n    WHERE \n        -- Unidade de biblioteca   \n        CASE WHEN '$libraryUnitId' = '0' \n        THEN '1'='1'\n        ELSE A.libraryunitid = '$libraryUnitId'\n        END\n        -- Tipo fisico\n        AND CASE WHEN '$materialPhysicalTypeId' = '0'\n        THEN '1'='1'\n        ELSE A.materialphysicaltypeid = '$materialPhysicalTypeId'\n        END \n        -- Tipo do material (Livro ou Periodico)\n        -- Planilha\n        AND CASE WHEN '$spreadSheetId' = '0' \n        THEN '1'='1'\n        ELSE (E.category ||'.'|| E.level) = '$spreadSheetId'\n        END\n        \n        -- Estado do exemplar      \n        AND CASE WHEN '$exemplaryStatusId' = (SELECT max(exemplarystatusid)+1 FROM gtcexemplarystatus)\n        THEN '1'='1'\n        ELSE A.exemplarystatusid = '$exemplaryStatusId'\n        END\n\n        -- Area de conhecimento\n        AND CASE WHEN '$knowledgeAreaId' = '0' \n        THEN '1'='1'\n        ELSE D.content = '$knowledgeAreaId' \n        END\n\n    ORDER BY 1,2;			\N	t	ACV
OBRA_LISTA	Lista de todas obras	Lista todas obras por unidade e tipo de material.\n    Para melhor visualização do relatório, as etiquetas abaixo devem estar preenchidas :\n    <b>245.a,100.a,901.a</b>.	basic	SELECT \n        B.controlNumber as "Número de controle",\n        titulo.content as "Título",\n        autor.content as "Autor",\n        A.libraryName as "Unidade de biblioteca",\n        materialtype.description as "Tipo de material"\n    FROM gtcLibraryUnit A\n        LEFT JOIN gtcExemplaryControl B ON (A.libraryUnitId = B.originalLibraryUnitId)\n        LEFT JOIN gtcmaterial titulo ON (B.controlnumber = titulo.controlnumber AND titulo.fieldid = '245' and titulo.subfieldid = 'a' )\n        LEFT JOIN gtcmaterial autor ON (B.controlnumber = autor.controlnumber AND autor.fieldid = '100' and titulo.subfieldid = 'a' )          \n        LEFT JOIN gtcmaterial tipo ON (B.controlnumber = tipo.controlnumber AND tipo.fieldid = '901' and tipo.subfieldid = 'a' )\n        LEFT JOIN gtcmaterialtype materialtype ON (tipo.content = materialtype.materialtypeid::varchar)          \n    WHERE \n        CASE WHEN '$libraryUnitId' = 0 THEN 1 = 1 ELSE B.libraryUnitId = '$libraryUnitId' END\n        AND CASE WHEN '$materialTypeId' = 0 THEN 1 = 1 ELSE materialtype.materialtypeid = '$materialTypeId' END\n    GROUP BY A.libraryname,B.controlnumber,titulo.content,autor.content,tipo.content,materialtype.description\n    ORDER BY 1;			\N	t	ACV
CLASSE_ANO	Lista de exemplares por ano e classificação	Este relatório mostra todos os exemplares por <b>ano</b> e <b>classificação</b>.\n    Só serão mostrados corretamente os materiais em que o campo <b>260.c</b> estiver preenchido com o ano corretamente, apenas com quatro dígitos.\n    A classificação pode ser filtrada com o caractere <b>%</b>, isso significa que caso seja feito um filtro pela classificação <b>"2%"</b>, todos exemplares que tiverem a etiqueta <b>090.a</b> com o conteúdo que comece com <b>2</b> irão ser listados, caso queira filtrar por todas classificações preencha o campo <b>Classificação</b> com <b>%</b> apenas.	basic	SELECT \n            A.controlnumber as "Número de controle",\n            E.itemnumber as "Exemplar",\n            B.content as "Autor",\n            C.content as "Título",\n            rpad(regexp_replace(A.content, '[^0-9]','', 'g'), 4, '0') as "Ano",\n            D.content as "Classificação"\n            \n    FROM \n            gtcmaterial A \n            LEFT JOIN gtcmaterial B ON (B.controlnumber = A.controlnumber AND B.fieldid = '100' and B.subfieldid = 'a')\n            LEFT JOIN gtcmaterial C ON (C.controlnumber = A.controlnumber AND C.fieldid = '245' and B.subfieldid = 'a')\n            LEFT JOIN gtcmaterial D ON (D.controlnumber = A.controlnumber AND D.fieldid = '090' and D.subfieldid = 'a')\n            LEFT JOIN gtcexemplarycontrol E ON (E.controlnumber = A.controlnumber)\n    WHERE \n            A.fieldid = '260' \n            AND A.subfieldid = 'c' \n            AND length(regexp_replace(A.content, '[^0-9]','', 'g')) > 0\n            \n            AND CASE WHEN '$beginYear' = '0' THEN 1=1\n            ELSE regexp_replace(A.content, '[^0-9]','', 'g')::int >= '$beginYear'\n            END\n            AND CASE WHEN '$finalYear' = '0' THEN 1=1\n            ELSE regexp_replace(A.content, '[^0-9]','', 'g')::int <= '$finalYear'\n            END\n            \n            AND CASE WHEN '$classification' = '%' THEN 1=1\n            ELSE D.content like '$classification'\n            END			\N	t	ACV
EXEMPLAR_CNPQ	Lista de exemplares por CNPQ	Este relatório lista todos os exemplares ordenandos por CNPQ, número do tombo e número de controle.\n    <br>\n    Para que os exemplares dos materiais sejam listados neste relatório os campos abaixo devem estar preenchidos na catalogação :\n    <ul>\n    <li> 901.b - Área de conhecimento </li>\n    <li> 245.a - Título </li>\n    <li> 100.a - Autor </li>\n    <li> 949.1 - Tipo do material </li>\n    <li> 949.b - Unidade  </li>\n    </ul>	basic	\n        SELECT \n                A.controlnumber as "Número de controle",\n                A.itemnumber as "Número do tombo",\n                C.content as "Título",\n                D.content as "Autor",\n                (SELECT content FROM gtcmaterial WHERE controlnumber = A.controlnumber AND A.line = line AND fieldid = '090' and subfieldid = 'a') as "Classificação",\n                (SELECT content FROM gtcmaterial WHERE controlnumber = A.controlnumber AND A.line = line AND fieldid = '090' and subfieldid = 'b') as "Cutter",\n                A.entrancedate as "Data de entrada", \n                (SELECT description FROM gtcmarctaglistingoption WHERE marctaglistingid = '901.b' and option = B.content) as "Área de conhecimento",\n                F.description as "Tipo do material",\n                E.libraryname as "Unidade"\n\n        FROM    gtcexemplarycontrol A \n                LEFT JOIN gtcmaterial B ON A.controlnumber = B.controlnumber \n                LEFT JOIN gtcmaterial C ON A.controlnumber = C.controlnumber\n                LEFT JOIN gtcmaterial D ON A.controlnumber = D.controlnumber\n                LEFT JOIN gtclibraryunit E ON A.libraryunitid = E.libraryunitid\n                LEFT JOIN gtcmaterialtype F ON A.materialtypeid = F.materialtypeid \n        WHERE \n                B.fieldid = '901' \n                AND B.subfieldid = 'b' \n                AND CASE WHEN '$knowledgeAreaId' = '0' THEN 1=1 ELSE b.content = '$knowledgeAreaId' END     \n                AND C.fieldid = '245' \n                AND C.subfieldid = 'a'  \n                AND D.fieldid = '100' \n                AND D.subfieldid = 'a'\n                AND (A.entrancedate BETWEEN '$beginDate'::date AND '$endDate'::date OR A.entrancedate IS NULL)\n                AND CASE WHEN $libraryUnitId = 0 THEN 1=1 ELSE A.libraryUnitId = $libraryUnitId END\n                AND CASE WHEN $materialTypeId = 0 THEN 1=1 ELSE A.materialTypeId = $materialTypeId END             \n        ORDER BY $orderBy;\n    			\N	t	ACV
ESTATATISTA_CNPQ	Estatí­stica - Exemplares por CNPQ	Relatório que mostra a totalização de exemplares por área de conhecimento e unidade.\n    <br>\n    Para que os materiais e exemplares sejam incluídos corretamente neste relatório os campos abaixo devem estar cadastrados :\n    <ul>\n    <li>\n    901.b - Área de conhecimento\n    </li>\n    <li>\n    949.b - Código da unidade\n    </li>\n    </ul>	basic	SELECT  O.option as "Código",\n            O.description as "Área de conhecimento",\n            count(EX.itemnumber) as "Quantidade de exemplares"\n\n    FROM    gtcexemplarycontrol EX\n            LEFT JOIN gtcmaterial M ON M.controlnumber = EX.controlnumber AND M.fieldid = '901' and M.subfieldid = 'b'\n            LEFT JOIN gtcmarctaglistingoption O ON O.option = M.content AND marctaglistingid = '901.b'\n\n    WHERE\n            CASE WHEN $libraryUnitId = 0 THEN 1=1\n                    ELSE EX.libraryUnitId = $libraryUnitId\n            END\n            \n    GROUP by O.description,O.option \n    ORDER BY 1\n    			\N	t	ACV
CAPA_DVD	Capa de DVD	Imprime capa de DVD	basic	   SELECT e.itemNumber, \n            CASE WHEN m245b.content IS NULL THEN m245a.content ELSE m245a.content || ':' END as "245.a",\n            m245b.content as "245.b",\n            m090a.content as "090.a",\n            m090b.content as "090.b"\n        FROM gtcexemplarycontrol e\n    LEFT JOIN gtcMaterial m245a \n        ON ( m245a.controlnumber = e.controlnumber and m245a.fieldid = '245' and m245a.subfieldid = 'a' )\n    LEFT JOIN gtcMaterial m245b \n        ON ( m245b.controlnumber = e.controlnumber and m245b.fieldid = '245' and m245b.subfieldid = 'b' )\n    LEFT JOIN gtcMaterial m090a\n        ON ( m090a.controlnumber = e.controlnumber and m090a.fieldid = '090' and m090a.subfieldid = 'a' )\n    LEFT JOIN gtcMaterial m090b\n        ON ( m090b.controlnumber = e.controlnumber and m090b.fieldid = '090' and m090b.subfieldid = 'b' )\n        WHERE materialphysicaltypeid = 3 and e.itemNumber IN ($itemNumber);\n    			\N	t	IMP
CAPA_CD	Capa de CD	Imprime capas de CD. Somente os materias com tipo físico CD são aceitos.	basic	SELECT e.itemNumber, m245a.content as "245.a", m949a.content as "949.a", m090a.content as "090.a", m090b.content as "090.b", m950a.content as "950.a"\n    FROM gtcexemplarycontrol e\n    LEFT JOIN gtcMaterial m245a ON ( m245a.controlnumber = e.controlnumber and m245a.fieldid = '245' and m245a.subfieldid = 'a' )\n    LEFT JOIN gtcMaterial m949a ON ( m949a.controlnumber = e.controlnumber and m949a.fieldid = '949' and m949a.subfieldid = 'a' )\n    LEFT JOIN gtcMaterial m090a ON ( m090a.controlnumber = e.controlnumber and m090a.fieldid = '090' and m090a.subfieldid = 'a' )\n    LEFT JOIN gtcMaterial m090b ON ( m090b.controlnumber = e.controlnumber and m090b.fieldid = '090' and m090b.subfieldid = 'b' )\n    LEFT JOIN gtcMaterial m950a ON ( m950a.controlnumber = e.controlnumber and m950a.fieldid = '950' and m950a.subfieldid = 'a' )\n    WHERE materialphysicaltypeid = 2 and e.itemNumber IN ($itemNumber);\n    			\N	t	IMP
SIMPLE_SEARCH_TEM	Conteúdo pesquisado	Lista os conteúdos pesquisados na pesquisa simples/avançada entre outros.	basic	SELECT CASE WHEN campo != '' THEN campo ELSE action END as campo, termo, quantidade\n    FROM (     SELECT trim( ( SELECT array_to_string(array_agg(description),' e ')\n                FROM ( SELECT trim( regexp_split_to_table( action, E'\\and') ) AS searchField  ) AS S\n            LEFT JOIN gtcsearchablefield\n                    ON ( s.searchField = gtcsearchablefield .field) ) ,action ) AS\n                    campo , action, event as Termo ,count(*) as Quantidade\n        FROM gtcanalytics\n        WHERE accesstype = 3\n    GROUP BY 1,2,3\n    ORDER BY 3 desc\n        LIMIT $limit ) as foo;\n    			\N	t	ACS
CART_BIBLIOTECA	Carteirinha da biblioteca	Carteirinha da biblioteca	basic	SELECT personId as "personId", \n        name as "name", \n        L.description as "link", \n        COALESCE(dateValidate::varchar, 'Permanente') as "validate", \n        'person/' || personId || '.' as "image", \n        personId as "codebar" \n    FROM ( SELECT P.personId,\n                P.name,\n                min( L.level),\n                L.linkid as activelink,\n                login,\n                PL.dateValidate\n            FROM basPerson P \n        INNER JOIN basPersonLink PL\n                ON P.personId = PL.personId \n        INNER JOIN basLink L\n                ON L.linkId = PL.linkId AND (PL.dateValidate >= now()::date OR PL.dateValidate IS NULL)\n        GROUP BY 1,2,4,5,6 ORDER BY 1) as temp \n    LEFT JOIN basLink L \n        ON activelink = L.linkId \n        WHERE CASE WHEN '$interval' = 'D' \n            THEN \n                CASE WHEN ($personId) IS NULL \n                    THEN 1 = 1 \n                ELSE \n                    personId IN ($personId) \n                END \n            ELSE \n                CASE WHEN ($beginPersonId IS NOT NULL) AND ($endPersonId IS NOT NULL) \n                THEN \n                    (personId BETWEEN $beginPersonId AND $endPersonId) \n                ELSE \n                    1 = 1 \n                END \n            END \n            AND CASE WHEN $linkId IS NOT NULL \n            THEN \n                linkId = $linkId \n            ELSE \n                1 = 1 \n            END		$MIOLO->GetClass('gnuteca3', 'codabar');\n    class FrmCustomReport extends FrmAdminReport\n    {\n        public function createFields() \n        { \n            $data = $this->getReportData( );\n        \n        //Descrição do relatório a ser mostrada no topo da tela \n        if ($data->description) \n        { \n            $fields[] = new MDiv('divDescription', $data->description, 'reportDescription');\n        } \n        \n            $opts = array();\n            $opts[] = array(_M('Contínuo', $this->module), 'C');\n            $opts[] = array(_M('Discreto', $this->module), 'D');\n            $fields[] = $interval = new GRadioButtonGroup('interval', _M('Tipo de intervalo', $this->module), $opts, 'D', null, MFormControl::LAYOUT_HORIZONTAL);\n            $interval->addAttribute('onchange', "if ( dojo.byId('interval_0').checked ) { dojo.byId('continuouContent').style.display = 'block'; dojo.byId('discretContent').style.display = 'none'; dojo.byId('personId').value = ''; dojo.byId('linkId').value = ''; } else { dojo.byId('continuouContent').style.display = 'none'; dojo.byId('discretContent').style.display = 'block'; dojo.byId('beginPersonId').value = ''; dojo.byId('endPersonId').value = ''; dojo.byId('beginLinkId').value = ''; dojo.byId('endLinkId').value = ''; }");\n            $personLabel = new MLabel(_M('Código do aluno') . ':');\n            $linkLabel = new MLabel(_M('Código do vínculo') . ':');\n            \n            //intervalo discreto \n            $person = new MTextField('personId', null, null, FIELD_DESCRIPTION_SIZE );\n            $personHint = new MDiv('hintPersonD', _M('Separar os códigos por vírgula. Ex: 505052, 505053, ...', $this->module));\n            $personHint->setClass('mSpan mHint');\n            $person = new GContainer('personC', array($personLabel, $person, $personHint));\n            $fields[] = new MVContainer('discretContent', array($person));\n            \n            //intervalo contínuo \n            $beginPerson = new MTextField('beginPersonId', null, null, 10);\n            $endPerson = new MTextField('endPersonId', null, null, 10);\n            $personHint = new MDiv('hintPersonD', _M('Adicionar código inicial e código final', $this->module));\n            $personHint->setClass('mSpan mHint');\n            $person = new GContainer('personCont', array($personLabel, $beginPerson, $endPerson, $personHint));\n            $fields[] = $continuous = new MVContainer('continuouContent', array($person));\n            $continuous->addStyle('display', 'none');\n            $busBond = $this->MIOLO->getBusiness('gnuteca3', 'BusBond');\n            $fields[] = new GSelection('linkId', '', _M('Código do grupo de usuário', $this->module), $busBond->listBond(true));\n            $this->setFields( $fields );\n            $this->setValidators($valids);\n            //ler dados do formulário $form = 'frmadminreport'.MIOLO::_REQUEST('reportId');\n            $this->className = $form;\n            $this->busFormContent->loadFormValues( $this );\n\n            //forma padrão \n            $formContent = $this->busFormContent->loadFormValues( $this, true );\n\n            //obter coluna total \n            if ( $formContent['total'] ) \n            {\n                $totalField = $this->GetField('total');\n                \n                if ( $totalField )\n                {\n                    $totalField->setChecked( true );\n                } \n            } \n        } \n        \n        /** \n        * Seta o conteúdo no segmeto "content"\n        * @param Segment $content objeto do segmento \n        * @param array $result resultado \n        * @param array $columns colunas do arquivo \n        */ \n        protected function setOdtContent(Segment $content, $result, $columns) \n        { \n            //defini dados para multiplicação de seguimentos \n            if ( is_array($result) && is_array( $columns ) ) \n            { \n                foreach ( $result as $line => $info )\n                {\n                    foreach ( $columns as $l => $column )\n                    {\n                        try \n                        {\n                            if ( $column == 'image' ) //foto da pessoa \n                            {\n                                $parts = explode('/', $info[$l]); //separa o arquivo do diretório \n                                $busFile = $this->MIOLO->getBusiness('gnuteca3','BusFile');\n                                $busFile->folder= $parts[0]; //seta o diretório \n                                $busFile->fileName = $parts[1]; //seta o arquivo\n                                $pathFile = $busFile->searchFile(true); //procura imagem default caso não tenha encotrado a imagem \n                            \n                                if ( count($pathFile) == 0 )\n                                {\n                                    $busFile->fileName = 'default.';\n                                    $pathFile = $busFile->searchFile(true);\n                                } \n                                \n                                $pathFile = $pathFile[0]->absolute;  //obtém caminho absoluto da imagem \n                                $content->setImage('image', $pathFile, 60, 75); //seta a imagem 3x4 \n                            } \n                            else if ( $column == 'codebar' ) //código de barras \n                            { \n                                $tmpPath = BusinessGnuteca3BusFile::getAbsoluteFilePath('tmp', 'codabar_' . $info[$l], 'png' ); //obtém o path completo para arquivo \n                                $barcode = new codabar( $info[$l] ); //gera o código de barras do código de aluno \n                                $barcode->output(0.04, 1.27, 2, $tmpPath); //faz output para o tmp do Gnuteca \n                                $content->setImage('barcode', $tmpPath, 140, 30);\n                                //seta código de barras \n                            } \n                            else \n                            { \n                                $content->$column( utf8_decode( $info[$l] ) );\n                            } \n                        } \n                        catch (Exception $exc) \n                        { \n                            //caso o parametro não exista no content \n                        } \n                    } \n                    \n                    $content->merge();\n                } \n            } \n        } \n        \n        /** \n        * Método reescrito para tratar dados do formulário \n        */ \n        \n        public function getData() \n        { \n            $data = parent::getData();\n            $data->personId = $data->personId ? $data->personId : 'null';\n            $data->beginPersonId = $data->beginPersonId ? $data->beginPersonId : 'null';\n            $data->endPersonId = $data->endPersonId ? $data->endPersonId : 'null';\n            $data->linkId = $data->linkId ? $data->linkId : 'null';\n            $data->beginLinkId = $data->beginLinkId ? $data->beginLinkId : 'null';\n            $data->endLinkId = $data->endLinkId ? $data->endLinkId : 'null';\n\n            return $data;\n        } \n    }	\N	t	IMP
39	Lista de Material por classificação	Este relatório mostra todos os materiais de uma determinada área de conhecimento escolhida pela sua classificação, resultando em uma listagem de materiais com suas respectivas quantidades de exemplares.\n    <br><br>\n    <b>Exemplos de preenchimento do campo "Classificação":</b> <br>\n    <table align=center>\n    <tr align=left>\n    <td align=left>\n    <b>51</b> - Pesquisa pela classificação <b>51</b>\n    </td>\n    </tr>\n    <tr align=left>\n    <td>\n    <b>52,63</b> - Pesquisa pelas classificações <b>52</b> e <b>63</b>\n    </tr>\n    </td>\n    <tr align=left>\n    <td>\n    <b>5%</b> - Pesquisa pelas classificações que <b>começam</b> com <b>5</b>\n    </tr>\n    </td>\n    <tr align=left>\n    <td>\n    <b>5%,7%</b> - Pesquisa pelas classificações que <b>começam</b> com <b>5</b> e <b>7</b>\n    </tr>\n    </td>\n    </table>\n\n    <br>\n    É necessário que o campo 090.a (Número de Classificação) na catalogação esteja preenchido.	basic			\n    class FrmCustomReport extends FrmAdminReport \n    { \n        private $busGenericSearch, $busSearchFormat;\n\n        function __construct() \n        { \n            parent::__construct(); \n        }\n\n        public function getReportData()\n        { \n            $data = parent::getReportData();\n            $args = (object) ( $_REQUEST ); \n\n$classificacoes = explode(",",$args->classificacao);\n\n            $filtroClassificacao = " AND (content LIKE '". implode("' OR content LIKE '",$classificacoes)."')";\n\n\n            $where = "";\n            if ( $args->dataInicial )\n            {\n                $where .= " AND MC.entranceDate >= '{$args->dataInicial}' ";\n            }\n            if ( $args->dataFinal )\n            {\n                $where .= " AND MC.entranceDate <= '{$args->dataFinal}' ";\n            }\n            if( $args->libraryUnitId > 0 )\n            {\n                $where .= " AND EC.libraryUnitId = '{$args->libraryUnitId}'"; \n            }\n\n            if ( $where )\n            {\n                $where = " WHERE ". substr($where,4,strlen($where));\n            }\n            \n            $ordem = $args->ordem;\n            if ( $ordem != '2' )\n            {\n                $ordenacao = " ORDER BY $ordem";\n            }\n            else\n            {\n                $ordenacao = " ORDER BY split_part(M.content, '@', 1),\n                                        split_part(M.content, '@', 2) ";\n            }\n\n            $sql = "    SELECT MC.controlnumber as "Número de Controle", \n                            M.content as "Classificação",\n                            (SELECT content FROM gtcMaterial WHERE fieldid = '245' AND subfieldid = 'a' AND controlNumber = MC.controlNumber) as "Título",\n                            (SELECT content FROM gtcMaterial WHERE fieldid = '100' AND subfieldid = 'a' AND controlNumber = MC.controlNumber) as "Autor", \n                            count(EC.itemNumber) as "Quantidade de exemplares"\n                        FROM gtcmaterialcontrol MC\n                    INNER JOIN gtcmaterial M ON (MC.controlnumber = M.controlnumber AND fieldId = '090' and subfieldid = 'a' $filtroClassificacao )\n                    INNER JOIN gtcexemplarycontrol EC ON (EC.controlnumber = MC.controlnumber) \n\n                            $where\n                    GROUP BY 1,2 \n                    {$ordenacao}"; \n\n            $data->reportSql = $sql;\n\n            return $data;\n        }\n    }	\N	t	MAT
NEXT_ITEMNUMBER	Próximo número de exemplar/tombo.	Obtém o próximo número de exemplar/tombo, este relatório é utilizado dentro da catalogação, modificando ele, a catalogação preencherá os dados de forma diferenciada.	basic	--Sugere o número do tombo. Pega o último e soma 1. Isso pode duplicar números caso exista mais de um catalogador\n    --Sugere o número do tombo. Pega o último e soma 1. Isso pode duplicar números caso exista mais de um catalogador\n    --SELECT lpad( (max(myItemNumber::bigint)+1)::varchar,8,'0') as itemNumber  FROM ( SELECT regexp_replace( upper(itemnumber),'.*[A-z]','') as myItemNumber FROM gtcexemplarycontrol WHERE itemNumber <> '' AND itemNumber is not null ) AS f WHERE ascii(myItemNumber) <> 0 ORDER BY  1 DESC;\n\n    --Busca o número por sequência. Isso garante que nenhum usuário irá utilizar o mesmo código\n    CREATE OR REPLACE FUNCTION fnc_nextItemNumber ( libraryUnitId gtcLibraryUnit.libraryUnitId%TYPE )\n    RETURNS bigint AS $$\n    DECLARE\n        codigo bigint;\n        v_query varchar;\n        ultimo_codigo bigint;\n    BEGIN\n        SELECT INTO ultimo_codigo CASE WHEN max(trim(myItemNumber)::bigint) IS NULL THEN 1 ELSE max(trim(myItemNumber)::bigint) END  as itemNumber  FROM ( SELECT replace( replace( replace( regexp_replace( trim(upper(itemnumber)),'.*[A-z]','' ) ,'.',''),' ', '') ,'/','')  as myItemNumber FROM gtcexemplarycontrol WHERE itemNumber <> '' AND  itemNumber is not null ) AS f WHERE ascii(myItemNumber) <> 0 ORDER BY 1 DESC;\n        -- Verifica se existe sequencia e pega o nextval, caso nao exista ainda, cria\n        BEGIN\n            codigo := nextval('seq_rptItemNumber');\n        EXCEPTION\n            WHEN OTHERS THEN\n                -- cai no erro se a sequencia ainda nao existir\n                v_query := 'CREATE SEQUENCE seq_rptItemNumber START ' || ultimo_codigo ;\n                EXECUTE v_query;\n                codigo := nextval('seq_rptItemNumber');\n        END;\n\n        IF (ultimo_codigo > codigo) THEN\n            PERFORM setval('seq_rptItemNumber', ultimo_codigo);\n            codigo := nextval('seq_rptItemNumber');\n        END IF;\n\n        RETURN codigo;\n    END;\n    $$ language 'plpgsql';\n\n    SELECT lpad(fnc_nextItemNumber($libraryUnitId)::varchar,8,'0');\n    			\N	t	MAT
EST_AQUISICAO	Estatística - Exemplares por tipo de aquisição.	Contabiliza quantos exemplares de cada tipo de aquisição foram inseridos no sistema em um determinado período.\n\n        Para que o exemplar conste corretamente neste relatório os seguintes campos devem estar preenchidos :\n\n        <ul>\n        <li>\n        949.y - Data de entrada\n        </li>\n        <li>\n        949.c - Tipo de aquisição\n        </li>\n        <li>\n        901.b - Tipo de aquisição\n        </li>\n        </ul>	basic	SELECT \n            (SELECT description FROM gtcmarctaglistingoption WHERE marctaglistingid = '949.c' AND option = EC.acquisitiontype) as "Descrição",\n                (SELECT description FROM gtcmaterialtype WHERE materialtypeid = EC.materialtypeid) as "Tipo de material",\n            COUNT(EC.*) AS "Quantidade"\t\n        FROM \n            gtcexemplarycontrol EC\n        WHERE \n            EC.entrancedate::date BETWEEN '$beginDate' AND '$finalDate'\n                AND CASE WHEN '$exceptAquisition' = '0' THEN 1=1\n                ELSE EC.acquisitiontype IN (SELECT option FROM gtcmarctaglistingoption WHERE marctaglistingid = '949.c' AND option != '$exceptAquisition' ) \n                END\n                AND CASE WHEN '$libraryUnitId' = '0' THEN 1=1\n                ELSE EC.libraryunitid = '$libraryUnitId'\n                END\n\n                AND CASE WHEN '$materialTypeId' = '0' THEN 1=1\n                ELSE EC.materialTypeId = '$materialTypeId'\n                END\n        GROUP BY 1,2\n        ORDER BY 1,2			\N	t	ACV
MATERIAL_GENERIC	Quantidade de obras e exemplares genérico	\n<b>\nRelatório genérico e customizável de materiais.\n</b>\n<br/>\n<br/>\nÉ possível descobrir a quantidade de obras e exemplares de acordo com algum filtro, após esse filtro é possível agrupar as informações de acordo com a necessidade.\n<br/>\n<br/>\nEste relatório vem de encontro a necessidade de simular os relatórios genéricos de material encontrados no sistema Gnuteca2.\n<br/>\n<br/>\nO campo de filtro conteúdo utiliza uma busca simplifica, diferente da encontrada na pesquisa simples. Caso precise utilizar TERMO EXATO somente preencha o campo conteúdo, caso exista necessidade de uma pesquisa mais geral é possível utilizar o caracter coringa % em qualquer local do termo.\n<br/>\n<br/>\n<b>\nEX.\nTermo exato: machado\n<br/>\nInicia com machado: machado%\n<br/>\nTermina com machado %machado\n<br/>\nQualquer conteúdo que tiver machado: %machado%\n<br/>\nQualquer coisa que iniciar com ma e terminar com ado: %ma%ado%\n</b>\n\n\n	basic	\nSELECT 1 as conteudo, 2 as unidade ,3 as obras,4 as exemplares\n  FROM (select 1,2,3,4 ) as foo;\n\nCREATE TEMP TABLE tmpObrasExemplares \n                    (conteudo,\n                    unidade,\n                    obras,\n                    exemplares)\n               AS   select b.content  || coalesce( ( SELECT ' - ' || description\n                                                       FROM gtcmarctaglistingoption\n                                                      WHERE marctaglistingid = '$fieldid.$subfieldid'\n                                                        AND option = b.content),'' ),\n                    a.libraryUnitId || ' - ' || l.libraryName,\n                    count( distinct a.controlNumber ),\n                    count( distinct a.itemNumber )\n             FROM   gtcExemplaryControl a,\n                    gtcMaterial b,\n                    gtcLibraryUnit l\n            WHERE a.controlNumber = b.controlNumber\n              AND ( l.libraryUnitId = a.libraryUnitId )\n              AND b.fieldId = '$fieldid'\n              AND b.subfieldId = '$subfieldid'\n              AND b.searchcontent like preparesearchcontent('$fieldid.$subfieldid', '$content','')\n              AND CASE WHEN $libraryUnitId = 0 THEN 1=1 ELSE a.libraryUnitId = $libraryUnitId END\n         GROUP BY b.content,a.libraryUnitId,l.libraryName;\n\n		\nclass FrmCustomReport extends FrmAdminReport\n{\n    //adiciona um campo de textarea com hint ao formulário\n    public function setFields($fields)\n    {\n        $module = 'gnuteca3';\n        $groups = new MMultiLineField('groups','', _M('Grupos', $module) , 30,10,30);\n        $groups->setHint('Utilize Valor=dado, <br/><br/> <b>Exemplo:</b> <br/> abc=53% <br/> def = 54%, 55% <br/> ghi = 56%,57%, 58% <br/><br/>Utilize várias linhas se necessário.');\n        $fields[] = $groups;\n        parent::setFields($fields);\n    }\n  \n    //modifica a sql de retorno caso tenha grupos definidos\n    public function getReportData()\n    {\n       $data = parent::getReportData();\n       $data->reportSql = $data->reportSql;\n\n       $groups = MIOLO::_REQUEST('groups');\n\n       if ( $groups )\n       {\n           $groups = explode("\\n", $groups);\n\n           foreach ( $groups as $line => $group )\n           {\n               $group = explode('=', $group);\n               $label = trim( $group[0] ) ;\n               $sqlInner = array();\n\n               $sql[$line] .= "SELECT '$label' as conteudo,\n                                       unidade,\n                                       sum(obras) as obras,\n                                       sum(exemplares) as exemplares\n                                 FROM  tmpobrasexemplares\n                                WHERE ";\n\n               $termos = explode(',', $group[1] );\n\n               foreach ( $termos as $l => $termo )\n               {\n                   $termo = trim($termo);\n                   $sqlInner[] .= " ( conteudo ilike '$termo') " ;\n               }\n        \n               $sqlInner = implode( ' OR ' , $sqlInner );\n\n               $sql[$line] .= $sqlInner . ' GROUP BY unidade';\n\n           }\n\n           $sql = implode( "\\n UNION \\n ", $sql);\n\n           $data->reportSql = $data->reportSql .= $sql;\n       }\n       else\n       {\n           $data->reportSql = $data->reportSql .= ' SELECT * FROM tmpObrasExemplares;';\n       }\n      \n       return $data;\n    }\n}\n\n	\N	t	ACV
SIMPLE_INVENTARY	Inventário simplificado	Exibe todos os exemplares existentes dentro dos filtros de "Classificação" e "Unidade de biblioteca", estes sendo estes ordenados pelo campo "Ordenar por".\n    Para que os exemplares constem neste relatório os seguintes campos devem ser preenchidos :\n    <b>090.a, 100.a, 245.a</b>	basic	SELECT \n\tCASE WHEN trim(tag100a.content) NOTNULL THEN (coalesce(trim(tag100a.content),'') || '. ') ELSE (' ') END\n\t|| coalesce(trim(tag245a.content),'') \n\t|| CASE WHEN trim(tag245b.content) NOTNULL THEN (': ' || coalesce(trim(tag245b.content),'') || '.') ELSE ('. ') END\n\t|| CASE WHEN trim(tag250a.content) NOTNULL THEN (coalesce(trim(tag250a.content || ' ' || ( SELECT content FROM gtcprefixsuffix WHERE prefixsuffixid = tag250a.suffixid ) ),'')  || ' ') ELSE (' ') END\n\t|| CASE WHEN trim(tag250b.content) NOTNULL THEN (coalesce(trim(tag250b.content) ,'') || '. ') ELSE (' ') END\n\t|| CASE WHEN trim(tag260a.content) NOTNULL THEN (coalesce(trim(tag260a.content),'') || '.') ELSE (' ') END\n\t|| CASE WHEN trim(tag260b.content) NOTNULL THEN (': ' || coalesce(trim(tag260b.content),'') || '.') ELSE ('. ') END\n\t|| CASE WHEN trim(tag260c.content) NOTNULL THEN (', ' || coalesce(trim(tag260c.content),'') || '.') ELSE (' ') END || '|'\n        || CASE WHEN trim(tag949v.content) NOTNULL THEN (' ' || coalesce(trim(tag949v.content),'') || ' - ') ELSE (' ') END \n\t|| coalesce(count(exControl.itemNumber),'0') || ' ex.'\n\t|| CASE WHEN trim(tag090a.content) NOTNULL THEN ('| ' ||coalesce(trim(tag090a.content),'') || ' ') ELSE (' ') END\n\t|| CASE WHEN trim(tag090b.content) NOTNULL THEN ('| ' ||coalesce(trim(tag090b.content),'') || ' ') ELSE (' ') END as "Inventário"\nFROM \tgtcMaterial tag090a\n\tINNER JOIN \n\tgtcExemplaryControl exControl ON (tag090a.controlNumber = exControl.controlNumber)\n\tINNER JOIN \n\tgtcMaterialControl materialControl ON (tag090a.controlNumber = materialControl.controlNumber)\n\tLEFT JOIN \n\t(SELECT controlnumber,content,line FROM gtcmaterial WHERE fieldid = '949' and subfieldid = 'v') as tag949v ON tag949v.controlnumber = exControl.controlnumber AND tag949v.line = exControl.line\n\tLEFT JOIN\n\tgtcmaterial tag100a ON tag100a.controlnumber = tag090a.controlnumber AND tag100a.fieldid = '100' and tag100a.subfieldid = 'a'\n\tLEFT JOIN\n\tgtcmaterial tag245a ON tag245a.controlnumber = tag090a.controlnumber AND tag245a.fieldid = '245' and tag245a.subfieldid = 'a'\n\tLEFT JOIN\n\tgtcmaterial tag245b ON tag245b.controlnumber = tag090a.controlnumber AND tag245b.fieldid = '245' and tag245b.subfieldid = 'b'\t\n\tLEFT JOIN\n\tgtcmaterial tag250a ON tag250a.controlnumber = tag090a.controlnumber AND tag250a.fieldid = '250' and tag250a.subfieldid = 'a'\n\tLEFT JOIN\n\tgtcmaterial tag250b ON tag250b.controlnumber = tag090a.controlnumber AND tag250b.fieldid = '250' and tag250b.subfieldid = 'b'\t\n\tLEFT JOIN\n\tgtcmaterial tag260a ON tag260a.controlnumber = tag090a.controlnumber AND tag260a.fieldid = '260' and tag260a.subfieldid = 'a'\t\t\n\tLEFT JOIN\n\tgtcmaterial tag260b ON tag260b.controlnumber = tag090a.controlnumber AND tag260b.fieldid = '260' and tag260b.subfieldid = 'b'\n\tLEFT JOIN\n\tgtcmaterial tag260c ON tag260c.controlnumber = tag090a.controlnumber AND tag260c.fieldid = '260' and tag260c.subfieldid = 'c'\t\t\n\tLEFT JOIN\n\tgtcmaterial tag090b ON tag090b.controlnumber = tag090a.controlnumber AND tag090b.fieldid = '090' and tag090b.subfieldid = 'b'\t\t\t\nWHERE \n\ttag090a.fieldid = '090' and tag090a.subfieldid = 'a'\n\t\n\tAND CASE WHEN  $libraryUnitId = 0 THEN 1=1\n\t    ELSE exControl.libraryUnitId = $libraryUnitId\n\tEND\n\tAND CASE WHEN  $materialTypeId = 0 THEN 1=1\n\t    ELSE materialControl.materialTypeId = $materialTypeId\n\tEND\n\tAND split_part(tag090a.searchcontent, '@', 1) between prepareSearchContent('090.a','$beginClassification','') AND prepareSearchContent('090.a','$finalClassification','')\nGROUP BY\n\ttag090a.controlnumber,\n\ttag090a.content,\n\ttag090a.searchcontent,\n\ttag090b.content,\n\ttag949v.content,\n\ttag100a.content,\n\ttag100a.searchcontent,\n\ttag245a.content,\n\ttag245a.searchcontent,\n\ttag245b.content,\n\ttag250a.content,\n\ttag250a.suffixid,\n\ttag250b.content,\n\ttag260a.content,\n\ttag260b.content,\n\ttag260c.content,\n\ttag090b.content\nORDER BY $orderBy.searchcontent;			\N	t	ACV
\.


--
-- Data for Name: gtcreportparameter; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcreportparameter (reportparameterid, reportid, label, identifier, type, defaultvalue, options, lastvalue, level) FROM stdin;
53	26	Data final	endDate	date	\N	\N	\N	1
1	1	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	0
2	2	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	0
3	3	Data inicial	beginDate	date	\N	\N	\N	0
4	3	Data final	endDate	date	\N	\N	\N	1
5	3	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
6	4	Data inicial	beginDate	date	\N	\N	\N	0
7	4	Data final	endDate	date	\N	\N	\N	1
8	4	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
9	5	Data inicial	beginDate	date	\N	\N	\N	0
10	5	Data final	endDate	date	\N	\N	\N	1
11	5	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
15	7	Data inicial	beginDate	date	\N	\N	\N	0
16	7	Data final	endDate	date	\N	\N	\N	1
17	7	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
18	8	Data inicial	beginDate	date	\N	\N	\N	0
19	8	Data final	endDate	date	\N	\N	\N	1
20	8	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
21	9	Data inicial	beginDate	date	\N	\N	\N	0
22	9	Data final	endDate	date	\N	\N	\N	1
23	9	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
24	12	Data inicial	beginDate	date	\N	\N	\N	0
25	12	Data final	endDate	date	\N	\N	\N	1
26	12	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
27	13	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
28	14	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
29	15	Data inicial	beginDate	date	\N	\N	\N	0
30	16	Período	data	string	__/01/2011	\N	\N	0
31	17	Data inicial	beginDate	date	\N	\N	\N	0
32	17	Data final	endDate	date	\N	\N	\N	1
33	17	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
34	18	Data inicial	beginDate	date	\N	\N	\N	0
35	18	Data final	endDate	date	\N	\N	\N	1
36	18	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
37	19	Data inicial	beginDate	date	\N	\N	\N	0
38	19	Data final	endDate	date	\N	\N	\N	1
39	19	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
40	20	Data inicial	beginDate	date	\N	\N	\N	0
41	20	Data final	endDate	date	\N	\N	\N	1
42	20	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
43	21	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
44	22	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
45	23	Data inicial	beginDate	date	\N	\N	\N	0
46	23	Data final	endDate	date	\N	\N	\N	1
47	23	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
48	24	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
49	25	Data inicial	beginDate	date	\N	\N	\N	0
50	25	Data final	endDate	date	\N	\N	\N	1
51	25	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
52	26	Data inicial	beginDate	date	\N	\N	\N	0
54	26	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
55	28	Área do CNPQ	cnpq	select	\N	<executesql>SELECT option, description FROM gtcmarctaglistingoption WHERE marctaglistingid = '901.b'</executesql> 	\N	0
56	30	Data inicial	beginDate	date	\N	\N	\N	0
57	30	Data final	endDate	date	\N	\N	\N	1
58	30	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
59	31	Data inicial	beginDate	date	\N	\N	\N	0
60	31	Data final	endDate	date	\N	\N	\N	1
61	33	Data inicial	beginDate	date	\N	\N	\N	0
62	33	Data final	endDate	date	\N	\N	\N	1
63	33	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
64	34	Data inicial	beginDate	date	\N	\N	\N	0
65	34	Data final	endDate	date	\N	\N	\N	1
66	35	Data inicial	beginDate	date	\N	\N	\N	0
67	35	Data final	endDate	date	\N	\N	\N	1
68	35	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
69	36	Data inicial	beginDate	date	\N	\N	\N	0
70	36	Data final	endDate	date	\N	\N	\N	1
71	37	Data inicial	beginDate	date	\N	\N	\N	0
72	37	Data final	endDate	date	\N	\N	\N	1
73	37	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
74	37	Limite	limit	int	10	\N	\N	1
12	6	Data inicial	beginDate	date	\N	\N	\N	0
13	6	Data final	endDate	date	\N	\N	\N	1
14	6	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	2
75	6	Limite	limit	int	10	\N	\N	1
77	39	Classificação	classificacao	string	\N	\N	\N	0
78	39	Data Inicial	dataInicial	date	\N	\N	\N	0
79	39	Data Final	dataFinal	date	\N	\N	\N	0
80	39	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</> 	\N	0
81	39	Ordenar por	ordem	select	\N	<executesql>\n    SELECT '4' as codigo,'Autor' as tipo \n    UNION SELECT '2' as codigo,'Classificação'as tipo \n    UNION SELECT '3' as codigo,'Título' as tipo \n    UNION SELECT '1' as codigo,'Número de controle' as tipo   \n    UNION SELECT '5' as codigo,'Quantidade de exemplares' as tipo \n    ORDER BY 2 \n    </> 	\N	0
82	40	Classificação	classification	string	\N	\N	\N	0
83	40	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</> 	\N	0
84	41	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</>  	\N	0
85	MATERIAL_EVALUATION	Limite	limit	int	10	\N	\N	0
86	MATERIAL_EVALUATION	Ordem	order	select	10	<executePHP>array('4'=> 'Quantidade', 5=>'Média', 6=>'Pontuação')</executePHP> 	\N	0
87	MATERIAL_EVALUATION	Tipo	type	select	desc	<executePHP>array( 'asc' => 'Piores', 'desc' => 'Melhores')</executePHP> 	\N	0
88	MATERIAL_EVALUATION	Unidade	libraryUnitId	select	desc	<executeSQL>SELECT '0', 'Todas' UNION SELECT libraryUnitId::varchar, libraryName from gtcLibraryUnit;</executeSQL> 	\N	0
89	MULTAS_PERIODO	Data Inicial	beginDate	date	new GDate::now()	\N	\N	0
90	MULTAS_PERIODO	Data Final	finalDate	date	new GDate::now()	\N	\N	0
91	MULTAS_PERIODO	Unidade	unityId	select	new GDate::now()	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit ORDER BY 1</>  	\N	0
92	MULTAS_PERIODO	Operador	operator	select		<executePHP>GOperator::listOperators(true);</executePHP> 	\N	0
93	MULTAS_PERIODO	Estado	status	select		<executeSQL>select finestatusid,description  from gtcfinestatus UNION SELECT 0 as finestatusid ,'Todos' as description</executeSQL> 	\N	0
94	ACTIVE_PERSON	Vinculo	linkId	select	\N	<executesql>SELECT 0 as linkid, 'Todos os vinculos' as description UNION SELECT linkid,description from baslink</executesql>\n     	\N	0
95	LOAN_BY_TYPE	Data Inicial	beginDate	date	GDate::now()	\N	\N	0
96	LOAN_BY_TYPE	Data final	finalDate	date	GDate::now()	\N	\N	0
97	LOAN_BY_TYPE	Unidade de biblioteca	libraryUnitId	select	GDate::now()	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
98	LOAN_BY_TYPE	Tipo de material	materialTypeId	select	GDate::now()	<executesql>\n    SELECT '0' as materialtypeid, 'Todos os tipos de material' as description UNION  SELECT  materialtypeid,description from gtcmaterialtype order by 1;\n    </executesql> 	\N	0
99	MOST_BORROWED	Data Inicial	beginDate	date	GDate::now()	\N	\N	0
100	MOST_BORROWED	Data final	finalDate	date	GDate::now()	\N	\N	0
101	MOST_BORROWED	Unidade de biblioteca	libraryUnitId	select	GDate::now()	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
102	MOST_BORROWED	Tipo de material	materialTypeId	select	GDate::now()	<executesql>\n    SELECT '0' as materialtypeid, 'Todos os tipos de material' as description UNION  SELECT  materialtypeid,description from gtcmaterialtype order by 1;\n    </executesql> 	\N	0
103	LOAN_BY_ENTERPRISE	Data Inicial	beginDate	date	GDate::now()	\N	\N	0
104	LOAN_BY_ENTERPRISE	Data final	finalDate	date	GDate::now()	\N	\N	0
105	LOAN_BY_ENTERPRISE	Unidade de biblioteca	libraryUnitId	select	GDate::now()	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
106	LOAN_BY_PERSON	Data Inicial	beginDate	date	GDate::now()	\N	\N	0
107	LOAN_BY_PERSON	Data final	finalDate	date	GDate::now()	\N	\N	0
108	LOAN_BY_PERSON	Unidade de biblioteca	libraryUnitId	select	GDate::now()	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
109	MATERIAL_TYPE_STATIS	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
110	MATERIAL_TYPE_STATIS	Tipo de material	materialTypeId	select	\N	<executesql>\n    SELECT '0' as materialtypeid, 'Todos os tipos de materiais' as description UNION  SELECT  materialtypeid,description from gtcmaterialtype order by 1;\n    </executesql> 	\N	0
111	INVENTARY	Classificação Inicial	beginClassification	string	\N	\N	\N	0
112	INVENTARY	Classificação final	finalClassification	string	\N	\N	\N	0
113	INVENTARY	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
114	INVENTARY	Ordenar por	orderBy	select	\N	<executesql>SELECT 'D' as tabela,'Título' as ordenacao UNION SELECT 'A','Classificação' UNION SELECT 'E','Autor' ORDER BY 1</executesql> 	\N	0
115	MOST_BORROWED_SUB	Data inicial	beginDate	date	\N	\N	\N	0
116	MOST_BORROWED_SUB	Data final	endDate	date	\N	\N	\N	0
117	MOST_BORROWED_SUB	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
118	LOAN_BY_ENT_SUB	Data inicial	beginDate	date	\N	\N	\N	0
119	LOAN_BY_ENT_SUB	Data final	endDate	date	\N	\N	\N	0
120	LOAN_BY_ENT_SUB	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
121	LOAN_BY_ENT_SUB	Empresa	personGroup	select	\N	<executesql>\n    SELECT '0' as "key",'Todas empresas' as "label"  UNION\n    SELECT key,label from basDomain where domainid = 'PERSON_GROUP'\n    </executesql> 	\N	0
122	NEXT_ITEMNUMBER	Unidade	libraryUnitId	select	\N	<executesql>select libraryUnitId, libraryName from gtcLibraryUnit;</executesql> 	\N	0
123	TOTAL_ACQUISITION	Data inicial	beginDate	date	\N	\N	\N	0
124	TOTAL_ACQUISITION	Data final	endDate	date	\N	\N	\N	0
125	TOTAL_ACQUISITION	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
126	TIPO_AQUISICAO_LISTA	Data inicial	beginDate	date	\N	\N	\N	0
127	TIPO_AQUISICAO_LISTA	Data final	finalDate	date	\N	\N	\N	0
128	TIPO_AQUISICAO_LISTA	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit</executesql> 	\N	0
129	TIPO_AQUISICAO_LISTA	Tipo de aquisição	aquisitionType	select	\N	<executeSQL>\n    SELECT '0' as option,'Todas' as description UNION SELECT option,description from gtcmarctaglistingoption where marctaglistingid = '949.c' ORDER by 1\n    </executeSQL> 	\N	0
130	INSERIDO_PERIODO	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '-1', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit </executesql> 	\N	0
131	INSERIDO_PERIODO	Data inicial	beginDate	date	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit </executesql> 	\N	0
132	INSERIDO_PERIODO	Data final	finalDate	date	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit </executesql> 	\N	0
133	INSERIDO_PERIODO	Gênero do material	materialGenderId	select	\N	<executesql>SELECT '0' as materialgenderid,'Todos' as description UNION SELECT materialgenderid,description from gtcmaterialgender order by 1;</executesql> 	\N	0
134	LISTA_EXEMPLARES	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit ORDER BY 1</executesql> 	\N	0
135	LISTA_EXEMPLARES	Área de conhecimento	knowledgeAreaId	select	\N	<executesql>SELECT '0' as option, 'Todas' as description UNION SELECT option,description from gtcmarctaglistingoption where marctaglistingid  = '901.b' order by 1\n    </executesql> 	\N	0
136	LISTA_EXEMPLARES	Tipo físico do material	materialPhysicalTypeId	select	\N	<executesql>\n    SELECT '0' as materialphysicaltypeid, 'Todos'  as description UNION SELECT materialphysicaltypeid,description from gtcmaterialphysicaltype order by 1\n    </executesql> 	\N	0
137	LISTA_EXEMPLARES	Planilha	spreadSheetId	select	\N	<executesql>SELECT '0' as value, 'Todas' as description UNION SELECT (category ||'.'|| level) as value,(category ||'.'|| level) as description FROM gtcspreadsheet WHERE (category ||'.'|| level) NOT IN ('BA.4','SE.#','SA.4') ORDER BY 1 </executesql> 	\N	0
138	LISTA_EXEMPLARES	Estado do exemplar	exemplaryStatusId	select	\N	<executesql>SELECT (SELECT max(exemplarystatusid)+1 FROM gtcexemplarystatus) as value, 'Todos' as description UNION SELECT exemplarystatusid,description from gtcexemplarystatus order by 1 DESC </executesql> 	\N	0
139	OBRA_LISTA	Unidade da biblioteca	libraryUnitId	select	\N	<executesql>\n    SELECT '0' as value, 'Todas' as description UNION SELECT libraryunitid as value, libraryname as description  from gtclibraryunit order by 1\n    </executesql> 	\N	0
140	OBRA_LISTA	Tipo de material	materialTypeId	select	\N	<executesql>\n    SELECT '0' as value, 'Todos' as description UNION SELECT materialtypeid as value, description as description  from gtcmaterialtype order by 1\n    </executesql> 	\N	0
141	CLASSE_ANO	Ano inicial	beginYear	int	\N	\N	\N	0
142	CLASSE_ANO	Ano final	finalYear	int	\N	\N	\N	0
143	CLASSE_ANO	Classificação	classification	string	%	\N	\N	0
144	EXEMPLAR_CNPQ	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit ORDER BY 1</executesql> 	\N	0
145	EXEMPLAR_CNPQ	Tipo de material	materialTypeId	select	\N	<executesql>\n    SELECT '0' as value, 'Todos' as description UNION SELECT materialtypeid as value,description as description from gtcmaterialtype  order by 1\n    </executesql>     	\N	1
146	EXEMPLAR_CNPQ	Área de conhecimento	knowledgeAreaId	select	\N	<executesql>SELECT '0' as value, 'Todos' as description UNION SELECT option as value,description from gtcmarctaglistingoption  where  marctaglistingid = '901.b' order by 1</executesql> 	\N	2
173	EXEMPLAR_CNPQ	Data de entrada inicial	beginDate	date	01/01/1990	\N	\N	3
174	EXEMPLAR_CNPQ	Data de entrada final	endDate	date	new GDate::now()	\N	\N	4
175	EXEMPLAR_CNPQ	Ordenar por	orderBy	select	5,2,1	\n        <executesql>\n        SELECT  '5,2,1' ,'1 - Padrão'\n        UNION SELECT '1', '2 - Número de Controle'\n        UNION SELECT '2', '3 - Número do tombo'\n        UNION SELECT '3','4 - Título'\n        UNION SELECT '4','5 - Autor'\n        UNION SELECT '5','6 - Área de conhecimento'\n        UNION SELECT '6','7 - Tipo do material'\n        UNION SELECT '7','8 - Unidade'\n        ORDER BY 2\n        </executesql>\n         	\N	5
147	ESTATATISTA_CNPQ	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit ORDER BY 1</executesql> 	\N	0
168	ACCESS_FORM	Limite	limit	int	10	\N	10	0
169	ACCESS_FORM	Acessos	orderby	select	desc	<executephp>array("desc" => "Mais acessados", "asc" => "Menos acessados");</executephp> 	desc 	0
170	CAPA_DVD	Número do tombo	itemNumber	itemNumber	'90006206', '90002215' , '90003748'	\N	\N	0
171	CAPA_CD	Número de exemplar	itemNumber	itemNumber	\N	\N	\N	0
172	SIMPLE_SEARCH_TEM	Limite	limit	int	50	\N	\N	0
176	38	Exceto materiais com aquisições do tipo	exceptAquisition	select	\N	<executeSql>SELECT '0' as value, 'Nenhuma' as description  UNION  SELECT option,description from gtcmarctaglistingoption where marctaglistingid = '949.c'</executeSql> 	\N	4
177	EST_AQUISICAO	Data inicial	beginDate	date	\N	 	\N	1
178	EST_AQUISICAO	Data final	finalDate	date	\N	 	\N	2
179	EST_AQUISICAO	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit ORDER BY 1</executeSql> 	\N	0
180	EST_AQUISICAO	Tipo de material	materialTypeId	select	\N	<executesql> SELECT '0' as value, 'Todos' as description UNION SELECT materialtypeid as value, description  from gtcmaterialtype order by 1 </executesql> 	\N	3
181	EST_AQUISICAO	Exceto materiais com aquisições do tipo	exceptAquisition	select	0	<executeSql>SELECT '0' as value, 'Nenhuma' as description  UNION  SELECT option,description from gtcmarctaglistingoption where marctaglistingid = '949.c'</executeSql>		4
182	MATERIAL_GENERIC	Etiqueta	fieldid	string				0
183	MATERIAL_GENERIC	Subcampo	subfieldid	string	\N	\N		1
184	MATERIAL_GENERIC	Conteúdo	content	string	%	\N	\N	2
185	MATERIAL_GENERIC	Unidade	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit order by 1</executesql>	\N	2
76	38	Dicionário	dictionaryId	int		select * from gtcDictionary order by description 		0
186	SIMPLE_INVENTARY	Ordenar por	orderBy	select	\N	<executesql>SELECT 'tag245a' as tabela,'Título' as ordenacao UNION SELECT 'tag090a','Classificação' UNION SELECT 'tag100a','Autor' ORDER BY 1</executesql> 	\N	0
187	SIMPLE_INVENTARY	Unidade de biblioteca	libraryUnitId	select	\N	<executesql>SELECT '0', 'Todas unidades' UNION SELECT libraryUnitId, libraryName FROM gtcLibraryUnit ORDER BY 1</executesql>	\N	1
188	SIMPLE_INVENTARY	Classificação Inicial	beginClassification	string	\N	\N	\N	2
189	SIMPLE_INVENTARY	Classificação final	finalClassification	string	\N	\N	\N	3
190	SIMPLE_INVENTARY	Tipo de material	materialTypeId	select	\N	<executesql>SELECT '0', 'Todos tipos' UNION SELECT materialtypeid, description FROM gtcmaterialtype ORDER BY 1 </executesql>	\N	4
191	PERSON_ENTRY	Data inicial	beginDate	date	\N	\N	\N	0
192	PERSON_ENTRY	Data final	endDate	date	\N	\N	\N	1
\.


--
-- Data for Name: gtcrequestchangeexemplarystatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcrequestchangeexemplarystatus (requestchangeexemplarystatusid, futurestatusid, personid, observation, date, finaldate, requestchangeexemplarystatusstatusid, libraryunitid, aprovejustone, discipline) FROM stdin;
\.


--
-- Data for Name: gtcrequestchangeexemplarystatusaccess; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcrequestchangeexemplarystatusaccess (baslinkid, exemplarystatusid) FROM stdin;
\.


--
-- Data for Name: gtcrequestchangeexemplarystatuscomposition; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcrequestchangeexemplarystatuscomposition (requestchangeexemplarystatusid, itemnumber, exemplaryfuturestatusdefinedid, confirm, date, applied) FROM stdin;
\.


--
-- Data for Name: gtcrequestchangeexemplarystatusstatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcrequestchangeexemplarystatusstatus (requestchangeexemplarystatusstatusid, description) FROM stdin;
1	Solicitado
2	Aprovado
3	Reprovado
4	Concluído
5	Cancelado
6	Confirmado
\.


--
-- Data for Name: gtcrequestchangeexemplarystatusstatushistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcrequestchangeexemplarystatusstatushistory (requestchangeexemplarystatusid, requestchangeexemplarystatusstatusid, date, operator) FROM stdin;
\.


--
-- Data for Name: gtcreserve; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcreserve (reserveid, libraryunitid, personid, requesteddate, limitdate, reservestatusid, reservetypeid) FROM stdin;
\.


--
-- Data for Name: gtcreservecomposition; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcreservecomposition (reserveid, itemnumber, isconfirmed) FROM stdin;
\.


--
-- Data for Name: gtcreservestatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcreservestatus (reservestatusid, description) FROM stdin;
1	Solicitada
2	Atendida
3	Comunicada
4	Confirmada
5	Vencida
6	Cancelada
\.


--
-- Data for Name: gtcreservestatushistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcreservestatushistory (reserveid, reservestatusid, date, operator) FROM stdin;
\.


--
-- Data for Name: gtcreservetype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcreservetype (reservetypeid, description) FROM stdin;
1	Local
2	Web
3	Local (Atendidas)
4	Web (Estado inicial)
5	Local (Estado Inicial)
\.


--
-- Data for Name: gtcreturnregister; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcreturnregister (returnregisterid, returntypeid, itemnumber, date, operator) FROM stdin;
\.


--
-- Data for Name: gtcreturntype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcreturntype (returntypeid, description, sendmailreturnreceipt) FROM stdin;
1	Apagados	\N
2	Utilização local	\N
\.


--
-- Data for Name: gtcright; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcright (privilegegroupid, linkid, materialgenderid, operationid) FROM stdin;
1	1	1	1
1	1	1	2
1	1	1	10
1	1	1	12
1	1	1	14
1	1	1	15
1	1	3	1
1	1	3	2
1	1	3	10
1	1	3	12
1	1	3	14
1	1	3	15
1	1	4	1
1	1	4	2
1	1	4	10
1	1	4	12
1	1	4	14
1	1	4	15
1	1	5	1
1	1	5	2
1	1	5	10
1	1	5	12
1	1	5	14
1	1	5	15
1	2	1	1
1	2	1	2
1	2	1	10
1	2	1	12
1	2	1	14
1	2	1	15
1	2	3	1
1	2	3	2
1	2	3	10
1	2	3	12
1	2	3	14
1	2	3	15
1	2	4	1
1	2	4	2
1	2	4	10
1	2	4	12
1	2	4	14
1	2	4	15
1	2	5	1
1	2	5	2
1	2	5	10
1	2	5	12
1	2	5	14
1	2	5	15
1	1	1	23
1	1	3	23
1	1	4	23
1	1	5	23
1	2	1	23
1	2	3	23
1	2	4	23
1	2	5	23
\.


--
-- Data for Name: gtcrulesformaterialmovement; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcrulesformaterialmovement (currentstate, operationid, locationformaterialmovementid, futurestate) FROM stdin;
1	3	1	16
16	5	1	1
1	4	1	16
16	4	1	1
1	1	1	2
1	2	1	1
1	14	1	3
2	2	1	0
2	14	1	3
2	1	1	2
3	1	1	2
3	15	1	0
3	2	1	3
3	14	1	3
15	2	1	1
15	14	1	3
6	2	1	0
6	14	1	3
5	2	1	1
\.


--
-- Data for Name: gtcrulestocompletefieldsmarc; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcrulestocompletefieldsmarc (rulestocompletefieldsmarcid, category, originfield, fatefield, affectrecordscompleted) FROM stdin;
\.


--
-- Data for Name: gtcschedulecycle; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcschedulecycle (schedulecycleid, description, valuetype) FROM stdin;
1	Sem Ciclo	d/m/Y H
2	Anual	d/m H
3	Mensal	d H
4	Semanal	w H
5	Diário	H
\.


--
-- Data for Name: gtcscheduletask; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcscheduletask (scheduletaskid, taskid, schedulecycleid, description, cyclevalue, enable, parameters) FROM stdin;
1	28	5	Remover arquivos temporarios do gnuteca	11	t	
\.


--
-- Data for Name: gtcscheduletasklog; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcscheduletasklog (scheduletaskid, log, date, status) FROM stdin;
\.


--
-- Data for Name: gtcsearchablefield; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsearchablefield (searchablefieldid, description, field, identifier, fieldtype, isrestricted, level, observation, helps) FROM stdin;
1	Título	240.a,245.a+245.b,246.a+246.b	titulo	2	f	9	\N	
2	Autor	100.a,700.a	autor	2	f	12	\N	
3	Assunto	650.a	assunto	2	f	15	\N	
5	Ano	260.c	ano	1	f	18	\N	
6	Classificação	090.a,090.b,080.a,090.a+090.b	classificacao	2	f	21	\N	
7	CDU (090)	090.a	cdu	2	t	24	\N	
8	Cutter	090.b	cutter	2	t	27	\N	
9	Editora	260.b	editora	2	f	30	\N	
10	Evento	111.a,711.a	evento	2	f	33	\N	
11	Número de controle	001.a	controle	1	t	36	\N	
12	Número do tombo	949.a	tombo	2	t	40	\N	
13	Número da obra	950.a	obra	1	t	43	\N	
14	Número da nota fiscal	949.f	nota	1	t	46	\N	
15	Data da nota fiscal	949.h	datanota	\N	t	49	\N	
16	Centro de custo	949.q	cc	\N	t	52	\N	
17	Volume de periódicos	362.a	volume	\N	t	55	\N	
18	CDU (080)	080.a	cdu080	\N	t	25	\N	
4	Todos os campos		todos	2	f	6	\N	
\.


--
-- Data for Name: gtcsearchablefieldaccess; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsearchablefieldaccess (searchablefieldid, linkid) FROM stdin;
\.


--
-- Data for Name: gtcsearchformat; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsearchformat (searchformatid, description, isrestricted) FROM stdin;
2	Marc	f
3	Circulação de material	t
4	Favoritos	t
5	Administração	t
6	Z3950	t
7	Formato bibliográfico	f
10	ISO 2709	f
1	Padrão	f
\.


--
-- Data for Name: gtcsearchformataccess; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsearchformataccess (searchformatid, linkid) FROM stdin;
\.


--
-- Data for Name: gtcsearchformatcolumn; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsearchformatcolumn (searchformatid, "column") FROM stdin;
10	Image
10	Exemplarys
\.


--
-- Data for Name: gtcsearchmaterialview; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsearchmaterialview (controlnumber, entrancedate, lastchangedate, category, level, materialgenderid, materialtypeid, materialphysicaltypeid, exemplaryitemnumber, exemplaryoriginallibraryunitid, exemplarylibraryunitid, exemplaryacquisitiontype, exemplaryexemplarystatusid, exemplarymaterialgenderid, exemplarymaterialtypeid, exemplarymaterialphysicaltypeid, exemplaryentrancedate, exemplarylowdate) FROM stdin;
\.


--
-- Data for Name: gtcsearchpresentationformat; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsearchpresentationformat (searchformatid, category, searchformat, detailformat) FROM stdin;
2	DF	<ifexists $090.a $090.b>\n    <style b>090</style>\n    <ifexists $090.a>^a $090.a</ifexists>\n    <ifexists $090.b>^b $090.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>100</style>\n    ^a $100.a\n    $LN\n</ifexists>\n<ifexists $245.a $245.b>\n    <style b>245</style>\n    <ifexists $245.a>^a $245.a</ifexists>\n    <ifexists $245.b>^b $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $250.a >\n    <style b>250</style>\n    ^a $250.a\n    $LN\n</ifexists>\n<ifexists $260.c >\n    <style b>260</style>\n    ^c $260.c\n    $LN\n</ifexists>\n<ifexists $362.a >\n    <style b>362</style>\n    ^a $362.a\n    $LN\n</ifexists>	<ifexists $041.a >\n    <style b>041</style>\n    ^a $041.a\n    $LN\n</ifexists>\n<ifexists $090.a $090.b>\n    <style b>090</style>\n    <ifexists $090.a>^a $090.a</ifexists>\n    <ifexists $090.b>^b $090.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>100</style>\n    ^a $100.a\n    $LN\n</ifexists>\n<ifexists $110.a >\n    <style b>110</style>\n    ^a $110.a\n    $LN\n</ifexists>\n<ifexists $111.d $111.n >\n    <style b>111</style>\n    <ifexists $111.d>^d $111.d</ifexists>\n    <ifexists $111.n>^n $111.d</ifexists>\n    $LN\n</ifexists>\n<ifexists $245.a $245.b $245.h $245.k>\n    <style b>245</style>\n    <ifexists $245.a>^a $245.a</ifexists>\n    <ifexists $245.b>^b $245.b</ifexists>\n    <ifexists $245.h>^h $245.h</ifexists>\n    <ifexists $245.k>^k $245.k</ifexists>\n    $LN\n</ifexists>\n<ifexists $246.a $246.b>\n    <style b>245</style>\n    <ifexists $246.a>^a $246.a</ifexists>\n    <ifexists $246.b>^b $246.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $250.a >\n    <style b>250</style>\n    ^a $250.a\n    $LN\n</ifexists>\n<ifexists $260.a $260.b $260.c>\n    <style b>260</style>\n    <ifexists $260.a>^a $260.a</ifexists>\n    <ifexists $260.b>^b $260.b</ifexists>\n    <ifexists $260.c>^c $260.c</ifexists>\n    $LN\n</ifexists>\n<ifexists $300.a $300.e >\n    <style b>300</style>\n    <ifexists $300.a>^a $300.a</ifexists>\n    <ifexists $300.e>^e $300.e</ifexists>\n    $LN\n</ifexists>\n<ifexists $310.a >\n    <style b>310</style>\n    ^a $310.a\n    $LN\n</ifexists>\n<ifexists $362.a >\n    <style b>362</style>\n    ^a $362.a\n    $LN\n</ifexists>\n<ifexists $440.a >\n    <style b>440</style>\n    ^a $440.a\n    $LN\n</ifexists>\n<ifexists $500.a >\n    <style b>500</style>\n    ^a $500.a\n    $LN\n</ifexists>\n<ifexists $502.a >\n    <style b>502</style>\n    ^a $502.a\n    $LN\n</ifexists>\n<ifexists $505.a >\n    <style b>505</style>\n    ^a $505.a\n    $LN\n</ifexists>\n<ifexists $510.a >\n    <style b>510</style>\n    ^a $510.a\n    $LN\n</ifexists>\n<ifexists $520.a >\n    <style b>520</style>\n    ^a $520.a\n    $LN\n</ifexists>\n<ifexists $590.a >\n    <style b>590</style>\n    ^a $590.a\n    $LN\n</ifexists>\n<ifexists $650.a >\n    <style b>650</style>\n    ^a $650.a\n    $LN\n</ifexists>\n<ifexists $653.a >\n    <style b>653</style>\n    ^a $653.a\n    $LN\n</ifexists>\n<ifexists $700.a >\n    <style b>700</style>\n    ^a $700.a\n    $LN\n</ifexists>\n<ifexists $710.a >\n    <style b>710</style>\n    ^a $710.a\n    $LN\n</ifexists>\n<ifexists $711.a $711.d $711.n >\n    <style b>711</style>\n    <ifexists $711.a>^a $711.a</ifexists>\n    <ifexists $711.d>^d $711.d</ifexists>\n    <ifexists $711.n>^n $711.n</ifexists>\n    $LN\n</ifexists>\n<ifexists $740.a >\n    <style b>740</style>\n    ^a $740.a\n    $LN\n</ifexists>\n<ifexists $773.t >\n    <style b>773</style>\n    ^t $773.t\n    $LN\n</ifexists>\n<ifexists $780.a $780.t >\n    <style b>780</style>\n    <ifexists $780.a>^a $780.a</ifexists>\n    <ifexists $780.t>^t $780.t</ifexists>\n    $LN\n</ifexists>\n<ifexists $785.a >\n    <style b>785</style>\n    ^a $785.a\n    $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>856</style>\n    ^u $856.u\n    $LN\n</ifexists>\n<ifexists $947.a >\n    <style b>947</style>\n    ^a $947.a\n    $LN\n</ifexists>
2	SE	\n<ifexists $090.a $090.b ><style b>090:</style> <ifexists $090.a>^a $090.a</ifexists> &nbsp; <ifexists $090.b>^b $090.b</ifexists> $LN</ifexists>\n<ifexists $245.a ><style b>245:</style> ^a $245.a $LN</ifexists>\n<ifexists $260.a $260.b><style b>260:</style> <ifexists $260.a>^a $260.a</ifexists> &nbsp; <ifexists $260.b>^b $260.b</ifexists> $LN</ifexists>\n	\n<ifexists $000.a >000: ^a $000.a $LN</ifexists>\n<ifexists $041.a >041: ^a $041.a $LN</ifexists>\n<ifexists $090.a $090.b >090: <ifexists $090.a>^a $090.a</ifexists> &nbsp; <ifexists $090.b>^b $090.b</ifexists> $LN</ifexists>\n<ifexists $245.a >245: ^a $245.a $LN</ifexists>\n<ifexists $260.a $260.b>260: <ifexists $260.a>^a $260.a</ifexists> &nbsp; <ifexists $260.b>^b $260.b</ifexists> $LN</ifexists>\n<ifexists $310.a >310: ^a $310.a $LN</ifexists>\n<ifexists $590.a >590: ^a $590.a $LN</ifexists>\n<ifexists $650.a >650: ^a <replace -#- | $SP^a$SP >$650.a</replace> $LN</ifexists>\n<ifexists $856.u >856: ^u <href $856.u >$856.a</href> $LN</ifexists>\n
2	BK	\n<ifexists $090.a $090.a ><style b>090:</style> <ifexists $090.a>^a $090.a</ifexists> &nbsp; <ifexists $090.b>^b $090.b</ifexists> $LN</ifexists>\n<ifexists $100.a ><style b>100:</style> ^a $100.a $LN</ifexists>\n<ifexists $245.a ><style b>245:</style> ^a $245.a $LN</ifexists>\n	\n<ifexists $000.a >000: ^a $000.a $LN</ifexists>\n<ifexists $041.a >041: ^a $041.a $LN</ifexists>\n<ifexists $090.a $090.a >090: <ifexists $090.a>^a $090.a</ifexists> &nbsp; <ifexists $090.b>^b $090.b</ifexists> $LN</ifexists>\n<ifexists $100.a >100: ^a $100.a $LN</ifexists>\n<ifexists $245.a >245: ^a $245.a $LN</ifexists>\n<ifexists $250.a >250: ^a $250.a $LN</ifexists>\n<ifexists $260.a $260.b>260: <ifexists $260.a>^a $260.a</ifexists> &nbsp; <ifexists $260.b>^b $260.b</ifexists> $LN</ifexists>\n<ifexists $300.a >300: ^a $300.a $LN</ifexists>\n<ifexists $650.a >650: ^a <replace -#- | $SP^a$SP >$650.a</replace> $LN</ifexists>\n
5	DF	\n<style b>Título:</style> $245.a $LN\n<style b>Autor:</style> $100.a $LN\n<style b>Classificação:</style> $090.a $090.b $LN\n\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>	\n<style b>Título:</style> $245.a $LN\n<style b>Autor:</style> $100.a $LN\n<style b>Classificação:</style> $090.a $090.b $LN\n\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>
7	BK	<ifexists $111.a>\n<upper>$111.a</upper>, \n$111.n., \n$111.d, \n$111.c. \n<style b>\n<pregmatch ^[\\w]{0,} | $245.a></pregmatch>... \n</style>\n$260.a: \n$260.b, \n$260.c.\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</ifexists>\n<ifNotExists $111.a>\n<ifNotExists $100.a>\n<ifexists $700.a>\n<getauthors700aabntformat $001.a></getauthors700aabntformat> \n</ifexists>\n<ifNotExists $700.a>\n<gettitleabntfotmated $001.a | 245.a></gettitleabntfotmated>\n</ifNotExists>  \n</ifNotExists>\n<ifexists $100.a>\n<upper><pregmatch ^[\\w]{0,} | $100.a></pregmatch></upper>,\n<pregmatch [\\w\\s.]{0,}$ | $100.a></pregmatch>. \n</ifexists>\n<ifNotExists $100.a>\n<ifExists $700.a>\n<style b>$245.a</style>\n<ifexists $245.b>\n: $245.b\n</ifexists>.\n</ifExists>  \n</ifNotExists>\n<ifExists $100.a>\n<ifNotExists $700.a>\n<style b>$245.a</style>\n<ifexists $245.b>\n: $245.b\n</ifexists>.\n</ifNotExists>  \n</ifExists>\n<ifExists $100.a>\n<ifExists $700.a>\n<style b>$245.a</style>\n<ifexists $245.b>\n: $245.b\n</ifexists>.\n</ifExists>  \n</ifExists>\n<compare ($001.a 901.a) | = | 2 >\n$260.c. $300.a f. $502.a\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</compare>\n<compare ($001.a 901.a) | = | 3 >\n$260.c. $300.a f. $502.a\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</compare>\n<compare ($001.a 901.a) | = | 4 >\n$260.c. $300.a f. $502.a\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</compare>\n<compare ($001.a 901.a) | = | 5 >\n$260.c. $300.a f. $502.a\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</compare>\n<compare ($001.a 901.a) | != | 2 >\n<compare ($001.a 901.a) | != | 3 >\n<compare ($001.a 901.a) | != | 4 >\n<compare ($001.a 901.a) | != | 5 >\n$260.a: $260.b, $260.c.\n</compare>\n</compare>\n</compare>\n</compare>\n</ifNotExists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	<ifexists $111.a>\n<upper>$111.a</upper>, \n$111.n., \n$111.d, \n$111.c. \n<style b>\n<pregmatch ^[\\w]{0,} | $245.a></pregmatch>... \n</style>\n$260.a: \n$260.b, \n$260.c.\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</ifexists>\n<ifNotExists $111.a>\n<ifNotExists $100.a>\n<ifexists $700.a>\n<getauthors700aabntformat $001.a></getauthors700aabntformat> \n</ifexists>\n<ifNotExists $700.a>\n<gettitleabntfotmated $001.a | 245.a></gettitleabntfotmated>\n</ifNotExists>  \n</ifNotExists>\n<ifexists $100.a>\n<upper><pregmatch ^[\\w]{0,} | $100.a></pregmatch></upper>,\n<pregmatch [\\w\\s.]{0,}$ | $100.a></pregmatch>. \n</ifexists>\n<ifNotExists $100.a>\n<ifExists $700.a>\n<style b>$245.a</style>\n<ifexists $245.b>\n: $245.b\n</ifexists>.\n</ifExists>  \n</ifNotExists>\n<ifExists $100.a>\n<ifNotExists $700.a>\n<style b>$245.a</style>\n<ifexists $245.b>\n: $245.b\n</ifexists>.\n</ifNotExists>  \n</ifExists>\n<ifExists $100.a>\n<ifExists $700.a>\n<style b>$245.a</style>\n<ifexists $245.b>\n: $245.b\n</ifexists>.\n</ifExists>  \n</ifExists>\n<compare ($001.a 901.a) | = | 2 >\n$260.c. $300.a f. $502.a\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</compare>\n<compare ($001.a 901.a) | = | 3 >\n$260.c. $300.a f. $502.a\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</compare>\n<compare ($001.a 901.a) | = | 4 >\n$260.c. $300.a f. $502.a\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</compare>\n<compare ($001.a 901.a) | = | 5 >\n$260.c. $300.a f. $502.a\n<compare ($001.a 901.c) | != | 1 >\n<compare ($001.a 901.c) | = | 4 >\n1 videocassete.\n</compare>\n<compare ($001.a 901.c) | != | 4 >\n1 901.c.\n</compare>\n</compare>\n</compare>\n<compare ($001.a 901.a) | != | 2 >\n<compare ($001.a 901.a) | != | 3 >\n<compare ($001.a 901.a) | != | 4 >\n<compare ($001.a 901.a) | != | 5 >\n$260.a: $260.b, $260.c.\n</compare>\n</compare>\n</compare>\n</compare>\n</ifNotExists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>
4	DF	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b>: $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>\n    Autor:\n    </style>\n    $100.a $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação: <style color=DarkCyan | font-size=13px> $090.a $090.b</style></style>$LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência:\n    </style>\n    $362.a $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b>: $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>\n    Autor:\n    </style>\n    $100.a $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação: <style color=DarkCyan | font-size=13px> $090.a $090.b</style></style>$LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência:\n    </style>\n    $362.a $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>
3	DF	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b>: $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>\n    Autor:\n    </style>\n    $100.a $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação: <style color=DarkCyan | font-size=13px> $090.a $090.b</style></style>$LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência:\n    </style>\n    $362.a $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b>: $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>\n    Autor:\n    </style>\n    $100.a $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação: <style color=DarkCyan | font-size=13px> $090.a $090.b</style></style>$LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência:\n    </style>\n    $362.a $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>
6	DF	<ifexists $245.a >\n    <style b>Titulo:</style>$245.a\n    <ifexists $245.b>: $245.b</ifexists>$LN\n</ifexists>\n<ifexists $100.a >\n    <style b>Autor:</style>$100.a $LN\n</ifexists>\n<ifexists $110.a >\n    <style b>Nome Corporativo ou Nome da Jurisdição:</style>$110.a $LN\n</ifexists>\n<ifexists $111.a >\n    <style b>Nome de Evento ou Jurisdição:</style>$111.a $LN\n</ifexists>\n<ifexists $400.a >\n    <style b>Título da série:</style>$400.a $LN\n</ifexists>\n<ifexists $700.a >\n    <style b>Nome pessoal:</style>$700.a $LN\n</ifexists>\n<ifexists $800.a >\n    <style b>Nome pessoal:</style>$800.a $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação:<style color=DarkCyan> $090.a $090.b</style></style> $LN\n</ifexists>\n<ifexists $080.a >\n    <style b>Número de Classificação Decimal Universal:<style color=DarkCyan> $080.a </style></style> $LN\n</ifexists>\n<ifexists $082.a >\n    <style b>Número de Classificação:<style color=DarkCyan> $082.a </style></style> $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	001.a == $001.a $LN\n005.a == $005.a $LN\n008.a == $008.a $LN\n035.a == $035.a $LN\n040.a == $040.a $LN\n040.c == $040.c $LN\n040.d == $040.d $LN\n100.a == $100.a $LN\n100.d == $100.d $LN\n245.a == $245.a $LN\n245.b == $245.b $LN\n245.c == $245.c $LN\n260.a == $260.a $LN\n260.b == $260.b $LN\n260.c == $260.c $LN\n300.a == $300.a $LN\n300.c == $300.c $LN\n490.a == $490.a $LN\n490.v == $490.v $LN\n500.a == $500.a $LN\n650.a == $650.a $LN\n700.a == $700.a $LN\n700.d == $700.d $LN\n752.a == $752.a $LN\n752.d == $752.d $LN\n830.a == $830.a $LN\n830.v == $830.v $LN\n852.8 == $852.8 $LN\n852.a == $852.a $LN\n852.b == $852.b $LN\n852.h == $852.h $LN\n852.i == $852.i $LN\n852.j == $852.j $LN\n079.a == $079.a $LN\n090.a == $090.a $LN\n090.b == $090.b $LN\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>
7	SA	<ifNotExists $100.a>\n<ifexists $700.a>\n<getauthors700aabntformat $001.a></getauthors700aabntformat> \n</ifexists>\n<ifNotExists $700.a>\n<gettitleabntfotmated $001.a | 245.a></gettitleabntfotmated>\n</ifNotExists>  \n</ifNotExists>\n<ifexists $100.a>\n<upper><pregmatch ^[\\w]{0,} | $100.a></pregmatch></upper>,\n<pregmatch [\\w\\s.]{0,}$ | $100.a></pregmatch>. \n</ifexists>\n<ifNotExists $100.a>\n<ifExists $700.a>\n$245.a\n<ifexists $245.b>\n<gtcSeparator $001.a | 245.a | # | 245.b></gtcSeparator> \n$245.b\n</ifexists>.\n</ifExists>  \n</ifNotExists>\n<ifExists $100.a>\n<ifNotExists $700.a>\n$245.a\n<ifexists $245.b>\n<gtcSeparator $001.a | 245.a | # | 245.b></gtcSeparator> \n$245.b\n</ifexists>.\n</ifNotExists>  \n</ifExists>\n<ifExists $100.a>\n<ifExists $700.a>\n$245.a\n<ifexists $245.b>\n<gtcSeparator $001.a | 245.a | # | 245.b></gtcSeparator> \n$245.b\n</ifexists>.\n</ifExists>  \n</ifExists>\n<style b>$773.t</style>, \n<gettagdescription $773.w | 260.a | 1 >_DESCRIPTION_, </gettagdescription>\n<pregmatch v. [0-9]{0,20}, n. [0-9 a-z.]{0,50} | $362.a></pregmatch>, \np. $300.a, \n<pregmatch [0-9]{4}$ | $362.a></pregmatch>\n<gettagdescription $773.w | 245.h | 1 >1 _DESCRIPTION_</gettagdescription>.\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	<ifNotExists $100.a>\n<ifexists $700.a>\n<getauthors700aabntformat $001.a></getauthors700aabntformat> \n</ifexists>\n<ifNotExists $700.a>\n<gettitleabntfotmated $001.a | 245.a></gettitleabntfotmated>\n</ifNotExists>  \n</ifNotExists>\n<ifexists $100.a>\n<upper><pregmatch ^[\\w]{0,} | $100.a></pregmatch></upper>,\n<pregmatch [\\w\\s.]{0,}$ | $100.a></pregmatch>. \n</ifexists>\n<ifNotExists $100.a>\n<ifExists $700.a>\n$245.a\n<ifexists $245.b>\n<gtcSeparator $001.a | 245.a | # | 245.b></gtcSeparator> \n$245.b\n</ifexists>.\n</ifExists>  \n</ifNotExists>\n<ifExists $100.a>\n<ifNotExists $700.a>\n$245.a\n<ifexists $245.b>\n<gtcSeparator $001.a | 245.a | # | 245.b></gtcSeparator> \n$245.b\n</ifexists>.\n</ifNotExists>  \n</ifExists>\n<ifExists $100.a>\n<ifExists $700.a>\n$245.a\n<ifexists $245.b>\n<gtcSeparator $001.a | 245.a | # | 245.b></gtcSeparator> \n$245.b\n</ifexists>.\n</ifExists>  \n</ifExists>\n<style b>$773.t</style>, \n<gettagdescription $773.w | 260.a | 1 >_DESCRIPTION_, </gettagdescription>\n<pregmatch v. [0-9]{0,20}, n. [0-9 a-z.]{0,50} | $362.a></pregmatch>, \np. $300.a, \n<pregmatch [0-9]{4}$ | $362.a></pregmatch>\n<gettagdescription $773.w | 245.h | 1 >1 _DESCRIPTION_</gettagdescription>.\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>
7	SE	<upper>\n$245.a\n</upper>\n<ifexists $245.b>\n<gtcSeparator $001.a | 245.a | # | 245.b></gtcSeparator> $245.b\n</ifexists>. \n<ifexists $260.a>\n$260.a: $260.b, $260.c. \n<ifexists $245.h>\n1 $245.h. \n</ifexists>\n</ifexists>\n<ifNotExists $260.a>\n<gettagdescription $773.w | 260.a >_DESCRIPTION_, </gettagdescription> \n<gettagdescription $773.w | 260.b >_DESCRIPTION_, </gettagdescription> \n$362.a. \n<gettagdescription $773.w | 245.h >1 _DESCRIPTION_.</gettagdescription>\n</ifNotExists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	<upper>\n$245.a\n</upper>\n<ifexists $245.b>\n<gtcSeparator $001.a | 245.a | # | 245.b></gtcSeparator> $245.b\n</ifexists>. \n<ifexists $260.a>\n$260.a: $260.b, $260.c. \n<ifexists $245.h>\n1 $245.h. \n</ifexists>\n</ifexists>\n<ifNotExists $260.a>\n<gettagdescription $773.w | 260.a >_DESCRIPTION_, </gettagdescription> \n<gettagdescription $773.w | 260.b >_DESCRIPTION_, </gettagdescription> \n$362.a. \n<gettagdescription $773.w | 245.h >1 _DESCRIPTION_.</gettagdescription>\n</ifNotExists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>
10	DF	<gtcIso2709 $001.a></gtcIso2709>	<gtcIso2709 $001.a></gtcIso2709>
1	SE	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b >:$245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $260.c >\n    <style b>\n    Data de Publicação, Distribuição, etc.:\n    </style>\n    $260.c $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação:</style>\n    <style color=DarkCyan | font-size=13px>$090.a $090.b </style>$LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência:\n    </style><style color=DarkCyan | font-size=13px>\n    $362.a </style>$LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b>: $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>\n    Autor:\n    </style>\n    $100.a $LN\n</ifexists>\n<ifexists $250.a >\n    <style b>\n    Edição:\n    </style>\n    $250.a $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação: <style color=DarkCyan | font-size=13px> $090.a $090.b</style></style>$LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência: <style color=DarkCyan | font-size=13px>$362.a </style></style>$LN\n</ifexists>\n<ifexists $246.a >\n    <style b>\n        Título/título Abreviado:\n    </style>\n    $246.a\n    <ifexists $246.b>: $246.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $650.a $653.a >\n    <style b>\n    Assunto:\n    </style>\n    $650.a $653.a $LN\n</ifexists>\n<ifexists $245.h >\n    <style b>\n    Meio físico:\n    </style>\n    $245.h $LN\n</ifexists>\n<ifexists $245.k >\n    <style b>\n    Forma:\n    </style>\n    $245.k $LN\n</ifexists>\n<ifexists $310.a >\n    <style b>\n    Periodicidade:\n    </style>\n    $310.a $LN\n</ifexists>\n<ifexists $700.a >\n    <style b>\n    Nome pessoal:\n    </style>\n    $700.a $LN\n</ifexists>\n<ifexists $710.a >\n    <style b>\n    Nome corporativo ou jurisdição:\n    </style>\n    $710.a $LN\n</ifexists>\n<ifexists $711.a >\n    <style b>\n    Nome do evento ou jurisdição como entrada:\n    </style>\n    $711.a - $711.d - $711.n $LN\n</ifexists>\n<ifexists $740.a >\n    <style b>\n    Título relacionado / Analítico não controlado:\n    </style>\n    $740.a $LN\n</ifexists>\n<ifexists $440.a >\n    <style b>\n    Título da série:\n    </style>\n    $440.a $LN\n</ifexists>\n<ifexists $500.a >\n    <style b>\n    Nota geral:\n    </style>\n    $500.a $LN\n</ifexists>\n<ifexists $502.a >\n    <style b>\n    Nota de Dissertação ou Tese:\n    </style>\n    $502.a $LN\n</ifexists>\n<ifexists $510.a >\n    <style b>\n    Nome da fonte:\n    </style>\n    $510.a $LN\n</ifexists>\n<ifexists $520.a >\n    <style b>\n    Nota de Resumo:\n    </style>\n    $520.a $LN\n</ifexists>\n<ifexists $590.a >\n    <style b>\n    Notas locais:\n    </style>\n    $590.a $LN\n</ifexists>\n<ifexists $773.t >\n    <style b>\n    Título:\n    </style>\n    $773.t $LN\n</ifexists>\n<ifexists $780.a >\n    <style b>\n    Título da entrada principal:\n    </style>\n    $780.a $LN\n</ifexists>\n<ifexists $780.t >\n    <style b>\n    Título:\n    </style>\n    $780.t $LN\n</ifexists>\n<ifexists $785.a >\n    <style b>\n    Título da entrada principal:\n    </style>\n    $785.a $LN\n</ifexists>\n<ifexists $111.d >\n    <style b>\n    Data do Evento:\n    </style>\n    $111.d $LN\n</ifexists>\n<ifexists $111.n >\n    <style b>\n    Número de Parte/Seção/Evento:\n    </style>\n    $111.n $LN\n</ifexists>\n<ifexists $041.a >\n    <style b>\n    Código de Idioma do Texto/trilha Sonora ou Título Diferente:\n    </style>\n    $041.a $LN\n</ifexists>\n<ifexists $260.a >\n    <style b>\n    Lugar de Publicação, Distribuição, etc.:\n    </style>\n    $260.a $LN\n</ifexists>\n<ifexists $260.b >\n    <style b>\n    Nome do Editor, Distribuidor, etc.:\n    </style>\n    $260.b $LN\n</ifexists>\n<ifexists $260.c >\n    <style b>\n    Data de Publicação, Distribuição, etc.:\n    </style>\n    $260.c $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>\n    Localizador da fonte (endereço eletrônico):\n    </style>\n    $856.u $LN\n</ifexists>\n<ifexists $110.a >\n    <style b>\n    Nome Corporativo ou Nome da Jurisdição:\n    </style>\n    $110.a $LN\n</ifexists>\n<ifexists $300.a >\n    <style b>\n    Extensão:\n    </style>\n    $300.a $LN\n</ifexists>\n<ifexists $300.e >\n    <style b>\n    Material Complementar:\n    </style>\n    $300.e $LN\n</ifexists>\n<ifexists $505.a >\n    <style b>\n    Nota de conteúdo:\n    </style>\n    $505.a $LN\n</ifexists>\n<ifexists $947.a >\n    <style b>\n    Código do editor/fornecedor:\n    </style>\n    $947.a $LN\n</ifexists>
1	DF	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b>: $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>\n    Autor:\n    </style>\n    $100.a $LN\n</ifexists>\n<ifexists $250.a >\n    <style b>\n    Edição:\n    </style>\n    $250.a $LN\n</ifexists>\n<ifexists $260.c >\n    <style b>\n    Ano:\n    </style>\n    $260.c $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação: <style color=DarkCyan | font-size=13px> $090.a $090.b</style></style>$LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência:\n    </style>\n    $362.a $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b>: $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>\n    Autor:\n    </style>\n    $100.a $LN\n</ifexists>\n<ifexists $250.a >\n    <style b>\n    Edição:\n    </style>\n    $250.a $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação: <style color=DarkCyan | font-size=13px> $090.a $090.b</style></style>$LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência: $362.a </style>$LN\n</ifexists>\n<ifexists $246.a >\n    <style b>\n        Título abreviado:\n    </style>\n    $246.a\n    <ifexists $246.b>: $246.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $650.a $653.a >\n    <style b>\n    Assunto:\n    </style>\n    $650.a $653.a $LN\n</ifexists>\n<ifexists $245.h >\n    <style b>\n    Meio físico:\n    </style>\n    $245.h $LN\n</ifexists>\n<ifexists $245.k >\n    <style b>\n    Forma:\n    </style>\n    $245.k $LN\n</ifexists>\n<ifexists $310.a >\n    <style b>\n    Periodicidade:\n    </style>\n    $310.a $LN\n</ifexists>\n<ifexists $700.a >\n    <style b>\n    Nome pessoal:\n    </style>\n    $700.a $LN\n</ifexists>\n<ifexists $710.a >\n    <style b>\n    Nome corporativo ou jurisdição:\n    </style>\n    $710.a $LN\n</ifexists>\n<ifexists $711.a >\n    <style b>\n    Nome do evento ou jurisdição:\n    </style>\n    $711.a - $711.d - $711.n $LN\n</ifexists>\n<ifexists $740.a >\n    <style b>\n    Título relacionado / Analítico não controlado:\n    </style>\n    $740.a $LN\n</ifexists>\n<ifexists $440.a >\n    <style b>\n    Título da série:\n    </style>\n    $440.a $LN\n</ifexists>\n<ifexists $500.a >\n    <style b>\n    Nota geral:\n    </style>\n    $500.a $LN\n</ifexists>\n<ifexists $502.a >\n    <style b>\n    Nota de Dissertação ou Tese:\n    </style>\n    $502.a $LN\n</ifexists>\n<ifexists $510.a >\n    <style b>\n    Nome da fonte:\n    </style>\n    $510.a $LN\n</ifexists>\n<ifexists $520.a >\n    <style b>\n    Nota de Resumo:\n    </style>\n    $520.a $LN\n</ifexists>\n<ifexists $590.a >\n    <style b>\n    Notas locais:\n    </style>\n    $590.a $LN\n</ifexists>\n<ifexists $773.t >\n    <style b>\n    Título da entrada principal:\n    </style>\n    $773.t $LN\n</ifexists>\n<ifexists $780.a >\n    <style b>\n    Título da entrada principal:\n    </style>\n    $780.a $LN\n</ifexists>\n<ifexists $780.t >\n    <style b>\n    Título:\n    </style>\n    $780.t $LN\n</ifexists>\n<ifexists $785.a >\n    <style b>\n    Titulo:\n    </style>\n    $785.a $LN\n</ifexists>\n<ifexists $111.d >\n    <style b>\n    Data do Evento:\n    </style>\n    $111.d $LN\n</ifexists>\n<ifexists $111.n >\n    <style b>\n    Número de Parte/Seção/Evento:\n    </style>\n    $111.n $LN\n</ifexists>\n<ifexists $041.a >\n    <style b>\n    Código de Idioma do Texto/trilha Sonora ou Título Diferente:\n    </style>\n    $041.a $LN\n</ifexists>\n<ifexists $260.a >\n    <style b>\n    Lugar de Publicação, Distribuição, etc.:\n    </style>\n    $260.a $LN\n</ifexists>\n<ifexists $260.b >\n    <style b>\n    Nome do Editor, Distribuidor, etc.:\n    </style>\n    $260.b $LN\n</ifexists>\n<ifexists $260.c >\n    <style b>\n    Data de Publicação, Distribuição, etc.:\n    </style>\n    $260.c $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>\n    Localizador da fonte (endereço eletrônico):\n    </style>\n    $856.u $LN\n</ifexists>\n<ifexists $110.a >\n    <style b>\n    Nome Corporativo ou Nome da Jurisdição:\n    </style>\n    $110.a $LN\n</ifexists>\n<ifexists $300.a >\n    <style b>\n    Extensão:\n    </style>\n    $300.a $LN\n</ifexists>\n<ifexists $300.e >\n    <style b>\n    Material Complementar:\n    </style>\n    $300.e $LN\n</ifexists>\n<ifexists $505.a >\n    <style b>\n    Nota de conteúdo:\n    </style>\n    $505.a $LN\n</ifexists>\n<ifexists $947.a >\n    <style b>\n    Código do editor/fornecedor:\n    </style>\n    $947.a $LN\n</ifexists>
1	BK	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b>: $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>\n    Autor:\n    </style>\n    $100.a $LN\n</ifexists>\n<ifexists $250.a >\n    <style b>\n    Edição:\n    </style>\n    $250.a $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação: <style color=DarkCyan | font-size=13px> $090.a $090.b</style></style>$LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style>\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b>: $245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $100.a >\n    <style b>\n    Autor:\n    </style>\n    $100.a $LN\n</ifexists>\n<ifexists $250.a >\n    <style b>\n    Edição:\n    </style>\n    $250.a $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação: <style color=DarkCyan | font-size=13px> $090.a $090.b</style></style>$LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência: $362.a </style>$LN\n</ifexists>\n<ifexists $246.a >\n    <style b>\n        Título/título Abreviado:\n    </style>\n    $246.a\n    <ifexists $246.b>: $246.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $650.a $653.a >\n    <style b>\n    Assunto:\n    </style>\n    $650.a $653.a $LN\n</ifexists>\n<ifexists $245.h >\n    <style b>\n    Meio Físico:\n    </style>\n    $245.h $LN\n</ifexists>\n<ifexists $245.k >\n    <style b>\n    Forma:\n    </style>\n    $245.k $LN\n</ifexists>\n<ifexists $310.a >\n    <style b>\n    Periodicidade:\n    </style>\n    $310.a $LN\n</ifexists>\n<ifexists $700.a >\n    <style b>\n    Nome pessoal:\n    </style>\n    $700.a $LN\n</ifexists>\n<ifexists $710.a >\n    <style b>\n    Nome pessoal:\n    </style>\n    $710.a $LN\n</ifexists>\n<ifexists $711.a >\n    <style b>\n    Nome do evento ou jurisdição:\n    </style>\n    $711.a - $711.d - $711.n $LN\n</ifexists>\n<ifexists $740.a >\n    <style b>\n    Título relacionado / Analítico não controlado:\n    </style>\n    $740.a $LN\n</ifexists>\n<ifexists $440.a >\n    <style b>\n    Título da série:\n    </style>\n    $440.a $LN\n</ifexists>\n<ifexists $500.a >\n    <style b>\n    Nota geral:\n    </style>\n    $500.a $LN\n</ifexists>\n<ifexists $502.a >\n    <style b>\n    Nota de Dissertação ou Tese:\n    </style>\n    $502.a $LN\n</ifexists>\n<ifexists $510.a >\n    <style b>\n    Nome da fonte:\n    </style>\n    $510.a $LN\n</ifexists>\n<ifexists $520.a >\n    <style b>\n    Nota de Resumo:\n    </style>\n    $520.a $LN\n</ifexists>\n<ifexists $590.a >\n    <style b>\n    Notas locais:\n    </style>\n    $590.a $LN\n</ifexists>\n<ifexists $773.t >\n    <style b>\n    Título:\n    </style>\n    $773.t $LN\n</ifexists>\n<ifexists $780.a >\n    <style b>\n    Título da entrada principal:\n    </style>\n    $780.a $LN\n</ifexists>\n<ifexists $780.t >\n    <style b>\n    Titulo:\n    </style>\n    $780.t $LN\n</ifexists>\n<ifexists $785.a >\n    <style b>\n    Título da entrada principal:\n    </style>\n    $785.a $LN\n</ifexists>\n<ifexists $111.a >\n    <style b>\n    Nome de Evento ou Jurisdição:\n    </style>\n    $111.a $LN\n</ifexists>\n<ifexists $111.n >\n    <style b>\n    Número de Parte/Seção/Evento:\n    </style>\n    $111.n $LN\n</ifexists>\n<ifexists $041.a >\n    <style b>\n    Código de Idioma do Texto/trilha Sonora ou Título Diferente:\n    </style>\n    $041.a $LN\n</ifexists>\n<ifexists $260.a >\n    <style b>\n    Lugar de Publicação, Distribuição, etc.:\n    </style>\n    $260.a $LN\n</ifexists>\n<ifexists $260.b >\n    <style b>\n    Nome do Editor, Distribuidor, etc.:\n    </style>\n    $260.b $LN\n</ifexists>\n<ifexists $260.c >\n    <style b>\n    Data de Publicação, Distribuição, etc.:\n    </style>\n    $260.c $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>\n    Localizador da fonte (endereço eletrônico):\n    </style>\n    $856.u $LN\n</ifexists>\n<ifexists $110.a >\n    <style b>\n    Nome Corporativo ou Nome da Jurisdição:\n    </style>\n    $110.a $LN\n</ifexists>\n<ifexists $300.a >\n    <style b>\n    Extensão:\n    </style>\n    $300.a $LN\n</ifexists>\n<ifexists $300.e >\n    <style b>\n    Extensão:\n    </style>\n    $300.e $LN\n</ifexists>\n<ifexists $505.a >\n    <style b>\n    Nota de conteúdo:\n    </style>\n    $505.a $LN\n</ifexists>\n<ifexists $947.a >\n    <style b>\n    Código do editor/fornecedor:\n    </style>\n    $947.a $LN\n</ifexists>
1	SA	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b >:$245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $260.c >\n    <style b>\n    Data de Publicação, Distribuição, etc.:\n    </style>\n    $260.c $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação:</style>\n    <style color=DarkCyan | font-size=13px>$090.a $090.b</style> $LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência:\n    </style>\n    <style color=DarkCyan | font-size=13px>$362.a</style> $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>\n<getevaluation $001.a></getevaluation>	<ifexists $245.a >\n    <style b>\n        Título:\n    </style>\n    $245.a\n    <ifexists $245.b >:$245.b</ifexists>\n    $LN\n</ifexists>\n<ifexists $260.c >\n    <style b>\n    Data de Publicação, Distribuição, etc.:\n    </style>\n    $260.c $LN\n</ifexists>\n<ifexists $090.a $090.b >\n    <style b>Classificação:</style>\n    <style color=DarkCyan | font-size=13px>$090.a $090.b</style> $LN\n</ifexists>\n<ifexists $362.a >\n    <style b>\n    Datas de Publicação / Indicação de Sequência:\n    </style>\n    <style color=DarkCyan | font-size=13px>$362.a</style> $LN\n</ifexists>\n<ifexists $856.u >\n    <style b>Arquivo digital: </style >\n    <href $856.u | -#- ></href>$LN\n</ifexists>
\.


--
-- Data for Name: gtcsearchtableupdatecontrol; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsearchtableupdatecontrol (lastupdate) FROM stdin;
2010-07-16 09:15:50.174814
\.


--
-- Data for Name: gtcseparator; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcseparator (separatorid, cataloguingformatid, fieldid, subfieldid, content, fieldid2, subfieldid2) FROM stdin;
1	1	245	a	:	245	b
\.


--
-- Data for Name: gtcsoapaccess; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsoapaccess (soapclientid, webserviceid) FROM stdin;
1	1
1	2
1	3
1	4
1	5
1	21
1	22
1	23
1	24
1	41
1	42
1	43
1	44
1	61
1	80
1	99
\.


--
-- Data for Name: gtcsoapclient; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsoapclient (soapclientid, clientdescription, ip, password, enable) FROM stdin;
1	LocalHost	127.0.0.1	123456	t
\.


--
-- Data for Name: gtcspreadsheet; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcspreadsheet (category, level, field, required, repeatfieldrequired, defaultvalue, menuname, menuoption, menulevel) FROM stdin;
SE	#	Coleção=022.a,022.y,022.z,040.a,040.b,041.a,041.b,041.h,090.a,090.b,\n2xx=210.a,210.b,222.a,222.b,245.a,245.b,245.c,245.h,246.a,246.b,246.g,246.h,246.i,260.a,260.b,260.c,\n3xx=300.a,300.b,300.c,300.e,310.a,310.b,321.a,321.b,362.a,362.z,\n5xx=510.a,525.a,530.a,538.a,555.a,\n6xx=650.a,650.v,650.x,650.y,650.z,650.2,651.a,651.v,651.x,651.y,651.z,651.2,653.a,\n7xx=780.a,780.b,780.d,780.k,780.t,780.w,780.x,785.a,785.b,785.d,785.k,785.t,785.w,785.x,\n8xx=856.a,856.u,\n9xx=901,947.a,950.a,\nKardex=960,	245.a=required	960.d=date\n960.h=date\n960.i=date\n960.y=date	960.y=<date d/m/y></>\n901.a=23	Nova coleção	00000nas##2200000###4500	3
MX	4	Materiais diversos=040.a,040.b,041.a,041.b,041.h,\n1xx=100.a,100.b,100.c,100.d,100.e,100.q,100.4,110.a,110.b,110.c,110.d,110.e,110.l,110.n,110.4,\n2xx=240.a,240.g,240.h,243.a,243.g,243.h,245.a,245.b,245.c,245.h,245.n,245.p,245.y,250.a,250.b,260.a,260.b,260.c,260.e,260.f,260.g,\n3xx=300.a,300.b,300.c,300.e,\n4xx=440.a,440.n,440.p,440.v,\n5xx=500.a,501.a,505.a,505.r,505.t,506.a,506.d,506.e,520.a,520.b,521.a,530.a,533.a,533.b,533.c,533.d,534.a,534.b,534.c,534.e,534.p,534.t,562.a,562.b,562.c,562.d,562.e,590.a,590.b,590.c,591.a,\n6xx=600.a,610.a,650.a,650.v,650.x,650.y,650.z,650.2,653.a,\n7xx=700.a,700.t,700.4,710.a,710.g,710.n,710.t,720.a,740.a,\n800=856.a,856.u,\n900=901,950.a,\nExemplares=949.1,949.3,949.5,949.9,949.a,949.b,949.c,949.d,949.e,949.f,949.g,949.h,949.n,949.q,949.t,949.v,949.w,949.y,949.z,	245.a=required\n901.a=required\n950.a=unique,readonly\n949.9=readonly	017.a=unique\n949.9=readonly\n949.a=required,unique\n949.b=required\n949.c=required\n949.d=required\n949.g=required\n949.h=date\n949.y=required,date\n949.z=date	949.y=<date Y-m-d></date>\n949.g=1\n949.1=1\n949.3=1\n949.5=n\n949.c=C\n949.d=1	Materiais diversos	00000npm##22000004##4500	9
SE	4	Fascículo=040.a,041.a,041.b,041.h,080.a,090.a,090.b,\n2xx=245.a,245.b,245.c,245.h,245.n,245.p,246.a,246.b,\n3xx=300.a,300.b,300.c,300.e,362.a,\n5xx=500.a,505.a,505.r,505.t,590.a,590.b,590.c,\n6xx=650.a,\n7xx=773.w,\n8xx=856.a,856.b,856.c,856.d,856.q,856.u,856.2,\n9xx=901.a,901.b,901.c,950.a,\nExemplares=949.3,949.1,949.2,949.9,949.a,949.b,949.c,949.d,949.f,949.g,949.n,949.q,949.t,949.v,949.w,949.y,949.z,	245.a=required\n949.9=readonly\n950.a=unique,readonly	017.a=unique\n949.h=date\n949.y=required,date\n949.z=date\n949.a=required,unique	949.y=<date d/m/y></>\n949.d=3\n949.3=1\n949.1=24\n949.b=1\n901.a=24\n901.c=1\n949.g=1\n949.c=C	Novo periódico	00000nas##22000004##4500	4
SA	4	Artigo=040.a,040.d,041.a,041.b,041.h,080.a,090.a,090.b,\n1xx=100.a,100.e,110.a,110.e,111.a,111.e,\n2xx=245.a,245.b,245.c,245.h,245.n,245.p,246.a,246.b,246.f,246.g,246.h,246.n,246.p,\n3xx=300.a,300.c,362.a,\n5xx=500.a,505.a,505.r,505.t,510.a,520,590.a,590.b,590.c,592.a,592.b,592.c,592.d,592.e,592.f,592.y,592.z,\n6xx=650.a,\n7xx=700.a,700.e,710.a,710.e,711.a,711.e,773.p,773.t,773.w,\n8xx=856.u,\n9xx=901.a,901.b,901.c,	\N	\N	901.a=25\n901.c=1	Novo artigo de periódico	00000nab##22000004##4500	5
VM	4	Material visual=020.a,020.c,020.z,022.a,022.y,022.z,040.a,040.b,041.a,041.b,041.h,\n1xx=100.a,100.b,100.c,100.d,100.e,100.q,100.4,110.a,110.b,110.c,110.d,110.e,110.l,110.n,110.4,111.a,111.c,111.d,111.e,111.k,111.l,111.n,111.4,\n2xx=240.a,240.d,240.f,240.g,240.h,240.k,240.l,240.m,240.n,240.o,240.p,243.a,243.d,243.f,243.g,243.h,243.k,243.n,243.p,243.l,245.a,245.b,245.c,245.h,245.n,245.p,250.a,250.b,260.a,260.b,260.c,260.e,260.f,260.g,\n3xx=300.a,300.b,300.c,300.e,306.a,\n4xx=440.a,440.n,440.p,440.v,440.x,\n5xx=500.a,501.a,505.a,505.r,505.t,506.a,506.d,506.e,520.a,520.b,521.a,530.a,533.a,533.b,533.c,533.d,534.a,534.b,534.c,534.e,534.p,534.t,538.a,590.a,590.b,590.c,\n6xx=600.a,600.b,600.c,600.d,600.e,600.f,600.l,600.n,600.p,600.q,600.t,600.v,600.x,600.y,600.z,600.2,610.a,610.b,610.c,610.d,610.e,610.f,610.l,610.n,610.p,610.q,610.t,610.v,610.x,610.y,610.z,610.2,611.a,611.c,611.d,611.e,611.k,611.l,611.n,611.t,611.v,611.x,611.y,611.z,611.2,650.a,650.v,650.x,650.y,650.z,650.2,651.a,651.v,651.x,651.y,651.z,651.2,653.a,\n7xx=700.a,700.b,700.c,700.d,700.e,700.l,700.q,700.t,700.4,710.a,710.b,710.c,710.d,710.e,710.l,710.n,710.t,710.4,711.a,711.c,711.d,711.e,711.k,711.l,711.n,711.t,711.4,720.a,720.e,720.4,740.a,740.n,740.p,773.a,773.b,773.d,773.g,773.s,773.t,773.w,773.6,\n900=901,950.a,\nExemplares=949.1,949.3,949.5,949.9,949.a,949.b,949.c,949.d,949.e,949.f,949.g,949.h,949.n,949.q,949.t,949.v,949.w,949.y,949.z,	245.a=required\n901.a=required\n950.a=unique,readonly\n949.9=readonly	017.a=unique\n949.9=readonly\n949.a=required,unique\n949.b=required\n949.c=required\n949.d=required\n949.g=required\n949.h=date\n949.y=required,date\n949.z=date	949.y=<date Y-m-d></date>\n949.g=1\n949.1=1\n949.3=1\n949.5=n\n949.c=C\n949.d=1	Material visual	00000ngm##22000004##4500	8
BK	4	000=017.a,020.a,041.a,090.a,090.b,\n100=100.a,110.a,110.c,110.d,110.n,111.a,111.c,111.d,111.n,\n200=240.a,245.a,245.b,246.a,246.b,250.a,260.a,260.b,260.c,\n300=300.a,300.b,300.e,\n400=440.a,\n500=500.a,502.a,504.a,505.a,\n600=650.a,\n700=700.a,710.a,710.b,710.t,711.a,711.c,711.d,711.n,711.t,740.a,\n800=856.a,856.u,\n900=901,950.a,\nExemplares=949.1,949.3,949.5,949.9,949.a,949.b,949.c,949.d,949.e,949.f,949.g,949.h,949.n,949.q,949.t,949.v,949.w,949.y,949.z,	245.a=required\n901.a=required\n950.a=unique,readonly\n949.9=readonly	017.a=unique\n949.9=readonly\n949.a=required,unique\n949.b=required\n949.c=required\n949.d=required\n949.g=required\n949.h=date\n949.y=required,date\n949.z=date	949.y=<date Y-m-d></date>\n949.g=1\n949.1=1\n949.3=1\n949.5=n\n949.c=C\n949.d=1	Novo livro	00000nam##22000004##4500	1
CF	4	Arquivo computador=024.a,024.c,024.d,024.z,024.2,040.a,040.b,041.a,041.b,041.h,\n1xx=100.a,100.b,100.c,100.d,100.e,100.q,100.4,110.a,110.b,110.c,110.d,110.e,110.l,110.n,110.4,111.a,111.c,111.d,111.e,111.k,111.l,,111.n,111.4,\n2xx=240.a,240.d,240.f,240.g,240.h,240.k,240.l,240.m,240.n,240.o,240.p,243.a,243.d,243.f,243.g,243.h,243.k,243.n,243.p,243.l,245.a,245.b,245.c,245.h,245.n,245.p,250.a,250.b,256.a,260.a,260.b,260.c,\n3xx=300.a,300.b,300.c,300.e,\n4xx=440.a,440.n,440.p,440.v,440.x,\n5xx=500.a,501.a,505.a,505.r,505.t,506.a,506.d,506.e,516.a,521.a,530.a,533.a,533.b,533.c,533.d,534.a,534.b,534.c,534.e,534.p,534.t,538.a,565.a,565.b,565.c,565.d,565.e,590.a,590.b,590.c,\n6xx=600.a,600.b,600.c,600.d,600.e,600.f,600.l,600.n,600.p,600.q,600.t,600.v,600.x,600.y,600.z,600.2,610.a,610.b,610.c,610.d,610.e,610.f,610.l,610.n,610.p,610.q,610.t,610.v,610.x,610.y,610.z,610.2,611.a,611.c,611.d,611.e,611.k,611.l,611.n,611.t,611.v,611.x,611.y,611.z,611.2,650.a,650.v,650.x,650.y,650.z,650.2,651.a,651.v,651.x,651.y,651.z,651.2,653.a,\n7xx=700.a,700.b,700.c,700.d,700.e,700.l,700.q,700.t,700.4,710.a,710.b,710.c,710.d,710.e,710.l,710.n,710.t,710.4,711.a,711.c,711.d,711.e,711.k,711.l,711.n,711.t,711.4,720.a,720.e,720.4,740.a,740.n,740.p,\n8xx=856.a,856.b,856.c,856.d,856.q,856.u,856.f,856.2,	\N	\N	\N	Novo arquivo de computador	00000nmm##22000004##4500	6
MU	4	Música=028.a,028.b,040.a,040.b,041.a,041.b,041.h,\n1xx=100.a,100.b,100.c,100.d,100.e,100.q,100.4,110.a,110.b,110.c,110.d,110.e,110.l,110.n,110.4,111.a,111.c,111.d,111.e,111.k,111.l,111.n,111.4,\n2xx=240.a,240.d,240.f,240.g,240.h,240.k,240.l,240.m,240.n,240.o,240.p,243.a,243.d,243.f,243.g,243.h,243.k,243.n,243.p,243.l,245.a,245.b,245.c,245.h,245.n,245.p,250.a,250.b,254.a,256.a,260.a,260.b,260.c,260.e,260.f,260.g,\n3xx=300.a,300.b,300.c,300.e,306.a,\n4xx=440.a,440.n,440.p,440.v,440.x,\n5xx=500.a,501.a,505.a,505.r,505.t,506.a,506.d,506.e,508.a,518.a,521.a,530.a,586.a,590.a,590.b,590.c,\n6xx=600.a,600.b,600.c,600.d,600.e,600.f,600.l,600.n,600.p,600.q,600.t,600.v,600.x,600.y,600.z,600.2,610.a,610.b,610.c,610.d,610.e,610.f,610.l,610.n,610.p,610.q,610.t,610.v,610.x,610.y,610.z,610.2,611.a,611.c,611.d,611.e,611.k,611.l,611.n,611.t,611.v,611.x,611.y,611.z,611.2,650.a,650.v,650.x,650.y,650.z,650.2,651.a,651.v,651.x,651.y,651.z,651.2,653.a,\n7xx=700.a,700.b,700.c,700.d,700.e,700.l,700.q,700.t,700.4,710.a,710.b,710.c,710.d,710.e,710.l,710.n,710.t,710.4,711.a,711.c,711.d,711.e,711.k,711.l,711.n,711.t,711.4,720.a,720.e,720.4,773.a,773.b,773.d,773.g,773.s,773.t,773.w,773.6,\n8xx=856.a,856.b,856.c,856.d,856.q,856.u,856.2,\n900=901,950.a,\nExemplares=949.1,949.3,949.5,949.9,949.a,949.b,949.c,949.d,949.e,949.f,949.g,949.h,949.n,949.q,949.t,949.v,949.w,949.y,949.z,	245.a=required\n901.a=required\n950.a=unique,readonly\n949.9=readonly	017.a=unique\n949.9=readonly\n949.a=required,unique\n949.b=required\n949.c=required\n949.d=required\n949.g=required\n949.h=date\n949.y=required,date\n949.z=date	949.y=<date Y-m-d></date>\n949.g=1\n949.1=1\n949.3=1\n949.5=n\n949.c=C\n949.d=1	Nova música	00000ncm##22000004##4500	7
BA	4	000=020.a,041.a,090.a,090.b,017.a,\n100=100.a,110.a,110.c,110.d,110.n,111.a,111.c,111.d,111.n,\n200=240.a,245.a,245.b,246.a,246.b,250.a,260.a,260.b,260.c,\n300=300.a,300.b,300.e,\n400=440.a,\n500=500.a,502.a,504.a,505.a,\n600=650.a,\n700=700.a,710.a,710.b,710.t,711.a,711.c,711.d,711.n,711.t,740.a,773.w,\n900=901,902,	245.a=required	\N	\N	Novo artigo de livro	00000naa##22000004#r4500	2
\.


--
-- Data for Name: gtcsupplier; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsupplier (supplierid, name, companyname, date) FROM stdin;
\.


--
-- Data for Name: gtcsuppliertypeandlocation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcsuppliertypeandlocation (supplierid, type, name, companyname, cnpj, location, neighborhood, city, zipcode, phone, fax, alternativephone, email, alternativeemail, contact, site, observation, bankdeposit, date) FROM stdin;
\.


--
-- Data for Name: gtctag; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtctag (fieldid, subfieldid, description, observation, isrepetitive, hassubfield, isactive, indemonstration, isobsolete, help) FROM stdin;
034	p	Equinócio	\N	f	f	t	f	f	\N
507	6	Ligação	\N	f	f	t	f	f	\N
710	u	Afiliação	\N	f	f	t	f	f	\N
036	b	Fonte	\N	f	f	t	f	f	\N
015	6	Ligação	\N	f	f	t	f	f	\N
082	b	Número do item	\N	f	f	t	f	f	\N
777	n	Nota	\N	t	f	t	f	f	\N
949	5	Material que acompanha	\N	t	f	t	f	f	\N
000	a	Lider	\N	f	f	f	f	f	\N
000	#	Líder	\N	f	f	t	f	f	\N
003	#	Identificador do Número de Controle	\N	f	f	t	f	f	\N
006	#	Material Adicional	\N	f	f	t	f	f	\N
007	#	Campos de descrição física	\N	f	f	t	f	f	\N
005	#	Data e Hora da Última intervenção	\N	f	f	t	f	f	\N
008	#	Campo fixo de dados	\N	f	f	t	f	f	\N
010	#	Numero de Controle da LC	\N	f	t	t	f	f	\N
013	#	Controle de Informação de Patente	\N	t	t	t	f	f	\N
015	#	Número Bibliográfico Nacional	\N	f	t	t	f	f	\N
016	#	Instituição que Atribuiu o Número Bibliográfico Nacional	\N	t	t	t	f	f	\N
017	#	Número de CopyRight	\N	t	t	t	f	f	\N
018	#	Taxa de Cobrança de CopyRight	\N	f	t	t	f	f	\N
020	#	ISBN - International Standard Book Number	\N	t	t	t	f	f	\N
022	#	ISSN - International Standard Serial Number	\N	t	t	t	f	f	\N
010	a	Numero de Controle da LC	\N	f	f	t	f	f	\N
010	b	Numero de Controle NUCMC	\N	t	f	t	f	f	\N
010	c	Numero de Controle Cancelado/Invalido	\N	t	f	t	f	f	\N
010	8	Numero de Ligação e Seqüência	\N	t	f	t	f	f	\N
013	a	Número	\N	f	f	t	f	f	\N
013	b	País	\N	f	f	t	f	f	\N
013	c	Tipo de Número	\N	f	f	t	f	f	\N
013	d	Data	\N	t	f	t	f	f	\N
013	e	Status	\N	t	f	t	f	f	\N
013	f	Participa do Documento	\N	t	f	t	f	f	\N
013	6	Ligação	\N	f	f	t	f	f	\N
015	a	Número Bibliográfico Nacional	\N	t	f	t	f	f	\N
521	b	Fonte	\N	f	f	t	f	f	\N
544	n	Nota	\N	t	f	t	f	f	\N
787	6	Ligação	\N	f	f	t	f	f	\N
856	i	Instrução	\N	t	f	t	f	f	\N
960	y	Data de Entrada	\N	t	\N	t	f	f	\N
015	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
016	a	Número de Controle do Registro	\N	f	f	t	f	f	\N
016	z	Número de Controle Cancelado/Inválido	\N	t	f	t	f	f	\N
016	2	Fonte	\N	f	f	t	f	f	\N
016	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
017	a	Número de CopyRight	\N	t	f	t	f	f	\N
017	b	Fonte (Instituição que atribuiu o número)	\N	t	f	t	f	f	\N
017	6	Ligação	\N	f	f	t	f	f	\N
017	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
018	a	Taxa de Cobrança de CopyRight	\N	f	f	t	f	f	\N
020	a	ISBN - International Standard Book Number	\N	f	f	t	f	f	\N
020	c	Termos de Avaliação	\N	f	f	t	f	f	\N
020	z	ISBN Cancelado/Inválido	\N	t	f	t	f	f	\N
020	6	Ligação	\N	f	f	t	f	f	\N
020	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
022	a	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
022	y	ISSN Incorreto	\N	t	f	t	f	f	\N
022	z	ISSN Cancelado	\N	t	f	t	f	f	\N
022	6	Ligação	\N	f	f	t	f	f	\N
022	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
024	#	Outros números ou códigos padrão	\N	t	t	t	f	f	\N
024	a	Standard Recording Code	\N	f	f	t	f	f	\N
024	c	Termos de Avaliação	\N	f	f	t	f	f	\N
024	d	Código Adicional Seguindo Número/Código padrão	\N	f	f	t	f	f	\N
024	z	Código Padrão Cancelado/Inválido	\N	t	f	t	f	f	\N
024	2	Fonte do Código ou Número	\N	f	f	t	f	f	\N
024	6	Ligação	\N	f	f	t	f	f	\N
024	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
025	#	Número de Aquisição no Exterior	\N	t	t	t	f	f	\N
025	a	Número de Aquisição no Exterior	\N	t	f	t	f	f	\N
025	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
027	#	Número Padrão de Relatório Técnico (STRN)	\N	t	t	t	f	f	\N
027	a	Número Padrão de Relatório Técnico (STRN)	\N	f	f	t	f	f	\N
027	z	STRN Cancelado/Inválido	\N	t	f	t	f	f	\N
027	6	Ligação	\N	f	f	t	f	f	\N
027	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
028	#	Número do Editor Para Música	\N	t	t	t	f	f	\N
028	a	Número do Editor	\N	f	f	t	f	f	\N
028	b	Fonte	\N	f	f	t	f	f	\N
028	6	Ligação	\N	f	f	t	f	f	\N
028	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
030	#	Número CODEN	\N	t	t	t	f	f	\N
030	a	CODEN	\N	f	f	t	f	f	\N
030	z	CODEN Cancelado/Inválido	\N	t	f	t	f	f	\N
030	6	Ligação	\N	f	f	t	f	f	\N
030	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
032	#	Número de Registro Postal	\N	t	t	t	f	f	\N
032	a	Número de Registro Postal	\N	f	f	t	f	f	\N
032	b	Fonte (Instituição que Atribuiu o número)	\N	f	f	t	f	f	\N
032	6	Ligação	\N	f	f	t	f	f	\N
032	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
033	#	Data/Hora e Lugar de um Evento	\N	t	t	t	f	f	\N
033	a	Data/Hora Formatada	\N	t	f	t	f	f	\N
033	b	Código de Classificação geográfica de área	\N	t	f	t	f	f	\N
033	c	Código de Classificação geográfica de Sub-Área	\N	t	f	t	f	f	\N
033	3	Materiais Específicos	\N	f	f	t	f	f	\N
033	6	Ligação	\N	f	f	t	f	f	\N
033	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
034	#	Dado Cartográfico Matemático Codificado	\N	t	t	t	f	f	\N
034	a	Categoria da Escala	\N	f	f	t	f	f	\N
034	b	Constante da Escala Horizontal Linear	\N	t	f	t	f	f	\N
034	c	Constante da Escala Vertical Linear	\N	t	f	t	f	f	\N
034	d	Coordenadas-longitude oeste	\N	f	f	t	f	f	\N
034	e	Coordenadas-longitude leste	\N	f	f	t	f	f	\N
034	f	Coordenadas-latitude norte	\N	f	f	t	f	f	\N
034	g	Coordenadas-latitude sul	\N	f	f	t	f	f	\N
034	h	Escala angular	\N	t	f	t	f	f	\N
034	j	Declinação - Limite Norte	\N	f	f	t	f	f	\N
034	k	Declinação - Limite Sul	\N	f	f	t	f	f	\N
034	m	Right Ascension - limite leste	\N	f	f	t	f	f	\N
034	n	Right Ascension - limite oeste	\N	f	f	t	f	f	\N
034	s	G-ring latitude	\N	t	f	t	f	f	\N
034	t	G-ring longitude	\N	t	f	t	f	f	\N
034	6	Ligação	\N	f	f	t	f	f	\N
034	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
035	#	Número de Controle do Sistema	\N	t	t	t	f	f	\N
035	a	Número de Controle do Sistema	\N	f	f	t	f	f	\N
035	z	Número de Controle do Sistema Cancelado/Inválido	\N	t	f	t	f	f	\N
035	6	Ligação	\N	f	f	t	f	f	\N
035	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
036	#	Número de Estudo Original para Arquivos de Computador	\N	f	t	t	f	f	\N
036	a	Número de Estudo Original	\N	f	f	t	f	f	\N
036	6	Ligação	\N	f	f	t	f	f	\N
036	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
037	#	Fonte de Aquisição	\N	t	t	t	f	f	\N
037	a	Código de Estoque do Fornecedor	\N	f	f	t	f	f	\N
037	b	Fonte do Código de Estoque/Aquisição	\N	f	f	t	f	f	\N
037	c	Termos de Avaliação	\N	t	f	t	f	f	\N
037	f	Formas de Edição	\N	t	f	t	f	f	\N
037	g	Característica Adicional do Formato	\N	t	f	t	f	f	\N
037	n	Nota	\N	t	f	t	f	f	\N
037	6	Ligação	\N	f	f	t	f	f	\N
037	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
040	#	Fonte de Catalogação	\N	f	t	t	f	f	\N
040	a	Instituição da Catalogação Original	\N	f	f	t	f	f	\N
040	b	Idioma de Catalogação	\N	f	f	t	f	f	\N
040	c	Instituição que transcreveu o Registro	\N	f	f	t	f	f	\N
040	d	Instituição que Modificou o Registro	\N	t	f	t	f	f	\N
040	e	Convenções da Descrição	\N	f	f	t	f	f	\N
040	6	Ligação	\N	f	f	t	f	f	\N
040	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
041	c	Idioma do Título Diferente/Idioma da Tradução Disponível	\N	f	f	t	f	t	\N
041	#	Código de Idioma	\N	f	t	t	f	f	\N
041	a	Código de Idioma do Texto/trilha Sonora ou Título Diferente	\N	f	f	t	f	f	\N
041	b	Código de Idioma do Sumário ou Resumo/Outro Título ou Subtítulo	\N	f	f	t	f	f	\N
041	d	Código do Idioma do Texto Falado ou Cantado	\N	f	f	t	f	f	\N
041	e	Código do Idioma do Libreto	\N	f	f	t	f	f	\N
041	f	Código do Idioma da Tabela de Conteúdo	\N	f	f	t	f	f	\N
041	g	Código do Idioma do material complementar que não Libreto	\N	f	f	t	f	f	\N
041	h	Código do Idioma do Original e/ou Traduções Intermediárias do Texto	\N	t	f	t	f	f	\N
041	6	Ligação	\N	f	f	t	f	f	\N
041	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
042	#	Código de Autenticação	\N	f	t	t	f	f	\N
042	a	Código de Autenticação	\N	t	f	t	f	f	\N
043	#	Código de Área Geográfica	\N	f	t	t	f	f	\N
043	a	Código de Área Geográfica	\N	t	f	t	f	f	\N
043	b	Código de Área Geográfica Local	\N	t	f	t	f	f	\N
043	2	Fonte do Código	\N	t	f	t	f	f	\N
043	6	Ligação	\N	f	f	t	f	f	\N
043	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
044	#	Código do País da Empresa de Publicação/Produção	\N	f	t	t	f	f	\N
044	a	Código do País da Empresa de Publicadora/Produtora	\N	t	f	t	f	f	\N
044	b	Código do Local da Sub-Entidade	\N	t	f	t	f	f	\N
044	c	Código ISO da Sub-Entidade	\N	t	f	t	f	f	\N
044	2	Fonte do Código do Local Sub-Entidade	\N	t	f	t	f	f	\N
044	6	Ligação	\N	f	f	t	f	f	\N
044	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
045	#	Código de Período Cronológico	\N	f	t	t	f	f	\N
045	a	Código de Período de Tempo	\N	t	f	t	f	f	\N
045	b	Formatada Abrangendo Per. de 9999 D.C. em diante	\N	t	f	t	f	f	\N
045	c	Formatada Pré-9999 A.C.	\N	t	f	t	f	f	\N
045	6	Ligação	\N	f	f	t	f	f	\N
045	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
046	#	Código do Tipo de Data, Data 1, Data 2 (Datas A.C.)	\N	f	t	t	f	f	\N
046	a	Código do Tipo de Data	\N	f	f	t	f	f	\N
046	b	Data 1 (A.C.)	\N	f	f	t	f	f	\N
046	c	Data 1 (D.C.)	\N	f	f	t	f	f	\N
046	d	Data 2 (A.C.)	\N	f	f	t	f	f	\N
046	e	Data 2 (D.C.)	\N	f	f	t	f	f	\N
046	6	Ligação	\N	f	f	t	f	f	\N
046	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
047	#	Código da forma de composição musical	\N	f	t	t	f	f	\N
047	a	Código da forma de composição musical	\N	t	f	t	f	f	\N
047	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
048	#	Código do número de instrumentos e vozes	\N	t	t	t	f	f	\N
048	a	Músico ou grupo	\N	t	f	t	f	f	\N
048	b	Solista	\N	t	f	t	f	f	\N
048	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
050	#	Número de chamada da Library of Congress	\N	t	t	t	f	f	\N
050	a	Número de classificação	\N	t	f	t	f	f	\N
050	b	Número do item	\N	f	f	t	f	f	\N
050	d	Número de classificação suplementar (MU)	\N	f	f	t	f	t	\N
050	3	Materiais especificados	\N	f	f	t	f	f	\N
050	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
051	#	Informação LC de cópia, edição e separata	\N	t	t	t	f	f	\N
051	a	Número de classificação	\N	f	f	t	f	f	\N
051	b	Número de item	\N	f	f	t	f	f	\N
051	c	Informação de cópia	\N	f	f	t	f	f	\N
051	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
052	#	Código de Classificação geográfica	\N	t	t	t	f	f	\N
052	a	Código de Classificação de área geográfica	\N	f	f	t	f	f	\N
052	b	Código de Classificação de sub-área geográfica	\N	t	f	t	f	f	\N
052	d	Nome do lugar povoado	\N	t	f	t	f	f	\N
052	2	Código da Fonte	\N	f	f	t	f	f	\N
052	6	Ligação	\N	f	f	t	f	f	\N
052	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
055	#	Número de chamada/Número de classificação atribuídos no Canadá	\N	t	t	t	f	f	\N
055	a	Número de classificação	\N	f	f	t	f	f	\N
055	b	Número do item	\N	f	f	t	f	f	\N
055	2	Fonte do número de Chamada/Classificação	\N	f	f	t	f	f	\N
055	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
060	#	Número de chamada da National Library of Medicine	\N	t	t	t	f	f	\N
060	a	Número de classificação	\N	t	f	t	f	f	\N
060	b	Número do item	\N	f	f	t	f	f	\N
060	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
061	#	Informação de cópia da National Library of Medicine	\N	t	t	t	f	f	\N
061	a	Número de classificação	\N	t	f	t	f	f	\N
061	b	Número do item	\N	f	f	t	f	f	\N
061	c	Informação de Cópia	\N	f	f	t	f	f	\N
061	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
066	#	Conjunto de caracteres presente	\N	f	t	t	f	f	\N
066	a	Conjunto de caracteres default Non-ASCII G0	\N	f	f	t	f	f	\N
066	b	Conjunto de caracteres default Non-ANSEL G1	\N	f	f	t	f	f	\N
066	c	Identificação do conjunto de caracteres alternativos	\N	t	f	t	f	f	\N
070	#	Número de chamada da National Agricultural Library	\N	t	t	t	f	f	\N
070	a	Número de classificação	\N	t	f	t	f	f	\N
070	b	Número do item	\N	f	f	t	f	f	\N
070	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
071	#	Informação de Cópia da National Agricultural Library	\N	t	t	t	f	f	\N
071	a	Número de Classificação	\N	t	f	t	f	f	\N
071	b	Número do item	\N	f	f	t	f	f	\N
071	c	Informação de Cópia	\N	f	f	t	f	f	\N
071	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
072	#	Código de categoria de assunto	\N	t	t	t	f	f	\N
072	a	Código de categoria de assunto	\N	f	f	t	f	f	\N
072	x	Subd. do Código de Categoria de Assunto	\N	t	f	t	f	f	\N
072	2	Fonte do Código	\N	f	f	t	f	f	\N
072	6	Ligação	\N	f	f	t	f	f	\N
072	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
074	#	Número do item GPO	\N	t	t	t	f	f	\N
074	a	Número do item GPO	\N	f	f	t	f	f	\N
074	z	Número do item GPO Cancelado/Inválido	\N	t	f	t	f	f	\N
074	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
080	#	CDU - Classificação Decimal Universal	\N	f	t	t	f	f	\N
080	2	Número da edição	\N	f	f	t	f	f	\N
080	x	Subdivisão Auxiliar	\N	t	f	t	f	f	\N
080	6	Ligação	\N	f	f	t	f	f	\N
080	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
082	#	CDD - Classificação Decimal de Dewey	\N	t	t	t	f	f	\N
082	a	Número de Classificação	\N	t	f	t	f	f	\N
082	2	Número da edição	\N	f	f	t	f	f	\N
082	6	Ligação	\N	f	f	t	f	f	\N
082	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
084	#	Outro número de classificação	\N	t	t	t	f	f	\N
084	a	Número de classificação	\N	t	f	t	f	f	\N
084	b	Número do item	\N	f	f	t	f	f	\N
084	2	Fonte do Número (Tipo de Classificação)	\N	f	f	t	f	f	\N
084	6	Ligação	\N	f	f	t	f	f	\N
084	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
086	#	Número de Classificação de Documento Governamental	\N	t	t	t	f	f	\N
086	a	Número de Classificação	\N	f	f	t	f	f	\N
086	z	Número de Classificação Cancelado/Inválido	\N	t	f	t	f	f	\N
086	2	Fonte do Número	\N	f	f	t	f	f	\N
086	6	Ligação	\N	f	f	t	f	f	\N
086	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
088	#	Número de relatório	\N	t	t	t	f	f	\N
088	a	Número de relatório	\N	f	f	t	f	f	\N
088	z	Número de relatório Cancelado/Inválido	\N	t	f	t	f	f	\N
088	6	Ligação	\N	f	f	t	f	f	\N
088	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
100	#	Entrada Principal - Nome Pessoal	\N	f	t	t	f	f	\N
100	b	Numeração	\N	f	f	t	f	f	\N
100	c	Títulos e outras palavras associadas ao nome	\N	t	f	t	f	f	\N
100	d	Datas associadas ao nome	\N	f	f	t	f	f	\N
100	e	Termo relacionador	\N	t	f	t	f	f	\N
100	f	Data da Obra	\N	f	f	t	f	f	\N
100	g	Miscelânea	\N	f	f	t	f	f	\N
100	k	SubCabeçalho	\N	t	f	t	f	f	\N
100	l	Idioma da Obra	\N	f	f	t	f	f	\N
100	n	Número da parte/Seção da Obra	\N	t	f	t	f	f	\N
100	p	Nome da parte/Seção da Obra	\N	t	f	t	f	f	\N
100	q	Forma completa do nome	\N	f	f	t	f	f	\N
100	t	Título da Obra	\N	f	f	t	f	f	\N
100	u	Afiliação	\N	f	f	t	f	f	\N
100	4	Código Relacionador	\N	t	f	t	f	f	\N
100	6	Ligação	\N	f	f	t	f	f	\N
100	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
110	#	Entrada Principal - Nome Corporativo	\N	f	t	t	f	f	\N
110	a	Nome Corporativo ou Nome da Jurisdição	\N	f	f	t	f	f	\N
110	b	Unidade Subordinada	\N	t	f	t	f	f	\N
110	c	Local do Encontro	\N	f	f	t	f	f	\N
110	d	Data do encontro ou assinatura do tratado	\N	t	f	t	f	f	\N
110	e	Termo relacionador	\N	t	f	t	f	f	\N
110	f	Data da Obra	\N	f	f	t	f	f	\N
110	g	Miscelânea	\N	f	f	t	f	f	\N
110	k	SubCabeçalho	\N	t	f	t	f	f	\N
110	l	Idioma da Obra	\N	f	f	t	f	f	\N
110	n	Número da Parte/Seção/Encontro	\N	t	f	t	f	f	\N
110	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
110	t	Título da Obra	\N	f	f	t	f	f	\N
110	u	Afiliação	\N	f	f	t	f	f	\N
110	4	Código Relacionador	\N	t	f	t	f	f	\N
110	6	Ligação	\N	f	f	t	f	f	\N
110	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
111	#	Entrada Principal - Nome de Evento	\N	f	t	t	f	f	\N
111	a	Nome de Evento ou Jurisdição	\N	f	f	t	f	f	\N
111	b	Número (BK CF MP MU SE VM MX)	\N	f	f	t	f	t	\N
111	c	Local do Evento	\N	f	f	t	f	f	\N
111	d	Data do Evento	\N	f	f	t	f	f	\N
111	e	Unidade Subordinada	\N	t	f	t	f	f	\N
111	f	Data da Obra	\N	f	f	t	f	f	\N
111	g	Miscelânea	\N	f	f	t	f	f	\N
111	k	SubCabeçalho	\N	t	f	t	f	f	\N
111	l	Idioma da Obra	\N	f	f	t	f	f	\N
400	f	Data da Obra	\N	f	f	t	f	f	\N
111	n	Número de Parte/Seção/Evento	\N	t	f	t	f	f	\N
111	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
111	q	Nome do Evento que segue nome da Jurisdição na Entrada	\N	f	f	t	f	f	\N
111	t	Título da Obra	\N	f	f	t	f	f	\N
111	u	Afiliação	\N	f	f	t	f	f	\N
111	4	Código Relacionador	\N	t	f	t	f	f	\N
111	6	Ligação	\N	f	f	t	f	f	\N
111	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
130	#	Entrada Principal - Título Uniforme	\N	f	t	t	f	f	\N
130	a	Título Uniforme	\N	f	f	t	f	f	\N
130	d	Data da assinatura do tratado	\N	t	f	t	f	f	\N
130	f	Data da Obra	\N	f	f	t	f	f	\N
130	g	Miscelânea	\N	f	f	t	f	f	\N
130	h	Meio Físico	\N	f	f	t	f	f	\N
130	k	SubCabeçalho	\N	t	f	t	f	f	\N
130	l	Idioma da Obra	\N	f	f	t	f	f	\N
130	m	Meio de Apresentação da Música	\N	t	f	t	f	f	\N
130	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
130	o	Informação de Arranjo para Música	\N	f	f	t	f	f	\N
130	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
130	r	Chave para Música	\N	f	f	t	f	f	\N
130	s	Versão	\N	f	f	t	f	f	\N
130	t	Título da Obra	\N	f	f	t	f	f	\N
130	6	Ligação	\N	f	f	t	f	f	\N
130	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
210	#	Título Chave Abreviado	\N	f	t	t	f	f	\N
210	a	Título Abreviado	\N	f	f	t	f	f	\N
210	b	Informação Qualificadora	\N	f	f	t	f	f	\N
210	2	Fonte	\N	t	f	t	f	f	\N
210	6	Ligação	\N	f	f	t	f	f	\N
210	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
222	#	Título Chave	\N	t	t	t	f	f	\N
222	a	Título Chave	\N	f	f	t	f	f	\N
222	b	Informação Qualificadora	\N	f	f	t	f	f	\N
222	6	Ligação	\N	f	f	t	f	f	\N
222	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
240	#	Título Uniforme	\N	f	t	t	f	f	\N
240	a	Título Uniforme	\N	f	f	t	f	f	\N
240	d	Data de Assinatura do Tratado	\N	t	f	t	f	f	\N
240	f	Data da Obra	\N	f	f	t	f	f	\N
240	g	Miscelânea	\N	f	f	t	f	f	\N
240	h	Meio Físico	\N	f	f	t	f	f	\N
240	k	SubCabeçalho	\N	t	f	t	f	f	\N
240	l	Idioma da Obra	\N	f	f	t	f	f	\N
240	m	Meio de Apresentação para Música	\N	t	f	t	f	f	\N
240	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
240	o	Informação de Arranjo para Música	\N	f	f	t	f	f	\N
240	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
240	r	Chave para Música	\N	f	f	t	f	f	\N
240	s	Versão	\N	f	f	t	f	f	\N
240	6	Ligação	\N	f	f	t	f	f	\N
240	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
242	#	Título Traduzido por Instituição Catalogadora	\N	t	t	t	f	f	\N
242	a	Título	\N	f	f	t	f	f	\N
242	b	Complemento do Título	\N	f	f	t	f	f	\N
242	c	Complemento do Título Transcrito da Pág. de Rosto/Indicação de Responsabilidade	\N	f	f	t	f	f	\N
242	d	Indicação de Sessão (BK AM MP MU VM SE)	\N	f	f	t	f	t	\N
242	e	Nome de Parte/Sessão (BK AM MP MU VM SE)	\N	f	f	t	f	t	\N
242	h	Meio Físico	\N	f	f	t	f	f	\N
242	n	Número da Parte/Seção da Obra	\N	t	f	t	f	f	\N
242	p	Nome da Parte/Seção da Obra	\N	t	f	t	f	f	\N
242	y	Código do Idioma do Título Traduzido	\N	f	f	t	f	f	\N
242	6	Ligação	\N	f	f	t	f	f	\N
242	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
243	#	Título Uniforme Coletico (Título de Coletânea)	\N	f	t	t	f	f	\N
243	a	Título Uniforme	\N	f	f	t	f	f	\N
243	d	Data de Assinatura do Tratado	\N	t	f	t	f	f	\N
243	f	Data da Obra	\N	f	f	t	f	f	\N
243	g	Miscelânea	\N	f	f	t	f	f	\N
243	h	Meio Físico	\N	f	f	t	f	f	\N
243	k	SubCabeçalho	\N	t	f	t	f	f	\N
243	l	Idioma da Obra	\N	f	f	t	f	f	\N
243	m	Meio de Apresentação para Música	\N	t	f	t	f	f	\N
243	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
243	o	Informação de Arranjo para Música	\N	f	f	t	f	f	\N
243	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
243	r	Chave para Música	\N	f	f	t	f	f	\N
243	s	Versão	\N	f	f	t	f	f	\N
243	6	Ligação	\N	f	f	t	f	f	\N
243	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
245	#	Título	\N	f	t	t	f	f	\N
245	b	Complemento do Título	\N	f	f	t	f	f	\N
245	c	Complemento do Título Transcrito da Pág. de Rosto/Indicação de Responsabilidade	\N	f	f	t	f	f	\N
245	d	Indicação de Seção (SE)	\N	f	f	t	f	t	\N
245	e	Nome de Parte/Seção (SE)	\N	f	f	t	f	t	\N
245	f	Faixa de Datas	\N	f	f	t	f	f	\N
245	g	Conjunto de Datas	\N	f	f	t	f	f	\N
245	h	Meio Físico	\N	f	f	t	f	f	\N
245	k	Forma	\N	t	f	t	f	f	\N
245	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
245	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
245	s	Versão	\N	f	f	t	f	f	\N
245	6	Ligação	\N	f	f	t	f	f	\N
245	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
246	#	Forma Variante do Título	\N	t	t	t	f	f	\N
246	a	Título/título Abreviado	\N	f	f	t	f	f	\N
246	b	Complemento do título	\N	f	f	t	f	f	\N
246	d	Indicação de Seção (SE)	\N	f	f	t	f	t	\N
246	e	Nome de Parte/Seção (SE)	\N	f	f	t	f	t	\N
246	f	Informação de Volume/Número de Fascículo e/ou Data da Obra	\N	f	f	t	f	f	\N
246	g	Miscelânea	\N	f	f	t	f	f	\N
246	h	Meio Físico	\N	f	f	t	f	f	\N
246	i	Exibir Texto	\N	f	f	t	f	f	\N
246	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
246	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
246	5	Instituição à qual o Campo se Aplica	\N	f	f	t	f	f	\N
246	6	Ligação	\N	f	f	t	f	f	\N
246	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
400	g	Miscelânea	\N	f	f	t	f	f	\N
247	#	Título Anterior ou Variações do Título	\N	t	t	t	f	f	\N
247	a	Título/Título Abreviado	\N	f	f	t	f	f	\N
247	b	Complemento do Título	\N	f	f	t	f	f	\N
247	d	Indicação de Seção (SE)	\N	f	f	t	f	t	\N
247	e	Nome de Parte/Seção (SE)	\N	f	f	t	f	t	\N
247	f	Informação de Volume/Número de Fascículo e/ou Data da Obra	\N	f	f	t	f	f	\N
247	g	Miscelânea	\N	f	f	t	f	f	\N
247	h	Meio físico	\N	f	f	t	f	f	\N
247	i	Exibir Texto	\N	f	f	t	f	f	\N
247	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
247	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
247	x	ISSN - International Standart Serial Number	\N	f	f	t	f	f	\N
247	6	Ligação	\N	f	f	t	f	f	\N
247	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
250	#	Edição	\N	f	t	t	f	f	\N
877	c	Preço	\N	t	f	t	f	f	\N
250	b	Complemento da Informação de Edição	\N	f	f	t	f	f	\N
250	6	Ligação	\N	f	f	t	f	f	\N
250	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
254	#	Informação de Apresentação Musical	\N	f	t	t	f	f	\N
254	a	Informação de Apresentação Musical	\N	f	f	t	f	f	\N
254	6	Ligação	\N	f	f	t	f	f	\N
254	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
255	#	Dado Cartográfico Matemático	\N	t	t	t	f	f	\N
255	a	Informação de Escala	\N	f	f	t	f	f	\N
255	b	Informação de Projeção	\N	f	f	t	f	f	\N
255	c	Informação de Coordenadas	\N	f	f	t	f	f	\N
255	d	Informação de Zona	\N	f	f	t	f	f	\N
255	e	Informação de Equinócio	\N	f	f	t	f	f	\N
255	f	Other G-ring Coordinate Pairs	\N	f	f	t	f	f	\N
342	o	LandSat Órbita ponto	\N	f	f	t	f	f	\N
255	g	Exclusion G-ring Coordinate Pairs	\N	f	f	t	f	f	\N
255	6	Ligação	\N	f	f	t	f	f	\N
255	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
256	#	Características de Arquivo de Computador	\N	f	t	t	f	f	\N
256	a	Características de Arquivo de Computador	\N	f	f	t	f	f	\N
256	6	Ligação	\N	f	f	t	f	f	\N
256	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
257	#	País da Instituição Produtora do Filme de Arquivo	\N	f	t	t	f	f	\N
257	a	País da Instituição Produtora do Filme de Arquivo	\N	f	f	t	f	f	\N
257	6	Ligação	\N	f	f	t	f	f	\N
257	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
260	a	Lugar de Publicação, Distribuição, etc.	\N	t	f	t	f	f	\N
250	a	Edição	\N	f	f	t	f	f	\N
876	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
260	d	Plates of Publisher's Number for Music (Pre-AACR2)	\N	t	f	t	f	f	\N
260	e	Lugar de Manufatura	\N	f	f	t	f	f	\N
260	f	Manufatureiro	\N	f	f	t	f	f	\N
260	g	Data de Manufatura	\N	f	f	t	f	f	\N
260	6	Ligação	\N	f	f	t	f	f	\N
260	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
261	#	Informação de Imprenta para Filmes (Pre-AACR1 Revised)	\N	f	t	t	f	f	\N
261	a	Companhia Produtora	\N	t	f	t	f	f	\N
261	b	Companhia Distribuidora (Primeiro distribuidor)	\N	t	f	t	f	f	\N
261	c	Data de Produção, Distribuição, etc.	\N	t	f	t	f	f	\N
261	e	Produtor Contratado	\N	t	f	t	f	f	\N
261	f	Lugar de Produção, Distribuição, etc.	\N	t	f	t	f	f	\N
261	6	Ligação	\N	f	f	t	f	f	\N
262	#	Informação de Imprenta para Gravação Sonora (Pré-AACR2)	\N	f	t	t	f	f	\N
262	a	Lugar de Produção, Distribuição, etc.	\N	f	f	t	f	f	\N
262	b	Editor ou Nome Comercial	\N	f	f	t	f	f	\N
262	c	Data de Produção, Distribuição, etc.	\N	f	f	t	f	f	\N
262	k	Identificação de Série	\N	f	f	t	f	f	\N
262	l	Matrix e/ou Número do Take	\N	f	f	t	f	f	\N
262	6	Ligação	\N	f	f	t	f	f	\N
263	#	Data Estimada de Publicação	\N	f	t	t	f	f	\N
263	a	Data Estimada de Publicação	\N	f	f	t	f	f	\N
263	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
270	#	Endereço	\N	t	t	t	f	f	\N
270	a	Endereço	\N	t	f	t	f	f	\N
270	b	Cidade	\N	f	f	t	f	f	\N
270	c	Estado ou Província	\N	f	f	t	f	f	\N
270	d	País	\N	f	f	t	f	f	\N
270	e	Código Postal (CEP)	\N	f	f	t	f	f	\N
270	f	Título que Precede Nome da Pessoa "Aos Cuidados de"	\N	f	f	t	f	f	\N
270	g	Nome da Pessoa "Aos Cuidados de"	\N	f	f	t	f	f	\N
270	h	Título que Segue o Nome da Pessoa "Aos Cuidados de"	\N	f	f	t	f	f	\N
270	i	Tipo de Endereço	\N	f	f	t	f	f	\N
270	j	Número de Telefone Especializado	\N	t	f	t	f	f	\N
270	k	Número de Telefone	\N	t	f	t	f	f	\N
270	l	Número de FAX	\N	t	f	t	f	f	\N
270	m	Endereço Eletrônico	\N	t	f	t	f	f	\N
270	n	Número TDD ou TTY	\N	t	f	t	f	f	\N
270	p	Pessoas de Contato	\N	t	f	t	f	f	\N
270	q	Título da Pessoa de Contato	\N	t	f	t	f	f	\N
270	r	Horário	\N	t	f	t	f	f	\N
270	z	Nota Pública	\N	t	f	t	f	f	\N
270	4	Código Relacionador	\N	t	f	t	f	f	\N
270	6	Ligação	\N	f	f	t	f	f	\N
270	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
300	#	Descrição Física	\N	t	t	t	f	f	\N
300	b	Outros Detalhes Físicos	\N	f	f	t	f	f	\N
300	a	Extensão	\N	t	f	t	f	f	\N
300	c	Dimensões	\N	t	f	t	f	f	\N
300	e	Material Complementar	\N	f	f	t	f	f	\N
300	f	Tipo de Unidade	\N	t	f	t	f	f	\N
300	g	Tamanho da Unidade	\N	t	f	t	f	f	\N
300	3	Materiais Especificados	\N	f	f	t	f	f	\N
300	6	Ligação	\N	f	f	t	f	f	\N
300	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
306	#	Tempo de Duração	\N	f	t	t	f	f	\N
306	a	Tempo de Duração	\N	t	f	t	f	f	\N
307	#	Horário, etc.	\N	f	t	t	f	f	\N
307	a	Horário	\N	f	f	t	f	f	\N
307	b	Informação Adicional	\N	f	f	t	f	f	\N
307	6	Ligação	\N	f	f	t	f	f	\N
307	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
310	#	Periodicidade Corrente	\N	f	t	t	f	f	\N
310	a	Periodicidade	\N	f	f	t	f	f	\N
310	b	Data da Periodicidade	\N	f	f	t	f	f	\N
310	6	Ligação	\N	f	f	t	f	f	\N
310	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
328	#	Periodicidade Anterior	\N	t	t	t	f	f	\N
328	a	Periodicidade Anterior	\N	f	f	t	f	f	\N
328	b	Datas de Periodicidade Anterior	\N	f	f	t	f	f	\N
328	6	Ligação	\N	f	f	t	f	f	\N
340	#	Meio Físico	\N	t	t	t	f	f	\N
340	a	Material Base e Configuração	\N	t	f	t	f	f	\N
340	b	Dimensões	\N	t	f	t	f	f	\N
340	c	Materiais Aplicados à Superfície	\N	t	f	t	f	f	\N
340	d	Informação da Técnica de Gravação	\N	t	f	t	f	f	\N
340	e	Suporte	\N	t	f	t	f	f	\N
340	f	Production Rate/Ratio	\N	t	f	t	f	f	\N
340	h	Localização Dentro do Veículo	\N	t	f	t	f	f	\N
340	i	Especificações Técnicas do Veículo	\N	t	f	t	f	f	\N
340	3	Materiais Especificados	\N	f	f	t	f	f	\N
342	#	Dados de Referência Geoespacial	\N	t	t	t	f	f	\N
342	a	Unidades de Coordenada ou distância	\N	f	f	t	f	f	\N
342	c	Resolução na Latitude	\N	f	f	t	f	f	\N
342	d	Resolução na Longitude	\N	f	f	t	f	f	\N
342	e	Paralelo padrão ou latitude linear oblíqua	\N	t	f	t	f	f	\N
342	f	longitude linear oblíqua	\N	t	f	t	f	f	\N
342	g	longitude do meridiano central/centro de projeção	\N	f	f	t	f	f	\N
342	h	Latitude da origem da projeção/centro de projeção	\N	f	f	t	f	f	\N
342	i	Indicação do Leste (False easting)	\N	f	f	t	f	f	\N
342	j	Indicação do Norte (False northing)	\N	f	f	t	f	f	\N
342	k	Fator de escala	\N	f	f	t	f	f	\N
342	l	Altura do ponto de perspectiva acima da superfície	\N	f	f	t	f	f	\N
342	m	Ângulo Azimutal	\N	f	f	t	f	f	\N
411	e	Unidade Subordinada	\N	t	f	t	f	f	\N
342	n	Medida da Longitude do ponto ou longitude vertical reta do pólo	\N	f	f	t	f	f	\N
342	p	Identificador de Zona	\N	f	f	t	f	f	\N
342	q	Nome do Elipsóide	\N	f	f	t	f	f	\N
342	r	Semi-Eixo maior	\N	f	f	t	f	f	\N
342	s	Denominador da fração de achatamento	\N	f	f	t	f	f	\N
342	t	Resolução vertical	\N	f	f	t	f	f	\N
342	u	Método de Codificação vertical	\N	f	f	t	f	f	\N
342	v	Planar, Local ou descrição de grade ou projeção	\N	f	f	t	f	f	\N
342	w	Planar, Local ou outras informações de referência	\N	f	f	t	f	f	\N
342	2	Método de referência utilizado	\N	f	f	t	f	f	\N
342	6	Ligação	\N	f	f	t	f	f	\N
342	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
343	#	Planar Coordinate Data	\N	t	t	t	f	f	\N
343	a	Método de codificação da coordenada planar	\N	f	f	t	f	f	\N
343	b	Unidade de distância plana	\N	f	f	t	f	f	\N
343	c	Resolução da Abcissa	\N	f	f	t	f	f	\N
343	d	Resolução Ordenada	\N	f	f	t	f	f	\N
343	e	Resolução na distância	\N	f	f	t	f	f	\N
343	f	Unidade de medida de Resolução	\N	f	f	t	f	f	\N
343	g	Unidade de medida	\N	f	f	t	f	f	\N
343	h	Unidade de medida da direção de referência	\N	f	f	t	f	f	\N
343	i	Unidade de medida do meridiano de referência	\N	f	f	t	f	f	\N
343	6	Ligação	\N	f	f	t	f	f	\N
343	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
351	#	Organização e arranjo dos materiais	\N	t	t	t	f	f	\N
351	a	Organização	\N	t	f	t	f	f	\N
351	b	Arranjo	\N	t	f	t	f	f	\N
351	c	Nível hierárquico	\N	f	f	t	f	f	\N
351	3	Materiais especificados	\N	f	f	t	f	f	\N
351	6	Ligação	\N	f	f	t	f	f	\N
351	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
352	#	Representação gráfica digital	\N	t	t	t	f	f	\N
352	a	Método de referência direta	\N	f	f	t	f	f	\N
352	b	Tipo de objeto	\N	t	f	t	f	f	\N
352	c	Número de Objetos	\N	t	f	t	f	f	\N
352	d	Número de Linhas	\N	f	f	t	f	f	\N
352	e	Número de Colunas	\N	f	f	t	f	f	\N
352	g	Contagem Vertical	\N	f	f	t	f	f	\N
352	i	Descrição Indireta de Referência	\N	f	f	t	f	f	\N
352	6	Ligação	\N	f	f	t	f	f	\N
352	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
355	#	Controle de Classificação de Segurança	\N	t	t	t	f	f	\N
355	a	Classificação de Segurança	\N	f	f	t	f	f	\N
355	b	Instruções de Manuseio	\N	t	f	t	f	f	\N
355	c	Informação de Disseminação Externa	\N	t	f	t	f	f	\N
355	d	Dados da Mudança de Catalogação/Liberação de Acesso	\N	f	f	t	f	f	\N
355	e	Sistema de Classificação	\N	f	f	t	f	f	\N
355	f	Código do País de Origem	\N	f	f	t	f	f	\N
355	g	Data da Mudança de Categoria	\N	f	f	t	f	f	\N
355	h	Data da Liberação de Acesso	\N	f	f	t	f	f	\N
355	j	Autorização	\N	t	f	t	f	f	\N
355	6	Ligação	\N	f	f	t	f	f	\N
355	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
357	#	Controle do Autor sobre a disseminação	\N	f	t	t	f	f	\N
357	a	Termos de controle do Autor	\N	f	f	t	f	f	\N
357	b	Instituição criadora	\N	t	f	t	f	f	\N
357	c	Usuários autorizados do Material	\N	t	f	t	f	f	\N
357	g	Outras Restrições	\N	t	f	t	f	f	\N
357	6	Ligação	\N	f	f	t	f	f	\N
357	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
362	#	Informação de Datas de Publicação e/ou volume	\N	t	t	t	f	f	\N
362	a	Datas de Publicação / Indicação de Seqüência	\N	f	f	t	f	f	\N
362	z	Fonte da Informação	\N	f	f	t	f	f	\N
362	6	Ligação	\N	f	f	t	f	f	\N
362	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
400	#	Informação de Série/Entrada Secundária - Nome Pessoal	\N	t	t	t	f	f	\N
400	a	Nome Pessoal	\N	f	f	t	f	f	\N
400	b	Numeração	\N	f	f	t	f	f	\N
877	t	Número do exemplar	\N	f	f	t	f	f	\N
400	c	Títulos e outras palavras associadas ao nome	\N	t	f	t	f	f	\N
400	d	Datas associadas ao nome	\N	f	f	t	f	f	\N
400	e	Termo relacionador	\N	t	f	t	f	f	\N
400	k	SubCabeçalho	\N	t	f	t	f	f	\N
400	l	Idioma da Obra	\N	f	f	t	f	f	\N
400	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
400	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
400	t	Título da Obra	\N	f	f	t	f	f	\N
400	u	Afiliação	\N	f	f	t	f	f	\N
400	v	Informação de Número de Volume/Seqüência	\N	f	f	t	f	f	\N
400	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
400	4	Código Relacionador	\N	t	f	t	f	f	\N
400	6	Ligação	\N	f	f	t	f	f	\N
410	#	Informação de Série/Entrada Secundária - Nome Corporativo	\N	t	t	t	f	f	\N
410	a	Nome Corporativo ou nome de Jurisdição	\N	f	f	t	f	f	\N
410	b	Unidade Subordinada	\N	t	f	t	f	f	\N
410	c	Local do Evento	\N	f	f	t	f	f	\N
410	d	Data do Evento ou Assinatura do Tratado	\N	t	f	t	f	f	\N
410	e	Termo Relacionador	\N	t	f	t	f	f	\N
410	f	Data da Obra	\N	f	f	t	f	f	\N
410	g	Miscelânea	\N	f	f	t	f	f	\N
410	k	SubCabeçalho	\N	t	f	t	f	f	\N
410	l	Idioma da Obra	\N	f	f	t	f	f	\N
410	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
410	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
410	t	Título da Obra	\N	f	f	t	f	f	\N
410	u	Afiliação	\N	f	f	t	f	f	\N
410	v	Número do Volume/Indicação de Seqüência	\N	f	f	t	f	f	\N
410	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
410	4	Código Relacionador	\N	t	f	t	f	f	\N
410	6	Ligação	\N	f	f	t	f	f	\N
411	#	Informação de Série/Entrada Secundária - Nome de Evento	\N	t	t	t	f	f	\N
411	a	Nome do Evento ou Nome da Jurisdição	\N	f	f	t	f	f	\N
411	b	Número (BK CF MP MU SE VM MX)	\N	f	f	t	f	t	\N
411	c	Local do Evento	\N	f	f	t	f	f	\N
411	d	Data do Evento	\N	f	f	t	f	f	\N
411	f	Data da Obra	\N	f	f	t	f	f	\N
411	g	Miscelânea	\N	f	f	t	f	f	\N
411	k	SubCabeçalho	\N	t	f	t	f	f	\N
411	l	Idioma da Obra	\N	f	f	t	f	f	\N
411	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
411	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
411	q	Nome do Evento que segue nome da Jurisdição na Entrada	\N	f	f	t	f	f	\N
411	t	Título da Obra	\N	f	f	t	f	f	\N
411	u	Filiação	\N	f	f	t	f	f	\N
411	v	Número do Volume/Indicação de Seqüência	\N	f	f	t	f	f	\N
411	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
411	4	Código Relacionador	\N	t	f	t	f	f	\N
411	6	Ligação	\N	f	f	t	f	f	\N
440	#	Informação de Série/Entrada Secundária - Título	\N	t	t	t	f	f	\N
877	#	Informação de item - Material suplementar	\N	f	t	t	f	f	\N
440	n	Número de Parte/Seção da Obra	\N	t	f	t	f	f	\N
440	p	Nome de Parte/Seção da Obra	\N	t	f	t	f	f	\N
440	v	Número de Volume/Indicação de Seqüência	\N	f	f	t	f	f	\N
440	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
440	6	Ligação	\N	f	f	t	f	f	\N
440	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
490	#	Informação de Série	\N	t	t	t	f	f	\N
490	a	Informação de Série	\N	t	f	t	f	f	\N
490	l	Número de Chamada da Library of Congress	\N	f	f	t	f	f	\N
490	v	Número de Volume/Indicação de Seqüência	\N	f	f	t	f	f	\N
490	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
490	6	Ligação	\N	f	f	t	f	f	\N
490	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
500	#	Nota Geral	\N	t	t	t	f	f	\N
500	a	Nota Geral	\N	f	f	t	f	f	\N
500	l	Número de Chamada da Library of Congress (SE)	\N	f	f	t	f	t	\N
500	x	ISSN - International Standard Serial Number (SE)	\N	f	f	t	f	t	\N
500	z	Fonte de Informação da Nota (AM SE)	\N	f	f	t	f	t	\N
500	3	Materiais Especificados	\N	f	f	t	f	f	\N
500	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
500	6	Ligação	\N	f	f	t	f	f	\N
500	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
501	#	Nota iniciada por "COM"	\N	t	t	t	f	f	\N
501	a	Nota iniciada por "COM"	\N	f	f	t	f	f	\N
501	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
501	6	Ligação	\N	f	f	t	f	f	\N
501	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
502	#	Nota de Dissertação ou Tese	\N	t	t	t	f	f	\N
502	a	Nota de Dissertação ou Tese	\N	f	f	t	f	f	\N
502	6	Ligação	\N	f	f	t	f	f	\N
502	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
504	#	Nota de Bibliografia	\N	t	t	t	f	f	\N
504	a	Nota de Bibliografia	\N	f	f	t	f	f	\N
504	b	Número de Referências	\N	f	f	t	f	f	\N
504	6	Ligação	\N	f	f	t	f	f	\N
504	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
505	#	Nota de conteúdo	\N	f	t	t	f	f	\N
877	a	Número do item interno	\N	f	f	t	f	f	\N
505	g	Miscelânea	\N	t	f	t	f	f	\N
505	r	Indicação de Responsabilidade	\N	t	f	t	f	f	\N
505	t	Título	\N	t	f	t	f	f	\N
505	6	Ligação	\N	f	f	t	f	f	\N
505	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
506	#	Nota de Acesso Restrito	\N	t	t	t	f	f	\N
506	a	Termos Definindo o Acesso	\N	f	f	t	f	f	\N
506	b	Jurisdição	\N	t	f	t	f	f	\N
506	c	Condições para o Acesso Físico	\N	t	f	t	f	f	\N
506	d	Usuários autorizados	\N	t	f	t	f	f	\N
506	e	Autorização	\N	t	f	t	f	f	\N
506	3	Materiais Especificados	\N	f	f	t	f	f	\N
506	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
506	6	Ligação	\N	f	f	t	f	f	\N
506	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
507	#	Nota de escala para material gráfico	\N	f	t	t	f	f	\N
507	a	Fração representante da nota de escala	\N	f	f	t	f	f	\N
507	b	Complemento da nota de escala	\N	f	f	t	f	f	\N
507	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
508	#	Nota de Crédito de Produção/Criação	\N	f	t	t	f	f	\N
508	a	Nota de Crédito de Produção/Criação	\N	f	f	t	f	f	\N
508	6	Ligação	\N	f	f	t	f	f	\N
508	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
510	#	Nota de Citação/Referência	\N	t	t	t	f	f	\N
510	a	Nome da fonte	\N	f	f	t	f	f	\N
510	b	Datas de cobertura da fonte	\N	f	f	t	f	f	\N
510	c	Localização da fonte	\N	f	f	t	f	f	\N
510	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
510	3	Materiais especificados	\N	f	f	t	f	f	\N
510	6	Ligação	\N	f	f	t	f	f	\N
510	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
511	#	Nota de Participante ou Executor	\N	t	t	t	f	f	\N
511	a	Nota de Participante ou Executor	\N	f	f	t	f	f	\N
511	6	Ligação	\N	f	f	t	f	f	\N
511	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
513	#	Nota tipo de relatório e período coberto	\N	t	t	t	f	f	\N
513	a	Tipo de relatório	\N	f	f	t	f	f	\N
513	b	Período coberto	\N	f	f	t	f	f	\N
513	6	Ligação	\N	f	f	t	f	f	\N
513	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
514	#	Nota de qualidade dos dados	\N	f	t	t	f	f	\N
514	a	Relatório de precisão dos atributos	\N	f	f	t	f	f	\N
514	b	Valor de precisão dos atributos	\N	t	f	t	f	f	\N
514	c	Explicação sobre a precisão dos atributos	\N	t	f	t	f	f	\N
514	d	Relatório de consistência lógica	\N	t	f	t	f	f	\N
514	e	Relatório de completude/Inteireza	\N	f	f	t	f	f	\N
514	f	Relatório de precisão da posição horizontal	\N	f	f	t	f	f	\N
514	g	Valor da precisão da posição horizontal	\N	t	f	t	f	f	\N
514	h	Explicação da precisão da posição horizontal	\N	t	f	t	f	f	\N
514	i	Relatório da precisão da posição vertical	\N	f	f	t	f	f	\N
514	j	Valor da precisão da posição vertical	\N	t	f	t	f	f	\N
514	k	Explicação da precisão da posição vertical	\N	t	f	t	f	f	\N
514	m	Cobertura da Nuvem	\N	f	f	t	f	f	\N
514	6	Ligação	\N	f	f	t	f	f	\N
514	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
515	#	Nota de peculiaridade na numeração	\N	t	t	t	f	f	\N
515	a	Nota de peculiaridade na numeração	\N	f	f	t	f	f	\N
515	6	Ligação	\N	f	f	t	f	f	\N
658	6	Ligação	\N	f	f	t	f	f	\N
515	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
516	#	Nota de tipo de arquivo ou dado de computador	\N	t	t	t	f	f	\N
516	a	Tipo de arquivo ou dado de computador	\N	f	f	t	f	f	\N
516	6	Ligação	\N	f	f	t	f	f	\N
516	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
518	#	Nota Data/Hora e lugar de um evento	\N	t	t	t	f	f	\N
518	a	Nota Data/Hora e lugar de um evento	\N	f	f	t	f	f	\N
518	3	Materiais especificados	\N	f	f	t	f	f	\N
518	6	Ligação	\N	f	f	t	f	f	\N
518	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
520	#	Nota de Resumo	\N	t	t	t	f	f	\N
520	a	Nota de Resumo	\N	f	f	t	f	f	\N
520	b	Expansão da nota de resumo	\N	f	f	t	f	f	\N
515	z	Fonte de informação da nota (SE)	\N	f	f	t	f	t	\N
520	z	Fonte da informação da nota (SE)	\N	f	f	t	f	t	\N
520	3	Materiais especificados	\N	f	f	t	f	f	\N
520	6	Ligação	\N	f	f	t	f	f	\N
520	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
521	#	Nota de público alvo	\N	t	t	t	f	f	\N
521	a	Nota de público alvo	\N	t	f	t	f	f	\N
521	3	Materiais especificados	\N	f	f	t	f	f	\N
521	6	Ligação	\N	f	f	t	f	f	\N
521	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
522	#	Nota de cobertura geográfica	\N	f	t	t	f	f	\N
522	a	Nota de cobertura geográfica	\N	f	f	t	f	f	\N
522	6	Ligação	\N	f	f	t	f	f	\N
522	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
524	#	Nota de forma preferida para descrição do material	\N	t	t	t	f	f	\N
524	a	Nota de forma preferida para descrição do material	\N	f	f	t	f	f	\N
524	2	Fonte ou esquema usado	\N	f	f	t	f	f	\N
524	3	Materiais especificados	\N	f	f	t	f	f	\N
524	6	Ligação	\N	f	f	t	f	f	\N
524	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
525	#	Nota de suplemento	\N	t	t	t	f	f	\N
525	a	Nota de suplemento	\N	f	f	t	f	f	\N
525	z	Fonte da informação da nota (SE)	\N	f	f	t	f	t	\N
525	6	Ligação	\N	f	f	t	f	f	\N
525	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
530	#	Nota de disponibilidade de forma física adicional	\N	t	t	t	f	f	\N
530	a	Nota de disponibilidade de forma física adicional	\N	f	f	t	f	f	\N
530	b	Fonte de aquisição	\N	f	f	t	f	f	\N
530	c	Condições de aquisição	\N	f	f	t	f	f	\N
530	d	Número de ordem	\N	f	f	t	f	f	\N
530	z	Fonte da informação da nota (AM CF VM SE)	\N	f	f	t	f	t	\N
530	3	Materiais especificados	\N	f	f	t	f	f	\N
530	6	Ligação	\N	f	f	t	f	f	\N
530	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
533	#	Nota de reprodução	\N	t	t	t	f	f	\N
533	a	Tipo de reprodução	\N	f	f	t	f	f	\N
533	b	Local de reprodução	\N	t	f	t	f	f	\N
533	c	Instituição responsável pela reprodução	\N	t	f	t	f	f	\N
533	d	Data da reprodução	\N	f	f	t	f	f	\N
533	e	Descrição física da reprodução	\N	f	f	t	f	f	\N
533	f	Informação série da reprodução	\N	t	f	t	f	f	\N
533	m	Datas de publicação e/ou indicação de seqüência para fascículos reproduzidos	\N	t	f	t	f	f	\N
533	n	Nota sobre a reprodução	\N	t	f	t	f	f	\N
533	3	Materiais especificados	\N	f	f	t	f	f	\N
533	6	Ligação	\N	f	f	t	f	f	\N
533	7	Campos de dados fixos para reprodução	\N	f	f	t	f	f	\N
533	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
534	#	Nota de versão original	\N	t	t	t	f	f	\N
534	a	Entrada principal do original	\N	f	f	t	f	f	\N
534	b	Informação de edição do original	\N	f	f	t	f	f	\N
534	c	Publicação, distribuição, etc. do original	\N	f	f	t	f	f	\N
534	e	Descrição física do original	\N	f	f	t	f	f	\N
534	f	Informação de Série do Original	\N	t	f	t	f	f	\N
534	k	Título chave do original	\N	t	f	t	f	f	\N
534	l	Localização do original	\N	f	f	t	f	f	\N
534	m	Detalhes do material especificado	\N	f	f	t	f	f	\N
534	n	Nota sobre o original	\N	t	f	t	f	f	\N
534	p	Frase introdutória	\N	f	f	t	f	f	\N
534	t	Informação do título do original	\N	f	f	t	f	f	\N
534	x	ISSN - International Standard Serial Number	\N	t	f	t	f	f	\N
534	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
534	6	Ligação	\N	f	f	t	f	f	\N
534	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
535	#	Nota de Localização dos originais / duplicatas	\N	t	t	t	f	f	\N
535	a	Depositário	\N	f	f	t	f	f	\N
535	b	Endereço postal	\N	t	f	t	f	f	\N
535	c	País	\N	t	f	t	f	f	\N
535	d	Endereço de telecomunicações	\N	t	f	t	f	f	\N
535	g	Código da localização do depósito	\N	f	f	t	f	f	\N
535	3	Materiais especificados	\N	f	f	t	f	f	\N
535	6	Ligação	\N	f	f	t	f	f	\N
535	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
536	#	Nota de informação sobre financiamento	\N	t	t	t	f	f	\N
536	a	Texto da nota	\N	f	f	t	f	f	\N
536	b	Número do contrato	\N	t	f	t	f	f	\N
536	c	Número da doação	\N	t	f	t	f	f	\N
536	d	Número do projeto, tarefa, trabalho	\N	t	f	t	f	f	\N
536	e	Número do elemento de programa	\N	t	f	t	f	f	\N
536	f	Número do projeto	\N	t	f	t	f	f	\N
536	g	Número da tarefa	\N	t	f	t	f	f	\N
536	h	Número da unidade de trabalho	\N	t	f	t	f	f	\N
536	6	Ligação	\N	f	f	t	f	f	\N
536	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
538	#	Nota detalhes do sistema	\N	t	t	t	f	f	\N
538	a	Nota detalhes do sistema	\N	f	f	t	f	f	\N
538	6	Ligação	\N	f	f	t	f	f	\N
538	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
540	#	Nota de termos governando uso e reprodução	\N	t	t	t	f	f	\N
540	a	Termos governando uso e reprodução	\N	f	f	t	f	f	\N
540	b	Jurisdição	\N	f	f	t	f	f	\N
540	c	Autorização	\N	f	f	t	f	f	\N
540	d	Usuários autorizados	\N	f	f	t	f	f	\N
540	3	Materiais especificados	\N	f	f	t	f	f	\N
540	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
540	6	Ligação	\N	f	f	t	f	f	\N
540	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
541	#	Nota de Fonte imediata de aquisição	\N	t	t	t	f	f	\N
541	a	Fonte de aquisição	\N	f	f	t	f	f	\N
541	b	Endereço	\N	f	f	t	f	f	\N
541	c	Método de aquisição	\N	f	f	t	f	f	\N
541	d	Data de Aquisição	\N	f	f	t	f	f	\N
541	e	Número de acesso	\N	f	f	t	f	f	\N
541	f	Proprietário	\N	f	f	t	f	f	\N
541	h	Preço de compra	\N	f	f	t	f	f	\N
541	n	Extensão	\N	t	f	t	f	f	\N
541	o	Tipo de unidade	\N	t	f	t	f	f	\N
541	3	Materiais especificados	\N	f	f	t	f	f	\N
541	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
541	6	Ligação	\N	f	f	t	f	f	\N
541	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
544	#	Nota de localização de materiais de arquivo	\N	t	t	t	f	f	\N
544	a	Depositária	\N	f	f	t	f	f	\N
544	b	Endereço	\N	t	f	t	f	f	\N
544	c	País	\N	t	f	t	f	f	\N
544	d	Título dos materiais associados	\N	t	f	t	f	f	\N
544	e	Procedência dos materiais associados	\N	t	f	t	f	f	\N
544	3	Materiais especificados	\N	f	f	t	f	f	\N
544	6	Ligação	\N	f	f	t	f	f	\N
544	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
545	#	Nota Biográfica ou histórica	\N	t	t	t	f	f	\N
545	a	Nota Biográfica ou histórica	\N	f	f	t	f	f	\N
545	b	Expansão da nota biográfica ou histórica	\N	f	f	t	f	f	\N
545	6	Ligação	\N	f	f	t	f	f	\N
545	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
546	#	Nota de idioma	\N	t	t	t	f	f	\N
546	a	Nota de idioma	\N	f	f	t	f	f	\N
546	b	Informação de código ou alfabeto	\N	t	f	t	f	f	\N
546	z	Fonte da informação da nota (SE)	\N	f	f	t	f	t	\N
546	3	Materiais especificados	\N	f	f	t	f	f	\N
546	6	Ligação	\N	f	f	t	f	f	\N
546	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
547	#	Nota complexa de título anterior	\N	t	t	t	f	f	\N
547	a	Nota complexa de título anterior	\N	f	f	t	f	f	\N
547	z	Fonte da informação da nota (SE)	\N	f	f	t	f	t	\N
547	6	Ligação	\N	f	f	t	f	f	\N
547	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
550	#	Nota de informação sobre a edição	\N	t	t	t	f	f	\N
550	a	Nota de informação sobre a edição	\N	f	f	t	f	f	\N
550	z	Fonte da informação da nota (SE)	\N	f	f	t	f	t	\N
550	6	Ligação	\N	f	f	t	f	f	\N
550	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
552	#	Nota de informação de atributo e unidade	\N	t	t	t	f	f	\N
552	a	Etiqueta do tipo de unidade	\N	f	f	t	f	f	\N
552	b	Fonte e definição do tipo de unidade	\N	f	f	t	f	f	\N
552	c	Etiqueta de atributo	\N	f	f	t	f	f	\N
552	d	Fonte e definição do atributo	\N	f	f	t	f	f	\N
552	e	Valor do domínio enumerado	\N	t	f	t	f	f	\N
552	f	Fonte e definição do valor do domínio enumerado	\N	t	f	t	f	f	\N
552	g	Abrangência máxima e mínima do domínio	\N	f	f	t	f	f	\N
552	h	Fonte e nome do conjunto de códigos	\N	f	f	t	f	f	\N
552	i	domínio não representável	\N	f	f	t	f	f	\N
552	j	Característica das unidades de medida e resolução	\N	f	f	t	f	f	\N
552	k	Data inicial e final dos valores de atributo	\N	f	f	t	f	f	\N
552	l	Precisão dos valores de atributo	\N	f	f	t	f	f	\N
552	m	Explicação da precisão dos valores de atributo	\N	f	f	t	f	f	\N
552	n	Freqüência de medida dos atributos	\N	f	f	t	f	f	\N
552	o	Visão geral da unidade e atributo	\N	t	f	t	f	f	\N
552	p	Citação de detalhe da unidade e atributo	\N	t	f	t	f	f	\N
552	6	Ligação	\N	f	f	t	f	f	\N
552	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
555	#	Nota de índice cumulativo e remissivo	\N	t	t	t	f	f	\N
555	a	Nota de índice cumulativo e remissivo	\N	f	f	t	f	f	\N
555	b	Fonte disponível	\N	t	f	t	f	f	\N
555	c	Grau de controle	\N	f	f	t	f	f	\N
555	d	Referência Bibliográfica	\N	f	f	t	f	f	\N
555	3	Materiais especificados	\N	f	f	t	f	f	\N
555	6	Ligação	\N	f	f	t	f	f	\N
555	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
556	#	Nota de informação sobre documentação	\N	t	t	t	f	f	\N
556	a	Nota de informação sobre documentação	\N	f	f	t	f	f	\N
877	e	Fonte da aquisição	\N	t	f	t	f	f	\N
556	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
556	6	Ligação	\N	f	f	t	f	f	\N
556	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
561	#	Nota de histórico de procedência	\N	t	t	t	f	f	\N
561	a	Histórico	\N	f	f	t	f	f	\N
561	3	Materiais especificados	\N	f	f	t	f	f	\N
561	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
561	6	Ligação	\N	f	f	t	f	f	\N
561	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
562	#	Nota de identificação de cópia e versão	\N	t	t	t	f	f	\N
562	a	Marca identificadora	\N	t	f	t	f	f	\N
562	b	Identificação de cópia	\N	t	f	t	f	f	\N
562	c	Identificação de versão	\N	t	f	t	f	f	\N
562	d	Formato de apresentação	\N	t	f	t	f	f	\N
562	e	Número de cópias	\N	t	f	t	f	f	\N
562	3	Materiais especificados	\N	f	f	t	f	f	\N
562	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
562	6	Ligação	\N	f	f	t	f	f	\N
562	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
565	#	Nota de características de arquivo	\N	t	t	t	f	f	\N
565	a	Número de pastas/Variáveis	\N	f	f	t	f	f	\N
565	b	Nome da variável	\N	t	f	t	f	f	\N
565	c	Unidade de análise	\N	t	f	t	f	f	\N
565	d	Universo de dados	\N	t	f	t	f	f	\N
565	e	Código ou esquema de preenchimento	\N	t	f	t	f	f	\N
565	3	Materiais especificados	\N	f	f	t	f	f	\N
565	6	Ligação	\N	f	f	t	f	f	\N
565	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
567	#	Nota de metodologia	\N	t	t	t	f	f	\N
567	a	Nota de metodologia	\N	f	f	t	f	f	\N
567	6	Ligação	\N	f	f	t	f	f	\N
567	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
580	#	Nota de ligação complexa de entrada	\N	t	t	t	f	f	\N
580	a	Nota de ligação complexa de entrada	\N	f	f	t	f	f	\N
580	z	Fonte da informação na nota	\N	f	f	t	f	t	\N
580	6	Ligação	\N	f	f	t	f	f	\N
580	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
581	#	Nota de publicações sobre materiais descritos	\N	t	t	t	f	f	\N
581	a	Nota de publicações sobre materiais descritos	\N	f	f	t	f	f	\N
581	z	ISSN - International Standard Serial Number	\N	t	f	t	f	f	\N
581	3	Materiais especificados	\N	f	f	t	f	f	\N
581	6	Ligação	\N	f	f	t	f	f	\N
581	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
583	#	Nota de ação	\N	t	t	t	f	f	\N
583	a	Ação	\N	f	f	t	f	f	\N
583	b	Identificação da Ação	\N	t	f	t	f	f	\N
583	c	Tempo da Ação	\N	t	f	t	f	f	\N
583	e	Contingência da Ação	\N	t	f	t	f	f	\N
583	f	Autorização	\N	t	f	t	f	f	\N
583	h	Jurisdição	\N	t	f	t	f	f	\N
583	i	Método da Ação	\N	t	f	t	f	f	\N
583	j	Lugar da Ação	\N	t	f	t	f	f	\N
583	k	Agente da Ação	\N	t	f	t	f	f	\N
583	l	Status	\N	t	f	t	f	f	\N
583	n	Extensão	\N	t	f	t	f	f	\N
583	o	Tipo de unidade	\N	t	f	t	f	f	\N
583	x	Nota interna	\N	t	f	t	f	f	\N
583	z	Nota Pública	\N	t	f	t	f	f	\N
583	3	Materiais especificados	\N	f	f	t	f	f	\N
583	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
583	6	Ligação	\N	f	f	t	f	f	\N
583	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
584	#	Nota de acumulação e freqüência de uso	\N	t	t	t	f	f	\N
584	a	Acumulação	\N	t	f	t	f	f	\N
584	b	Freqüência de uso	\N	t	f	t	f	f	\N
584	3	Materiais especificados	\N	t	f	t	f	f	\N
584	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
584	6	Ligação	\N	f	f	t	f	f	\N
584	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
585	#	Nota de exposição	\N	t	t	t	f	f	\N
585	a	Nota de exposição	\N	f	f	t	f	f	\N
585	3	Materiais especificados	\N	f	f	t	f	f	\N
585	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
585	6	Ligação	\N	f	f	t	f	f	\N
585	8	Ligação de Campo e Seqüência	\N	f	f	t	f	f	\N
586	#	Nota de Premiação	\N	t	t	t	f	f	\N
586	a	Nota de Premiação	\N	f	f	t	f	f	\N
586	3	Materiais especificados	\N	f	f	t	f	f	\N
586	6	Ligação	\N	f	f	t	f	f	\N
586	8	Ligação de Campo e Seqüência	\N	t	f	t	f	f	\N
590	#	Notas Locais	\N	t	t	t	f	f	\N
590	a	Notas Locais	\N	f	f	t	f	f	\N
877	h	Restrição de uso	\N	t	f	t	f	f	\N
877	j	Status do item	\N	t	f	t	f	f	\N
877	l	Localização temporária	\N	t	f	t	f	f	\N
877	p	Designação da parte	\N	t	f	t	f	f	\N
877	r	Designação da parte inválida ou cancelada	\N	t	f	t	f	f	\N
877	x	Nota interna	\N	t	f	t	f	f	\N
877	z	Nota pública	\N	t	f	t	f	f	\N
877	3	Especificação dos materiais	\N	f	f	t	f	f	\N
877	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
878	#	Informação de item - Índices	\N	f	t	t	f	f	\N
878	a	Número do item interno	\N	f	f	t	f	f	\N
878	b	Número inválido ou cancelado do item interno	\N	t	f	t	f	f	\N
878	c	Preço	\N	t	f	t	f	f	\N
878	d	Data da aquisição	\N	t	f	t	f	f	\N
878	e	Fonte de aquisição	\N	t	f	t	f	f	\N
878	h	Restrições de uso	\N	t	f	t	f	f	\N
878	j	Status do item	\N	t	f	t	f	f	\N
878	l	Localização temporária	\N	t	f	t	f	f	\N
878	p	Designação da parte	\N	t	f	t	f	f	\N
878	r	Designação inválida ou cancelada da parte	\N	t	f	t	f	f	\N
878	t	Número do exemplar	\N	f	f	t	f	f	\N
878	x	Nota interna	\N	t	f	t	f	f	\N
878	z	Nota pública	\N	t	f	t	f	f	\N
878	3	Especificação dos materiais	\N	f	f	t	f	f	\N
878	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
880	#	Representação gráfica alternada	\N	t	t	t	f	f	\N
880	6	Ligação	\N	f	f	t	f	f	\N
610	#	Assunto - Nome Corporativo	\N	t	t	t	f	f	\N
610	a	Nome Corporativo ou nome da jurisdição	\N	f	f	t	f	f	\N
610	b	Unidade subordinada	\N	t	f	t	f	f	\N
610	c	Local do evento	\N	f	f	t	f	f	\N
610	d	Data do evento ou assinatura do acordo	\N	t	f	t	f	f	\N
610	e	Termo relacionador	\N	t	f	t	f	f	\N
610	f	Data da obra	\N	f	f	t	f	f	\N
610	g	Miscelânea	\N	f	f	t	f	f	\N
610	h	Meio físico	\N	f	f	t	f	f	\N
610	k	Subcabeçalho de forma	\N	t	f	t	f	f	\N
610	l	Idioma da obra	\N	f	f	t	f	f	\N
610	m	Forma de execução para música	\N	t	f	t	f	f	\N
610	o	Informações de arranjo para música	\N	f	f	t	f	f	\N
610	n	Número da parte / seção / evento	\N	t	f	t	f	f	\N
610	p	Nome da parte / seção da obra	\N	t	f	t	f	f	\N
610	r	Chave para música	\N	f	f	t	f	f	\N
610	s	Versão	\N	f	f	t	f	f	\N
610	t	Título da obra	\N	f	f	t	f	f	\N
610	u	Afiliação	\N	f	f	t	f	f	\N
610	v	Subdivisão de forma	\N	t	f	t	f	f	\N
610	x	Subdivisão geral	\N	t	f	t	f	f	\N
610	y	Subdivisão cronológica	\N	t	f	t	f	f	\N
610	z	Subdivisão geográfica	\N	t	f	t	f	f	\N
610	2	Fonte do cabeçalho ou termo	\N	f	f	t	f	f	\N
610	3	Materiais especificados	\N	f	f	t	f	f	\N
610	4	Código do relacionador	\N	t	f	t	f	f	\N
610	6	Ligação	\N	f	f	t	f	f	\N
610	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
611	#	Assunto - Nome do Evento	\N	t	t	t	f	f	\N
611	a	Nome do Evento ou Nome da Jurisdição como Entrada	\N	f	f	t	f	f	\N
611	b	Número (BK CF MP MU SE VM MX)	\N	f	f	t	f	t	\N
611	c	Local do Evento	\N	f	f	t	f	f	\N
611	d	Data do Evento	\N	f	f	t	f	f	\N
611	e	Unidade Subordinada	\N	t	f	t	f	f	\N
611	f	Data da Obra	\N	f	f	t	f	f	\N
611	g	Miscelânea	\N	f	f	t	f	f	\N
611	h	Meio físico	\N	f	f	t	f	f	\N
611	k	Subcabeçalho de Forma	\N	t	f	t	f	f	\N
611	l	Idioma da Obra	\N	f	f	t	f	f	\N
611	n	Número da parte / seção / evento	\N	t	f	t	f	f	\N
611	p	Nome da parte / seção da obra	\N	t	f	t	f	f	\N
611	q	Nome do evento seguindo o nome da jurisdição	\N	f	f	t	f	f	\N
611	s	Versão	\N	f	f	t	f	f	\N
611	t	Título da obra	\N	f	f	t	f	f	\N
611	u	Afiliação	\N	f	f	t	f	f	\N
611	v	Subdivisão de forma	\N	t	f	t	f	f	\N
611	x	Subdivisão geral	\N	t	f	t	f	f	\N
611	y	Subdivisão cronológica	\N	t	f	t	f	f	\N
611	z	Subdivisão geográfica	\N	t	f	t	f	f	\N
611	2	Fonte do cabeçalho ou termo	\N	f	f	t	f	f	\N
611	3	Materiais especificados	\N	f	f	t	f	f	\N
611	4	Código Relacionador	\N	t	f	t	f	f	\N
611	6	Ligação	\N	f	f	t	f	f	\N
611	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
630	#	Assunto - Título Uniforme	\N	t	t	t	f	f	\N
630	a	Título Uniforme	\N	f	f	t	f	f	\N
630	d	Data de assinatura do acordo	\N	t	f	t	f	f	\N
630	f	Data da obra	\N	f	f	t	f	f	\N
630	g	Miscelânea	\N	f	f	t	f	f	\N
630	h	Meio físico	\N	f	f	t	f	f	\N
630	k	Subcabeçalho de forma	\N	t	f	t	f	f	\N
630	l	Idioma da obra	\N	f	f	t	f	f	\N
630	m	Forma de execução para música	\N	t	f	t	f	f	\N
630	n	Número da parte / seção da obra	\N	t	f	t	f	f	\N
630	o	Informação de arranjo para música	\N	f	f	t	f	f	\N
630	p	Nome da parte / seção da obra	\N	t	f	t	f	f	\N
630	r	Chave para música	\N	f	f	t	f	f	\N
630	s	Versão	\N	f	f	t	f	f	\N
630	t	Título da obra	\N	f	f	t	f	f	\N
630	v	Subdivisão de forma	\N	t	f	t	f	f	\N
630	x	Subdivisão geral	\N	t	f	t	f	f	\N
630	y	Subdivisão cronológica	\N	t	f	t	f	f	\N
630	z	Subdivisão geográfica	\N	t	f	t	f	f	\N
630	2	Fonte do cabeçalho ou termo	\N	f	f	t	f	f	\N
630	3	Materiais especificados	\N	f	f	t	f	f	\N
630	6	Ligação	\N	f	f	t	f	f	\N
630	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
650	#	Assunto - Termo Tópico	\N	t	t	t	f	f	\N
650	b	Termo tópico seguindo o nome geográfico	\N	f	f	t	f	f	\N
650	c	Local do evento	\N	f	f	t	f	f	\N
650	d	Datas	\N	f	f	t	f	f	\N
650	e	Termo relacionador	\N	f	f	t	f	f	\N
650	v	Subdivisão de forma	\N	t	f	t	f	f	\N
650	x	Subdivisão geral	\N	t	f	t	f	f	\N
650	y	Subdivisão cronológica	\N	t	f	t	f	f	\N
650	z	Subdivisão geográfica	\N	t	f	t	f	f	\N
650	2	Fonte do cabeçalho ou termo	\N	f	f	t	f	f	\N
650	3	Materiais especificados	\N	f	f	t	f	f	\N
650	6	Ligação	\N	f	f	t	f	f	\N
650	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
651	#	Assunto - Nome geográfico	\N	t	t	t	f	f	\N
651	a	Nome geográfico	\N	f	f	t	f	f	\N
651	b	Nome geográfico seguindo o nome do local	\N	t	f	t	f	t	\N
651	v	Subdivisão de forma	\N	t	f	t	f	f	\N
651	x	Subdivisão geral	\N	t	f	t	f	f	\N
651	y	Subdivisão cronológica	\N	t	f	t	f	f	\N
651	z	Subdivisão geográfica	\N	t	f	t	f	f	\N
651	2	Fonte do cabeçalho ou termo	\N	f	f	t	f	f	\N
651	3	Materiais especificados	\N	f	f	t	f	f	\N
651	6	Ligação	\N	f	f	t	f	f	\N
651	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
653	#	Assunto - Termo livre	\N	t	t	t	f	f	\N
877	b	Número inválido ou cancelado do item interno	\N	t	f	t	f	f	\N
653	6	Ligação	\N	f	f	t	f	f	\N
653	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
654	#	Assunto - Termos tópicos facetados	\N	t	t	t	f	f	\N
654	a	Termo foco	\N	f	f	t	f	f	\N
654	b	Termo não foco	\N	t	f	t	f	f	\N
654	c	Designação da faceta / hierarquia	\N	t	f	t	f	f	\N
654	v	Subdivisão de forma	\N	t	f	t	f	f	\N
654	y	Subdivisão cronológica	\N	t	f	t	f	f	\N
654	z	Subdivisão geográfica	\N	t	f	t	f	f	\N
654	2	Fonte do cabeçalho ou termo	\N	f	f	t	f	f	\N
654	3	Material especificado	\N	f	f	t	f	f	\N
654	6	Ligação	\N	f	f	t	f	f	\N
654	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
655	#	Termo de índice - Gênero / forma / características físicas	\N	t	t	t	f	f	\N
655	a	Gênero / forma / características físicas	\N	f	f	t	f	f	\N
655	b	Termo não foco	\N	t	f	t	f	f	\N
655	c	Faceta / designação hierárquica	\N	t	f	t	f	f	\N
655	v	Subdivisão de forma	\N	t	f	t	f	f	\N
655	x	Subdivisão geral	\N	t	f	t	f	f	\N
655	y	Subdivisão cronológica	\N	t	f	t	f	f	\N
655	z	Subdivisão geográfica	\N	t	f	t	f	f	\N
655	2	Fonte do termo	\N	f	f	t	f	f	\N
655	3	Materiais especificados	\N	f	f	t	f	f	\N
655	5	Instituição a qual se refere o campo	\N	f	f	t	f	f	\N
655	6	Ligação	\N	f	f	t	f	f	\N
655	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
656	#	Termo de índice-ocupação	\N	t	t	t	f	f	\N
656	a	Ocupação	\N	f	f	t	f	f	\N
656	k	Forma	\N	f	f	t	f	f	\N
656	v	Subdivisão de forma	\N	f	f	t	f	f	\N
656	x	Subdivisão geral	\N	t	f	t	f	f	\N
656	y	Subdivisão cronológica	\N	t	f	t	f	f	\N
656	z	Subdivisão geográfica	\N	t	f	t	f	f	\N
656	2	Fonte do termo	\N	f	f	t	f	f	\N
656	3	Materiais especificados	\N	f	f	t	f	f	\N
656	6	Ligação	\N	f	f	t	f	f	\N
656	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
657	#	Termo de índice-função	\N	t	t	t	f	f	\N
657	a	Função	\N	f	f	t	f	f	\N
657	v	Subdivisão de forma	\N	f	f	t	f	f	\N
657	x	Subdivisão geral	\N	t	f	t	f	f	\N
657	y	Subdivisão cronológia	\N	t	f	t	f	f	\N
657	z	Subdivisão geográfica	\N	t	f	t	f	f	\N
657	2	Fonte do termo	\N	f	f	t	f	f	\N
657	3	Materiais especificados	\N	f	f	t	f	f	\N
657	6	Ligação	\N	f	f	t	f	f	\N
657	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
658	#	Termo de índice-currículum	\N	t	t	t	f	f	\N
658	a	Objetivo do currículo principal	\N	f	f	t	f	f	\N
658	b	Objetivo do currículo subordinado	\N	t	f	t	f	f	\N
658	d	Fator de correlação	\N	f	f	t	f	f	\N
658	2	Fonte do termo	\N	f	f	t	f	f	\N
658	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
700	#	Entrada secundária - Nome pessoal	\N	t	t	t	f	f	\N
877	d	Data da aquisição	\N	t	f	t	f	f	\N
700	b	Numeração	\N	f	f	t	f	f	\N
700	c	Títulos e outras palavras associadas ao nome	\N	t	f	t	f	f	\N
700	d	Datas associadas ao nome	\N	f	f	t	f	f	\N
700	e	Termo relacionador	\N	t	f	t	f	f	\N
700	f	Data da obra	\N	f	f	t	f	f	\N
700	g	Miscelânea	\N	f	f	t	f	f	\N
700	h	Meio físico	\N	f	f	t	f	f	\N
700	k	Subcabeçalho	\N	t	f	t	f	f	\N
700	l	Idioma da obra	\N	f	f	t	f	f	\N
700	m	Meio de apresentação para música	\N	t	f	t	f	f	\N
700	n	Número de parte / seção da obra	\N	t	f	t	f	f	\N
700	o	Informação de arranjo para música	\N	f	f	t	f	f	\N
700	p	Nome de parte / seção da obra	\N	t	f	t	f	f	\N
700	q	Forma completa do nome	\N	f	f	t	f	f	\N
700	r	Chave para música	\N	f	f	t	f	f	\N
700	s	Versão	\N	f	f	t	f	f	\N
700	t	Título da obra	\N	f	f	t	f	f	\N
700	u	Afiliação	\N	f	f	t	f	f	\N
700	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
700	3	Materiais especificados	\N	f	f	t	f	f	\N
700	4	Código relacionador	\N	t	f	t	f	f	\N
700	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
700	6	Ligação	\N	f	f	t	f	f	\N
700	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
710	#	Entrada secundária - Nome corporativo	\N	t	t	t	f	f	\N
710	a	Nome corporativo ou jurisdição	\N	f	f	t	f	f	\N
710	b	Unidade subordinada	\N	t	f	t	f	f	\N
710	c	Local do evento	\N	f	f	t	f	f	\N
710	d	Data do evento ou assinatura de tratado	\N	t	f	t	f	f	\N
710	e	Termo relacionador	\N	t	f	t	f	f	\N
710	f	Data da obra	\N	f	f	t	f	f	\N
710	g	Miscelânea	\N	f	f	t	f	f	\N
710	h	Meio físico	\N	f	f	t	f	f	\N
710	k	Subcabeçalho	\N	t	f	t	f	f	\N
710	l	Idioma da obra	\N	f	f	t	f	f	\N
710	m	Meio de apresentação para música	\N	t	f	t	f	f	\N
710	n	Número de parte / seção da obra	\N	t	f	t	f	f	\N
710	o	Informação de arranjo para música	\N	f	f	t	f	f	\N
710	p	Nome de parte / seção da obra	\N	t	f	t	f	f	\N
710	r	Chave para música	\N	f	f	t	f	f	\N
710	s	Versão	\N	f	f	t	f	f	\N
710	t	Título da obra	\N	f	f	t	f	f	\N
710	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
710	3	Materiais especificados	\N	f	f	t	f	f	\N
710	4	Termo relacionador	\N	t	f	t	f	f	\N
710	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
710	6	Ligação	\N	f	f	t	f	f	\N
710	8	Ligação de campos e seqüência	\N	t	f	t	f	f	\N
711	#	Entrada secundária - Nome de evento	\N	t	t	t	f	f	\N
711	a	Nome do evento ou jurisdição como entrada	\N	f	f	t	f	f	\N
711	b	Número (BK CF MP MU SE VM MX)	\N	f	f	t	f	t	\N
711	c	Local do evento	\N	f	f	t	f	f	\N
711	d	Data do evento	\N	f	f	t	f	f	\N
711	e	Unidade subordinada	\N	t	f	t	f	f	\N
711	f	Data da obra	\N	f	f	t	f	f	\N
711	g	Miscelânea	\N	f	f	t	f	f	\N
711	h	Meio físico	\N	f	f	t	f	f	\N
711	k	Subcabeçalho	\N	t	f	t	f	f	\N
711	l	Idioma da obra	\N	f	f	t	f	f	\N
711	n	Número de parte / seção da obra	\N	t	f	t	f	f	\N
711	p	Nome de parte / seção da obra	\N	t	f	t	f	f	\N
711	q	Nome do evento seguindo nome da jurisdição como elemento de entrada	\N	f	f	t	f	f	\N
711	s	Versão	\N	f	f	t	f	f	\N
711	t	Título da obra	\N	f	f	t	f	f	\N
711	u	Afiliação	\N	f	f	t	f	f	\N
711	x	ISSN -  International Standard Serial Number	\N	f	f	t	f	f	\N
711	3	Materiais especificados	\N	f	f	t	f	f	\N
711	4	Termo relacionador	\N	t	f	t	f	f	\N
711	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
711	6	Ligação	\N	f	f	t	f	f	\N
711	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
720	#	Entrada secundária - Nome não controlado	\N	t	t	t	f	f	\N
720	a	Nome	\N	f	f	t	f	f	\N
720	e	Termo relacionador	\N	t	f	t	f	f	\N
720	4	Código relacionador	\N	t	f	t	f	f	\N
720	6	Ligação	\N	f	f	t	f	f	\N
720	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
730	#	Entrada secundária - Título uniforme	\N	t	t	t	f	f	\N
730	a	Título uniforme	\N	f	f	t	f	f	\N
730	d	Data da assinatura do tratado	\N	t	f	t	f	f	\N
730	g	Miscelânea	\N	f	f	t	f	f	\N
730	h	Meio físico	\N	f	f	t	f	f	\N
730	k	Subcabeçalho	\N	t	f	t	f	f	\N
730	l	Idioma da obra	\N	f	f	t	f	f	\N
730	m	Meio de apresentação para música	\N	t	f	t	f	f	\N
730	n	Número de parte / seção da obra	\N	t	f	t	f	f	\N
730	o	Informação de arranjo para música	\N	f	f	t	f	f	\N
730	p	Nome de parte / seção da obra	\N	t	f	t	f	f	\N
730	r	Chave para música	\N	f	f	t	f	f	\N
730	s	Versão	\N	f	f	t	f	f	\N
730	t	Título da obra	\N	f	f	t	f	f	\N
730	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
730	3	Materiais especificados	\N	f	f	t	f	f	\N
730	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
730	6	Ligação	\N	f	f	t	f	f	\N
730	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
740	#	Entrada secundária - Título relacionado / Analítico não controlado	\N	t	t	t	f	f	\N
740	a	Título relacionado / Analítico não controlado	\N	f	f	t	f	f	\N
740	h	Meio físico	\N	f	f	t	f	f	\N
740	n	Número de parte / seção da obra	\N	t	f	t	f	f	\N
740	p	Nome de parte / seção da obra	\N	t	f	t	f	f	\N
740	5	Instituição à qual o campo se aplica	\N	f	f	t	f	f	\N
740	6	Ligação	\N	f	f	t	f	f	\N
740	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
752	#	Entrada secundária - Nome hierárquico de lugar	\N	t	t	t	f	f	\N
752	a	País	\N	f	f	t	f	f	\N
752	b	Estado, província, território	\N	f	f	t	f	f	\N
752	c	País, região, ilha	\N	f	f	t	f	f	\N
752	d	Cidade	\N	f	f	t	f	f	\N
752	6	Ligação	\N	f	f	t	f	f	\N
752	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
753	#	Detalhes de sistema para acesso a arquivos de computador	\N	t	t	t	f	f	\N
753	a	Tipo e modelo da máquina	\N	f	f	t	f	f	\N
753	b	Linguagem de programação	\N	f	f	t	f	f	\N
753	c	Sistema operacional	\N	f	f	t	f	f	\N
753	6	Ligação	\N	f	f	t	f	f	\N
753	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
754	#	Entrada secundária - Identificação taxonômica	\N	t	t	t	f	f	\N
754	a	Nome taxonômico / categoria taxonômica hierárquica	\N	t	f	t	f	f	\N
754	2	Fonte da identificação taxonômica	\N	f	f	t	f	f	\N
754	6	Ligação	\N	f	f	t	f	f	\N
754	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
755	#	Entrada secundária - Características físicas	\N	t	f	t	f	t	\N
760	#	Entrada de série principal	\N	t	t	t	f	f	\N
760	a	Título da entrada principal	\N	f	f	t	f	f	\N
760	b	Edição	\N	f	f	t	f	f	\N
760	c	Informação qualificadora	\N	f	f	t	f	f	\N
760	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
760	g	Informação de relação	\N	t	f	t	f	f	\N
760	i	Exibir texto	\N	f	f	t	f	f	\N
760	h	Descrição física	\N	f	f	t	f	f	\N
760	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
760	n	Nota	\N	t	f	t	f	f	\N
760	o	Outro identificador de item	\N	t	f	t	f	f	\N
760	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
760	s	Título uniforme	\N	f	f	t	f	f	\N
760	t	Título	\N	f	f	t	f	f	\N
760	w	Número de controle do registro	\N	t	f	t	f	f	\N
760	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
760	y	Designação CODEN	\N	f	f	t	f	f	\N
760	6	Ligação	\N	f	f	t	f	f	\N
760	8	Ligação  de campo e seqüência	\N	t	f	t	f	f	\N
762	#	Entrada de sub-série	\N	t	t	t	f	f	\N
762	a	Título da entrada principal	\N	f	f	t	f	f	\N
762	b	Edição	\N	f	f	t	f	f	\N
762	c	Informação qualificadora	\N	f	f	t	f	f	\N
852	e	Endereço	\N	t	f	t	f	f	\N
762	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
762	g	Informação de relação	\N	t	f	t	f	f	\N
762	i	Exibir texto	\N	f	f	t	f	f	\N
762	h	Descrição física	\N	f	f	t	f	f	\N
762	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
762	n	Nota	\N	t	f	t	f	f	\N
762	o	Outro identificador de item	\N	t	f	t	f	f	\N
762	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
762	s	Título uniforme	\N	f	f	t	f	f	\N
762	t	Título	\N	f	f	t	f	f	\N
762	w	Número de controle do registro	\N	t	f	t	f	f	\N
762	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
762	y	Designação CODEN	\N	f	f	t	f	f	\N
762	6	Ligação	\N	f	f	t	f	f	\N
762	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
765	#	Entrada de idioma original	\N	t	t	t	f	f	\N
765	a	Título de entrada principal	\N	f	f	t	f	f	\N
765	b	Edição	\N	f	f	t	f	f	\N
765	c	Informação qualificadora	\N	f	f	t	f	f	\N
765	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
765	g	Informação de relação	\N	t	f	t	f	f	\N
765	i	Exibir texto	\N	f	f	t	f	f	\N
765	h	Descrição física	\N	f	f	t	f	f	\N
765	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
765	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
765	n	Nota	\N	t	f	t	f	f	\N
765	o	Outro identificador de item	\N	t	f	t	f	f	\N
765	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
765	r	Número de relatório	\N	t	f	t	f	f	\N
765	s	Título uniforme	\N	f	f	t	f	f	\N
765	t	Título	\N	f	f	t	f	f	\N
765	u	Standard technical report number	\N	f	f	t	f	f	\N
765	w	Número de controle do registro	\N	t	f	t	f	f	\N
765	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
765	y	Designação CODEN	\N	f	f	t	f	f	\N
765	6	Ligação	\N	f	f	t	f	f	\N
765	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
767	#	Entrada de tradução	\N	t	t	t	f	f	\N
767	a	Título de entrada principal	\N	f	f	t	f	f	\N
767	b	Edição	\N	f	f	t	f	f	\N
767	c	Informação qualificadora	\N	f	f	t	f	f	\N
767	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
767	g	Informação de relação	\N	t	f	t	f	f	\N
767	i	Exibir texto	\N	f	f	t	f	f	\N
767	h	Descrição física	\N	f	f	t	f	f	\N
767	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
767	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
767	n	Nota	\N	t	f	t	f	f	\N
767	o	Outro identificador de item	\N	t	f	t	f	f	\N
767	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
767	r	Número de relatório	\N	t	f	t	f	f	\N
767	s	Título uniforme	\N	f	f	t	f	f	\N
767	t	Título	\N	f	f	t	f	f	\N
767	u	Standard technical report number	\N	f	f	t	f	f	\N
767	w	Número de controle do registro	\N	t	f	t	f	f	\N
767	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
767	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
767	y	Designação CODEN	\N	f	f	t	f	f	\N
767	6	Ligação	\N	f	f	t	f	f	\N
767	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
770	#	Entrada de suplemento / edição especial	\N	t	t	t	f	f	\N
770	a	Título da entrada principal	\N	f	f	t	f	f	\N
770	b	Edição	\N	f	f	t	f	f	\N
770	c	Informação qualificadora	\N	f	f	t	f	f	\N
770	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
770	g	Informação de relação	\N	t	f	t	f	f	\N
770	i	Exibir texto	\N	f	f	t	f	f	\N
770	h	Descrição física	\N	f	f	t	f	f	\N
770	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
770	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
770	n	Nota	\N	t	f	t	f	f	\N
770	o	Outro identificador de item	\N	t	f	t	f	f	\N
770	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
770	r	Número de relatório	\N	t	f	t	f	f	\N
770	s	Título uniforme	\N	f	f	t	f	f	\N
770	t	Título	\N	f	f	t	f	f	\N
770	u	Standard technical report number	\N	f	f	t	f	f	\N
770	w	Número de controle do registo	\N	t	f	t	f	f	\N
770	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
770	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
770	y	Designação CODEN	\N	f	f	t	f	f	\N
770	6	Ligação	\N	f	f	t	f	f	\N
770	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
772	#	Entrada de registro fonte	\N	t	t	t	f	f	\N
772	a	Título da entrada principal	\N	f	f	t	f	f	\N
772	b	Edição	\N	f	f	t	f	f	\N
772	c	Informação qualificadora	\N	f	f	t	f	f	\N
772	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
772	g	Informação de relação	\N	t	f	t	f	f	\N
772	i	Exibir texto	\N	f	f	t	f	f	\N
772	h	Descrição física da fonte	\N	f	f	t	f	f	\N
772	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
772	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
772	n	Nota	\N	t	f	t	f	f	\N
772	o	Outro identificador de item	\N	t	f	t	f	f	\N
772	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
772	r	Número de relatório	\N	t	f	t	f	f	\N
772	s	Título uniforme	\N	f	f	t	f	f	\N
772	t	Título	\N	f	f	t	f	f	\N
772	u	Standard technical report number	\N	f	f	t	f	f	\N
772	w	Número de controle do registro	\N	t	f	t	f	f	\N
772	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
772	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
772	y	Designação CODEN	\N	f	f	t	f	f	\N
772	6	Ligação	\N	f	f	t	f	f	\N
772	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
773	#	Entrada analítica	\N	t	t	t	f	f	\N
773	a	Título da entrada principal	\N	f	f	t	f	f	\N
773	b	Edição	\N	f	f	t	f	f	\N
773	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
773	g	Informação de relação	\N	t	f	t	f	f	\N
773	h	Descrição física da fonte	\N	f	f	t	f	f	\N
773	i	Exibir texto	\N	f	f	t	f	f	\N
773	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
773	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
773	n	Nota	\N	t	f	t	f	f	\N
773	o	Outro identificador de item	\N	t	f	t	f	f	\N
773	r	Número de relatório	\N	t	f	t	f	f	\N
773	p	Título Abreviado	\N	f	f	t	f	f	\N
773	s	Título uniforme	\N	f	f	t	f	f	\N
773	t	Título	\N	f	f	t	f	f	\N
773	u	Standard Technical Report Number	\N	f	f	t	f	f	\N
773	w	Número de controle	\N	t	f	t	f	f	\N
773	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
773	y	Designação CODEN	\N	f	f	t	f	f	\N
773	Z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
773	3	Materiais especificados	\N	f	f	t	f	f	\N
773	6	Ligação	\N	f	f	t	f	f	\N
773	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
774	#	Entrada de unidade constituinte	\N	t	t	t	f	f	\N
774	a	Título da entrada principal	\N	f	f	t	f	f	\N
774	b	Edição	\N	f	f	t	f	f	\N
774	c	Informação qualificadora	\N	f	f	t	f	f	\N
774	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
774	g	Informação de relação	\N	t	f	t	f	f	\N
774	i	Exibir texto	\N	f	f	t	f	f	\N
774	h	Descrição física da fonte	\N	f	f	t	f	f	\N
774	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
774	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
774	n	Nota	\N	t	f	t	f	f	\N
774	o	Outro identificador de item	\N	t	f	t	f	f	\N
774	r	Número de relatório	\N	t	f	t	f	f	\N
774	s	Título uniforme	\N	f	f	t	f	f	\N
774	t	Título	\N	f	f	t	f	f	\N
774	u	Standard technical report number	\N	f	f	t	f	f	\N
774	w	Número de controle do registro	\N	t	f	t	f	f	\N
774	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
774	y	Designação CODEN	\N	f	f	t	f	f	\N
774	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
774	6	Ligação	\N	f	f	t	f	f	\N
774	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
775	#	Entrada de outra edição	\N	t	t	t	f	f	\N
775	a	Título da entrada principal	\N	f	f	t	f	f	\N
775	b	Edição	\N	f	f	t	f	f	\N
775	c	Informação qualificadora	\N	f	f	t	f	f	\N
775	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
775	e	Código de idioma	\N	f	f	t	f	f	\N
775	f	Código de país	\N	f	f	t	f	f	\N
775	g	Informação de relação	\N	t	f	t	f	f	\N
775	i	Exibir texto	\N	f	f	t	f	f	\N
775	h	Descrição física	\N	f	f	t	f	f	\N
775	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
775	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
775	n	Nota	\N	t	f	t	f	f	\N
775	o	Outro identificador de item	\N	t	f	t	f	f	\N
775	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
775	r	Número de relatório	\N	t	f	t	f	f	\N
775	s	Título uniforme	\N	f	f	t	f	f	\N
775	t	Título	\N	f	f	t	f	f	\N
775	u	Standard Technical Report Number	\N	f	f	t	f	f	\N
775	w	Número de controle do registro	\N	t	f	t	f	f	\N
775	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
775	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
775	y	Designação CODEN	\N	f	f	t	f	f	\N
775	6	Ligação	\N	f	f	t	f	f	\N
775	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
776	#	Entrada de forma física adicional	\N	t	t	t	f	f	\N
776	a	Título da entrada principal	\N	f	f	t	f	f	\N
776	b	Edição	\N	f	f	t	f	f	\N
776	c	Informação qualificadora	\N	f	f	t	f	f	\N
776	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
776	g	Informação de relação	\N	t	f	t	f	f	\N
776	i	Exibir texto	\N	f	f	t	f	f	\N
776	h	Descrição física	\N	f	f	t	f	f	\N
776	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
776	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
776	n	Nota	\N	t	f	t	f	f	\N
776	o	Outro identificador de item	\N	t	f	t	f	f	\N
776	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
776	r	Número de relatório	\N	t	f	t	f	f	\N
776	s	Título uniforme	\N	f	f	t	f	f	\N
776	t	Título	\N	f	f	t	f	f	\N
776	u	Standard Technical Report Number	\N	f	f	t	f	f	\N
776	w	Número de controle do registro	\N	t	f	t	f	f	\N
776	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
844	#	Nome da unidade	\N	f	t	t	f	f	\N
776	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
776	y	Designação CODEN	\N	f	f	t	f	f	\N
776	6	Ligação	\N	f	f	t	f	f	\N
776	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
777	#	Entrada de "Publicado com"	\N	t	t	t	f	f	\N
777	a	Título da entrada principal	\N	f	f	t	f	f	\N
777	b	Edição	\N	f	f	t	f	f	\N
777	c	Informação qualificadora	\N	f	f	t	f	f	\N
777	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
777	g	Informação de relação	\N	t	f	t	f	f	\N
777	i	Exibir texto	\N	f	f	t	f	f	\N
777	h	Descrição física	\N	f	f	t	f	f	\N
777	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
777	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
777	o	Outro identificador de item	\N	t	f	t	f	f	\N
777	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
777	s	Título uniforme	\N	f	f	t	f	f	\N
777	t	Título	\N	f	f	t	f	f	\N
777	w	Número de controle do registro	\N	t	f	t	f	f	\N
777	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
777	y	Designação CODEN	\N	f	f	t	f	f	\N
777	6	Ligação	\N	f	f	t	f	f	\N
777	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
780	#	Entrada anterior	\N	t	t	t	f	f	\N
780	a	Título da entrada principal	\N	f	f	t	f	f	\N
780	b	Edição	\N	f	f	t	f	f	\N
780	c	Informação qualificadora	\N	f	f	t	f	f	\N
780	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
780	g	Informação de relação	\N	t	f	t	f	f	\N
780	i	Exibir texto	\N	f	f	t	f	f	\N
780	h	Descrição física	\N	f	f	t	f	f	\N
780	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
780	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
780	n	Nota	\N	t	f	t	f	f	\N
780	o	Outro identificador de item	\N	t	f	t	f	f	\N
780	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
780	r	Número de relatório	\N	t	f	t	f	f	\N
780	s	Título uniforme	\N	f	f	t	f	f	\N
780	t	Título	\N	f	f	t	f	f	\N
780	u	Standard Technical Report Number	\N	f	f	t	f	f	\N
780	w	Número de controle do registro	\N	t	f	t	f	f	\N
780	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
780	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
780	y	Designação CODEN	\N	f	f	t	f	f	\N
780	6	Ligação	\N	f	f	t	f	f	\N
780	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
785	#	Entrada posterior	\N	t	t	t	f	f	\N
785	a	Título da entrada principal	\N	f	f	t	f	f	\N
785	b	Edição	\N	f	f	t	f	f	\N
785	c	Informação qualificadora	\N	f	f	t	f	f	\N
785	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
785	g	Informação de relação	\N	t	f	t	f	f	\N
785	i	Exibir texto	\N	f	f	t	f	f	\N
785	h	Descrição física	\N	f	f	t	f	f	\N
785	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
785	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
785	n	Nota	\N	t	f	t	f	f	\N
785	o	Outro identificador de item	\N	t	f	t	f	f	\N
785	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
785	r	Número de relatório	\N	t	f	t	f	f	\N
785	s	Título uniforme	\N	f	f	t	f	f	\N
785	t	Título	\N	f	f	t	f	f	\N
785	u	Standard Technical Report Number	\N	f	f	t	f	f	\N
785	w	Número de controle do registro	\N	t	f	t	f	f	\N
785	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
785	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
785	y	Designação CODEN	\N	f	f	t	f	f	\N
785	6	Ligação	\N	f	f	t	f	f	\N
785	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
786	#	Entrada da fonte dos dados	\N	t	t	t	f	f	\N
786	a	Título da entrada principal	\N	f	f	t	f	f	\N
786	b	Edição	\N	f	f	t	f	f	\N
786	c	Informação qualificadora	\N	f	f	t	f	f	\N
786	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
786	g	Informação de relação	\N	t	f	t	f	f	\N
786	i	Exibir texto	\N	f	f	t	f	f	\N
786	h	Descrição física da fonte	\N	f	f	t	f	f	\N
786	j	Período do conteúdo	\N	f	f	t	f	f	\N
786	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
786	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
786	n	Nota	\N	t	f	t	f	f	\N
786	o	Outro identificador de item	\N	t	f	t	f	f	\N
786	r	Número de relatório	\N	t	f	t	f	f	\N
786	s	Título uniforme	\N	f	f	t	f	f	\N
786	t	Título	\N	f	f	t	f	f	\N
786	u	Standard Technical Report Number	\N	f	f	t	f	f	\N
786	v	Contribuição da fonte	\N	f	f	t	f	f	\N
786	w	Número de controle do registro	\N	t	f	t	f	f	\N
786	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
786	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
786	y	Designação CODEN	\N	f	f	t	f	f	\N
786	6	Ligação	\N	f	f	t	f	f	\N
786	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
765	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
658	c	Código do currículo	\N	f	f	t	f	f	\N
787	#	Entrada de relação não específica	\N	t	t	t	f	f	\N
787	a	Título da entrada principal	\N	f	f	t	f	f	\N
787	b	Edição	\N	f	f	t	f	f	\N
787	c	Informação qualificadora	\N	f	f	t	f	f	\N
787	d	Lugar, editor, e data de publicação	\N	f	f	t	f	f	\N
787	g	Informação de relação	\N	t	f	t	f	f	\N
787	i	Exibir texto	\N	f	f	t	f	f	\N
787	h	Descrição física da fonte	\N	f	f	t	f	f	\N
787	k	Dado de série para item relacionado	\N	t	f	t	f	f	\N
787	m	Detalhes específicos do material	\N	f	f	t	f	f	\N
787	n	Nota	\N	t	f	t	f	f	\N
787	o	Outro identificador de item	\N	t	f	t	f	f	\N
787	q	Título paralelo (BK SE)	\N	f	f	t	f	t	\N
787	r	Número de relatório	\N	t	f	t	f	f	\N
787	s	Título uniforme	\N	f	f	t	f	f	\N
787	t	Título	\N	f	f	t	f	f	\N
787	u	Standard Technical Report Number	\N	f	f	t	f	f	\N
787	w	Número de controle do registro	\N	t	f	t	f	f	\N
787	x	ISSN - International Standard Serial Number	\N	f	f	t	f	f	\N
787	z	ISBN - International Standard Book Number	\N	t	f	t	f	f	\N
787	y	Designação CODEN	\N	f	f	t	f	f	\N
787	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
800	#	Entrada secundária de série - Nome pessoal	\N	t	t	t	f	f	\N
800	a	Nome pessoal	\N	f	f	t	f	f	\N
800	b	Numeração	\N	f	f	t	f	f	\N
800	c	Títulos e outras palavras associadas ao nome	\N	t	f	t	f	f	\N
800	d	Datas associadas ao nome	\N	f	f	t	f	f	\N
800	e	Termo relacionador	\N	t	f	t	f	f	\N
800	f	Data da obra	\N	f	f	t	f	f	\N
800	g	Miscelânea	\N	f	f	t	f	f	\N
800	h	Meio físico	\N	f	f	t	f	f	\N
800	k	Subcabeçalho	\N	t	f	t	f	f	\N
800	l	Idioma da obra	\N	f	f	t	f	f	\N
800	m	Meio de apresentação para música	\N	t	f	t	f	f	\N
800	n	Número de parte / seção da obra	\N	t	f	t	f	f	\N
800	o	Informação de arranjo para música	\N	f	f	t	f	f	\N
800	p	Nome de parte / seção da obra	\N	t	f	t	f	f	\N
800	q	Forma completa do nome	\N	f	f	t	f	f	\N
800	r	Chave para música	\N	f	f	t	f	f	\N
800	s	Versão	\N	f	f	t	f	f	\N
800	t	Título da obra	\N	f	f	t	f	f	\N
800	u	Afiliação	\N	f	f	t	f	f	\N
800	v	Designação de volume / seqüência	\N	f	f	t	f	f	\N
800	4	Código relacionador	\N	t	f	t	f	f	\N
800	6	Ligação	\N	f	f	t	f	f	\N
800	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
810	#	Entrada secundária de série - Nome corporativo	\N	t	t	t	f	f	\N
810	a	Nome corporativo ou jurisdição como entrada	\N	f	f	t	f	f	\N
810	b	Unidade subordinada	\N	t	f	t	f	f	\N
810	c	Local do evento	\N	f	f	t	f	f	\N
810	d	Data do evento ou assinatura do tratado	\N	t	f	t	f	f	\N
810	e	Termo relacionador	\N	t	f	t	f	f	\N
810	f	Data da obra	\N	f	f	t	f	f	\N
810	g	Miscelânea	\N	f	f	t	f	f	\N
810	h	Meio físico	\N	f	f	t	f	f	\N
810	k	Subcabeçalho	\N	t	f	t	f	f	\N
810	l	Idioma da obra	\N	f	f	t	f	f	\N
810	m	Meio de apresentação para música	\N	t	f	t	f	f	\N
810	n	Número de parte / seção / evento	\N	t	f	t	f	f	\N
810	o	Informações de arranjo para música	\N	f	f	t	f	f	\N
810	p	Nome de parte / seção / evento	\N	t	f	t	f	f	\N
810	r	Chave para música	\N	f	f	t	f	f	\N
810	s	Versão	\N	f	f	t	f	f	\N
810	t	Título da obra	\N	f	f	t	f	f	\N
810	u	Afiliação	\N	f	f	t	f	f	\N
810	v	Designação de volume / seqüência	\N	f	f	t	f	f	\N
810	4	Código relacionador	\N	t	f	t	f	f	\N
810	6	Ligação	\N	f	f	t	f	f	\N
810	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
811	#	Entrada secundária de série - Nome do evento	\N	t	t	t	f	f	\N
811	a	Nome do evento ou jurisdição como entrada	\N	f	f	t	f	f	\N
811	b	Número (BK CF MP MU SE VM MX)	\N	f	f	t	f	t	\N
811	c	Local do evento	\N	f	f	t	f	f	\N
811	d	Data do evento	\N	f	f	t	f	f	\N
811	e	Unidade subordinada	\N	t	f	t	f	f	\N
811	f	Data da obra	\N	f	f	t	f	f	\N
811	g	Miscelânea	\N	f	f	t	f	f	\N
811	h	Meio físico	\N	f	f	t	f	f	\N
811	k	Subcabeçalho	\N	t	f	t	f	f	\N
811	l	Idioma da obra	\N	f	f	t	f	f	\N
811	n	Número de parte / seção / evento	\N	t	f	t	f	f	\N
811	p	Nome de parte / seção / evento	\N	t	f	t	f	f	\N
811	q	Nome do evento que segue nome da jurisdição na entrada	\N	f	f	t	f	f	\N
811	s	Versão	\N	f	f	t	f	f	\N
811	t	Título da obra	\N	f	f	t	f	f	\N
811	u	Afiliação	\N	f	f	t	f	f	\N
811	v	Designação de volume / seqüência	\N	f	f	t	f	f	\N
811	4	Código relacionador	\N	t	f	t	f	f	\N
811	6	Ligação	\N	f	f	t	f	f	\N
811	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
830	#	Entrada secundária de série - Título uniforme	\N	t	t	t	f	f	\N
830	a	Título uniforme	\N	f	f	t	f	f	\N
830	d	Data da assinatura do tratado	\N	t	f	t	f	f	\N
830	f	Data da obra	\N	t	f	t	f	f	\N
830	g	Miscelânea	\N	f	f	t	f	f	\N
830	h	Meio físico	\N	f	f	t	f	f	\N
830	k	Subcabeçalho	\N	t	f	t	f	f	\N
830	l	Idioma da obra	\N	f	f	t	f	f	\N
830	m	Meio da apresentação para música	\N	t	f	t	f	f	\N
830	n	Número de parte / seção da obra	\N	t	f	t	f	f	\N
830	o	Informação de arranjo para música	\N	f	f	t	f	f	\N
830	p	Nome de parte / seção da obra	\N	t	f	t	f	f	\N
830	r	Chave para música	\N	f	f	t	f	f	\N
830	s	Versão	\N	f	f	t	f	f	\N
830	t	Título da obra	\N	f	f	t	f	f	\N
830	v	Designação de volume / seqüência	\N	f	f	t	f	f	\N
830	6	Ligação	\N	f	f	t	f	f	\N
830	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
841	#	Valores de dados codificados de holdings	\N	f	t	t	f	f	\N
841	a	Tipo de registro	\N	f	f	t	f	f	\N
841	b	Elementos de dados de tamanho fixo	\N	f	f	t	f	f	\N
841	e	Nível de catalogação	\N	f	f	t	f	f	\N
842	#	Designação textual de forma física	\N	f	t	t	f	f	\N
842	a	Designação textual de forma física	\N	f	f	t	f	f	\N
843	#	Nota de reprodução	\N	t	t	t	f	f	\N
843	a	Tipo de reprodução	\N	f	f	t	f	f	\N
843	b	Lugar de reprodução	\N	t	f	t	f	f	\N
843	c	Instituição responsável pela reprodução	\N	t	f	t	f	f	\N
843	d	Data da reprodução	\N	f	f	t	f	f	\N
843	e	Descrição física da reprodução	\N	f	f	t	f	f	\N
843	f	Informação de séries de reprodução	\N	t	f	t	f	f	\N
856	b	Número de acesso	\N	f	f	t	f	f	\N
843	m	Datas de publicação e  / ou indicação de seqüência de edições reproduzidas	\N	t	f	t	f	f	\N
843	n	Notas sobre reprodução	\N	t	f	t	f	f	\N
843	3	Materiais especificados	\N	f	f	t	f	f	\N
844	a	Nome da unidade	\N	f	f	t	f	f	\N
845	#	Nota termos reguladores de uso e reprodução	\N	t	t	t	f	f	\N
845	a	Termos reguladores de uso e reprodução	\N	f	f	t	f	f	\N
845	b	Jurisdição	\N	f	f	t	f	f	\N
845	c	Autorização	\N	f	f	t	f	f	\N
845	d	Usuários autorizados	\N	f	f	t	f	f	\N
845	3	Materiais especificados	\N	f	f	t	f	f	\N
850	#	Instituição depositária	\N	t	t	t	f	f	\N
850	a	Instituição depositária	\N	t	f	t	f	f	\N
850	b	Holdings (Coleção) (MU VM SE)	\N	f	f	t	f	t	\N
850	d	Datas abrangentes (MU VM SE)	\N	f	f	t	f	t	\N
850	e	Informação de memória (CF MU VM SE)	\N	f	f	t	f	t	\N
850	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
852	#	Localização / Número de chamada	\N	t	t	t	f	f	\N
852	a	Localização	\N	f	f	t	f	f	\N
852	b	sub-localização ou coleção	\N	t	f	t	f	f	\N
852	c	Localização na prateleira	\N	t	f	t	f	f	\N
852	g	Atributo de localização não codificado	\N	t	f	t	f	f	\N
852	h	Parte referente à classificação	\N	f	f	t	f	f	\N
852	i	Parte referente ao item	\N	t	f	t	f	f	\N
852	j	Número de controle na estante	\N	f	f	t	f	f	\N
852	k	Prefixo do número de chamada	\N	f	f	t	f	f	\N
852	l	Forma do título na estante	\N	f	f	t	f	f	\N
852	m	Sufixo do número de chamada	\N	f	f	t	f	f	\N
852	n	Código de país	\N	f	f	t	f	f	\N
852	p	Designação do item	\N	f	f	t	f	f	\N
852	q	Condição física do item	\N	f	f	t	f	f	\N
852	s	Código de taxa de copyright	\N	t	f	t	f	f	\N
852	t	Número de cópia	\N	f	f	t	f	f	\N
852	x	Nota interna	\N	t	f	t	f	f	\N
852	z	Nota pública	\N	t	f	t	f	f	\N
852	2	Fonte da classificação ou esquema na prateleira	\N	f	f	t	f	f	\N
852	3	Materiais especificados	\N	f	f	t	f	f	\N
852	6	Ligação	\N	f	f	t	f	f	\N
852	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
853	#	Legenda e padrão - Unidade bibliográfica básica	\N	t	t	t	f	f	\N
853	a	Primeiro nível de enumeração	\N	f	f	t	f	f	\N
853	b	Segundo nível de enumeração	\N	f	f	t	f	f	\N
853	c	Terceiro nível de enumeração	\N	f	f	t	f	f	\N
853	d	Quarto nível de enumeração	\N	f	f	t	f	f	\N
853	e	Quinto nível de enumeração	\N	f	f	t	f	f	\N
853	f	Sexto nível de enumeração	\N	f	f	t	f	f	\N
853	g	Esquema de numeração altenativo, Primeiro nível de enumeração	\N	f	f	t	f	f	\N
853	h	Esquema de numeração altenativo, Segundo nível de enumeração	\N	f	f	t	f	f	\N
853	i	Primeiro nível de cronologia	\N	f	f	t	f	f	\N
853	j	Segundo nível de cronologia	\N	f	f	t	f	f	\N
853	k	Terceiro nível de cronologia	\N	f	f	t	f	f	\N
853	l	Quarto nível de cronologia	\N	f	f	t	f	f	\N
853	m	Esquema de numeração alternativo, cronologia	\N	f	f	t	f	f	\N
853	t	Cópia	\N	f	f	t	f	f	\N
853	3	Materiais especificados	\N	f	f	t	f	f	\N
853	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
854	#	Legenda e padrão - Material suplementar	\N	t	t	t	f	f	\N
854	a	Primeiro nível de enumeração	\N	f	f	t	f	f	\N
854	b	Segundo nível de enumeração	\N	f	f	t	f	f	\N
854	c	Terceiro nível de enumeração	\N	f	f	t	f	f	\N
854	d	Quarto nível de enumeração	\N	f	f	t	f	f	\N
854	e	Quinto nível de enumeração	\N	f	f	t	f	f	\N
854	f	Sexto nível de enumeração	\N	f	f	t	f	f	\N
854	g	Esquema de numeração alternativa, Primeiro nível de enumeração	\N	f	f	t	f	f	\N
854	h	Esquema de numeração alternativa, Segundo nível de enumeração	\N	f	f	t	f	f	\N
854	i	Primeiro nível de cronologia	\N	f	f	t	f	f	\N
854	j	Sgundo nível de cronologia	\N	f	f	t	f	f	\N
854	k	Terceiro nível de cronologia	\N	f	f	t	f	f	\N
854	l	Quarto nível de cronologia	\N	f	f	t	f	f	\N
854	m	Esquema de numeração alternativa, cronologia	\N	f	f	t	f	f	\N
854	o	Tipo de material suplementar	\N	f	f	t	f	f	\N
854	t	Reprodução	\N	f	f	t	f	f	\N
854	u	Unidade bibliográfica para o próximo nível	\N	t	f	t	f	f	\N
854	v	Continuidade da numeração	\N	t	f	t	f	f	\N
854	w	Freqüência	\N	f	f	t	f	f	\N
854	x	Mudança no calendário	\N	f	f	t	f	f	\N
854	y	Padrão de regularidade	\N	f	f	t	f	f	\N
854	3	Materiais especificados	\N	f	f	t	f	f	\N
854	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
855	#	Legenda e padrão - Índices	\N	t	t	t	f	f	\N
855	a	Primeiro nível de enumeração	\N	f	f	t	f	f	\N
855	b	Segundo nível de enumeração	\N	f	f	t	f	f	\N
855	c	Terceiro nível de enumeração	\N	f	f	t	f	f	\N
855	d	Quarto nível de enumeração	\N	f	f	t	f	f	\N
855	e	Quinto nível de enumeração	\N	f	f	t	f	f	\N
855	f	Sexto nível de enumeração	\N	f	f	t	f	f	\N
855	g	Esquema de numeração alternativa, Primeiro nível de enumeração	\N	f	f	t	f	f	\N
855	h	Esquema de numeração alternativa, Segundo nível de enumeração	\N	f	f	t	f	f	\N
855	i	Primeiro nível de cronologia	\N	f	f	t	f	f	\N
855	j	Segundo nível de cronologia	\N	f	f	t	f	f	\N
855	k	Terceiro nível de cronologia	\N	f	f	t	f	f	\N
855	l	Quarto nível de cronologia	\N	f	f	t	f	f	\N
855	m	Esquema de numeração alternativa, cronologia	\N	f	f	t	f	f	\N
855	o	Tipo de índice	\N	f	f	t	f	f	\N
855	t	Reprodução	\N	f	f	t	f	f	\N
855	u	Unidade bibliográfica para o próximo nível	\N	t	f	t	f	f	\N
855	v	Continuidade da numeração	\N	t	f	t	f	f	\N
855	w	Freqüência	\N	f	f	t	f	f	\N
855	x	Mudança no calendário	\N	f	f	t	f	f	\N
855	y	Padrão de regularidade	\N	f	f	t	f	f	\N
855	3	Materiais especificados	\N	f	f	t	f	f	\N
855	6	Ligação	\N	f	f	t	f	f	\N
855	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
856	#	Localização e acesso eletrônico	\N	t	t	t	f	f	\N
856	a	Nome do servidor	\N	t	f	t	f	f	\N
856	c	Informação de compressão	\N	t	f	t	f	f	\N
856	d	Caminho	\N	t	f	t	f	f	\N
856	f	Nome eletrônico	\N	t	f	t	f	f	\N
868	a	Holdings textual	\N	f	f	t	f	f	\N
856	g	Nome uniforme da fonte	\N	t	f	t	f	f	\N
856	h	Processador de pesquisa	\N	f	f	t	f	f	\N
856	j	Bits por segundo	\N	f	f	t	f	f	\N
856	k	Password (Senha)	\N	f	f	t	f	f	\N
856	L	Logon / login	\N	f	f	t	f	f	\N
856	m	Contato para acessar a ajuda	\N	t	f	t	f	f	\N
856	n	Nome do local do servidor no subcampo $a	\N	f	f	t	f	f	\N
856	p	Porta	\N	f	f	t	f	f	\N
856	q	Tipo de formato eletrônico	\N	f	f	t	f	f	\N
856	r	Ambiente	\N	f	f	t	f	f	\N
856	s	Tamanho do arquivo	\N	t	f	t	f	f	\N
856	t	Simulação de terminal	\N	t	f	t	f	f	\N
856	u	Localizador da fonte (endereço eletrônico)	\N	t	f	t	f	f	\N
856	v	Método de avaliação das horas de acesso	\N	t	f	t	f	f	\N
856	w	Número de controle do registro	\N	t	f	t	f	f	\N
856	x	Nota interna	\N	t	f	t	f	f	\N
856	z	Nota pública	\N	t	f	t	f	f	\N
856	2	Método de acesso	\N	f	f	t	f	f	\N
856	3	Materiais especificados	\N	f	f	t	f	f	\N
856	6	Ligação	\N	f	f	t	f	f	\N
856	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
863	#	Enumeração e cronologia - Unidade bibliográfica básica	\N	t	t	t	f	f	\N
863	a	Primeiro nível de enumeração	\N	f	f	t	f	f	\N
863	b	Segundo nível de enumeração	\N	f	f	t	f	f	\N
863	c	Terceiro nível de enumeração	\N	f	f	t	f	f	\N
863	d	Quarto nível de enumeração	\N	f	f	t	f	f	\N
863	e	Quinto nível de enumeração	\N	f	f	t	f	f	\N
863	f	Sexto nível de enumeração	\N	f	f	t	f	f	\N
863	g	Esquema alternativo de numeração, primeiro nível de enumeração	\N	f	f	t	f	f	\N
863	h	Esquema alternativo de numeração, segundo nível de enumeração	\N	f	f	t	f	f	\N
863	i	Primeiro nível de cronologia	\N	f	f	t	f	f	\N
863	j	Segundo nível de cronologia	\N	f	f	t	f	f	\N
863	k	Terceiro nível de cronologia	\N	f	f	t	f	f	\N
863	l	Quarto nível de cronologia	\N	f	f	t	f	f	\N
863	m	Esquema de numeração alternativa, cronologia	\N	f	f	t	f	f	\N
856	o	Sistema operacional	\N	f	f	t	f	f	\N
863	n	Ano Gregoriano convertido	\N	f	f	t	f	f	\N
863	p	Designação da parte	\N	f	f	t	f	f	\N
863	q	Condição física da parte	\N	f	f	t	f	f	\N
863	s	Código de taxa de copyright	\N	t	f	t	f	f	\N
863	t	Número do exemplar	\N	f	f	t	f	f	\N
863	w	Indicador de interrupção	\N	f	f	t	f	f	\N
863	x	Nota interna	\N	t	f	t	f	f	\N
863	z	Nota pública	\N	t	f	t	f	f	\N
863	3	Data do primeiro fascículo em seqüência	\N	t	f	t	f	f	\N
863	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
864	#	Enumeração e cronologia - Material suplementar	\N	t	t	t	f	f	\N
864	a	Primeiro nível de enumeração	\N	f	f	t	f	f	\N
864	b	Segundo nível de enumeração	\N	f	f	t	f	f	\N
864	c	Terceiro nível de enumeração	\N	f	f	t	f	f	\N
864	d	Quarto nível de enumeração	\N	f	f	t	f	f	\N
864	e	Quinto nível de enumeração	\N	f	f	t	f	f	\N
864	f	Sexto nível de enumeração	\N	f	f	t	f	f	\N
864	g	Esquema de numeração alternativa, primeiro nível de enumeração	\N	f	f	t	f	f	\N
864	h	Esquema de numeração alternativa, segundo nível de enumeração	\N	f	f	t	f	f	\N
864	i	Primeiro nível de cronologia	\N	f	f	t	f	f	\N
864	j	Segundo nível de cronologia	\N	f	f	t	f	f	\N
864	k	Terceiro nível de cronologia	\N	f	f	t	f	f	\N
864	l	Quarto nível de cronologia	\N	f	f	t	f	f	\N
864	m	Esquema de numeração alternativa, cronologia	\N	f	f	t	f	f	\N
864	n	Ano Gregoriano convertido	\N	f	f	t	f	f	\N
864	o	Título do material suplementar	\N	f	f	t	f	f	\N
864	p	Designação da parte	\N	f	f	t	f	f	\N
864	q	Condição física da parte	\N	f	f	t	f	f	\N
864	s	Código de taxa de copyright	\N	t	f	t	f	f	\N
864	t	Número de exemplar	\N	f	f	t	f	f	\N
864	w	Indicador de interrupção	\N	f	f	t	f	f	\N
864	x	Nota interna	\N	t	f	t	f	f	\N
864	z	Nota pública	\N	t	f	t	f	f	\N
864	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
865	#	Enumeração e cronologia - Índices	\N	t	t	t	f	f	\N
865	a	Primeiro nível de enumeração	\N	f	f	t	f	f	\N
865	b	Segundo nível de enumeração	\N	f	f	t	f	f	\N
865	c	Terceiro nível de enumeração	\N	f	f	t	f	f	\N
865	d	Quarto nível de enumeração	\N	f	f	t	f	f	\N
865	e	Quinto nível de enumeração	\N	f	f	t	f	f	\N
865	f	Sexto nível de enumeração	\N	f	f	t	f	f	\N
865	g	Esquema de numeração alternativa, primeiro nível de enumeração	\N	f	f	t	f	f	\N
865	h	Esquema de numeração alternativa, segundo nível de enumeração	\N	f	f	t	f	f	\N
865	i	Primeiro nível de cronologia	\N	f	f	t	f	f	\N
865	j	Segundo nível de cronologia	\N	f	f	t	f	f	\N
865	k	Terceiro nível de cronologia	\N	f	f	t	f	f	\N
865	l	Quarto nível de cronologia	\N	f	f	t	f	f	\N
865	m	Esquema de numeração alternativa, cronologia	\N	f	f	t	f	f	\N
865	n	Ano gregoriano convertido	\N	f	f	t	f	f	\N
865	o	Título do índice	\N	f	f	t	f	f	\N
865	p	Designação da parte	\N	f	f	t	f	f	\N
865	q	Condição física da parte	\N	f	f	t	f	f	\N
865	s	Código de taxa de copyright	\N	t	f	t	f	f	\N
865	t	Número do exemplar	\N	f	f	t	f	f	\N
865	w	indicador de interrupção	\N	f	f	t	f	f	\N
865	x	Nota interna	\N	t	f	t	f	f	\N
865	z	Nota pública	\N	t	f	t	f	f	\N
865	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
866	#	Holdings textual - Unidade bibliográfica básica	\N	t	t	t	f	f	\N
866	a	Seqüência textual	\N	f	f	t	f	f	\N
866	x	Nota interna	\N	t	f	t	f	f	\N
866	z	Nota pública	\N	t	f	t	f	f	\N
866	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
867	#	Holdings textual - Material suplementar	\N	t	t	t	f	f	\N
867	a	Holdings textual	\N	f	f	t	f	f	\N
867	x	Nota interna	\N	t	f	t	f	f	\N
867	z	Nota pública	\N	t	f	t	f	f	\N
867	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
868	#	Holdings textual - Índices	\N	t	t	t	f	f	\N
868	x	Nota interna	\N	t	f	t	f	f	\N
868	z	Nota pública	\N	t	f	t	f	f	\N
868	8	Ligação de campo e seqüência	\N	t	f	t	f	f	\N
876	#	Informação de item - Unidade bibliográfica básica	\N	f	t	t	f	f	\N
876	a	Número do item interno	\N	f	f	t	f	f	\N
876	b	Número inválido ou cancelado do item interno	\N	t	f	t	f	f	\N
876	c	Preço	\N	t	f	t	f	f	\N
876	d	Data de aquisição	\N	t	f	t	f	f	\N
876	e	Fonte de aquisição	\N	t	f	t	f	f	\N
876	h	Restrição de uso	\N	t	f	t	f	f	\N
876	j	Status do item	\N	t	f	t	f	f	\N
876	l	Localização temporária	\N	t	f	t	f	f	\N
876	p	Designação da parte	\N	t	f	t	f	f	\N
876	r	Designação da parte inválida ou cancelada	\N	t	f	t	f	f	\N
876	t	Número do exemplar	\N	t	f	t	f	f	\N
876	x	Nota interna	\N	t	f	t	f	f	\N
876	z	Nota pública	\N	t	f	t	f	f	\N
876	3	Especificação dos materiais	\N	f	f	t	f	f	\N
100	a	Autor	\N	f	f	t	f	f	\N
245	a	Título	\N	f	f	t	f	f	\N
440	a	Título	\N	f	f	t	f	f	\N
650	a	Assunto	\N	t	f	t	f	f	\N
700	a	Nome pessoal	\N	t	f	t	f	f	\N
001	a	Número de Controle	\N	f	f	t	f	f	\N
886	#	Campo de informação para MARC estrangeiro	\N	t	t	t	f	f	\N
886	a	Etiqueta do campo MARC estrangeiro	\N	f	f	t	f	f	\N
886	b	Conteúdo do campo MARC estrangeiro	\N	f	f	t	f	f	\N
886	2	Fonte do dado	\N	f	f	t	f	f	\N
090	a	Numero de Classificacao	\N	f	f	t	f	f	\N
001	#	Número de Controle	\N	f	t	t	f	f	\N
901	#	Tipo de Material	\N	f	t	t	f	f	\N
902	#	Gênero do Material	\N	f	t	t	f	f	\N
902	a	Gênero	\N	f	f	t	f	f	\N
653	a	Termo livre	\N	t	f	t	f	f	\N
901	a	Tipo de Material	\N	f	f	t	f	f	\N
901	b	Áreas do conhecimento	\N	f	\N	t	f	f	\N
901	c	Tipo Físico do Material	\N	f	f	t	f	f	\N
080	b	Número do item	\N	f	f	t	f	f	\N
260	c	Data de Publicação, Distribuição, etc.	\N	t	f	t	f	f	\N
903	#	Base de Dados	\N	f	t	t	f	\N	\N
903	a	Base de Dados	\N	f	f	t	f	\N	\N
904	#	Local	\N	f	t	t	f	\N	\N
904	a	Local	\N	f	f	t	f	\N	\N
505	a	Nota de conteúdo	\N	t	f	t	f	f	\N
008	a	Campo Fixo de Dados	\N	f	t	t	f	f	\N
080	a	Número de Classificação Decimal Universal	\N	t	f	t	f	f	\N
090	b	Cutter	\N	f	f	t	f	f	\N
090	#	Números de Chamada Local	\N	f	f	t	f	f	\N
260	b	Nome do Editor, Distribuidor, etc.	\N	t	f	t	f	f	\N
950	#	Número da Obra	\N	f	t	t	f	\N	\N
950	a	Número da Obra	\N	f	f	t	f	\N	\N
949	#	Dados do Exemplar	\N	t	t	t	f	f	\N
949	1	Tipo do Material	\N	t	\N	t	f	\N	\N
949	3	Tipo Físico do Material	\N	t	\N	t	f	\N	\N
949	9	Unidade Original	\N	t	\N	t	f	f	\N
949	a	Numero do tombo	\N	t	\N	t	f	f	\N
949	b	Código da Unidade	\N	t	\N	t	f	f	\N
949	c	Tipo de Aquisição	\N	t	\N	t	f	\N	\N
949	d	Gênero do Material	\N	t	\N	t	f	\N	\N
949	e	Exemplar	\N	t	\N	t	f	\N	\N
949	g	Código Do Estado	\N	t	\N	t	f	f	\N
949	h	Data da nota fiscal	\N	t	\N	t	f	f	\N
949	i	Código Do Estado Futuro	\N	t	\N	t	f	f	\N
949	f	Nota fiscal	\N	t	\N	t	f	f	\N
949	n	Patrimônio	\N	t	\N	t	f	f	\N
949	q	Centro de custo	\N	t	\N	t	f	f	\N
949	t	Tomo	\N	t	\N	t	f	\N	\N
949	v	Volume	\N	t	\N	t	f	f	\N
949	w	Observação	\N	t	\N	t	f	f	\N
949	y	Data de Entrada	\N	t	\N	t	f	\N	\N
949	z	Data da Baixa	\N	t	\N	t	f	\N	\N
948	#	Coleção	\N	f	t	t	f	f	\N
948	a	Código da Unidade	\N	f	\N	t	f	f	\N
960	#	Dados da assinatura	\N	t	t	t	f	f	\N
960	a	Código de assinante	\N	t	\N	t	f	f	\N
960	b	Código da Unidade	\N	t	\N	t	f	f	\N
960	c	Tipo de Aquisição	\N	t	\N	t	f	f	\N
960	d	Vencimento da assinatura	\N	t	\N	t	f	f	\N
960	e	Preço da assinatura	\N	t	\N	t	f	f	\N
960	f	Nota fiscal	\N	t	\N	t	f	f	\N
960	g	Informações	\N	t	\N	t	f	f	\N
960	h	Data da assinatura	\N	t	\N	t	f	f	\N
960	i	Data de renovação	\N	t	\N	t	f	f	\N
960	j	Publicação	\N	t	\N	t	f	f	\N
960	q	Centro de custo	\N	t	\N	t	f	f	\N
960	w	Observações	\N	t	\N	t	f	f	\N
947	#	Editor/Fornecedor	\N	f	t	t	f	f	\N
947	a	Código do editor/fornecedor	\N	f	\N	t	f	f	\N
260	#	Imprenta	\N	t	t	t	f	f	\N
005	a	Inseriu para manter a consistência da base		f	f	f	f	f	
260	p	Inseriu para manter a consistência da base		f	f	f	f	f	
260	r	Inseriu para manter a consistência da base		f	f	f	f	f	
505	b	Inseriu para manter a consistência da base		f	f	f	f	f	
505	c	Inseriu para manter a consistência da base		f	f	f	f	f	
260	s	Inseriu para manter a consistência da base		f	f	f	f	f	
260	l	Inseriu para manter a consistência da base		f	f	f	f	f	
999	#	999,#	999,#	f	f	f	f	f	<p></br>\t999,#</p></br>
600	d	Datas associadas ao nome		f	f	t	f	f	
600	e	Termo relacionador		t	f	t	f	f	
600	f	Data da obra		f	f	t	f	f	
600	g	Miscelânea		f	f	t	f	f	
600	h	Meio físico		f	f	t	f	f	
600	k	Subcabeçalhos		t	f	t	f	f	
600	l	Idioma da obra		f	f	t	f	f	
600	m	Forma de execução para música		t	f	t	f	f	
600	n	Número da parte / seção de uma obra		t	f	t	f	f	
600	o	Informação de arranjo para música		f	f	t	f	f	
600	p	Nome da parte / seção da obra		t	f	t	f	f	
600	q	Acréscimo a nomes que contêm iniciais		f	f	t	f	f	
600	r	Chave para música		f	f	t	f	f	
600	s	Versão		f	f	t	f	f	
600	t	Título da obra		f	f	t	f	f	
600	u	Afiliação		f	f	t	f	f	
949	j	preço	Campo preço conforme cliente Itaipu	t	t	t	f	f	
901	d	Nacionalidade		f	f	t	f	f	
600	6	Ligação		f	f	t	f	f	
600	4	Código relacionador		t	f	t	f	f	
905	a	Antigo tipo de material	Antigo tipo de material	f	f	f	f	f	
600	#	Assunto - Nome Pessoal		t	t	t	f	f	
600	a	Nome Pessoal		f	f	t	f	f	
600	b	Numeração (seguida ao nome)		f	f	t	f	f	
600	c	Títulos e outras palavras associadas ao nome		t	f	t	f	f	
600	v	Subdivisão de forma		t	f	t	f	f	
600	x	Subdivisão geral		t	f	t	f	f	
600	y	Subdivisão cronológica		t	f	t	f	f	
600	z	Subdivisão geográfica		t	f	t	f	f	
600	2	Fonte do cabeçalho ou termo		f	f	t	f	f	
600	3	Materiais especificados		f	f	t	f	f	
600	8	Ligação de campo e seqüência		t	f	t	f	f	
949	x	Codigo do Exemplar		t	f	t	f	f	
901	e	Curso		f	f	t	f	f	
kar	a	Número do kardex		\N	\N	\N	\N	\N	
980	a	Número de controle da obra.		\N	\N	\N	\N	\N	
000	6	Nível Bibliográfico		\N	\N	\N	\N	\N	
\.


--
-- Data for Name: gtctask; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtctask (taskid, description, parameters, enable, scriptname) FROM stdin;
31	Importar capas do google	$base	t	default/importCoverFromGoogle.task.php
32	Sincronizar servidor Z3950		t	default/sincronyzeZ3950.task.php
33	Gerar sitemap.xml		t	default/generateSiteMapXml.task.php
34	Sugerir material	\N	t	default/suggestMaterial.task.php
35	Atualizar tabela de pesquisa	\N	t	default/updateSearchTable.task.php
21	Comunica aquisições de materiais	$date|$librariUnits	t	default/comunicarAquisicoes.task.php
28	Remover arquivos temporarios do gnuteca		t	default/removeTempFiles.task.php
22	Comunica materiais em atrazo	$libraries	t	default/comunicarAtrazados.task.php
23	Informar solicitante sobre termino requisição	$diasAntecedencia|$libraries	t	default/informarSolicitanteSobreTerminoRequisicao.task.php
24	Informar usuários sobre renovação de material	$libraries	t	default/informaUsuariosRenovarEmprestimo.task.php
29	Finalização de solicitação de compras		t	default/finalizePurchaseRequest.task.php
30	Relatório	$idrelatorio|$email|$tipo(pdf, csv,odt)	t	default/sendReport.task.php
\.


--
-- Data for Name: gtcwebservice; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcwebservice (webserviceid, servicedescription, class, method, enable, needauthentication, checkclientip) FROM stdin;
1	Basic Test	gnuteca3WebServicesTesting	basicTest	t	f	f
2	Basic Test	gnuteca3WebServicesTesting	getSimpleArray	t	f	f
3	Basic Test	gnuteca3WebServicesTesting	testAutenticate	t	t	f
4	Basic Test	gnuteca3WebServicesTesting	testdIP	t	f	t
5	Basic Test	gnuteca3WebServicesTesting	getWebServiceObject	t	t	t
21	Multas - Retorna as multas em aberto	gnuteca3WebServicesFines	getFinesOpen	t	t	t
22	Multas - Seta as Multas como pagas	gnuteca3WebServicesFines	setFinePay	t	t	t
23	Multas - Seta todas multas como pagas e retorna um relatório	gnuteca3WebServicesFines	payAllFinesOpen	t	t	t
24	Multas - Retorna multas com pagamento via boleto.	gnuteca3WebServicesFines	getFinePayRoll	t	t	t
41	Vínculos - Retorna os vínculos de determinados usuários	gnuteca3WebServicesLink	getPersonLink	t	t	t
42	Vínculos - Deleta todos os vínculos de uma ou mais pessoas.	gnuteca3WebServicesLink	deletePersonLink	t	t	t
43	Vínculos - Insere um novo vínculo.	gnuteca3WebServicesLink	insertPersonLink	t	t	t
44	Vínculos - Deleta vínculos.	gnuteca3WebServicesLink	deleteLink	t	t	t
61	Empréstimos - Retorna todos os empréstimos em aberto de uma ou mais pessoas.	gnuteca3WebServicesLoans	getLoanOpen	t	t	t
80	.	gnuteca3WebServicesMaterial	getMaterialInformation	t	t	t
99	Unificar registros - Unifica registros de um usuário.	gnuteca3WebServicesUnifyRegister	unifyPerson	t	t	t
\.


--
-- Data for Name: gtcweekday; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcweekday (weekdayid, description) FROM stdin;
1	Segunda-feira
2	Terça-feira
3	Quarta-feira
4	Quinta-feira
5	Sexta-feira
6	Sábado
7	Domingo
\.


--
-- Data for Name: gtcworkflowhistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcworkflowhistory (workflowhistoryid, workflowinstanceid, workflowstatusid, date, operator, comment) FROM stdin;
\.


--
-- Data for Name: gtcworkflowinstance; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcworkflowinstance (workflowinstanceid, workflowstatusid, date, tablename, tableid) FROM stdin;
\.


--
-- Data for Name: gtcworkflowstatus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcworkflowstatus (workflowstatusid, workflowid, name, initial, transaction) FROM stdin;
100001	PURCHASE_REQUEST	Solicitada	t	2019
100002	PURCHASE_REQUEST	Cancelada	f	
100003	PURCHASE_REQUEST	Aguardando cotação	f	
100004	PURCHASE_REQUEST	Fora de catálogo	f	
100005	PURCHASE_REQUEST	Esgotado	f	
100006	PURCHASE_REQUEST	Não encontrado	f	
100007	PURCHASE_REQUEST	Aguardando aprovação	f	
100012	PURCHASE_REQUEST	Reprovada	f	
100009	PURCHASE_REQUEST	Aprovada	f	gtcCostCenter
100010	PURCHASE_REQUEST	Aguardando entrega	f	
100011	PURCHASE_REQUEST	Entregue	f	
100008	PURCHASE_REQUEST	Finalizada	f	
\.


--
-- Data for Name: gtcworkflowtransition; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcworkflowtransition (previousworkflowstatusid, nextworkflowstatusid, name, function) FROM stdin;
100001	100001	Solicitar	wfPurchaseRequestDefault::initialize
100001	100003	Cotar	
100001	100002	Cancelar	wfPurchaseRequestDefault::cancel
100003	100004	Fora de catálogo	wfPurchaseRequestDefault::cancel
100003	100005	Esgotado	wfPurchaseRequestDefault::cancel
100003	100006	Não encontrado	wfPurchaseRequestDefault::cancel
100003	100007	Solicitar aprovação	
100007	100012	Reprovar	wfPurchaseRequestDefault::cancel
100007	100009	Aprovar	wfPurchaseRequestDefault::aprove
100009	100002	Cancelar	wfPurchaseRequestDefault::cancel
100009	100010	Comprar	
100010	100002	Cancelar	wfPurchaseRequestDefault::cancel
100010	100011	Entregar	
100011	100002	Cancelar	wfPurchaseRequestDefault::cancel
100011	100008	Finalizar	wfPurchaseRequestDefault::finalize
\.


--
-- Data for Name: gtcz3950servers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY gtcz3950servers (serverid, description, host, recordtype, sintax, username, password, country) FROM stdin;
1	University of California	melvyl.cdlib.org/CDL90	xml				EUA
2	Library of Congress	z3950.loc.gov:7090/voyager	xml				EUA
3	Univ. de las Islas Baleares	130.206.134.239/INNOPAC	xml				ESP
4	University of Arizona	sabio.library.arizona.edu/innopac	xml				EUA
5	SPA-Biblioteca de Castilla y Leon	z3950.bcl.jcyl.es:210/AbsysBCL	xml		\N		
6	USA-Baylor University Libraries	bearcat.baylor.edu:210/INNOPAC	xml		\N		
7	SPA-Biblioteca Pública de Zaragoza	codos.aragob.es:5500/AbsysE	xml		\N		
8	CAN-Bibliothèque nationale du Québec	www.biblinat.gouv.qc.ca:210/IRIS	xml		\N		
9	CAN-Bishop\\'s University	192.197.190.4:210/Advance	xml		\N		
10	USA-California Institute of the Arts	alpha.calarts.edu:210/MARION	xml		\N		
11	USA-Boston University	128.197.130.200:210/INNOPAC	xml		\N		
12	VEN-Ciudad Alejandria-Cat.general	150.185.140.223:9999/bolivar	xml		\N		
13	AUS-Commonwealth Scientific and Industrial Research Organization	voyager.its.csiro.au:7090/VOYAGER	xml		\N		
\.


--
-- Data for Name: miolo_access; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_access (idtransaction, idgroup, rights, validatefunction) FROM stdin;
1	2	1	\N
2	2	1	\N
3	2	1	\N
4	2	1	\N
5	2	1	\N
6	2	1	\N
1	3	15	\N
2	3	15	\N
3	3	15	\N
4	3	15	\N
5	3	15	\N
6	3	15	\N
3513	1000	1	\N
3510	1000	1	\N
1079	1000	1	\N
2070	1000	1	\N
3511	1000	1	\N
1090	1000	1	\N
3512	1000	1	\N
2071	1000	1	\N
1013	1000	1	\N
1050	1000	1	\N
1051	1000	1	\N
1052	1000	1	\N
1053	1000	1	\N
1054	1000	1	\N
1055	1000	1	\N
1056	1000	1	\N
1057	1000	1	\N
1063	1000	1	\N
1058	1000	1	\N
1059	1000	1	\N
1060	1000	1	\N
1061	1000	1	\N
1064	1000	1	\N
1065	1000	1	\N
1066	1000	1	\N
1067	1000	1	\N
1068	1000	1	\N
1069	1000	1	\N
1070	1000	1	\N
1071	1000	1	\N
1072	1000	1	\N
1073	1000	1	\N
1074	1000	1	\N
1075	1000	1	\N
1076	1000	1	\N
2000	1000	1	\N
2001	1000	1	\N
2002	1000	1	\N
2003	1000	1	\N
2004	1000	1	\N
2005	1000	1	\N
2006	1000	1	\N
2007	1000	1	\N
2008	1000	1	\N
2009	1000	1	\N
2010	1000	1	\N
2011	1000	1	\N
2012	1000	1	\N
2013	1000	1	\N
2014	1000	1	\N
2016	1000	1	\N
2017	1000	1	\N
2018	1000	1	\N
2019	1000	1	\N
2020	1000	1	\N
2021	1000	1	\N
2023	1000	1	\N
2024	1000	1	\N
2025	1000	1	\N
2026	1000	1	\N
2050	1000	1	\N
2052	1000	1	\N
2053	1000	1	\N
2054	1000	1	\N
2055	1000	1	\N
2056	1000	1	\N
2057	1000	1	\N
2058	1000	1	\N
2059	1000	1	\N
3000	1000	1	\N
3001	1000	1	\N
3002	1000	1	\N
3003	1000	1	\N
3004	1000	1	\N
3005	1000	1	\N
3006	1000	1	\N
3007	1000	1	\N
3008	1000	1	\N
3009	1000	1	\N
3010	1000	1	\N
3011	1000	1	\N
3012	1000	1	\N
3013	1000	1	\N
3014	1000	1	\N
3505	1000	1	\N
3508	1000	1	\N
3507	1000	1	\N
1062	1000	1	\N
3506	1000	1	\N
1080	1000	1	\N
3509	1000	1	\N
2015	1000	1	\N
3514	1000	1	\N
3015	1000	1	\N
3016	1000	1	\N
3018	1000	1	\N
3019	1000	1	\N
3021	1000	1	\N
3022	1000	1	\N
3023	1000	1	\N
3024	1000	1	\N
3025	1000	1	\N
3026	1000	1	\N
3500	1000	1	\N
3501	1000	1	\N
3502	1000	1	\N
2061	1000	1	\N
2062	1000	1	\N
2064	1000	1	\N
3027	1000	1	\N
2065	1000	1	\N
2066	1000	1	\N
1077	1000	1	\N
1078	1000	1	\N
1081	1000	1	\N
5001	1000	1	\N
5002	1000	1	\N
5003	1000	1	\N
5004	1000	1	\N
5005	1000	1	\N
2063	1000	1	\N
5006	1000	1	\N
5007	1000	1	\N
3513	1000	2	\N
3510	1000	2	\N
1079	1000	2	\N
2070	1000	2	\N
3511	1000	2	\N
1090	1000	2	\N
3512	1000	2	\N
2071	1000	2	\N
1013	1000	2	\N
1050	1000	2	\N
1051	1000	2	\N
1052	1000	2	\N
1053	1000	2	\N
1054	1000	2	\N
1055	1000	2	\N
1056	1000	2	\N
1057	1000	2	\N
1063	1000	2	\N
1058	1000	2	\N
1059	1000	2	\N
1060	1000	2	\N
1061	1000	2	\N
1064	1000	2	\N
1065	1000	2	\N
1066	1000	2	\N
1067	1000	2	\N
1068	1000	2	\N
1069	1000	2	\N
1070	1000	2	\N
1071	1000	2	\N
1072	1000	2	\N
1073	1000	2	\N
1074	1000	2	\N
1075	1000	2	\N
1076	1000	2	\N
2000	1000	2	\N
2001	1000	2	\N
2002	1000	2	\N
2003	1000	2	\N
2004	1000	2	\N
2005	1000	2	\N
2006	1000	2	\N
2007	1000	2	\N
2008	1000	2	\N
2009	1000	2	\N
2010	1000	2	\N
2011	1000	2	\N
2012	1000	2	\N
2013	1000	2	\N
2014	1000	2	\N
2016	1000	2	\N
2017	1000	2	\N
2018	1000	2	\N
2019	1000	2	\N
2020	1000	2	\N
2021	1000	2	\N
2023	1000	2	\N
2024	1000	2	\N
2025	1000	2	\N
2026	1000	2	\N
2050	1000	2	\N
2052	1000	2	\N
2053	1000	2	\N
2054	1000	2	\N
2055	1000	2	\N
2056	1000	2	\N
2057	1000	2	\N
2058	1000	2	\N
2059	1000	2	\N
3000	1000	2	\N
3001	1000	2	\N
3002	1000	2	\N
3003	1000	2	\N
3004	1000	2	\N
3005	1000	2	\N
3006	1000	2	\N
3007	1000	2	\N
3008	1000	2	\N
3009	1000	2	\N
3010	1000	2	\N
3011	1000	2	\N
3012	1000	2	\N
3013	1000	2	\N
3014	1000	2	\N
3505	1000	2	\N
3508	1000	2	\N
3507	1000	2	\N
1062	1000	2	\N
3506	1000	2	\N
1080	1000	2	\N
3509	1000	2	\N
2015	1000	2	\N
3514	1000	2	\N
3015	1000	2	\N
3016	1000	2	\N
3018	1000	2	\N
3019	1000	2	\N
3021	1000	2	\N
3022	1000	2	\N
3023	1000	2	\N
3024	1000	2	\N
3025	1000	2	\N
3026	1000	2	\N
3500	1000	2	\N
3501	1000	2	\N
3502	1000	2	\N
2061	1000	2	\N
2062	1000	2	\N
2064	1000	2	\N
3027	1000	2	\N
2065	1000	2	\N
2066	1000	2	\N
1077	1000	2	\N
1078	1000	2	\N
1081	1000	2	\N
5001	1000	2	\N
5002	1000	2	\N
5003	1000	2	\N
5004	1000	2	\N
5005	1000	2	\N
2063	1000	2	\N
5006	1000	2	\N
5007	1000	2	\N
3513	1000	4	\N
3510	1000	4	\N
1079	1000	4	\N
2070	1000	4	\N
3511	1000	4	\N
1090	1000	4	\N
3512	1000	4	\N
2071	1000	4	\N
1013	1000	4	\N
1050	1000	4	\N
1051	1000	4	\N
1052	1000	4	\N
1053	1000	4	\N
1054	1000	4	\N
1055	1000	4	\N
1056	1000	4	\N
1057	1000	4	\N
1063	1000	4	\N
1058	1000	4	\N
1059	1000	4	\N
1060	1000	4	\N
1061	1000	4	\N
1064	1000	4	\N
1065	1000	4	\N
1066	1000	4	\N
1067	1000	4	\N
1068	1000	4	\N
1069	1000	4	\N
1070	1000	4	\N
1071	1000	4	\N
1072	1000	4	\N
1073	1000	4	\N
1074	1000	4	\N
1075	1000	4	\N
1076	1000	4	\N
2000	1000	4	\N
2001	1000	4	\N
2002	1000	4	\N
2003	1000	4	\N
2004	1000	4	\N
2005	1000	4	\N
2006	1000	4	\N
2007	1000	4	\N
2008	1000	4	\N
2009	1000	4	\N
2010	1000	4	\N
2011	1000	4	\N
2012	1000	4	\N
2013	1000	4	\N
2014	1000	4	\N
2016	1000	4	\N
2017	1000	4	\N
2018	1000	4	\N
2019	1000	4	\N
2020	1000	4	\N
2021	1000	4	\N
2023	1000	4	\N
2024	1000	4	\N
2025	1000	4	\N
2026	1000	4	\N
2050	1000	4	\N
2052	1000	4	\N
2053	1000	4	\N
2054	1000	4	\N
2055	1000	4	\N
2056	1000	4	\N
2057	1000	4	\N
2058	1000	4	\N
2059	1000	4	\N
3000	1000	4	\N
3001	1000	4	\N
3002	1000	4	\N
3003	1000	4	\N
3004	1000	4	\N
3005	1000	4	\N
3006	1000	4	\N
3007	1000	4	\N
3008	1000	4	\N
3009	1000	4	\N
3010	1000	4	\N
3011	1000	4	\N
3012	1000	4	\N
3013	1000	4	\N
3014	1000	4	\N
3505	1000	4	\N
3508	1000	4	\N
3507	1000	4	\N
1062	1000	4	\N
3506	1000	4	\N
1080	1000	4	\N
3509	1000	4	\N
2015	1000	4	\N
3514	1000	4	\N
3015	1000	4	\N
3016	1000	4	\N
3018	1000	4	\N
3019	1000	4	\N
3021	1000	4	\N
3022	1000	4	\N
3023	1000	4	\N
3024	1000	4	\N
3025	1000	4	\N
3026	1000	4	\N
3500	1000	4	\N
3501	1000	4	\N
3502	1000	4	\N
2061	1000	4	\N
2062	1000	4	\N
2064	1000	4	\N
3027	1000	4	\N
2065	1000	4	\N
2066	1000	4	\N
1077	1000	4	\N
1078	1000	4	\N
1081	1000	4	\N
5001	1000	4	\N
5002	1000	4	\N
5003	1000	4	\N
5004	1000	4	\N
5005	1000	4	\N
2063	1000	4	\N
5006	1000	4	\N
5007	1000	4	\N
3513	1000	8	\N
3510	1000	8	\N
1079	1000	8	\N
2070	1000	8	\N
3511	1000	8	\N
1090	1000	8	\N
3512	1000	8	\N
2071	1000	8	\N
1013	1000	8	\N
1050	1000	8	\N
1051	1000	8	\N
1052	1000	8	\N
1053	1000	8	\N
1054	1000	8	\N
1055	1000	8	\N
1056	1000	8	\N
1057	1000	8	\N
1063	1000	8	\N
1058	1000	8	\N
1059	1000	8	\N
1060	1000	8	\N
1061	1000	8	\N
1064	1000	8	\N
1065	1000	8	\N
1066	1000	8	\N
1067	1000	8	\N
1068	1000	8	\N
1069	1000	8	\N
1070	1000	8	\N
1071	1000	8	\N
1072	1000	8	\N
1073	1000	8	\N
1074	1000	8	\N
1075	1000	8	\N
1076	1000	8	\N
2000	1000	8	\N
2001	1000	8	\N
2002	1000	8	\N
2003	1000	8	\N
2004	1000	8	\N
2005	1000	8	\N
2006	1000	8	\N
2007	1000	8	\N
2008	1000	8	\N
2009	1000	8	\N
2010	1000	8	\N
2011	1000	8	\N
2012	1000	8	\N
2013	1000	8	\N
2014	1000	8	\N
2016	1000	8	\N
2017	1000	8	\N
2018	1000	8	\N
2019	1000	8	\N
2020	1000	8	\N
2021	1000	8	\N
2023	1000	8	\N
2024	1000	8	\N
2025	1000	8	\N
2026	1000	8	\N
2050	1000	8	\N
2052	1000	8	\N
2053	1000	8	\N
2054	1000	8	\N
2055	1000	8	\N
2056	1000	8	\N
2057	1000	8	\N
2058	1000	8	\N
2059	1000	8	\N
3000	1000	8	\N
3001	1000	8	\N
3002	1000	8	\N
3003	1000	8	\N
3004	1000	8	\N
3005	1000	8	\N
3006	1000	8	\N
3007	1000	8	\N
3008	1000	8	\N
3009	1000	8	\N
3010	1000	8	\N
3011	1000	8	\N
3012	1000	8	\N
3013	1000	8	\N
3014	1000	8	\N
3505	1000	8	\N
3508	1000	8	\N
3507	1000	8	\N
1062	1000	8	\N
3506	1000	8	\N
1080	1000	8	\N
3509	1000	8	\N
2015	1000	8	\N
3514	1000	8	\N
3015	1000	8	\N
3016	1000	8	\N
3018	1000	8	\N
3019	1000	8	\N
3021	1000	8	\N
3022	1000	8	\N
3023	1000	8	\N
3024	1000	8	\N
3025	1000	8	\N
3026	1000	8	\N
3500	1000	8	\N
3501	1000	8	\N
3502	1000	8	\N
2061	1000	8	\N
2062	1000	8	\N
2064	1000	8	\N
3027	1000	8	\N
2065	1000	8	\N
2066	1000	8	\N
1077	1000	8	\N
1078	1000	8	\N
1081	1000	8	\N
5001	1000	8	\N
5002	1000	8	\N
5003	1000	8	\N
5004	1000	8	\N
5005	1000	8	\N
2063	1000	8	\N
5006	1000	8	\N
5007	1000	8	\N
\.


--
-- Data for Name: miolo_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_group (idgroup, m_group, idmodule) FROM stdin;
1	ADMIN	
2	MAIN_RO	
3	MAIN_RW	
1000	GTC_ROOT	gnuteca3
\.


--
-- Data for Name: miolo_groupuser; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_groupuser (iduser, idgroup) FROM stdin;
1	1
1	2
1	3
2	2
1000	1000
1000	1
1000	2
1000	3
\.


--
-- Data for Name: miolo_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_log (idlog, m_timestamp, description, module, class, iduser, idtransaction, remoteaddr) FROM stdin;
\.


--
-- Data for Name: miolo_module; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_module (idmodule, name, description) FROM stdin;
admin	admin	
common	common	
helloworld	helloworld	
hangman	hangman	
tutorial	tutorial	
exemplo	exemplo	
gnuteca3	Gnuteca3	Sistema de gestão de acervo, empréstimo e colaboração para bibliotecas
\.


--
-- Data for Name: miolo_schedule; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_schedule (idschedule, idmodule, action, parameters, begintime, completed, running) FROM stdin;
\.


--
-- Data for Name: miolo_sequence; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_sequence (sequence, value) FROM stdin;
seq_miolo_session	0
seq_miolo_log	0
seq_miolo_user	2
seq_miolo_transaction	5
seq_miolo_group	3
\.


--
-- Data for Name: miolo_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_session (idsession, iduser, tsin, tsout, name, sid, forced, remoteaddr) FROM stdin;
\.


--
-- Data for Name: miolo_transaction; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_transaction (idtransaction, m_transaction, idmodule, nametransaction, idparent, action, parentm_transaction) FROM stdin;
1	ADMIN	\N	ADMIN	\N	\N	\N
2	USER	\N	USER	\N	\N	\N
3	GROUP	\N	GROUP	\N	\N	\N
4	LOG	\N	LOG	\N	\N	\N
5	TRANSACTION	\N	TRANSACTION	\N	\N	\N
6	SESSION	\N	SESSION	\N	\N	\N
3513	gtcHelp	gnuteca3	Ajuda	\N	\N	\N
3510	gtcDependencyCheck	gnuteca3	Conferir dependências	\N	\N	\N
1079	gtcMarc21Import	gnuteca3	Importar Marc 21	\N	\N	\N
2070	gtcMaterialEvaluation	gnuteca3	Avaliação	\N	\N	\N
3511	gtcPersonSendMultipleEmail	gnuteca3	Envio de e-mails em lote para pessoas	\N	\N	\N
1090	gtcBackup	gnuteca3	Cópia de segurança	\N	\N	\N
3512	gtcISO2709Export	gnuteca3	Exportar ISO 2709	\N	\N	\N
2071	gtcInventoryCheck	gnuteca3	Verificação de inventário	\N	\N	\N
1013	gtcMaterialMovement	gnuteca3	Circulação de materiais	\N	\N	\N
1050	gtcLibraryUnit	gnuteca3	Unidade de biblioteca	\N	\N	\N
1051	gtcLibraryGroup	gnuteca3	Grupo de biblioteca	\N	\N	\N
1052	gtcHoliday	gnuteca3	Feriado	\N	\N	\N
1053	gtcPreference	gnuteca3	Preferências	\N	\N	\N
1054	gtcMaterialGender	gnuteca3	Gênero do material	\N	\N	\N
1055	gtcClassificationArea	gnuteca3	Áreas de classificação	\N	\N	\N
1056	gtcUserGroup	gnuteca3	Grupo de usuários	\N	\N	\N
1057	gtcPrivilegeGroup	gnuteca3	Grupo de privilégio	\N	\N	\N
1063	gtcLabelLayout	gnuteca3	Formato de etiqueta	\N	\N	\N
1058	gtcRight	gnuteca3	Direito	\N	\N	\N
1059	gtcPolicy	gnuteca3	Política	\N	\N	\N
1060	gtcGeneralPolicy	gnuteca3	Políticas gerais	\N	\N	\N
1061	gtcAssociation	gnuteca3	Associação entre bibliotecas	\N	\N	\N
1064	gtcFormatBackOfBook	gnuteca3	Formato de lombada	\N	\N	\N
1065	gtcSearchFormat	gnuteca3	Formato da pesquisa	\N	\N	\N
1066	gtcSearchableField	gnuteca3	Campos pesquisáveis	\N	\N	\N
1067	gtcOperatorLibraryUnit	gnuteca3	Operador da unidade da biblioteca	\N	\N	\N
1068	gtcExemplaryStatus	gnuteca3	Estado do exemplar	\N	\N	\N
1069	gtcOperation	gnuteca3	Operação de movimentação	\N	\N	\N
1070	gtcFineStatus	gnuteca3	Estado da multa	\N	\N	\N
1071	gtcLocationForMaterialMovement	gnuteca3	Local de circulação de material	\N	\N	\N
1072	gtcRulesForMaterialMovement	gnuteca3	Regras para circulação de material	\N	\N	\N
1073	gtcConfigReport	gnuteca3	Configuração de relatórios	\N	\N	\N
1074	gtcMaterialType	gnuteca3	Tipo de material	\N	\N	\N
1075	gtcMaterialPhysicalType	gnuteca3	Tipo físico do material	\N	\N	\N
1076	gtcScheduleTask	gnuteca3	Agendar tarefa	\N	\N	\N
2000	gtcLoan	gnuteca3	Empréstimo	\N	\N	\N
2001	gtcReserve	gnuteca3	Reserva	\N	\N	\N
2002	gtcRenew	gnuteca3	Renovação	\N	\N	\N
2003	gtcFine	gnuteca3	Multa	\N	\N	\N
2004	gtcExemplaryFutureStatusDefined	gnuteca3	Definir estado futuro do exemplar	\N	\N	\N
2005	gtcSupplier	gnuteca3	Fornecedor	\N	\N	\N
2006	gtcLoanBetweenLibrary	gnuteca3	Empréstimo entre bibliotecas	\N	\N	\N
2007	gtcPerson	gnuteca3	Pessoa	\N	\N	\N
2008	gtcBond	gnuteca3	Vínculo	\N	\N	\N
2009	gtcPenalty	gnuteca3	Penalidade	\N	\N	\N
2010	gtcBackOfBook	gnuteca3	Lombada	\N	\N	\N
2011	gtcBarCode	gnuteca3	Código de barras	\N	\N	\N
2012	gtcAdminReport	gnuteca3	Administração de relatórios	\N	\N	\N
2013	gtcExemplaryStatusHistory	gnuteca3	Histórico de estados do exemplar	\N	\N	\N
2014	gtcSendMailReturn	gnuteca3	Envio de e-mail de devolução	\N	\N	\N
2016	gtcSendMailNotifyAcquisition	gnuteca3	Aviso de aquisições	\N	\N	\N
2017	gtcSendMailAnsweredReserves	gnuteca3	Aviso de reservas atendidas	\N	\N	\N
2018	gtcSendMailReserveQueue	gnuteca3	Aviso sobre fim de requisição	\N	\N	\N
2019	gtcAdminReportBasic	gnuteca3	Administração básica de relatórios	\N	\N	\N
2020	gtcAdminReportIntermediary	gnuteca3	Administração intermediária de relatórios	\N	\N	\N
2021	gtcAdminReportAdvanced	gnuteca3	Administração avançada de relatórios	\N	\N	\N
2023	gtcInterchange	gnuteca3	Intercâmbio de materiais	\N	\N	\N
2024	gtcFormContent	gnuteca3	Conteúdo do formulário	\N	\N	\N
2025	gtcRequestChangeExemplaryStatus	gnuteca3	Requisição de alteração de estado do exemplar	\N	\N	\N
2026	gtcRequestChangeExemplaryStatusAccess	gnuteca3	Permissão para requisição de alteração de estado do exemplar	\N	\N	\N
2050	gtcMaterial	gnuteca3	Catalogação de materiais	\N	\N	\N
2052	gtcKardexControl	gnuteca3	Controle de kardex	\N	\N	\N
2053	gtcPreCatalogue	gnuteca3	Pré-catalogação	\N	\N	\N
2054	gtcTag	gnuteca3	Etiquetas	\N	\N	\N
2055	gtcSpreadsheet	gnuteca3	Planilha	\N	\N	\N
2056	gtcRulesToCompleteFieldsMarc	gnuteca3	Regras para completar campos MARC	\N	\N	\N
2057	gtcLinkOfFieldsBetweenSpreadsheets	gnuteca3	Relação de campos entre planilhas	\N	\N	\N
2058	gtcDictionary	gnuteca3	Dicionário	\N	\N	\N
2059	gtcDictionaryContent	gnuteca3	Conteúdo do dicionário	\N	\N	\N
3000	gtcMaterialMovementLoan	gnuteca3	Empréstimo na circulação de materiais	\N	\N	\N
3001	gtcMaterialMovementReturn	gnuteca3	Devolução na circulação de materiais	\N	\N	\N
3002	gtcMaterialMovementRequestReserve	gnuteca3	Requisitar reserva	\N	\N	\N
3003	gtcMaterialMovementAnswerReserve	gnuteca3	Atender de reserva	\N	\N	\N
3004	gtcMaterialMovementVerifyMaterial	gnuteca3	Verifica material	\N	\N	\N
3005	gtcMaterialMovementVerifyUser	gnuteca3	Verificar usuário	\N	\N	\N
3006	gtcMaterialMovementUserHistory	gnuteca3	Histórico do usuário	\N	\N	\N
3007	gtcMaterialMovementChangeStatus	gnuteca3	Alterar estado do material	\N	\N	\N
3008	gtcMaterialMovementExemplaryFutureStatusDefined	gnuteca3	Define estado futuro do material	\N	\N	\N
3009	gtcMaterialMovementVerifyProof	gnuteca3	Verificar recibos	\N	\N	\N
3010	gtcMaterialMovementChangePassword	gnuteca3	Alterar Senha	\N	\N	\N
3011	gtcNews	gnuteca3	Notícias	\N	\N	\N
3012	gtcPrefixSuffix	gnuteca3	Prefixo/sufixo	\N	\N	\N
3013	gtcMaterialMovementSkipPassword	gnuteca3	Permitir empréstimo sem senha	\N	\N	\N
3014	gtcMaterialMovementCancelOperationProcess	gnuteca3	Cancelar processo de operação	\N	\N	\N
3505	gtcAnalytics	gnuteca3	Analytics	\N	\N	\N
3508	gtcConfigWorkflow	gnuteca3	Configurar Workflow	\N	\N	\N
3507	gtcCostCenter	gnuteca3	Centro de custo	\N	\N	\N
1062	gtcMarcTagListing	gnuteca3	Listagem de campos marc	\N	\N	\N
3506	gtcMaterialHistory	gnuteca3	Histórico de material	\N	\N	\N
1080	gtcOperatorGroup	gnuteca3	Grupo de operador	\N	\N	\N
3509	gtcPurchaseRequest	gnuteca3	Requisição de compra	\N	\N	\N
2015	gtcSendMailDelayedLoan	gnuteca3	Enviar e-mail de empréstimo atrasado	\N	\N	\N
3514	gtcMyLibrary	gnuteca3	Moderação da minha biblioteca	\N	\N	\N
3015	gtcMaterialMovementCancelReserve	gnuteca3	Cancelar reserva	\N	\N	\N
3016	gtcMaterialMovementChangeFine	gnuteca3	Alterar multa na circulação de material	\N	\N	\N
3018	gtcReturnType	gnuteca3	Tipo de devolução	\N	\N	\N
3019	gtcReturnRegister	gnuteca3	Registro de tipo de retorno	\N	\N	\N
3021	gtcMaterialMovementChangeStatusLow	gnuteca3	Baixa de materiais	\N	\N	\N
3022	gtcMaterialMovementChangeStatusInitial	gnuteca3	Alterar estado inicial	\N	\N	\N
3023	gtcMaterialMovementLoanMomentary	gnuteca3	Empréstimo momentâneo	\N	\N	\N
3024	gtcMaterialMovementLoanForced	gnuteca3	Forçar empréstimo	\N	\N	\N
3025	gtcMaterialMovementCheckPoint	gnuteca3	Check point	\N	\N	\N
3026	gtcSeparator	gnuteca3	Separador	\N	\N	\N
3500	gtcSearchAdministrator	gnuteca3	Pesquisa do administrador	\N	\N	\N
3501	gtcZ3950	gnuteca3	Z3950	\N	\N	\N
3502	gtcISO2709Import	gnuteca3	Importar ISO 2709	\N	\N	\N
2061	gtcSendMailNotifyEndRequest	gnuteca3	Envio de e-mail notificando final da reserva	\N	\N	\N
2062	gtcLibraryPreference	gnuteca3	Preferências da biblioteca	\N	\N	\N
2064	gtcFile	gnuteca3	Arquivo	\N	\N	\N
3027	gtcMaterialMovementCommunicateReserves	gnuteca3	Comunicar reservas	\N	\N	\N
2065	gtcVerifyLinks	gnuteca3	Verificar links	\N	\N	\N
2066	gtcDeleteValuesOfSpreadSheet	gnuteca3	Apagar valores de planilhas	\N	\N	\N
1077	gtcz3950servers	gnuteca3	Servidores Z3950	\N	\N	\N
1078	gtcBackgroundTaskLog	gnuteca3	Log de tarefas em segundo plano	\N	\N	\N
1081	gtcTagHelp	gnuteca3	Ajuda de etiquetas	\N	\N	\N
5001	gtcCity	gnuteca3	Cidade	\N	\N	\N
5002	gtcState	gnuteca3	Estado	\N	\N	\N
5003	gtcDocumentType	gnuteca3	Tipo de documento	\N	\N	\N
5004	gtcCountry	gnuteca3	Pais	\N	\N	\N
5005	gtcLocationType	gnuteca3	Tipo de Logradouro	\N	\N	\N
2063	basDomain	gnuteca3	Domínio	\N	\N	\N
5006	gtcUnionPerson	gnuteca3	Unir pessoas	\N	\N	\N
5007	gtcDuplicatePurchaseRequest	gnuteca3	Reabrir solicitação de compra	\N	\N	\N
\.


--
-- Data for Name: miolo_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY miolo_user (iduser, login, name, nickname, m_password, confirm_hash, theme, idmodule) FROM stdin;
1	admin	Miolo Administrator	admin	21232f297a57a5a743894a0e4a801fc3		miolo	\N
2	guest	Guest User	guest	084e0343a0486ff05530df6c705c8bb4		miolo	\N
1000	gnuteca	Gnuteca	gnuteca	7bf54004bd09cd27f98109368cc66a07		miolo	gnuteca3
1001	solis	Solis	Solis	ff111e9e11da6c3e7a1ecd5bd3c1cfd7			
\.


--
-- Name: bascity_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bascity
    ADD CONSTRAINT bascity_pkey PRIMARY KEY (cityid);


--
-- Name: basconfig_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY basconfig
    ADD CONSTRAINT basconfig_pkey PRIMARY KEY (moduleconfig, parameter);


--
-- Name: bascountry_countryid_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bascountry
    ADD CONSTRAINT bascountry_countryid_key UNIQUE (countryid);


--
-- Name: bascountry_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY bascountry
    ADD CONSTRAINT bascountry_pkey PRIMARY KEY (countryid);


--
-- Name: basdocument_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY basdocument
    ADD CONSTRAINT basdocument_pkey PRIMARY KEY (personid, documenttypeid);


--
-- Name: basdocumenttype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY basdocumenttype
    ADD CONSTRAINT basdocumenttype_pkey PRIMARY KEY (documenttypeid);


--
-- Name: basdomain_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY basdomain
    ADD CONSTRAINT basdomain_pkey PRIMARY KEY (domainid, sequence);


--
-- Name: baslink_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY baslink
    ADD CONSTRAINT baslink_pkey PRIMARY KEY (linkid);


--
-- Name: baslocationtype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY baslocationtype
    ADD CONSTRAINT baslocationtype_pkey PRIMARY KEY (locationtypeid);


--
-- Name: basperson_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY basperson
    ADD CONSTRAINT basperson_email_key UNIQUE (email);


--
-- Name: basperson_login_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY basperson
    ADD CONSTRAINT basperson_login_key UNIQUE (login);


--
-- Name: basperson_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY basperson
    ADD CONSTRAINT basperson_pkey PRIMARY KEY (personid);


--
-- Name: baspersonlink_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY baspersonlink
    ADD CONSTRAINT baspersonlink_pkey PRIMARY KEY (personid, linkid);


--
-- Name: basphone_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY basphone
    ADD CONSTRAINT basphone_pkey PRIMARY KEY (phoneid);


--
-- Name: basstate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY basstate
    ADD CONSTRAINT basstate_pkey PRIMARY KEY (stateid);


--
-- Name: form_subform_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtchelp
    ADD CONSTRAINT form_subform_key UNIQUE (form, subform);


--
-- Name: gtcanalytics_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcanalytics
    ADD CONSTRAINT gtcanalytics_pkey PRIMARY KEY (analyticsid);


--
-- Name: gtcassociation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcassociation
    ADD CONSTRAINT gtcassociation_pkey PRIMARY KEY (associationid);


--
-- Name: gtcbackgroundtasklog_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcbackgroundtasklog
    ADD CONSTRAINT gtcbackgroundtasklog_pkey PRIMARY KEY (backgroundtasklogid);


--
-- Name: gtccataloguingformat_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtccataloguingformat
    ADD CONSTRAINT gtccataloguingformat_pkey PRIMARY KEY (cataloguingformatid);


--
-- Name: gtcclassificationarea_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcclassificationarea
    ADD CONSTRAINT gtcclassificationarea_pkey PRIMARY KEY (classificationareaid);


--
-- Name: gtccontrolfielddetail_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtccontrolfielddetail
    ADD CONSTRAINT gtccontrolfielddetail_pkey PRIMARY KEY (controlfielddetailid);


--
-- Name: gtccostcenter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtccostcenter
    ADD CONSTRAINT gtccostcenter_pkey PRIMARY KEY (costcenterid);


--
-- Name: gtcdictionary_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcdictionary
    ADD CONSTRAINT gtcdictionary_pkey PRIMARY KEY (dictionaryid);


--
-- Name: gtcdictionarycontent_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcdictionarycontent
    ADD CONSTRAINT gtcdictionarycontent_pkey PRIMARY KEY (dictionarycontentid);


--
-- Name: gtcdictionaryrelatedcontent_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcdictionaryrelatedcontent
    ADD CONSTRAINT gtcdictionaryrelatedcontent_pkey PRIMARY KEY (dictionaryrelatedcontentid);


--
-- Name: gtcexemplarycontrol_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcexemplarycontrol
    ADD CONSTRAINT gtcexemplarycontrol_pkey PRIMARY KEY (controlnumber, itemnumber);


--
-- Name: gtcexemplaryfuturestatusdefined_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcexemplaryfuturestatusdefined
    ADD CONSTRAINT gtcexemplaryfuturestatusdefined_pkey PRIMARY KEY (exemplaryfuturestatusdefinedid);


--
-- Name: gtcexemplarystatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcexemplarystatus
    ADD CONSTRAINT gtcexemplarystatus_pkey PRIMARY KEY (exemplarystatusid);


--
-- Name: gtcfavorite_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcfavorite
    ADD CONSTRAINT gtcfavorite_pkey PRIMARY KEY (personid, controlnumber);


--
-- Name: gtcfine_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcfine
    ADD CONSTRAINT gtcfine_pkey PRIMARY KEY (fineid);


--
-- Name: gtcfinestatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcfinestatus
    ADD CONSTRAINT gtcfinestatus_pkey PRIMARY KEY (finestatusid);


--
-- Name: gtcformatbackofbook_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcformatbackofbook
    ADD CONSTRAINT gtcformatbackofbook_pkey PRIMARY KEY (formatbackofbookid);


--
-- Name: gtcformcontent_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcformcontent
    ADD CONSTRAINT gtcformcontent_pkey PRIMARY KEY (formcontentid);


--
-- Name: gtcformcontentdetail_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcformcontentdetail
    ADD CONSTRAINT gtcformcontentdetail_pkey PRIMARY KEY (formcontentid, field);


--
-- Name: gtcformcontenttype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcformcontenttype
    ADD CONSTRAINT gtcformcontenttype_pkey PRIMARY KEY (formcontenttypeid);


--
-- Name: gtcgeneralpolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcgeneralpolicy
    ADD CONSTRAINT gtcgeneralpolicy_pkey PRIMARY KEY (privilegegroupid, linkid);


--
-- Name: gtchelp_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtchelp
    ADD CONSTRAINT gtchelp_pkey PRIMARY KEY (helpid);


--
-- Name: gtcholiday_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcholiday
    ADD CONSTRAINT gtcholiday_pkey PRIMARY KEY (holidayid);


--
-- Name: gtcinterchange_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcinterchange
    ADD CONSTRAINT gtcinterchange_pkey PRIMARY KEY (interchangeid);


--
-- Name: gtcinterchangeitem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcinterchangeitem
    ADD CONSTRAINT gtcinterchangeitem_pkey PRIMARY KEY (interchangeitemid);


--
-- Name: gtcinterchangeobservation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcinterchangeobservation
    ADD CONSTRAINT gtcinterchangeobservation_pkey PRIMARY KEY (interchangeobservationid);


--
-- Name: gtcinterchangestatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcinterchangestatus
    ADD CONSTRAINT gtcinterchangestatus_pkey PRIMARY KEY (interchangestatusid);


--
-- Name: gtcinterchangetype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcinterchangetype
    ADD CONSTRAINT gtcinterchangetype_pkey PRIMARY KEY (interchangetypeid);


--
-- Name: gtcinterestsarea_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcinterestsarea
    ADD CONSTRAINT gtcinterestsarea_pkey PRIMARY KEY (personid, classificationareaid);


--
-- Name: gtclabellayout_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclabellayout
    ADD CONSTRAINT gtclabellayout_pkey PRIMARY KEY (labellayoutid);


--
-- Name: gtclibperson_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclibperson
    ADD CONSTRAINT gtclibperson_pkey PRIMARY KEY (personid);


--
-- Name: gtclibraryassociation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclibraryassociation
    ADD CONSTRAINT gtclibraryassociation_pkey PRIMARY KEY (associationid, libraryunitid);


--
-- Name: gtclibrarygroup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclibrarygroup
    ADD CONSTRAINT gtclibrarygroup_pkey PRIMARY KEY (librarygroupid);


--
-- Name: gtclibraryunit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclibraryunit
    ADD CONSTRAINT gtclibraryunit_pkey PRIMARY KEY (libraryunitid);


--
-- Name: gtclibraryunitaccess_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclibraryunitaccess
    ADD CONSTRAINT gtclibraryunitaccess_pkey PRIMARY KEY (libraryunitid, linkid);


--
-- Name: gtclibraryunitconfig_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclibraryunitconfig
    ADD CONSTRAINT gtclibraryunitconfig_pkey PRIMARY KEY (libraryunitid, parameter);


--
-- Name: gtclibraryunitisclosed_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclibraryunitisclosed
    ADD CONSTRAINT gtclibraryunitisclosed_pkey PRIMARY KEY (libraryunitid, weekdayid);


--
-- Name: gtclinkoffieldsbetweenspreadsheets_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclinkoffieldsbetweenspreadsheets
    ADD CONSTRAINT gtclinkoffieldsbetweenspreadsheets_pkey PRIMARY KEY (linkoffieldsbetweenspreadsheetsid);


--
-- Name: gtcloan_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcloan
    ADD CONSTRAINT gtcloan_pkey PRIMARY KEY (loanid);


--
-- Name: gtcloanbetweenlibrary_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcloanbetweenlibrary
    ADD CONSTRAINT gtcloanbetweenlibrary_pkey PRIMARY KEY (loanbetweenlibraryid);


--
-- Name: gtcloanbetweenlibrarycomposition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcloanbetweenlibrarycomposition
    ADD CONSTRAINT gtcloanbetweenlibrarycomposition_pkey PRIMARY KEY (loanbetweenlibraryid, itemnumber);


--
-- Name: gtcloanbetweenlibrarystatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcloanbetweenlibrarystatus
    ADD CONSTRAINT gtcloanbetweenlibrarystatus_pkey PRIMARY KEY (loanbetweenlibrarystatusid);


--
-- Name: gtcloantype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcloantype
    ADD CONSTRAINT gtcloantype_pkey PRIMARY KEY (loantypeid);


--
-- Name: gtclocationformaterialmovement_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtclocationformaterialmovement
    ADD CONSTRAINT gtclocationformaterialmovement_pkey PRIMARY KEY (locationformaterialmovementid);


--
-- Name: gtcmarctaglisting_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmarctaglisting
    ADD CONSTRAINT gtcmarctaglisting_pkey PRIMARY KEY (marctaglistingid);


--
-- Name: gtcmaterial_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmaterial
    ADD CONSTRAINT gtcmaterial_pkey PRIMARY KEY (controlnumber, fieldid, subfieldid, line);


--
-- Name: gtcmaterialcontrol_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmaterialcontrol
    ADD CONSTRAINT gtcmaterialcontrol_pkey PRIMARY KEY (controlnumber);


--
-- Name: gtcmaterialevaluation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmaterialevaluation
    ADD CONSTRAINT gtcmaterialevaluation_pkey PRIMARY KEY (materialevaluationid);


--
-- Name: gtcmaterialgender_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmaterialgender
    ADD CONSTRAINT gtcmaterialgender_pkey PRIMARY KEY (materialgenderid);


--
-- Name: gtcmaterialhistory_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmaterialhistory
    ADD CONSTRAINT gtcmaterialhistory_pkey PRIMARY KEY (materialhistoryid);


--
-- Name: gtcmateriallocation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmateriallocation
    ADD CONSTRAINT gtcmateriallocation_pkey PRIMARY KEY (materiallocationid);


--
-- Name: gtcmateriallocationtag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmateriallocationtag
    ADD CONSTRAINT gtcmateriallocationtag_pkey PRIMARY KEY (materiallocationtagid);


--
-- Name: gtcmaterialphysicaltype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmaterialphysicaltype
    ADD CONSTRAINT gtcmaterialphysicaltype_pkey PRIMARY KEY (materialphysicaltypeid);


--
-- Name: gtcmaterialtype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmaterialtype
    ADD CONSTRAINT gtcmaterialtype_pkey PRIMARY KEY (materialtypeid);


--
-- Name: gtcmylibrary_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcmylibrary
    ADD CONSTRAINT gtcmylibrary_pkey PRIMARY KEY (mylibraryid);


--
-- Name: gtcnews_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcnews
    ADD CONSTRAINT gtcnews_pkey PRIMARY KEY (newsid);


--
-- Name: gtcnewsaccess_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcnewsaccess
    ADD CONSTRAINT gtcnewsaccess_pkey PRIMARY KEY (newsid, linkid);


--
-- Name: gtcoperation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcoperation
    ADD CONSTRAINT gtcoperation_pkey PRIMARY KEY (operationid);


--
-- Name: gtcpenalty_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcpenalty
    ADD CONSTRAINT gtcpenalty_pkey PRIMARY KEY (penaltyid);


--
-- Name: gtcpersonconfig_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcpersonconfig
    ADD CONSTRAINT gtcpersonconfig_pkey PRIMARY KEY (personid, parameter);


--
-- Name: gtcpersonlibraryunit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcpersonlibraryunit
    ADD CONSTRAINT gtcpersonlibraryunit_pkey PRIMARY KEY (libraryunitid, personid);


--
-- Name: gtcpolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcpolicy
    ADD CONSTRAINT gtcpolicy_pkey PRIMARY KEY (privilegegroupid, linkid, materialgenderid);


--
-- Name: gtcprecatalogue_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcprecatalogue
    ADD CONSTRAINT gtcprecatalogue_pkey PRIMARY KEY (controlnumber, fieldid, subfieldid, line);


--
-- Name: gtcprefixsuffix_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcprefixsuffix
    ADD CONSTRAINT gtcprefixsuffix_pkey PRIMARY KEY (prefixsuffixid);


--
-- Name: gtcprivilegegroup_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcprivilegegroup
    ADD CONSTRAINT gtcprivilegegroup_pkey PRIMARY KEY (privilegegroupid);


--
-- Name: gtcpurchaserequest_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcpurchaserequest
    ADD CONSTRAINT gtcpurchaserequest_pkey PRIMARY KEY (purchaserequestid);


--
-- Name: gtcpurchaserequestmaterial_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcpurchaserequestmaterial
    ADD CONSTRAINT gtcpurchaserequestmaterial_pkey PRIMARY KEY (purchaserequestid, fieldid, subfieldid);


--
-- Name: gtcpurchaserequestquotation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcpurchaserequestquotation
    ADD CONSTRAINT gtcpurchaserequestquotation_pkey PRIMARY KEY (purchaserequestid, supplierid);


--
-- Name: gtcrenew_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcrenew
    ADD CONSTRAINT gtcrenew_pkey PRIMARY KEY (renewid);


--
-- Name: gtcrenewtype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcrenewtype
    ADD CONSTRAINT gtcrenewtype_pkey PRIMARY KEY (renewtypeid);


--
-- Name: gtcreport_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcreport
    ADD CONSTRAINT gtcreport_pkey PRIMARY KEY (reportid);


--
-- Name: gtcreportparameter_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcreportparameter
    ADD CONSTRAINT gtcreportparameter_pkey PRIMARY KEY (reportparameterid);


--
-- Name: gtcrequestchangeexemplarystatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatus
    ADD CONSTRAINT gtcrequestchangeexemplarystatus_pkey PRIMARY KEY (requestchangeexemplarystatusid);


--
-- Name: gtcrequestchangeexemplarystatusaccess_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatusaccess
    ADD CONSTRAINT gtcrequestchangeexemplarystatusaccess_pkey PRIMARY KEY (baslinkid, exemplarystatusid);


--
-- Name: gtcrequestchangeexemplarystatuscomposition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatuscomposition
    ADD CONSTRAINT gtcrequestchangeexemplarystatuscomposition_pkey PRIMARY KEY (requestchangeexemplarystatusid, itemnumber);


--
-- Name: gtcrequestchangeexemplarystatusstatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatusstatus
    ADD CONSTRAINT gtcrequestchangeexemplarystatusstatus_pkey PRIMARY KEY (requestchangeexemplarystatusstatusid);


--
-- Name: gtcreserve_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcreserve
    ADD CONSTRAINT gtcreserve_pkey PRIMARY KEY (reserveid);


--
-- Name: gtcreservecomposition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcreservecomposition
    ADD CONSTRAINT gtcreservecomposition_pkey PRIMARY KEY (reserveid, itemnumber);


--
-- Name: gtcreservestatus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcreservestatus
    ADD CONSTRAINT gtcreservestatus_pkey PRIMARY KEY (reservestatusid);


--
-- Name: gtcreservetype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcreservetype
    ADD CONSTRAINT gtcreservetype_pkey PRIMARY KEY (reservetypeid);


--
-- Name: gtcreturnregister_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcreturnregister
    ADD CONSTRAINT gtcreturnregister_pkey PRIMARY KEY (returnregisterid);


--
-- Name: gtcreturntype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcreturntype
    ADD CONSTRAINT gtcreturntype_pkey PRIMARY KEY (returntypeid);


--
-- Name: gtcright_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcright
    ADD CONSTRAINT gtcright_pkey PRIMARY KEY (privilegegroupid, linkid, materialgenderid, operationid);


--
-- Name: gtcrulesformaterialmovement_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcrulesformaterialmovement
    ADD CONSTRAINT gtcrulesformaterialmovement_pkey PRIMARY KEY (currentstate, operationid, locationformaterialmovementid);


--
-- Name: gtcrulestocompletefieldsmarc_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcrulestocompletefieldsmarc
    ADD CONSTRAINT gtcrulestocompletefieldsmarc_pkey PRIMARY KEY (rulestocompletefieldsmarcid);


--
-- Name: gtcschedulecycle_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcschedulecycle
    ADD CONSTRAINT gtcschedulecycle_pkey PRIMARY KEY (schedulecycleid);


--
-- Name: gtcscheduletask_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcscheduletask
    ADD CONSTRAINT gtcscheduletask_pkey PRIMARY KEY (scheduletaskid);


--
-- Name: gtcsearchablefield_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsearchablefield
    ADD CONSTRAINT gtcsearchablefield_pkey PRIMARY KEY (searchablefieldid);


--
-- Name: gtcsearchablefieldaccess_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsearchablefieldaccess
    ADD CONSTRAINT gtcsearchablefieldaccess_pkey PRIMARY KEY (searchablefieldid, linkid);


--
-- Name: gtcsearchformat_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsearchformat
    ADD CONSTRAINT gtcsearchformat_pkey PRIMARY KEY (searchformatid);


--
-- Name: gtcsearchformataccess_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsearchformataccess
    ADD CONSTRAINT gtcsearchformataccess_pkey PRIMARY KEY (searchformatid, linkid);


--
-- Name: gtcsearchformatcolumn_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsearchformatcolumn
    ADD CONSTRAINT gtcsearchformatcolumn_pkey PRIMARY KEY (searchformatid, "column");


--
-- Name: gtcsearchpresentationformat_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsearchpresentationformat
    ADD CONSTRAINT gtcsearchpresentationformat_pkey PRIMARY KEY (searchformatid, category);


--
-- Name: gtcseparator_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcseparator
    ADD CONSTRAINT gtcseparator_pkey PRIMARY KEY (separatorid);


--
-- Name: gtcsoapaccess_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsoapaccess
    ADD CONSTRAINT gtcsoapaccess_pkey PRIMARY KEY (soapclientid, webserviceid);


--
-- Name: gtcsoapclient_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsoapclient
    ADD CONSTRAINT gtcsoapclient_pkey PRIMARY KEY (soapclientid);


--
-- Name: gtcspreadsheet_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcspreadsheet
    ADD CONSTRAINT gtcspreadsheet_pkey PRIMARY KEY (category, level);


--
-- Name: gtcsupplier_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsupplier
    ADD CONSTRAINT gtcsupplier_pkey PRIMARY KEY (supplierid);


--
-- Name: gtcsuppliertypeandlocation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcsuppliertypeandlocation
    ADD CONSTRAINT gtcsuppliertypeandlocation_pkey PRIMARY KEY (supplierid, type);


--
-- Name: gtctag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtctag
    ADD CONSTRAINT gtctag_pkey PRIMARY KEY (fieldid, subfieldid);


--
-- Name: gtctask_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtctask
    ADD CONSTRAINT gtctask_pkey PRIMARY KEY (taskid);


--
-- Name: gtcwebservice_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcwebservice
    ADD CONSTRAINT gtcwebservice_pkey PRIMARY KEY (webserviceid);


--
-- Name: gtcweekday_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcweekday
    ADD CONSTRAINT gtcweekday_pkey PRIMARY KEY (weekdayid);


--
-- Name: gtcworkflowinstance_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcworkflowinstance
    ADD CONSTRAINT gtcworkflowinstance_pkey PRIMARY KEY (workflowinstanceid);


--
-- Name: gtcworkflowtransition_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcworkflowtransition
    ADD CONSTRAINT gtcworkflowtransition_pkey PRIMARY KEY (previousworkflowstatusid, nextworkflowstatusid);


--
-- Name: gtcz3950servers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcz3950servers
    ADD CONSTRAINT gtcz3950servers_pkey PRIMARY KEY (serverid);


--
-- Name: miolo_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_group
    ADD CONSTRAINT miolo_group_pkey PRIMARY KEY (idgroup);


--
-- Name: miolo_groupuser_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_groupuser
    ADD CONSTRAINT miolo_groupuser_pkey PRIMARY KEY (iduser, idgroup);


--
-- Name: miolo_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_log
    ADD CONSTRAINT miolo_log_pkey PRIMARY KEY (idlog);


--
-- Name: miolo_module_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_module
    ADD CONSTRAINT miolo_module_pkey PRIMARY KEY (idmodule);


--
-- Name: miolo_schedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_schedule
    ADD CONSTRAINT miolo_schedule_pkey PRIMARY KEY (idschedule);


--
-- Name: miolo_sequence_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_sequence
    ADD CONSTRAINT miolo_sequence_pkey PRIMARY KEY (sequence);


--
-- Name: miolo_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_session
    ADD CONSTRAINT miolo_session_pkey PRIMARY KEY (idsession);


--
-- Name: miolo_transaction_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_transaction
    ADD CONSTRAINT miolo_transaction_pkey PRIMARY KEY (idtransaction);


--
-- Name: miolo_user_login_key; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_user
    ADD CONSTRAINT miolo_user_login_key UNIQUE (login);


--
-- Name: miolo_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY miolo_user
    ADD CONSTRAINT miolo_user_pkey PRIMARY KEY (iduser);


--
-- Name: workflowhistoryid_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcworkflowhistory
    ADD CONSTRAINT workflowhistoryid_pkey PRIMARY KEY (workflowhistoryid);


--
-- Name: workflowstatusid_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY gtcworkflowstatus
    ADD CONSTRAINT workflowstatusid_pkey PRIMARY KEY (workflowstatusid);


--
-- Name: index_baspersonlink_linkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_baspersonlink_linkid ON baspersonlink USING btree (linkid);


--
-- Name: index_baspersonlink_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_baspersonlink_personid ON baspersonlink USING btree (personid);


--
-- Name: index_basphone_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_basphone_personid ON basphone USING btree (personid);


--
-- Name: index_gtcanalytics_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcanalytics_libraryunitid ON gtcanalytics USING btree (libraryunitid);


--
-- Name: index_gtcanalytics_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcanalytics_personid ON gtcanalytics USING btree (personid);


--
-- Name: index_gtcbackgroundtasklog_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcbackgroundtasklog_libraryunitid ON gtcbackgroundtasklog USING btree (libraryunitid);


--
-- Name: index_gtccontrolfielddetail; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtccontrolfielddetail ON gtccontrolfielddetail USING btree (fieldid, subfieldid, categoryid, isactive);


--
-- Name: index_gtccontrolfielddetail_1; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtccontrolfielddetail_1 ON gtccontrolfielddetail USING btree (fieldid, subfieldid, categoryid, isactive);


--
-- Name: index_gtccontrolfielddetail_fieldid_subfieldid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtccontrolfielddetail_fieldid_subfieldid ON gtccontrolfielddetail USING btree (fieldid, subfieldid);


--
-- Name: index_gtccontrolfielddetail_marctaglistid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtccontrolfielddetail_marctaglistid ON gtccontrolfielddetail USING btree (marctaglistid);


--
-- Name: index_gtcdictionarycontent_dictionarycontent; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcdictionarycontent_dictionarycontent ON gtcdictionarycontent USING btree (dictionarycontent);


--
-- Name: index_gtcdictionarycontent_dictionaryid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcdictionarycontent_dictionaryid ON gtcdictionarycontent USING btree (dictionaryid);


--
-- Name: index_gtcdictionaryrelatedcontent_dictionarycontentid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcdictionaryrelatedcontent_dictionarycontentid ON gtcdictionaryrelatedcontent USING btree (dictionarycontentid);


--
-- Name: index_gtcdictionaryrelatedcontent_relatedcontent; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcdictionaryrelatedcontent_relatedcontent ON gtcdictionaryrelatedcontent USING btree (relatedcontent);


--
-- Name: index_gtcemailcontroldelayedloan_loanid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcemailcontroldelayedloan_loanid ON gtcemailcontroldelayedloan USING btree (loanid);


--
-- Name: index_gtcemailcontrolnotifyaquisition_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcemailcontrolnotifyaquisition_personid ON gtcemailcontrolnotifyaquisition USING btree (personid);


--
-- Name: index_gtcexemplarycontrol_controlnumber; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarycontrol_controlnumber ON gtcexemplarycontrol USING btree (controlnumber);


--
-- Name: index_gtcexemplarycontrol_exemplarystatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarycontrol_exemplarystatusid ON gtcexemplarycontrol USING btree (exemplarystatusid);


--
-- Name: index_gtcexemplarycontrol_library; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarycontrol_library ON gtcexemplarycontrol USING btree (controlnumber, libraryunitid);


--
-- Name: index_gtcexemplarycontrol_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarycontrol_libraryunitid ON gtcexemplarycontrol USING btree (libraryunitid);


--
-- Name: index_gtcexemplarycontrol_materialgenderid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarycontrol_materialgenderid ON gtcexemplarycontrol USING btree (materialgenderid);


--
-- Name: index_gtcexemplarycontrol_materialphysicaltypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarycontrol_materialphysicaltypeid ON gtcexemplarycontrol USING btree (materialphysicaltypeid);


--
-- Name: index_gtcexemplarycontrol_materialtypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarycontrol_materialtypeid ON gtcexemplarycontrol USING btree (materialtypeid);


--
-- Name: index_gtcexemplarycontrol_originallibraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarycontrol_originallibraryunitid ON gtcexemplarycontrol USING btree (originallibraryunitid);


--
-- Name: index_gtcexemplarycontrol_status; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarycontrol_status ON gtcexemplarycontrol USING btree (controlnumber, exemplarystatusid);


--
-- Name: index_gtcexemplaryfuturestatusdefined_exemplarystatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplaryfuturestatusdefined_exemplarystatusid ON gtcexemplaryfuturestatusdefined USING btree (exemplarystatusid);


--
-- Name: index_gtcexemplarystatushistory_exemplarystatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarystatushistory_exemplarystatusid ON gtcexemplarystatushistory USING btree (exemplarystatusid);


--
-- Name: index_gtcexemplarystatushistory_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcexemplarystatushistory_libraryunitid ON gtcexemplarystatushistory USING btree (libraryunitid);


--
-- Name: index_gtcfavorite_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcfavorite_personid ON gtcfavorite USING btree (personid);


--
-- Name: index_gtcfine_finestatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcfine_finestatusid ON gtcfine USING btree (finestatusid);


--
-- Name: index_gtcfine_loanid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcfine_loanid ON gtcfine USING btree (loanid);


--
-- Name: index_gtcfinestatushistory; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcfinestatushistory ON gtcfinestatushistory USING btree (fineid);


--
-- Name: index_gtcfinestatushistory_fineid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcfinestatushistory_fineid ON gtcfinestatushistory USING btree (fineid);


--
-- Name: index_gtcfinestatushistory_finestatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcfinestatushistory_finestatusid ON gtcfinestatushistory USING btree (finestatusid);


--
-- Name: index_gtcformcontent_formcontenttype; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcformcontent_formcontenttype ON gtcformcontent USING btree (formcontenttype);


--
-- Name: index_gtcgeneralpolicy_linkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcgeneralpolicy_linkid ON gtcgeneralpolicy USING btree (linkid);


--
-- Name: index_gtcgeneralpolicy_privilegegroupid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcgeneralpolicy_privilegegroupid ON gtcgeneralpolicy USING btree (privilegegroupid);


--
-- Name: index_gtcholiday_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcholiday_libraryunitid ON gtcholiday USING btree (libraryunitid);


--
-- Name: index_gtcinterchange_interchangestatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcinterchange_interchangestatusid ON gtcinterchange USING btree (interchangestatusid);


--
-- Name: index_gtcinterchange_interchangetypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcinterchange_interchangetypeid ON gtcinterchange USING btree (interchangetypeid);


--
-- Name: index_gtcinterchangeitem_interchangeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcinterchangeitem_interchangeid ON gtcinterchangeitem USING btree (interchangeid);


--
-- Name: index_gtcinterchangeobservation_interchangeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcinterchangeobservation_interchangeid ON gtcinterchangeobservation USING btree (interchangeid);


--
-- Name: index_gtcinterchangestatus_interchangetypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcinterchangestatus_interchangetypeid ON gtcinterchangestatus USING btree (interchangetypeid);


--
-- Name: index_gtcinterestsarea_classificationareaid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcinterestsarea_classificationareaid ON gtcinterestsarea USING btree (classificationareaid);


--
-- Name: index_gtcinterestsarea_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcinterestsarea_personid ON gtcinterestsarea USING btree (personid);


--
-- Name: index_gtckardexcontrol; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE UNIQUE INDEX index_gtckardexcontrol ON gtckardexcontrol USING btree (controlnumber, codigodeassinante, libraryunitid);


--
-- Name: index_gtckardexcontrol_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtckardexcontrol_libraryunitid ON gtckardexcontrol USING btree (libraryunitid);


--
-- Name: index_gtclibraryassociation_associationid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtclibraryassociation_associationid ON gtclibraryassociation USING btree (associationid);


--
-- Name: index_gtclibraryassociation_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtclibraryassociation_libraryunitid ON gtclibraryassociation USING btree (libraryunitid);


--
-- Name: index_gtclibraryunit_librarygroupid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtclibraryunit_librarygroupid ON gtclibraryunit USING btree (librarygroupid);


--
-- Name: index_gtclibraryunit_privilegegroupid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtclibraryunit_privilegegroupid ON gtclibraryunit USING btree (privilegegroupid);


--
-- Name: index_gtclibraryunitaccess_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtclibraryunitaccess_libraryunitid ON gtclibraryunitaccess USING btree (libraryunitid);


--
-- Name: index_gtclibraryunitaccess_linkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtclibraryunitaccess_linkid ON gtclibraryunitaccess USING btree (linkid);


--
-- Name: index_gtclibraryunitconfig_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtclibraryunitconfig_libraryunitid ON gtclibraryunitconfig USING btree (libraryunitid);


--
-- Name: index_gtclibraryunitisclosed_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtclibraryunitisclosed_libraryunitid ON gtclibraryunitisclosed USING btree (libraryunitid);


--
-- Name: index_gtclibraryunitisclosed_weekdayid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtclibraryunitisclosed_weekdayid ON gtclibraryunitisclosed USING btree (weekdayid);


--
-- Name: index_gtcloan_itemnumber_returndate; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloan_itemnumber_returndate ON gtcloan USING btree (itemnumber);


--
-- Name: index_gtcloan_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloan_libraryunitid ON gtcloan USING btree (libraryunitid);


--
-- Name: index_gtcloan_linkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloan_linkid ON gtcloan USING btree (linkid);


--
-- Name: index_gtcloan_loantypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloan_loantypeid ON gtcloan USING btree (loantypeid);


--
-- Name: index_gtcloan_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloan_personid ON gtcloan USING btree (personid);


--
-- Name: index_gtcloan_privilegegroupid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloan_privilegegroupid ON gtcloan USING btree (privilegegroupid);


--
-- Name: index_gtcloanbetweenlibrary_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloanbetweenlibrary_libraryunitid ON gtcloanbetweenlibrary USING btree (libraryunitid);


--
-- Name: index_gtcloanbetweenlibrary_loanbetweenlibrarystatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloanbetweenlibrary_loanbetweenlibrarystatusid ON gtcloanbetweenlibrary USING btree (loanbetweenlibrarystatusid);


--
-- Name: index_gtcloanbetweenlibrary_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloanbetweenlibrary_personid ON gtcloanbetweenlibrary USING btree (personid);


--
-- Name: index_gtcloanbetweenlibrarycomposition_loanbetweenlibraryid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloanbetweenlibrarycomposition_loanbetweenlibraryid ON gtcloanbetweenlibrarycomposition USING btree (loanbetweenlibraryid);


--
-- Name: index_gtcloanbetweenlibrarystatushistory_loanbetweenlibrarystat; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcloanbetweenlibrarystatushistory_loanbetweenlibrarystat ON gtcloanbetweenlibrarystatushistory USING btree (loanbetweenlibrarystatusid);


--
-- Name: index_gtcmarctaglistingoption_marctaglistingid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmarctaglistingoption_marctaglistingid ON gtcmarctaglistingoption USING btree (marctaglistingid);


--
-- Name: index_gtcmaterial_3; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_3 ON gtcmaterial USING btree (fieldid, subfieldid, searchcontent varchar_pattern_ops);


--
-- Name: index_gtcmaterial_3forsearchmodule; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_3forsearchmodule ON gtcmaterial USING btree (fieldid, subfieldid, searchcontentforsearchmodule varchar_pattern_ops);


--
-- Name: index_gtcmaterial_content; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_content ON gtcmaterial USING btree (controlnumber, content);


--
-- Name: index_gtcmaterial_controlnumbersearch; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_controlnumbersearch ON gtcmaterial USING btree (controlnumber, fieldid, subfieldid, searchcontent);


--
-- Name: index_gtcmaterial_controlnumbersearchforsearchmodule; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_controlnumbersearchforsearchmodule ON gtcmaterial USING btree (controlnumber, fieldid, subfieldid, searchcontentforsearchmodule);


--
-- Name: index_gtcmaterial_fieldid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_fieldid ON gtcmaterial USING btree (controlnumber, fieldid);


--
-- Name: index_gtcmaterial_fieldid_subfieldid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_fieldid_subfieldid ON gtcmaterial USING btree (fieldid, subfieldid);


--
-- Name: index_gtcmaterial_fieldsubfield; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_fieldsubfield ON gtcmaterial USING btree (controlnumber, fieldid, subfieldid);


--
-- Name: index_gtcmaterial_indice4; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_indice4 ON gtcmaterial USING btree (fieldid, subfieldid, searchcontent varchar_pattern_ops);


--
-- Name: index_gtcmaterial_indice4forsearchmodule; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_indice4forsearchmodule ON gtcmaterial USING btree (fieldid, subfieldid, searchcontentforsearchmodule varchar_pattern_ops);


--
-- Name: index_gtcmaterial_prefixid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_prefixid ON gtcmaterial USING btree (prefixid);


--
-- Name: index_gtcmaterial_searchcontent; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_searchcontent ON gtcmaterial USING btree (controlnumber, searchcontent);


--
-- Name: index_gtcmaterial_searchcontent_fulltext; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_searchcontent_fulltext ON gtcmaterial USING gin (to_tsvector('portuguese'::regconfig, searchcontent));


--
-- Name: index_gtcmaterial_searchcontentforsearchmodule; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_searchcontentforsearchmodule ON gtcmaterial USING btree (controlnumber, searchcontentforsearchmodule);


--
-- Name: index_gtcmaterial_searchcontentforsearchmodule_fulltext; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_searchcontentforsearchmodule_fulltext ON gtcmaterial USING gin (to_tsvector('portuguese'::regconfig, searchcontentforsearchmodule));


--
-- Name: index_gtcmaterial_separatorid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_separatorid ON gtcmaterial USING btree (separatorid);


--
-- Name: index_gtcmaterial_subfieldid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_subfieldid ON gtcmaterial USING btree (controlnumber, subfieldid);


--
-- Name: index_gtcmaterial_suffixid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterial_suffixid ON gtcmaterial USING btree (suffixid);


--
-- Name: index_gtcmaterialcontrol_category; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_category ON gtcmaterialcontrol USING btree (controlnumber, category);


--
-- Name: index_gtcmaterialcontrol_category_level; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_category_level ON gtcmaterialcontrol USING btree (category, level);


--
-- Name: index_gtcmaterialcontrol_controlnumber; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_controlnumber ON gtcmaterialcontrol USING btree (controlnumber, category, level);


--
-- Name: index_gtcmaterialcontrol_entrancedate; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_entrancedate ON gtcmaterialcontrol USING btree (controlnumber, entrancedate);


--
-- Name: index_gtcmaterialcontrol_father; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_father ON gtcmaterialcontrol USING btree (controlnumberfather);


--
-- Name: index_gtcmaterialcontrol_fathercatlev; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_fathercatlev ON gtcmaterialcontrol USING btree (controlnumberfather, category, level);


--
-- Name: index_gtcmaterialcontrol_gender; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_gender ON gtcmaterialcontrol USING btree (controlnumber, materialgenderid);


--
-- Name: index_gtcmaterialcontrol_level; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_level ON gtcmaterialcontrol USING btree (controlnumber, level);


--
-- Name: index_gtcmaterialcontrol_materialgenderid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_materialgenderid ON gtcmaterialcontrol USING btree (materialgenderid);


--
-- Name: index_gtcmaterialcontrol_materialphysicaltypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_materialphysicaltypeid ON gtcmaterialcontrol USING btree (materialphysicaltypeid);


--
-- Name: index_gtcmaterialcontrol_materialtypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_materialtypeid ON gtcmaterialcontrol USING btree (materialtypeid);


--
-- Name: index_gtcmaterialcontrol_physical; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_physical ON gtcmaterialcontrol USING btree (controlnumber, materialphysicaltypeid);


--
-- Name: index_gtcmaterialcontrol_type; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialcontrol_type ON gtcmaterialcontrol USING btree (controlnumber, materialtypeid);


--
-- Name: index_gtcmaterialevaluation_controlnumber; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialevaluation_controlnumber ON gtcmaterialevaluation USING btree (controlnumber);


--
-- Name: index_gtcmaterialevaluation_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialevaluation_personid ON gtcmaterialevaluation USING btree (personid);


--
-- Name: index_gtcmaterialhistory_controlnumber; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialhistory_controlnumber ON gtcmaterialhistory USING btree (controlnumber);


--
-- Name: index_gtcmaterialhistory_fieldid_subfieldid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialhistory_fieldid_subfieldid ON gtcmaterialhistory USING btree (fieldid, subfieldid);


--
-- Name: index_gtcmaterialhsitory_controlnumber; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmaterialhsitory_controlnumber ON gtcmaterialhistory USING btree (controlnumber);


--
-- Name: index_gtcmylibrary_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmylibrary_personid ON gtcmylibrary USING btree (personid);


--
-- Name: index_gtcmylibrary_tablename_tableid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcmylibrary_tablename_tableid ON gtcmylibrary USING btree (tablename, tableid);


--
-- Name: index_gtcnews_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcnews_libraryunitid ON gtcnews USING btree (libraryunitid);


--
-- Name: index_gtcnewsaccess_linkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcnewsaccess_linkid ON gtcnewsaccess USING btree (linkid);


--
-- Name: index_gtcnewsaccess_newsid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcnewsaccess_newsid ON gtcnewsaccess USING btree (newsid);


--
-- Name: index_gtcoperatorlibraryunit_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcoperatorlibraryunit_libraryunitid ON gtcoperatorlibraryunit USING btree (libraryunitid);


--
-- Name: index_gtcoperatorlibraryunit_operator; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcoperatorlibraryunit_operator ON gtcoperatorlibraryunit USING btree (operator);


--
-- Name: index_gtcpenalty_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpenalty_libraryunitid ON gtcpenalty USING btree (libraryunitid);


--
-- Name: index_gtcpenalty_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpenalty_personid ON gtcpenalty USING btree (personid);


--
-- Name: index_gtcpersonconfig_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpersonconfig_personid ON gtcpersonconfig USING btree (personid);


--
-- Name: index_gtcpersonlibraryunit_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpersonlibraryunit_libraryunitid ON gtcpersonlibraryunit USING btree (libraryunitid);


--
-- Name: index_gtcpersonlibraryunit_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpersonlibraryunit_personid ON gtcpersonlibraryunit USING btree (personid);


--
-- Name: index_gtcpolicy_linkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpolicy_linkid ON gtcpolicy USING btree (linkid);


--
-- Name: index_gtcpolicy_materialgenderid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpolicy_materialgenderid ON gtcpolicy USING btree (materialgenderid);


--
-- Name: index_gtcpolicy_privilegegroupid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpolicy_privilegegroupid ON gtcpolicy USING btree (privilegegroupid);


--
-- Name: index_gtcprecatalogue_prefixid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcprecatalogue_prefixid ON gtcprecatalogue USING btree (prefixid);


--
-- Name: index_gtcprecatalogue_separatorid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcprecatalogue_separatorid ON gtcprecatalogue USING btree (separatorid);


--
-- Name: index_gtcprecatalogue_suffixid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcprecatalogue_suffixid ON gtcprecatalogue USING btree (suffixid);


--
-- Name: index_gtcprefixsuffix_fieldid_subfieldid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcprefixsuffix_fieldid_subfieldid ON gtcprefixsuffix USING btree (fieldid, subfieldid);


--
-- Name: index_gtcpurchaserequest_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpurchaserequest_libraryunitid ON gtcpurchaserequest USING btree (libraryunitid);


--
-- Name: index_gtcpurchaserequest_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcpurchaserequest_personid ON gtcpurchaserequest USING btree (personid);


--
-- Name: index_gtcrenew_loanid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrenew_loanid ON gtcrenew USING btree (loanid);


--
-- Name: index_gtcrenew_renewtypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrenew_renewtypeid ON gtcrenew USING btree (renewtypeid);


--
-- Name: index_gtcreportparameter_reportid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreportparameter_reportid ON gtcreportparameter USING btree (reportid);


--
-- Name: index_gtcrequestchangeexemplarystatus_futurestatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrequestchangeexemplarystatus_futurestatusid ON gtcrequestchangeexemplarystatus USING btree (futurestatusid);


--
-- Name: index_gtcrequestchangeexemplarystatus_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrequestchangeexemplarystatus_libraryunitid ON gtcrequestchangeexemplarystatus USING btree (libraryunitid);


--
-- Name: index_gtcrequestchangeexemplarystatus_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrequestchangeexemplarystatus_personid ON gtcrequestchangeexemplarystatus USING btree (personid);


--
-- Name: index_gtcrequestchangeexemplarystatusaccess_baslinkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrequestchangeexemplarystatusaccess_baslinkid ON gtcrequestchangeexemplarystatusaccess USING btree (baslinkid);


--
-- Name: index_gtcrequestchangeexemplarystatusaccess_exemplarystatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrequestchangeexemplarystatusaccess_exemplarystatusid ON gtcrequestchangeexemplarystatusaccess USING btree (exemplarystatusid);


--
-- Name: index_gtcrequestchangeexemplarystatuscomposition_exemplaryfutur; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrequestchangeexemplarystatuscomposition_exemplaryfutur ON gtcrequestchangeexemplarystatuscomposition USING btree (exemplaryfuturestatusdefinedid);


--
-- Name: index_gtcrequestchangeexemplarystatuscomposition_requestchangee; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrequestchangeexemplarystatuscomposition_requestchangee ON gtcrequestchangeexemplarystatuscomposition USING btree (requestchangeexemplarystatusid);


--
-- Name: index_gtcrequestchangeexemplarystatusstatushistory_requestchang; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrequestchangeexemplarystatusstatushistory_requestchang ON gtcrequestchangeexemplarystatusstatushistory USING btree (requestchangeexemplarystatusstatusid);


--
-- Name: index_gtcreserve_libraryunitid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreserve_libraryunitid ON gtcreserve USING btree (libraryunitid);


--
-- Name: index_gtcreserve_personid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreserve_personid ON gtcreserve USING btree (personid);


--
-- Name: index_gtcreserve_reservestatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreserve_reservestatusid ON gtcreserve USING btree (reservestatusid);


--
-- Name: index_gtcreserve_reservetypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreserve_reservetypeid ON gtcreserve USING btree (reservetypeid);


--
-- Name: index_gtcreservecomposition_itemnumber; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreservecomposition_itemnumber ON gtcreservecomposition USING btree (itemnumber);


--
-- Name: index_gtcreservecomposition_reserveid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreservecomposition_reserveid ON gtcreservecomposition USING btree (reserveid);


--
-- Name: index_gtcreservestatushistory_reserveid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreservestatushistory_reserveid ON gtcreservestatushistory USING btree (reserveid);


--
-- Name: index_gtcreservestatushistory_reservestatusid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreservestatushistory_reservestatusid ON gtcreservestatushistory USING btree (reservestatusid);


--
-- Name: index_gtcreturnregister_returntypeid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcreturnregister_returntypeid ON gtcreturnregister USING btree (returntypeid);


--
-- Name: index_gtcright_linkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcright_linkid ON gtcright USING btree (linkid);


--
-- Name: index_gtcright_materialgenderid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcright_materialgenderid ON gtcright USING btree (materialgenderid);


--
-- Name: index_gtcright_operationid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcright_operationid ON gtcright USING btree (operationid);


--
-- Name: index_gtcright_privilegegroupid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcright_privilegegroupid ON gtcright USING btree (privilegegroupid);


--
-- Name: index_gtcrulesformaterialmovement_currentstate; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrulesformaterialmovement_currentstate ON gtcrulesformaterialmovement USING btree (currentstate);


--
-- Name: index_gtcrulesformaterialmovement_futurestate; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrulesformaterialmovement_futurestate ON gtcrulesformaterialmovement USING btree (futurestate);


--
-- Name: index_gtcrulesformaterialmovement_locationformaterialmovementid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrulesformaterialmovement_locationformaterialmovementid ON gtcrulesformaterialmovement USING btree (locationformaterialmovementid);


--
-- Name: index_gtcrulesformaterialmovement_operationid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcrulesformaterialmovement_operationid ON gtcrulesformaterialmovement USING btree (operationid);


--
-- Name: index_gtcscheduletask_schedulecycleid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcscheduletask_schedulecycleid ON gtcscheduletask USING btree (schedulecycleid);


--
-- Name: index_gtcscheduletask_taskid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcscheduletask_taskid ON gtcscheduletask USING btree (taskid);


--
-- Name: index_gtcscheduletasklog_scheduletaskid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcscheduletasklog_scheduletaskid ON gtcscheduletasklog USING btree (scheduletaskid);


--
-- Name: index_gtcsearchablefieldaccess_linkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsearchablefieldaccess_linkid ON gtcsearchablefieldaccess USING btree (linkid);


--
-- Name: index_gtcsearchablefieldaccess_searchablefieldid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsearchablefieldaccess_searchablefieldid ON gtcsearchablefieldaccess USING btree (searchablefieldid);


--
-- Name: index_gtcsearchformataccess_linkid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsearchformataccess_linkid ON gtcsearchformataccess USING btree (linkid);


--
-- Name: index_gtcsearchformataccess_searchformatid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsearchformataccess_searchformatid ON gtcsearchformataccess USING btree (searchformatid);


--
-- Name: index_gtcsearchformatcolumn_searchformatid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsearchformatcolumn_searchformatid ON gtcsearchformatcolumn USING btree (searchformatid);


--
-- Name: index_gtcsearchmaterialview_controlnumber; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsearchmaterialview_controlnumber ON gtcsearchmaterialview USING btree (controlnumber);


--
-- Name: index_gtcsearchpresentationformat_searchformatid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsearchpresentationformat_searchformatid ON gtcsearchpresentationformat USING btree (searchformatid);


--
-- Name: index_gtcseparator_cataloguingformatid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcseparator_cataloguingformatid ON gtcseparator USING btree (cataloguingformatid);


--
-- Name: index_gtcsoapaccess_soapclientid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsoapaccess_soapclientid ON gtcsoapaccess USING btree (soapclientid);


--
-- Name: index_gtcsoapaccess_webserviceid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsoapaccess_webserviceid ON gtcsoapaccess USING btree (webserviceid);


--
-- Name: index_gtcsuppliertypeandlocation_supplierid; Type: INDEX; Schema: public; Owner: postgres; Tablespace: 
--

CREATE INDEX index_gtcsuppliertypeandlocation_supplierid ON gtcsuppliertypeandlocation USING btree (supplierid);


--
-- Name: gtctgrupdatematerialsontrigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER gtctgrupdatematerialsontrigger
    AFTER INSERT OR DELETE OR UPDATE ON gtcmaterial
    FOR EACH ROW
    EXECUTE PROCEDURE gtcfncupdatematerialson();


--
-- Name: gtcthelp; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER gtcthelp
    BEFORE INSERT OR UPDATE ON gtchelp
    FOR EACH ROW
    EXECUTE PROCEDURE gtcgnccheckhelp('form', 'subform');


--
-- Name: bascity_countryid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bascity
    ADD CONSTRAINT bascity_countryid_fkey FOREIGN KEY (countryid) REFERENCES bascountry(countryid);


--
-- Name: bascity_stateid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY bascity
    ADD CONSTRAINT bascity_stateid_fkey FOREIGN KEY (stateid) REFERENCES basstate(stateid);


--
-- Name: basdocument_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY basdocument
    ADD CONSTRAINT basdocument_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: basdocumenttype_documenttypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY basdocument
    ADD CONSTRAINT basdocumenttype_documenttypeid_fkey FOREIGN KEY (documenttypeid) REFERENCES basdocumenttype(documenttypeid);


--
-- Name: baspersonlink_linkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY baspersonlink
    ADD CONSTRAINT baspersonlink_linkid_fkey FOREIGN KEY (linkid) REFERENCES baslink(linkid);


--
-- Name: baspersonlink_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY baspersonlink
    ADD CONSTRAINT baspersonlink_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: basphone_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY basphone
    ADD CONSTRAINT basphone_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: basstate_countryid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY basstate
    ADD CONSTRAINT basstate_countryid_fkey FOREIGN KEY (countryid) REFERENCES bascountry(countryid);


--
-- Name: fk_miolo_access1_miolo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_access
    ADD CONSTRAINT fk_miolo_access1_miolo FOREIGN KEY (idtransaction) REFERENCES miolo_transaction(idtransaction) ON DELETE CASCADE;


--
-- Name: fk_miolo_access2_miolo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_access
    ADD CONSTRAINT fk_miolo_access2_miolo FOREIGN KEY (idgroup) REFERENCES miolo_group(idgroup) ON DELETE CASCADE;


--
-- Name: fk_miolo_groupuser1_miolo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_groupuser
    ADD CONSTRAINT fk_miolo_groupuser1_miolo FOREIGN KEY (idgroup) REFERENCES miolo_group(idgroup) ON DELETE CASCADE;


--
-- Name: fk_miolo_groupuser2_miolo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_groupuser
    ADD CONSTRAINT fk_miolo_groupuser2_miolo FOREIGN KEY (iduser) REFERENCES miolo_user(iduser) ON DELETE CASCADE;


--
-- Name: fk_miolo_log1_miolo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_log
    ADD CONSTRAINT fk_miolo_log1_miolo FOREIGN KEY (iduser) REFERENCES miolo_user(iduser);


--
-- Name: fk_miolo_log2_miolo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_log
    ADD CONSTRAINT fk_miolo_log2_miolo FOREIGN KEY (idtransaction) REFERENCES miolo_transaction(idtransaction);


--
-- Name: fk_miolo_session1_miolo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_session
    ADD CONSTRAINT fk_miolo_session1_miolo FOREIGN KEY (iduser) REFERENCES miolo_user(iduser);


--
-- Name: gtcanalytics_libraryunit_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcanalytics
    ADD CONSTRAINT gtcanalytics_libraryunit_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcanalytics_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcanalytics
    ADD CONSTRAINT gtcanalytics_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcbackgroundtasklog_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcbackgroundtasklog
    ADD CONSTRAINT gtcbackgroundtasklog_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtccontrolfielddetail_fieldid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtccontrolfielddetail
    ADD CONSTRAINT gtccontrolfielddetail_fieldid_fkey FOREIGN KEY (fieldid, subfieldid) REFERENCES gtctag(fieldid, subfieldid);


--
-- Name: gtccontrolfielddetail_marctaglistid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtccontrolfielddetail
    ADD CONSTRAINT gtccontrolfielddetail_marctaglistid_fkey FOREIGN KEY (marctaglistid) REFERENCES gtcmarctaglisting(marctaglistingid);


--
-- Name: gtcdictionarycontent_dictionaryid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcdictionarycontent
    ADD CONSTRAINT gtcdictionarycontent_dictionaryid_fkey FOREIGN KEY (dictionaryid) REFERENCES gtcdictionary(dictionaryid);


--
-- Name: gtcdictionaryrelatedcontent_dictionarycontentid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcdictionaryrelatedcontent
    ADD CONSTRAINT gtcdictionaryrelatedcontent_dictionarycontentid_fkey FOREIGN KEY (dictionarycontentid) REFERENCES gtcdictionarycontent(dictionarycontentid);


--
-- Name: gtcemailcontroldelayedloan_loanid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcemailcontroldelayedloan
    ADD CONSTRAINT gtcemailcontroldelayedloan_loanid_fkey FOREIGN KEY (loanid) REFERENCES gtcloan(loanid);


--
-- Name: gtcemailcontrolnotifyaquisition_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcemailcontrolnotifyaquisition
    ADD CONSTRAINT gtcemailcontrolnotifyaquisition_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcexemplarycontrol_exemplarystatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcexemplarycontrol
    ADD CONSTRAINT gtcexemplarycontrol_exemplarystatusid_fkey FOREIGN KEY (exemplarystatusid) REFERENCES gtcexemplarystatus(exemplarystatusid);


--
-- Name: gtcexemplarycontrol_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcexemplarycontrol
    ADD CONSTRAINT gtcexemplarycontrol_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcexemplarycontrol_materialgenderid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcexemplarycontrol
    ADD CONSTRAINT gtcexemplarycontrol_materialgenderid_fkey FOREIGN KEY (materialgenderid) REFERENCES gtcmaterialgender(materialgenderid);


--
-- Name: gtcexemplarycontrol_materialphysicaltypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcexemplarycontrol
    ADD CONSTRAINT gtcexemplarycontrol_materialphysicaltypeid_fkey FOREIGN KEY (materialphysicaltypeid) REFERENCES gtcmaterialphysicaltype(materialphysicaltypeid);


--
-- Name: gtcexemplarycontrol_materialtypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcexemplarycontrol
    ADD CONSTRAINT gtcexemplarycontrol_materialtypeid_fkey FOREIGN KEY (materialtypeid) REFERENCES gtcmaterialtype(materialtypeid);


--
-- Name: gtcexemplarycontrol_originallibraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcexemplarycontrol
    ADD CONSTRAINT gtcexemplarycontrol_originallibraryunitid_fkey FOREIGN KEY (originallibraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcexemplaryfuturestatusdefined_exemplarystatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcexemplaryfuturestatusdefined
    ADD CONSTRAINT gtcexemplaryfuturestatusdefined_exemplarystatusid_fkey FOREIGN KEY (exemplarystatusid) REFERENCES gtcexemplarystatus(exemplarystatusid);


--
-- Name: gtcexemplarystatushistory_exemplarystatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcexemplarystatushistory
    ADD CONSTRAINT gtcexemplarystatushistory_exemplarystatusid_fkey FOREIGN KEY (exemplarystatusid) REFERENCES gtcexemplarystatus(exemplarystatusid);


--
-- Name: gtcexemplarystatushistory_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcexemplarystatushistory
    ADD CONSTRAINT gtcexemplarystatushistory_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcfavorite_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcfavorite
    ADD CONSTRAINT gtcfavorite_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcfine_finestatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcfine
    ADD CONSTRAINT gtcfine_finestatusid_fkey FOREIGN KEY (finestatusid) REFERENCES gtcfinestatus(finestatusid);


--
-- Name: gtcfine_loanid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcfine
    ADD CONSTRAINT gtcfine_loanid_fkey FOREIGN KEY (loanid) REFERENCES gtcloan(loanid);


--
-- Name: gtcfinestatushistory_fineid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcfinestatushistory
    ADD CONSTRAINT gtcfinestatushistory_fineid_fkey FOREIGN KEY (fineid) REFERENCES gtcfine(fineid);


--
-- Name: gtcfinestatushistory_finestatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcfinestatushistory
    ADD CONSTRAINT gtcfinestatushistory_finestatusid_fkey FOREIGN KEY (finestatusid) REFERENCES gtcfinestatus(finestatusid);


--
-- Name: gtcformcontent_formcontenttype_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcformcontent
    ADD CONSTRAINT gtcformcontent_formcontenttype_fkey FOREIGN KEY (formcontenttype) REFERENCES gtcformcontenttype(formcontenttypeid);


--
-- Name: gtcgeneralpolicy_linkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcgeneralpolicy
    ADD CONSTRAINT gtcgeneralpolicy_linkid_fkey FOREIGN KEY (linkid) REFERENCES baslink(linkid);


--
-- Name: gtcgeneralpolicy_privilegegroupid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcgeneralpolicy
    ADD CONSTRAINT gtcgeneralpolicy_privilegegroupid_fkey FOREIGN KEY (privilegegroupid) REFERENCES gtcprivilegegroup(privilegegroupid);


--
-- Name: gtcholiday_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcholiday
    ADD CONSTRAINT gtcholiday_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcinterchange_interchangestatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcinterchange
    ADD CONSTRAINT gtcinterchange_interchangestatusid_fkey FOREIGN KEY (interchangestatusid) REFERENCES gtcinterchangestatus(interchangestatusid);


--
-- Name: gtcinterchange_interchangetypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcinterchange
    ADD CONSTRAINT gtcinterchange_interchangetypeid_fkey FOREIGN KEY (interchangetypeid) REFERENCES gtcinterchangetype(interchangetypeid);


--
-- Name: gtcinterchangeitem_interchangeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcinterchangeitem
    ADD CONSTRAINT gtcinterchangeitem_interchangeid_fkey FOREIGN KEY (interchangeid) REFERENCES gtcinterchange(interchangeid);


--
-- Name: gtcinterchangeobservation_interchangeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcinterchangeobservation
    ADD CONSTRAINT gtcinterchangeobservation_interchangeid_fkey FOREIGN KEY (interchangeid) REFERENCES gtcinterchange(interchangeid);


--
-- Name: gtcinterchangestatus_interchangetypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcinterchangestatus
    ADD CONSTRAINT gtcinterchangestatus_interchangetypeid_fkey FOREIGN KEY (interchangetypeid) REFERENCES gtcinterchangetype(interchangetypeid);


--
-- Name: gtcinterestsarea_classificationareaid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcinterestsarea
    ADD CONSTRAINT gtcinterestsarea_classificationareaid_fkey FOREIGN KEY (classificationareaid) REFERENCES gtcclassificationarea(classificationareaid);


--
-- Name: gtcinterestsarea_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcinterestsarea
    ADD CONSTRAINT gtcinterestsarea_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtckardexcontrol_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtckardexcontrol
    ADD CONSTRAINT gtckardexcontrol_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtclibperson_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibperson
    ADD CONSTRAINT gtclibperson_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtclibraryassociation_associationid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibraryassociation
    ADD CONSTRAINT gtclibraryassociation_associationid_fkey FOREIGN KEY (associationid) REFERENCES gtcassociation(associationid);


--
-- Name: gtclibraryassociation_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibraryassociation
    ADD CONSTRAINT gtclibraryassociation_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtclibraryunit_librarygroupid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibraryunit
    ADD CONSTRAINT gtclibraryunit_librarygroupid_fkey FOREIGN KEY (librarygroupid) REFERENCES gtclibrarygroup(librarygroupid);


--
-- Name: gtclibraryunit_privilegegroupid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibraryunit
    ADD CONSTRAINT gtclibraryunit_privilegegroupid_fkey FOREIGN KEY (privilegegroupid) REFERENCES gtcprivilegegroup(privilegegroupid);


--
-- Name: gtclibraryunitaccess_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibraryunitaccess
    ADD CONSTRAINT gtclibraryunitaccess_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtclibraryunitaccess_linkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibraryunitaccess
    ADD CONSTRAINT gtclibraryunitaccess_linkid_fkey FOREIGN KEY (linkid) REFERENCES baslink(linkid);


--
-- Name: gtclibraryunitconfig_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibraryunitconfig
    ADD CONSTRAINT gtclibraryunitconfig_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtclibraryunitisclosed_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibraryunitisclosed
    ADD CONSTRAINT gtclibraryunitisclosed_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtclibraryunitisclosed_weekdayid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtclibraryunitisclosed
    ADD CONSTRAINT gtclibraryunitisclosed_weekdayid_fkey FOREIGN KEY (weekdayid) REFERENCES gtcweekday(weekdayid);


--
-- Name: gtcloan_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloan
    ADD CONSTRAINT gtcloan_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcloan_linkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloan
    ADD CONSTRAINT gtcloan_linkid_fkey FOREIGN KEY (linkid) REFERENCES baslink(linkid);


--
-- Name: gtcloan_loantypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloan
    ADD CONSTRAINT gtcloan_loantypeid_fkey FOREIGN KEY (loantypeid) REFERENCES gtcloantype(loantypeid);


--
-- Name: gtcloan_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloan
    ADD CONSTRAINT gtcloan_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcloan_privilegegroupid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloan
    ADD CONSTRAINT gtcloan_privilegegroupid_fkey FOREIGN KEY (privilegegroupid) REFERENCES gtcprivilegegroup(privilegegroupid);


--
-- Name: gtcloanbetweenlibrary_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloanbetweenlibrary
    ADD CONSTRAINT gtcloanbetweenlibrary_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcloanbetweenlibrary_loanbetweenlibrarystatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloanbetweenlibrary
    ADD CONSTRAINT gtcloanbetweenlibrary_loanbetweenlibrarystatusid_fkey FOREIGN KEY (loanbetweenlibrarystatusid) REFERENCES gtcloanbetweenlibrarystatus(loanbetweenlibrarystatusid);


--
-- Name: gtcloanbetweenlibrary_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloanbetweenlibrary
    ADD CONSTRAINT gtcloanbetweenlibrary_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcloanbetweenlibrarycomposition_loanbetweenlibraryid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloanbetweenlibrarycomposition
    ADD CONSTRAINT gtcloanbetweenlibrarycomposition_loanbetweenlibraryid_fkey FOREIGN KEY (loanbetweenlibraryid) REFERENCES gtcloanbetweenlibrary(loanbetweenlibraryid);


--
-- Name: gtcloanbetweenlibrarystatushist_loanbetweenlibrarystatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcloanbetweenlibrarystatushistory
    ADD CONSTRAINT gtcloanbetweenlibrarystatushist_loanbetweenlibrarystatusid_fkey FOREIGN KEY (loanbetweenlibrarystatusid) REFERENCES gtcloanbetweenlibrarystatus(loanbetweenlibrarystatusid);


--
-- Name: gtcmarctaglistingoption_marctaglistingid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmarctaglistingoption
    ADD CONSTRAINT gtcmarctaglistingoption_marctaglistingid_fkey FOREIGN KEY (marctaglistingid) REFERENCES gtcmarctaglisting(marctaglistingid);


--
-- Name: gtcmaterial_fieldid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterial
    ADD CONSTRAINT gtcmaterial_fieldid_fkey FOREIGN KEY (fieldid, subfieldid) REFERENCES gtctag(fieldid, subfieldid);


--
-- Name: gtcmaterial_prefixid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterial
    ADD CONSTRAINT gtcmaterial_prefixid_fkey FOREIGN KEY (prefixid) REFERENCES gtcprefixsuffix(prefixsuffixid);


--
-- Name: gtcmaterial_separatorid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterial
    ADD CONSTRAINT gtcmaterial_separatorid_fkey FOREIGN KEY (separatorid) REFERENCES gtcseparator(separatorid);


--
-- Name: gtcmaterial_suffixid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterial
    ADD CONSTRAINT gtcmaterial_suffixid_fkey FOREIGN KEY (suffixid) REFERENCES gtcprefixsuffix(prefixsuffixid);


--
-- Name: gtcmaterialcontrol_category_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialcontrol
    ADD CONSTRAINT gtcmaterialcontrol_category_fkey FOREIGN KEY (category, level) REFERENCES gtcspreadsheet(category, level);


--
-- Name: gtcmaterialcontrol_materialgenderid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialcontrol
    ADD CONSTRAINT gtcmaterialcontrol_materialgenderid_fkey FOREIGN KEY (materialgenderid) REFERENCES gtcmaterialgender(materialgenderid);


--
-- Name: gtcmaterialcontrol_materialphysicaltypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialcontrol
    ADD CONSTRAINT gtcmaterialcontrol_materialphysicaltypeid_fkey FOREIGN KEY (materialphysicaltypeid) REFERENCES gtcmaterialphysicaltype(materialphysicaltypeid);


--
-- Name: gtcmaterialcontrol_materialtypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialcontrol
    ADD CONSTRAINT gtcmaterialcontrol_materialtypeid_fkey FOREIGN KEY (materialtypeid) REFERENCES gtcmaterialtype(materialtypeid);


--
-- Name: gtcmaterialevaluation_controlnumber_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialevaluation
    ADD CONSTRAINT gtcmaterialevaluation_controlnumber_fkey FOREIGN KEY (controlnumber) REFERENCES gtcmaterialcontrol(controlnumber);


--
-- Name: gtcmaterialevaluation_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialevaluation
    ADD CONSTRAINT gtcmaterialevaluation_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcmaterialhistory_currentprefixid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialhistory
    ADD CONSTRAINT gtcmaterialhistory_currentprefixid_fkey FOREIGN KEY (currentprefixid) REFERENCES gtcprefixsuffix(prefixsuffixid);


--
-- Name: gtcmaterialhistory_currentseparatorid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialhistory
    ADD CONSTRAINT gtcmaterialhistory_currentseparatorid_fkey FOREIGN KEY (currentseparatorid) REFERENCES gtcseparator(separatorid);


--
-- Name: gtcmaterialhistory_currentsuffixid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialhistory
    ADD CONSTRAINT gtcmaterialhistory_currentsuffixid_fkey FOREIGN KEY (currentsuffixid) REFERENCES gtcprefixsuffix(prefixsuffixid);


--
-- Name: gtcmaterialhistory_fieldid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialhistory
    ADD CONSTRAINT gtcmaterialhistory_fieldid_fkey FOREIGN KEY (fieldid, subfieldid) REFERENCES gtctag(fieldid, subfieldid);


--
-- Name: gtcmaterialhistory_previousprefixid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialhistory
    ADD CONSTRAINT gtcmaterialhistory_previousprefixid_fkey FOREIGN KEY (previousprefixid) REFERENCES gtcprefixsuffix(prefixsuffixid);


--
-- Name: gtcmaterialhistory_previousseparatorid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialhistory
    ADD CONSTRAINT gtcmaterialhistory_previousseparatorid_fkey FOREIGN KEY (previousseparatorid) REFERENCES gtcseparator(separatorid);


--
-- Name: gtcmaterialhistory_previoussufixxid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmaterialhistory
    ADD CONSTRAINT gtcmaterialhistory_previoussufixxid_fkey FOREIGN KEY (previoussuffixid) REFERENCES gtcprefixsuffix(prefixsuffixid);


--
-- Name: gtcmylibrary_mylibraryid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmylibrary
    ADD CONSTRAINT gtcmylibrary_mylibraryid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcnews_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcnews
    ADD CONSTRAINT gtcnews_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcnewsaccess_linkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcnewsaccess
    ADD CONSTRAINT gtcnewsaccess_linkid_fkey FOREIGN KEY (linkid) REFERENCES baslink(linkid);


--
-- Name: gtcnewsaccess_newsid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcnewsaccess
    ADD CONSTRAINT gtcnewsaccess_newsid_fkey FOREIGN KEY (newsid) REFERENCES gtcnews(newsid);


--
-- Name: gtcoperatorlibraryunit_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcoperatorlibraryunit
    ADD CONSTRAINT gtcoperatorlibraryunit_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcpenalty_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpenalty
    ADD CONSTRAINT gtcpenalty_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcpenalty_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpenalty
    ADD CONSTRAINT gtcpenalty_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcpersonconfig_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpersonconfig
    ADD CONSTRAINT gtcpersonconfig_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcpersonlibraryunit_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpersonlibraryunit
    ADD CONSTRAINT gtcpersonlibraryunit_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcpersonlibraryunit_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpersonlibraryunit
    ADD CONSTRAINT gtcpersonlibraryunit_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcpolicy_linkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpolicy
    ADD CONSTRAINT gtcpolicy_linkid_fkey FOREIGN KEY (linkid) REFERENCES baslink(linkid);


--
-- Name: gtcpolicy_materialgenderid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpolicy
    ADD CONSTRAINT gtcpolicy_materialgenderid_fkey FOREIGN KEY (materialgenderid) REFERENCES gtcmaterialgender(materialgenderid);


--
-- Name: gtcpolicy_privilegegroupid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpolicy
    ADD CONSTRAINT gtcpolicy_privilegegroupid_fkey FOREIGN KEY (privilegegroupid) REFERENCES gtcprivilegegroup(privilegegroupid);


--
-- Name: gtcprecatalogue_prefixid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcprecatalogue
    ADD CONSTRAINT gtcprecatalogue_prefixid_fkey FOREIGN KEY (prefixid) REFERENCES gtcprefixsuffix(prefixsuffixid);


--
-- Name: gtcprecatalogue_separatorid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcprecatalogue
    ADD CONSTRAINT gtcprecatalogue_separatorid_fkey FOREIGN KEY (separatorid) REFERENCES gtcseparator(separatorid);


--
-- Name: gtcprecatalogue_suffixid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcprecatalogue
    ADD CONSTRAINT gtcprecatalogue_suffixid_fkey FOREIGN KEY (suffixid) REFERENCES gtcprefixsuffix(prefixsuffixid);


--
-- Name: gtcprefixsuffix_fieldid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcprefixsuffix
    ADD CONSTRAINT gtcprefixsuffix_fieldid_fkey FOREIGN KEY (fieldid, subfieldid) REFERENCES gtctag(fieldid, subfieldid);


--
-- Name: gtcpurchaserequest_controlnumber_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpurchaserequest
    ADD CONSTRAINT gtcpurchaserequest_controlnumber_fkey FOREIGN KEY (controlnumber) REFERENCES gtcmaterialcontrol(controlnumber);


--
-- Name: gtcpurchaserequest_costcenterid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpurchaserequest
    ADD CONSTRAINT gtcpurchaserequest_costcenterid_fkey FOREIGN KEY (costcenterid) REFERENCES gtccostcenter(costcenterid);


--
-- Name: gtcpurchaserequest_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpurchaserequest
    ADD CONSTRAINT gtcpurchaserequest_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcpurchaserequest_purchaserequestid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpurchaserequest
    ADD CONSTRAINT gtcpurchaserequest_purchaserequestid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcpurchaserequestmaterial_gtctag_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpurchaserequestmaterial
    ADD CONSTRAINT gtcpurchaserequestmaterial_gtctag_fkey FOREIGN KEY (fieldid, subfieldid) REFERENCES gtctag(fieldid, subfieldid);


--
-- Name: gtcpurchaserequestmaterial_purchaserequestid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpurchaserequestmaterial
    ADD CONSTRAINT gtcpurchaserequestmaterial_purchaserequestid_fkey FOREIGN KEY (purchaserequestid) REFERENCES gtcpurchaserequest(purchaserequestid);


--
-- Name: gtcpurchaserequestquotation_purchaserequestid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpurchaserequestquotation
    ADD CONSTRAINT gtcpurchaserequestquotation_purchaserequestid_fkey FOREIGN KEY (purchaserequestid) REFERENCES gtcpurchaserequest(purchaserequestid);


--
-- Name: gtcpurchaserequestquotation_supplierid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcpurchaserequestquotation
    ADD CONSTRAINT gtcpurchaserequestquotation_supplierid_fkey FOREIGN KEY (supplierid) REFERENCES gtcsupplier(supplierid);


--
-- Name: gtcrenew_loanid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrenew
    ADD CONSTRAINT gtcrenew_loanid_fkey FOREIGN KEY (loanid) REFERENCES gtcloan(loanid);


--
-- Name: gtcrenew_renewtypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrenew
    ADD CONSTRAINT gtcrenew_renewtypeid_fkey FOREIGN KEY (renewtypeid) REFERENCES gtcrenewtype(renewtypeid);


--
-- Name: gtcreportparameter_reportid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcreportparameter
    ADD CONSTRAINT gtcreportparameter_reportid_fkey FOREIGN KEY (reportid) REFERENCES gtcreport(reportid);


--
-- Name: gtcrequestchangeexemplarysta_requestchangeexemplarystatus_fkey1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatusstatushistory
    ADD CONSTRAINT gtcrequestchangeexemplarysta_requestchangeexemplarystatus_fkey1 FOREIGN KEY (requestchangeexemplarystatusstatusid) REFERENCES gtcrequestchangeexemplarystatusstatus(requestchangeexemplarystatusstatusid);


--
-- Name: gtcrequestchangeexemplarysta_requestchangeexemplarystatus_fkey2; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatuscomposition
    ADD CONSTRAINT gtcrequestchangeexemplarysta_requestchangeexemplarystatus_fkey2 FOREIGN KEY (requestchangeexemplarystatusid) REFERENCES gtcrequestchangeexemplarystatus(requestchangeexemplarystatusid);


--
-- Name: gtcrequestchangeexemplarystat_exemplaryfuturestatusdefined_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatuscomposition
    ADD CONSTRAINT gtcrequestchangeexemplarystat_exemplaryfuturestatusdefined_fkey FOREIGN KEY (exemplaryfuturestatusdefinedid) REFERENCES gtcexemplaryfuturestatusdefined(exemplaryfuturestatusdefinedid);


--
-- Name: gtcrequestchangeexemplarystat_requestchangeexemplarystatus_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatusstatushistory
    ADD CONSTRAINT gtcrequestchangeexemplarystat_requestchangeexemplarystatus_fkey FOREIGN KEY (requestchangeexemplarystatusid) REFERENCES gtcrequestchangeexemplarystatus(requestchangeexemplarystatusid);


--
-- Name: gtcrequestchangeexemplarystatus_futurestatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatus
    ADD CONSTRAINT gtcrequestchangeexemplarystatus_futurestatusid_fkey FOREIGN KEY (futurestatusid) REFERENCES gtcexemplarystatus(exemplarystatusid);


--
-- Name: gtcrequestchangeexemplarystatus_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatus
    ADD CONSTRAINT gtcrequestchangeexemplarystatus_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcrequestchangeexemplarystatus_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatus
    ADD CONSTRAINT gtcrequestchangeexemplarystatus_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcrequestchangeexemplarystatusaccess_baslinkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatusaccess
    ADD CONSTRAINT gtcrequestchangeexemplarystatusaccess_baslinkid_fkey FOREIGN KEY (baslinkid) REFERENCES baslink(linkid);


--
-- Name: gtcrequestchangeexemplarystatusaccess_exemplarystatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrequestchangeexemplarystatusaccess
    ADD CONSTRAINT gtcrequestchangeexemplarystatusaccess_exemplarystatusid_fkey FOREIGN KEY (exemplarystatusid) REFERENCES gtcexemplarystatus(exemplarystatusid);


--
-- Name: gtcreserve_libraryunitid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcreserve
    ADD CONSTRAINT gtcreserve_libraryunitid_fkey FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: gtcreserve_personid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcreserve
    ADD CONSTRAINT gtcreserve_personid_fkey FOREIGN KEY (personid) REFERENCES basperson(personid);


--
-- Name: gtcreserve_reservestatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcreserve
    ADD CONSTRAINT gtcreserve_reservestatusid_fkey FOREIGN KEY (reservestatusid) REFERENCES gtcreservestatus(reservestatusid);


--
-- Name: gtcreserve_reservetypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcreserve
    ADD CONSTRAINT gtcreserve_reservetypeid_fkey FOREIGN KEY (reservetypeid) REFERENCES gtcreservetype(reservetypeid);


--
-- Name: gtcreservecomposition_reserveid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcreservecomposition
    ADD CONSTRAINT gtcreservecomposition_reserveid_fkey FOREIGN KEY (reserveid) REFERENCES gtcreserve(reserveid);


--
-- Name: gtcreservestatushistory_reserveid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcreservestatushistory
    ADD CONSTRAINT gtcreservestatushistory_reserveid_fkey FOREIGN KEY (reserveid) REFERENCES gtcreserve(reserveid);


--
-- Name: gtcreservestatushistory_reservestatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcreservestatushistory
    ADD CONSTRAINT gtcreservestatushistory_reservestatusid_fkey FOREIGN KEY (reservestatusid) REFERENCES gtcreservestatus(reservestatusid);


--
-- Name: gtcreturnregister_returntypeid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcreturnregister
    ADD CONSTRAINT gtcreturnregister_returntypeid_fkey FOREIGN KEY (returntypeid) REFERENCES gtcreturntype(returntypeid);


--
-- Name: gtcright_linkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcright
    ADD CONSTRAINT gtcright_linkid_fkey FOREIGN KEY (linkid) REFERENCES baslink(linkid);


--
-- Name: gtcright_materialgenderid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcright
    ADD CONSTRAINT gtcright_materialgenderid_fkey FOREIGN KEY (materialgenderid) REFERENCES gtcmaterialgender(materialgenderid);


--
-- Name: gtcright_operationid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcright
    ADD CONSTRAINT gtcright_operationid_fkey FOREIGN KEY (operationid) REFERENCES gtcoperation(operationid);


--
-- Name: gtcright_privilegegroupid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcright
    ADD CONSTRAINT gtcright_privilegegroupid_fkey FOREIGN KEY (privilegegroupid) REFERENCES gtcprivilegegroup(privilegegroupid);


--
-- Name: gtcrulesformaterialmovement_currentstate_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrulesformaterialmovement
    ADD CONSTRAINT gtcrulesformaterialmovement_currentstate_fkey FOREIGN KEY (currentstate) REFERENCES gtcexemplarystatus(exemplarystatusid);


--
-- Name: gtcrulesformaterialmovement_futurestate_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrulesformaterialmovement
    ADD CONSTRAINT gtcrulesformaterialmovement_futurestate_fkey FOREIGN KEY (futurestate) REFERENCES gtcexemplarystatus(exemplarystatusid);


--
-- Name: gtcrulesformaterialmovement_locationformaterialmovementid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrulesformaterialmovement
    ADD CONSTRAINT gtcrulesformaterialmovement_locationformaterialmovementid_fkey FOREIGN KEY (locationformaterialmovementid) REFERENCES gtclocationformaterialmovement(locationformaterialmovementid);


--
-- Name: gtcrulesformaterialmovement_operationid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcrulesformaterialmovement
    ADD CONSTRAINT gtcrulesformaterialmovement_operationid_fkey FOREIGN KEY (operationid) REFERENCES gtcoperation(operationid);


--
-- Name: gtcscheduletask_schedulecycleid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcscheduletask
    ADD CONSTRAINT gtcscheduletask_schedulecycleid_fkey FOREIGN KEY (schedulecycleid) REFERENCES gtcschedulecycle(schedulecycleid);


--
-- Name: gtcscheduletask_taskid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcscheduletask
    ADD CONSTRAINT gtcscheduletask_taskid_fkey FOREIGN KEY (taskid) REFERENCES gtctask(taskid);


--
-- Name: gtcscheduletasklog_scheduletaskid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcscheduletasklog
    ADD CONSTRAINT gtcscheduletasklog_scheduletaskid_fkey FOREIGN KEY (scheduletaskid) REFERENCES gtcscheduletask(scheduletaskid);


--
-- Name: gtcsearchablefieldaccess_linkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcsearchablefieldaccess
    ADD CONSTRAINT gtcsearchablefieldaccess_linkid_fkey FOREIGN KEY (linkid) REFERENCES baslink(linkid);


--
-- Name: gtcsearchablefieldaccess_searchablefieldid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcsearchablefieldaccess
    ADD CONSTRAINT gtcsearchablefieldaccess_searchablefieldid_fkey FOREIGN KEY (searchablefieldid) REFERENCES gtcsearchablefield(searchablefieldid);


--
-- Name: gtcsearchformataccess_linkid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcsearchformataccess
    ADD CONSTRAINT gtcsearchformataccess_linkid_fkey FOREIGN KEY (linkid) REFERENCES baslink(linkid);


--
-- Name: gtcsearchformataccess_searchformatid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcsearchformataccess
    ADD CONSTRAINT gtcsearchformataccess_searchformatid_fkey FOREIGN KEY (searchformatid) REFERENCES gtcsearchformat(searchformatid);


--
-- Name: gtcsearchformatcolumn_searchformatid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcsearchformatcolumn
    ADD CONSTRAINT gtcsearchformatcolumn_searchformatid_fkey FOREIGN KEY (searchformatid) REFERENCES gtcsearchformat(searchformatid);


--
-- Name: gtcsearchpresentationformat_searchformatid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcsearchpresentationformat
    ADD CONSTRAINT gtcsearchpresentationformat_searchformatid_fkey FOREIGN KEY (searchformatid) REFERENCES gtcsearchformat(searchformatid);


--
-- Name: gtcseparator_cataloguingformatid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcseparator
    ADD CONSTRAINT gtcseparator_cataloguingformatid_fkey FOREIGN KEY (cataloguingformatid) REFERENCES gtccataloguingformat(cataloguingformatid);


--
-- Name: gtcsoapaccess_soapclientid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcsoapaccess
    ADD CONSTRAINT gtcsoapaccess_soapclientid_fkey FOREIGN KEY (soapclientid) REFERENCES gtcsoapclient(soapclientid);


--
-- Name: gtcsoapaccess_webserviceid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcsoapaccess
    ADD CONSTRAINT gtcsoapaccess_webserviceid_fkey FOREIGN KEY (webserviceid) REFERENCES gtcwebservice(webserviceid);


--
-- Name: gtcsuppliertypeandlocation_supplierid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcsuppliertypeandlocation
    ADD CONSTRAINT gtcsuppliertypeandlocation_supplierid_fkey FOREIGN KEY (supplierid) REFERENCES gtcsupplier(supplierid);


--
-- Name: gtcworkflowhistory_workflowinstanceid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcworkflowhistory
    ADD CONSTRAINT gtcworkflowhistory_workflowinstanceid_fkey FOREIGN KEY (workflowinstanceid) REFERENCES gtcworkflowinstance(workflowinstanceid);


--
-- Name: gtcworkflowhistory_workflowstatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcworkflowhistory
    ADD CONSTRAINT gtcworkflowhistory_workflowstatusid_fkey FOREIGN KEY (workflowstatusid) REFERENCES gtcworkflowstatus(workflowstatusid);


--
-- Name: gtcworkflowinstance_workflowstatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcworkflowinstance
    ADD CONSTRAINT gtcworkflowinstance_workflowstatusid_fkey FOREIGN KEY (workflowstatusid) REFERENCES gtcworkflowstatus(workflowstatusid);


--
-- Name: gtcworkflowtransition_nextworkflowstatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcworkflowtransition
    ADD CONSTRAINT gtcworkflowtransition_nextworkflowstatusid_fkey FOREIGN KEY (nextworkflowstatusid) REFERENCES gtcworkflowstatus(workflowstatusid);


--
-- Name: gtcworkflowtransition_previousworkflowstatusid_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcworkflowtransition
    ADD CONSTRAINT gtcworkflowtransition_previousworkflowstatusid_fkey FOREIGN KEY (previousworkflowstatusid) REFERENCES gtcworkflowstatus(workflowstatusid);


--
-- Name: libraryunitfk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmateriallocation
    ADD CONSTRAINT libraryunitfk FOREIGN KEY (libraryunitid) REFERENCES gtclibraryunit(libraryunitid);


--
-- Name: materiallocationfk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY gtcmateriallocationtag
    ADD CONSTRAINT materiallocationfk FOREIGN KEY (gtcmateriallocatioid) REFERENCES gtcmateriallocation(materiallocationid);


--
-- Name: miolo_access_idtransaction_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_access
    ADD CONSTRAINT miolo_access_idtransaction_fkey FOREIGN KEY (idtransaction) REFERENCES miolo_transaction(idtransaction);


--
-- Name: miolo_groupuser_idgroup_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_groupuser
    ADD CONSTRAINT miolo_groupuser_idgroup_fkey FOREIGN KEY (idgroup) REFERENCES miolo_group(idgroup);


--
-- Name: miolo_groupuser_iduser_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_groupuser
    ADD CONSTRAINT miolo_groupuser_iduser_fkey FOREIGN KEY (iduser) REFERENCES miolo_user(iduser);


--
-- Name: miolo_schedule_idmodule_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_schedule
    ADD CONSTRAINT miolo_schedule_idmodule_fkey FOREIGN KEY (idmodule) REFERENCES miolo_module(idmodule);


--
-- Name: miolo_session_iduser_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_session
    ADD CONSTRAINT miolo_session_iduser_fkey FOREIGN KEY (iduser) REFERENCES miolo_user(iduser);


--
-- Name: miolo_transaction_idmodule_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY miolo_transaction
    ADD CONSTRAINT miolo_transaction_idmodule_fkey FOREIGN KEY (idmodule) REFERENCES miolo_module(idmodule);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: dblink_connect_u(text); Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON FUNCTION dblink_connect_u(text) FROM PUBLIC;
REVOKE ALL ON FUNCTION dblink_connect_u(text) FROM postgres;
GRANT ALL ON FUNCTION dblink_connect_u(text) TO postgres;


--
-- Name: dblink_connect_u(text, text); Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON FUNCTION dblink_connect_u(text, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION dblink_connect_u(text, text) FROM postgres;
GRANT ALL ON FUNCTION dblink_connect_u(text, text) TO postgres;


--
-- PostgreSQL database dump complete
--

